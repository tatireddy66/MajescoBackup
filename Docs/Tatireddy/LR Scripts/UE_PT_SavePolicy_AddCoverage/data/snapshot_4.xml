<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="4">
  <HTTPTask id="270" hostname="clients4.google.com" path="/chrome-variations/seed?osname=win" url="https://clients4.google.com/chrome-variations/seed?osname=win" ip="192.168.250.11" port="443" connectionId="3" origin="Primary" frame="1" startDateTime="2016-06-23T18:33:47.941+05:30" startTime="21531663" endTime="21531975">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>b3NuYW1lPXdpbg==</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="osname" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>d2lu</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2xpZW50czQuZ29vZ2xlLmNvbQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="If-None-Match" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZWRiODEzZjQ3ZmU0ZGEwYTQ3MTEwMzNmYmY3ZGEwY2M1YTJhMDUxMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="A-IM" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>eC1ibSxnemlw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9jaHJvbWUtdmFyaWF0aW9ucy9zZWVkP29zbmFtZT13aW4gSFRUUC8xLjENCkhvc3Q6IGNsaWVudHM0Lmdvb2dsZS5jb20NCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCklmLU5vbmUtTWF0Y2g6IGVkYjgxM2Y0N2ZlNGRhMGE0NzExMDMzZmJmN2RhMGNjNWEyYTA1MTANCkEtSU06IHgtYm0sZ3ppcA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0FNRU9SSUdJTg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Xss-Protection" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMyBKdW4gMjAxNiAxMjo1NjoyNSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alternate-Protocol" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDQzOnF1aWM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alt-Svc" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cXVpYz0iOjQ0MyI7IG1hPTI1OTIwMDA7IHY9IjM0LDMzLDMyLDMxLDMwLDI5LDI4LDI3LDI2LDI1Ig==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Age" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2xvc2U=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Via" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUFMvMS4xIGluZC1taHAybGZwMDAx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMzA0IE5vdCBNb2RpZmllZA0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1GcmFtZS1PcHRpb25zOiBTQU1FT1JJR0lODQpYLVhzcy1Qcm90ZWN0aW9uOiAxOyBtb2RlPWJsb2NrDQpEYXRlOiBUaHUsIDIzIEp1biAyMDE2IDEyOjU2OjI1IEdNVA0KQWx0ZXJuYXRlLVByb3RvY29sOiA0NDM6cXVpYw0KQWx0LVN2YzogcXVpYz0iOjQ0MyI7IG1hPTI1OTIwMDA7IHY9IjM0LDMzLDMyLDMxLDMwLDI5LDI4LDI3LDI2LDI1Ig0KQWdlOiAwDQpDb25uZWN0aW9uOiBjbG9zZQ0KVmlhOiBIVFRQUy8xLjEgaW5kLW1ocDJsZnAwMDENCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <TcpPackets>
        <PacketInfo time="21525532" offset="0" length="131" />
        <PacketInfo time="21531975" offset="131" length="318" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="284" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/tablefilters.js" url="http://ueatworkuat.maxprocessing.com/script/tablefilters.js" ip="192.168.250.11" port="8080" connectionId="7" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:47.955+05:30" startTime="21531928" endTime="21532022">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvdGFibGVmaWx0ZXJzLmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ODk1Mw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMg0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjIgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogODk1Mw0KQWdlOiAzNTY0MQ0KVmlhOiAxLjEgaW5kLW1ocDJsZnAwMDENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZnVuY3Rpb24gdGJ3X2ZpbHRlcih0YWJsZU9iail7dmFyIHRhYmxlSWQ9dGFibGVPYmouYXR0cigiaWQiKTt0YWJsZU9iai5kYXRhKCdsYXN0YWN0aW9uJywnZmlsdGVyJyk7dmFyIGFkZF9wYXJhbXM9VGFibGVXYWxrZXJDaGVjayh0YWJsZU9iaik7dmFyIHJlc3VsdHM9VGFibGVXYWxrZXJBamF4KHRhYmxlT2JqLGFkZF9wYXJhbXMsdHJ1ZSk7aWYodGFibGVPYmouZGF0YSgncGVycGFnZScpPnJlc3VsdHMpe3RhYmxlT2JqLmRhdGEoJ2N1cnJlbnRwYWdlJywxKTt2YXIgcGVycGFnZT10YWJsZU9iai5kYXRhKCdwZXJwYWdlJyk7dGFibGVPYmouZGF0YSgnbmV4dHBhZ2UnLCgxK3BhcnNlSW50KHBlcnBhZ2UpKSk7YWRkX3BhcmFtcz1UYWJsZVdhbGtlckNoZWNrKHRhYmxlT2JqKTt9DQpUYWJsZVdhbGtlckFqYXgodGFibGVPYmosYWRkX3BhcmFtcyk7dGJ3X2RpYWxvZyh0YWJsZU9iaix0YWJsZUlkKTt9DQpmdW5jdGlvbiB0YndfY2hlY2tUeXBlKHRhYmxlSWQpe3ZhciB0YWJsZU9iaj0kKCcjJyt0YWJsZUlkKTt2YXIgZGlhbG9nPSQoIiNkaWFsb2dfIit0YWJsZUlkKTt2YXIgc2VsYm94PSQoJyNzZWxfJyt0YWJsZUlkKTt2YXIgdHlwZUJveD0kKCcjc2VsXycrdGFibGVJZCsnX3R5cGUnKTt2YXIgdGV4dGZpZWxkPSQoJ1tuYW1lPVwiZl90ZXh0XCJdJyxkaWFsb2cpO3ZhciBzdGFydGRhdGU9JCgnW25hbWU9XCJmX3N0YXJ0RGF0ZVwiXScsZGlhbG9nKTt2YXIgZW5kZGF0ZT0kKCdbbmFtZT1cImZfZW5kRGF0ZVwiXScsZGlhbG9nKTt2YXIgZmlsdGVyQ29sdW1uPSQoJ1tjb2x1bW49Iicrc2VsYm94LnZhbCgpKyciXScsdGFibGVPYmopO2lmKHR5cGVCb3gudmFsKCk9PWZpbHRlckNvbHVtbi5hdHRyKCdmaWx0ZXInKSl7dHlwZUJveC5kYXRhKCdsYXN0dmFsdWUnLHR5cGVCb3gudmFsKCkpO3NlbGJveC5kYXRhKCdsYXN0dmFsdWUnLHNlbGJveC52YWwoKSk7fWVsc2V7dHlwZUJveC52YWwoZmlsdGVyQ29sdW1uLmF0dHIoJ2ZpbHRlcicpKTskKCdvcHRpb246c2VsZWN0ZWQnLHR5cGVCb3gpLmF0dHIoJ3NlbGVjdGVkJywnc2VsZWN0ZWQnKTt0eXBlQm94LmRhdGEoJ2xhc3R2YWx1ZScsdHlwZUJveC52YWwoKSk7c2VsYm94LmRhdGEoJ2xhc3R2YWx1ZScsc2VsYm94LnZhbCgpKTt9DQppZih0eXBlQm94LnZhbCgpPT0nZGF0ZScpeyQoJy50YndfZmlsdGVyX3RleHQnKS5oaWRlKCk7JCgnLnRid19maWx0ZXJfZGF0ZScpLnNob3coKTt2YXIgZGF0ZVZhbD0kKCdbY29sdW1uPSInK3NlbGJveC52YWwoKSsnIl0nLHRhYmxlT2JqKS5kYXRhKCdmX3ZhbHVlJyk7aWYoZGF0ZVZhbCE9dW5kZWZpbmVkJiZkYXRlVmFsIT0iIil7ZGF0ZVZhbD1kYXRlVmFsLnNwbGl0KCJ8Iik7c3RhcnRkYXRlLnZhbChkYXRlVmFsWzBdKTtlbmRkYXRlLnZhbChkYXRlVmFsWzFdKTt9fWVsc2UgaWYodHlwZUJveC52YWwoKT09J3RleHQnKXskKCcudGJ3X2ZpbHRlcl9kYXRlJykuaGlkZSgpOyQoJy50YndfZmlsdGVyX3RleHQnKS5zaG93KCk7dmFyIHZhbD0kKCdbY29sdW1uPSInK3NlbGJveC52YWwoKSsnIl0nLHRhYmxlT2JqKS5kYXRhKCdmX3ZhbHVlJyk7aWYodmFsIT11bmRlZmluZWQpDQp0ZXh0ZmllbGQudmFsKHZhbCk7fX0NCmZ1bmN0aW9uIHRid19kaWFsb2codGFibGVPYmosdGFibGVJZCl7dmFyIGRpYWxvZ0JveD0kKCIjZGlhbG9nXyIrdGFibGVJZCk7dmFyIHZhbHVlPSIiO3ZhciB2YWx1ZXM9bmV3IEFycmF5KCk7dmFyIGNvbE9wdGlvbnM9bmV3IEFycmF5KCk7dmFyIGZpbHRlck9wdGlvbnM9bmV3IEFycmF5KCk7dmFyIGNvbE9wdGlvbnNJST1uZXcgQXJyYXkoKTtmaWx0ZXJPcHRpb25zWyd0ZXh0J109IjxvcHRpb24gdmFsdWU9J3RleHQnPlRleHQ8L29wdGlvbj4iO2ZpbHRlck9wdGlvbnNbJ2RhdGUnXT0iPG9wdGlvbiB2YWx1ZT0nZGF0ZSc+RGF0ZTwvb3B0aW9uPiI7dmFyIHRoY2VsbD1UYWJsZVdhbGtlckhlYWRlckNoZWNrKHRhYmxlT2JqKTskKCd0aGVhZCB0ciAnK3RoY2VsbCx0YWJsZU9iaikuZWFjaChmdW5jdGlvbihpbmRleCl7dmFyIGNvbHVtbj0kKHRoaXMpLmF0dHIoJ2NvbHVtbicpO3ZhciBjb2x1bW5GaWx0ZXI9JCh0aGlzKS5hdHRyKCdmaWx0ZXInKTt2YXIgY29sdW1uVGV4dD0kKHRoaXMpLnRleHQoKTtpZihjb2x1bW4hPSdfX1Jvd051bScmJmNvbHVtbiE9IiImJmNvbHVtbiE9dW5kZWZpbmVkJiZjb2x1bW5GaWx0ZXIhPSIiJiZjb2x1bW5GaWx0ZXIhPXVuZGVmaW5lZCl7Y29sT3B0aW9uc1tpbmRleF09IjxvcHRpb24gdmFsdWU9JyIrY29sdW1uKyInPiIrY29sdW1uVGV4dCsiPC9vcHRpb24+Ijtjb2xPcHRpb25zSUlbaW5kZXhdPWNvbHVtbjt9fSk7dmFyIHNlbFZhbHVlPSQoJyNzZWxfJyt0YWJsZUlkKS5kYXRhKCdsYXN0dmFsdWUnKTt2YXIgc2VsVmFsdWVfbmFtZT0kKCcjc2VsXycrdGFibGVJZCkuZGF0YSgnbGFzdHZhbHVlX25hbWUnKTt2YXIgdHlwZVZhbHVlPSQoJyNzZWxfJyt0YWJsZUlkKydfdHlwZScpLmRhdGEoJ2xhc3R2YWx1ZScpO3ZhciBmaWVsZFZhbHVlPSQoJ1tuYW1lPVwiZl90ZXh0XCJdJyxkaWFsb2dCb3gpLmRhdGEoJ2xhc3R2YWx1ZScpO3ZhciBzZGF0ZVZhbHVlPSQoJ1tuYW1lPVwiZl9zdGFydERhdGVcIl0nLGRpYWxvZ0JveCkuZGF0YSgnbGFzdHZhbHVlJyk7dmFyIGVkYXRlVmFsdWU9JCgnW25hbWU9XCJmX2VuZERhdGVcIl0nLGRpYWxvZ0JveCkuZGF0YSgnbGFzdHZhbHVlJyk7aWYoc2VsVmFsdWUhPScnJiZzZWxWYWx1ZSE9dW5kZWZpbmVkJiZzZWxWYWx1ZV9uYW1lIT0iIiYmc2VsVmFsdWVfbmFtZSE9dW5kZWZpbmVkKXskLmVhY2goY29sT3B0aW9ucyxmdW5jdGlvbihpbmRleCl7aWYoY29sT3B0aW9uc0lJW2luZGV4XT09c2VsVmFsdWUpe2NvbE9wdGlvbnNbaW5kZXhdPSI8b3B0aW9uIHZhbHVlPSciK3NlbFZhbHVlKyInIHNlbGVjdGVkPiIrc2VsVmFsdWVfbmFtZSsiPC9vcHRpb24+Ijt9fSk7fQ0KaWYodHlwZVZhbHVlIT0nJyYmdHlwZVZhbHVlIT11bmRlZmluZWQpe2lmKHR5cGVWYWx1ZT09InRleHQiKXtmaWx0ZXJPcHRpb25zWyd0ZXh0J109IjxvcHRpb24gdmFsdWU9JyIrdHlwZVZhbHVlKyInIHNlbGVjdGVkPiBUZXh0IDwvb3B0aW9uPiI7fWVsc2UgaWYodHlwZVZhbHVlPT0iZGF0ZSIpe2ZpbHRlck9wdGlvbnNbJ2RhdGUnXT0iPG9wdGlvbiB2YWx1ZT0nIit0eXBlVmFsdWUrIicgc2VsZWN0ZWQ+IERhdGUgPC9vcHRpb24+Ijt9fQ0KaWYoZmllbGRWYWx1ZSE9JycmJmZpZWxkVmFsdWUhPXVuZGVmaW5lZCkNCnZhbHVlPWZpZWxkVmFsdWU7aWYoc2RhdGVWYWx1ZSE9JycmJnNkYXRlVmFsdWUhPXVuZGVmaW5lZHx8ZWRhdGVWYWx1ZSE9JycmJmVkYXRlVmFsdWUhPXVuZGVmaW5lZCl7dmFsdWVzWzBdPXNkYXRlVmFsdWU7dmFsdWVzWzFdPWVkYXRlVmFsdWU7fWVsc2V7dmFsdWVzWzBdPSIiO3ZhbHVlc1sxXT0iIjt9DQp2YXIgY3VzdG9tSHRtbD0kKCcjZGN1c3RvbV8nK3RhYmxlSWQrJycsZGlhbG9nQm94KS5odG1sKCk7aWYoY3VzdG9tSHRtbD09IiJ8fGN1c3RvbUh0bWw9PXVuZGVmaW5lZHx8Y3VzdG9tSHRtbD09bnVsbCkNCmN1c3RvbUh0bWw9IiI7dmFyIGh0bWw9IiINCisiPHRhYmxlIGNsYXNzPSd0YndfZmlsdGVyX3RhYmxlTCc+IFxuIg0KKyIgPHRyPiBcbiINCisiICA8dGQ+RmlsdGVyIENvbHVtbjwvdGQ+IFxuIg0KKyIgIDx0ZD48c2VsZWN0IGlkPSdzZWxfIit0YWJsZUlkKyInPiIrY29sT3B0aW9ucysiPC9zZWxlY3Q+PC90ZD4gXG4iDQorIiA8L3RyPiBcbiINCisiIDx0ciBjbGFzcz0ndGJ3X2ZpbHRlcnR5cGVfaGlkZSc+IFxuIg0KKyIgIDx0ZD5GaWx0ZXIgVHlwZTwvdGQ+IFxuIg0KKyIgIDx0ZD48c2VsZWN0IGlkPSdzZWxfIit0YWJsZUlkKyJfdHlwZSc+IitmaWx0ZXJPcHRpb25zWyd0ZXh0J10rZmlsdGVyT3B0aW9uc1snZGF0ZSddKyI8L3NlbGVjdD48L3RkPiBcbiINCisiIDwvdHI+IFxuIg0KKyIgPHRyIGNsYXNzPSd0YndfZmlsdGVyX3RleHQnPiBcbiINCisiICA8dGQ+RmlsdGVyIFRleHQ8L3RkPiBcbiINCisiICA8dGQ+PGlucHV0IG5hbWU9J2ZfdGV4dCcgdHlwZT0ndGV4dCcgdmFsdWU9JyIrdmFsdWUrIicgLz48L3RkPiBcbiINCisiIDwvdHI+IFxuIg0KKyIgPHRyIGNsYXNzPSd0YndfZmlsdGVyX2RhdGUnPiBcbiINCisiICA8dGQ+U3RhcnQgRGF0ZTwvdGQ+IFxuIg0KKyIgIDx0ZD48aW5wdXQgbmFtZT0nZl9zdGFydERhdGUnIGNsYXNzPSdmX2RhdGVQaWNrZXInIHR5cGU9J3RleHQnICB2YWx1ZT0nIit2YWx1ZXNbMF0rIicvPjwvdGQ+IFxuIg0KKyIgPC90cj4gXG4iDQorIiA8dHIgY2xhc3M9J3Rid19maWx0ZXJfZGF0ZSc+IFxuIg0KKyIgIDx0ZD5FbmQgRGF0ZTwvdGQ+IFxuIg0KKyIgIDx0ZD48aW5wdXQgbmFtZT0nZl9lbmREYXRlJyBjbGFzcz0nZl9kYXRlUGlja2VyJyB0eXBlPSd0ZXh0JyAgdmFsdWU9JyIrdmFsdWVzWzFdKyInLz48L3RkPiBcbiINCisiIDwvdHI+IFxuIg0KKyI8L3RhYmxlPiBcbiI7dmFyIGZpbHRlcl9yb3dzPSIiO3ZhciBmaWx0ZXJzPWZhbHNlO3ZhciBoZWFkZXJzPSQoInRoZWFkIHRyIix0YWJsZU9iaikuY2hpbGRyZW4odGhjZWxsKTskKGhlYWRlcnMpLmVhY2goZnVuY3Rpb24oaW5kZXgpe3ZhciB0aD0kKHRoaXMpO2lmKHRoLmRhdGEoImZpbHRlcmVkIikhPSIiJiZ0aC5kYXRhKCJmaWx0ZXJlZCIpIT11bmRlZmluZWQpe2ZpbHRlcl9yb3dzPWZpbHRlcl9yb3dzDQorIjx0YWJsZSBjbGFzcz0ndGJ3X2ZpbHRlcl90YWJsZVInPiBcbiINCisiIDx0cj4gXG4iDQorIiAgPHRkIGNvbHVtbj0nIit0aC5hdHRyKCJjb2x1bW4iKSsiJyBjbGFzcz0ndGJ3Zl9jbGljazJlZGl0Jz4iK3RoLnRleHQoKSsiPC90ZD4gXG4iDQorIiAgPHRkIGNvbHVtbj0nIit0aC5hdHRyKCJjb2x1bW4iKSsiJyBzdHlsZT0nd2lkdGg6MTdweDsnPjxpbWcgc3JjPScuLi9pbWFnZXMvaW5hY3RpdmV4LnBuZycgY2xhc3M9J2ZfY2xlYXJGaWx0ZXJzJyB0aXRsZT0nQ2xpY2sgaGVyZSB0byBjbGVhciB0aGUgZmlsdGVyIGZvciB0aGlzIGNvbHVtbi4nLz48L3RkPiBcbiINCisiIDwvdHI+IFxuIg0KKyI8L3RhYmxlPiBcbiI7ZmlsdGVycz10cnVlO319KTtpZihmaWx0ZXJzPT09dHJ1ZSl7aHRtbD1odG1sDQorIjxkaXYgY2xhc3M9J3Rid19maWx0ZXJfdGFibGVSJz4gXG4iDQorZmlsdGVyX3Jvd3MNCisiPC9kaXY+IFxuIjskKCIjZGlhbG9nXyIrdGFibGVJZCkuZGF0YSgid2lkdGguZGlhbG9nIiw1MDApO30NCmh0bWw9aHRtbA0KKyI8ZGl2IHN0eWxlPSdjbGVhcjpib3RoJz48L2Rpdj4gXG4iDQorIjx0YWJsZSBjbGFzcz0nZmlsdGVyX2NvbnRyb2xfdGJsJz4gXG4gIDx0cj4gXG4iDQorIjx0ZD48aW5wdXQgY2xhc3M9J3Rid19mX3RleHQgdGJ3X2ZpbHRlcl90ZXh0JyB0eXBlPSdzdWJtaXQnIGlkPSdmX3N1Ym1pdFRleHQnIHZhbHVlPSdGaWx0ZXInIHRpdGxlPSdDbGljayBoZXJlIHRvIGZpbHRlciByZXN1bHRzLicgLz4gXG4iDQorIjxpbnB1dCBjbGFzcz0ndGJ3X2ZfZGF0ZSB0YndfZmlsdGVyX2RhdGUnIHR5cGU9J3N1Ym1pdCcgaWQ9J2Zfc3VibWl0RGF0ZXMnIHZhbHVlPSdGaWx0ZXInIHRpdGxlPSdDbGljayBoZXJlIHRvIGZpbHRlciByZXN1bHRzLicgLz4gPC90ZD5cbiINCisiPHRkPjxidXR0b24gY2xhc3M9J2ZfY2xlYXJBbGxGaWx0ZXJzJyB0aXRsZT0nQ2xpY2sgaGVyZSB0byBjbGVhciBhbGwgZmlsdGVycy4nPkNsZWFyIEZpbHRlcnM8L2J1dHRvbj48L3RkPiBcbiINCisiPC90cj4gXG4gPC90YWJsZT4gXG4iDQorIjxkaXYgaWQ9J2RjdXN0b21fIit0YWJsZUlkKyInPiAiK2N1c3RvbUh0bWwrIjwvZGl2PiBcbiI7ZGlhbG9nQm94Lmh0bWwoaHRtbCk7ZGlhbG9nQm94LmRpYWxvZygib3BlbiIpO3ZhciB0eXBlQm94PSQoJyNzZWxfJyt0YWJsZUlkKydfdHlwZScpOyQoJy50YndfZmlsdGVydHlwZV9oaWRlJykuaGlkZSgpO3Rid19jaGVja1R5cGUodGFibGVJZCk7dGJ3X2ZpbHRlckV2ZW50cyh0YWJsZU9iaix0YWJsZUlkKTt9DQpmdW5jdGlvbiB0YndfZmlsdGVyRXZlbnRzKHRhYmxlT2JqLHRhYmxlSWQpe3ZhciBkaWFsb2c9JCgnI2RpYWxvZ18nK3RhYmxlSWQpO3ZhciBzZWxib3g9JCgnI3NlbF8nK3RhYmxlSWQpO3ZhciB0eXBlQm94PSQoJyNzZWxfJyt0YWJsZUlkKydfdHlwZScpO3ZhciB0ZXh0ZmllbGQ9ZGlhbG9nLmZpbmQoJ1tuYW1lPSJmX3RleHQiXScpO3ZhciBzdGFydGRhdGU9JCgnW25hbWU9ImZfc3RhcnREYXRlIl0nLGRpYWxvZyk7dmFyIGVuZGRhdGU9JCgnW25hbWU9ImZfZW5kRGF0ZSJdJyxkaWFsb2cpO3ZhciB0aGNlbGw9VGFibGVXYWxrZXJIZWFkZXJDaGVjayh0YWJsZU9iaik7JCgnLnRid2ZfY2xpY2syZWRpdCcpLnJlYWR5KGZ1bmN0aW9uKCl7JCgiLnRid2ZfY2xpY2syZWRpdCIpLnVuYmluZCgiY2xpY2siKTskKCcudGJ3Zl9jbGljazJlZGl0JykuY2xpY2soZnVuY3Rpb24oKXt2YXIgY29sPSQodGhpcykuYXR0cigiY29sdW1uIik7c2VsYm94LnZhbChjb2wpO3Rid19jaGVja1R5cGUodGFibGVJZCk7fSk7fSk7JCgnLnRid19mX3RleHQnKS5yZWFkeShmdW5jdGlvbigpeyQoIi50YndfZl90ZXh0IikudW5iaW5kKCJjbGljayIpOyQoJy50YndfZl90ZXh0JykuY2xpY2soZnVuY3Rpb24oKXt2YXIgdmFsdWU9ZGlhbG9nLmZpbmQoJ1tuYW1lPSJmX3RleHQiXScpLnZhbCgpO3NlbGJveC5kYXRhKCdsYXN0dmFsdWUnLHNlbGJveC52YWwoKSk7c2VsYm94LmRhdGEoJ2xhc3R2YWx1ZV9uYW1lJywkKCcjc2VsXycrdGFibGVJZCsnIG9wdGlvbjpzZWxlY3RlZCcpLnRleHQoKSk7dGV4dGZpZWxkLmRhdGEoJ2xhc3R2YWx1ZScsdmFsdWUpO3ZhciBmaWx0ZXJDb2x1bW49JCgnW2NvbHVtbj0iJytzZWxib3gudmFsKCkrJyJdJyx0YWJsZU9iaik7ZmlsdGVyQ29sdW1uLmRhdGEoJ2ZfdmFsdWUnLHZhbHVlKTtmaWx0ZXJDb2x1bW4uZGF0YSgnZmlsdGVyZWQnLCd0ZXh0Jyk7dGJ3X2ZpbHRlcih0YWJsZU9iaik7fSk7fSk7JChmdW5jdGlvbigpe3N0YXJ0ZGF0ZS5kYXRlcGlja2VyKCk7ZW5kZGF0ZS5kYXRlcGlja2VyKCk7JCgnLnVpLWRhdGVwaWNrZXInKS5jc3Moeyd0b3AnOicwcHgnLCdsZWZ0JzonMHB4JywncG9zaXRpb24nOidhYnNvbHV0ZSd9KTt9KTskKCcudGJ3X2ZfZGF0ZScpLnJlYWR5KGZ1bmN0aW9uKCl7JCgiLnRid19mX2RhdGUiKS51bmJpbmQoImNsaWNrIik7JCgnLnRid19mX2RhdGUnKS5jbGljayhmdW5jdGlvbigpe3ZhciB2YWx1ZXM9bmV3IEFycmF5KCk7dmFsdWVzWydzdGFydCddPXN0YXJ0ZGF0ZS52YWwoKTt2YWx1ZXNbJ2VuZCddPWVuZGRhdGUudmFsKCk7c2VsYm94LmRhdGEoJ2xhc3R2YWx1ZScsc2VsYm94LnZhbCgpKTtzZWxib3guZGF0YSgnbGFzdHZhbHVlX25hbWUnLCQoJyNzZWxfJyt0YWJsZUlkKycgb3B0aW9uOnNlbGVjdGVkJykudGV4dCgpKTtzdGFydGRhdGUuZGF0YSgnbGFzdHZhbHVlJyx2YWx1ZXNbJ3N0YXJ0J10pO2VuZGRhdGUuZGF0YSgnbGFzdHZhbHVlJyx2YWx1ZXNbJ2VuZCddKTt2YXIgZmlsdGVyQ29sdW1uPSQoJ1tjb2x1bW49Iicrc2VsYm94LnZhbCgpKyciXScsdGFibGVPYmopO2ZpbHRlckNvbHVtbi5kYXRhKCdmX3ZhbHVlJyx2YWx1ZXNbJ3N0YXJ0J10rJ3wnK3ZhbHVlc1snZW5kJ10pO2ZpbHRlckNvbHVtbi5kYXRhKCdmaWx0ZXJlZCcsJ2RhdGUnKTt0YndfZmlsdGVyKHRhYmxlT2JqKTt9KTt9KTskKCcuZl9jbGVhckZpbHRlcnMnKS5yZWFkeShmdW5jdGlvbigpeyQoIi5mX2NsZWFyRmlsdGVycyIpLnVuYmluZCgiY2xpY2siKTskKCcuZl9jbGVhckZpbHRlcnMnKS5jbGljayhmdW5jdGlvbigpe3ZhciBjb2x1bW49JCh0aGlzKS5wYXJlbnQoKS5hdHRyKCdjb2x1bW4nKTt2YXIgZmlsdGVycz1mYWxzZTskKCdbY29sdW1uPSInK2NvbHVtbisnIl0nLHRhYmxlT2JqKS5yZW1vdmVEYXRhKCdmaWx0ZXJlZCcpOyQoJ1tjb2x1bW49IicrY29sdW1uKyciXScsdGFibGVPYmopLnJlbW92ZURhdGEoJ2ZfdmFsdWUnKTskKHRoaXMpLnBhcmVudCgpLnBhcmVudCgpLnJlbW92ZSgpO3Rid19maWx0ZXIodGFibGVPYmopO3ZhciBoZWFkZXJzPSQoJ3RoZWFkIHRyJyx0YWJsZU9iaikuY2hpbGRyZW4odGhjZWxsKTskKGhlYWRlcnMpLmVhY2goZnVuY3Rpb24oaW5kZXgpe3ZhciB0aD0kKHRoaXMpO2lmKHRoLmRhdGEoJ2ZpbHRlcmVkJykhPScnJiZ0aC5kYXRhKCdmaWx0ZXJlZCcpIT11bmRlZmluZWQpe2ZpbHRlcnM9dHJ1ZTt9fSk7aWYoZmlsdGVycz09PWZhbHNlKXskKCcjZGlhbG9nXycrdGFibGVJZCkuZGF0YSgnd2lkdGguZGlhbG9nJywzMTApO319KTt9KTskKCcuZl9jbGVhckFsbEZpbHRlcnMnKS5yZWFkeShmdW5jdGlvbigpeyQoIi5mX2NsZWFyQWxsRmlsdGVycyIpLnVuYmluZCgiY2xpY2siKTskKCcuZl9jbGVhckFsbEZpbHRlcnMnKS5jbGljayhmdW5jdGlvbigpe3ZhciBmaWx0ZXJzPWZhbHNlO3ZhciBoZWFkZXJzPSQoJ3RoZWFkIHRyJyx0YWJsZU9iaikuY2hpbGRyZW4odGhjZWxsKTskKGhlYWRlcnMpLmVhY2goZnVuY3Rpb24oaW5kZXgpe3ZhciB0aD0kKHRoaXMpO3RoLnJlbW92ZURhdGEoJ2ZpbHRlcmVkJyk7dGgucmVtb3ZlRGF0YSgnZl92YWx1ZScpO30pO3Rid19maWx0ZXIodGFibGVPYmopO2RpYWxvZy5odG1sKCcnKTskKCcjZGlhbG9nXycrdGFibGVJZCkuZGF0YSgnd2lkdGguZGlhbG9nJywzMTApO2RpYWxvZy5kaWFsb2coJ2Nsb3NlJyk7fSk7fSk7dGJ3X2NoZWNrVHlwZSh0YWJsZUlkKTtzZWxib3guY2hhbmdlKGZ1bmN0aW9uKCl7dGJ3X2NoZWNrVHlwZSh0YWJsZUlkKTt9KTt0eXBlQm94LmNoYW5nZShmdW5jdGlvbigpe3Rid19jaGVja1R5cGUodGFibGVJZCk7fSk7fQ0KJCgiLnRid19maWx0ZXJfYnRuIikudW5iaW5kKCJsaXZlIik7JCgiLnRid19maWx0ZXJfYnRuIikubGl2ZSgiY2xpY2siLGZ1bmN0aW9uKGUpe3ZhciBmaWx0ZXJwYXJlbnQ9JCh0aGlzKS5wYXJlbnQoKTt2YXIgdGFibGVJZD1maWx0ZXJwYXJlbnQuZGF0YSgidGFibGVJZCIpO3ZhciB0YWJsZU9iaj0kKCIjIit0YWJsZUlkKTt0YndfZGlhbG9nKHRhYmxlT2JqLHRhYmxlSWQpO30pOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21532022" offset="0" length="1387" />
          <PacketInfo time="21532037" offset="1387" length="1387" />
          <PacketInfo time="21532037" offset="2774" length="1387" />
          <PacketInfo time="21532037" offset="4161" length="1387" />
          <PacketInfo time="21532037" offset="5548" length="1387" />
          <PacketInfo time="21532037" offset="6935" length="1387" />
          <PacketInfo time="21532084" offset="8322" length="979" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="304" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/customtemplate.js" url="http://ueatworkuat.maxprocessing.com/script/customtemplate.js" ip="192.168.250.11" port="8080" connectionId="5" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:47.960+05:30" startTime="21532022" endTime="21532100">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvY3VzdG9tdGVtcGxhdGUuanMgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6ICovKg0KUmVmZXJlcjogaHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgc2RjaA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzQ0NA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMg0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjIgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMzQ0NA0KQWdlOiAzNTY0MQ0KVmlhOiAxLjEgaW5kLW1ocDJsZnAwMDENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZnVuY3Rpb24gUmVzZXRTY3JpcHRPYmooU2NyaXB0T2JqTmFtZSkNCnsNCiAgdHJ5IHsNCiAgICAgIHZhciBvYmogPSB3aW5kb3dbU2NyaXB0T2JqTmFtZV07DQogICAgICBpZiAodHlwZW9mKG9iaikhPSd1bmRlZmluZWQnKSANCiAgICAgICAgalF1ZXJ5LmVhY2gob2JqLCBmdW5jdGlvbiAoZmllbGQsIHZhbHVlKSB7IG9ialtmaWVsZF0gPSBudWxsOyB9KTsNCiAgfSBjYXRjaChlcnIpIHsNCiAgfQ0KfQ0KDQoNCiAgZnVuY3Rpb24gU2NyaXB0KF9uYW1lLCBwYXJhbXMsIGJvZHkpIHsNCiAgdGhpcy5OYW1lID0gX25hbWU7DQogIHRoaXMuUGFyYW1zID0gcGFyYW1zOw0KICB0aGlzLkJvZHkgPSBib2R5Ow0KICB9DQoNCmZ1bmN0aW9uIEFwcGx5U2NyaXB0VG9PYmooU2NyaXB0VGV4dCwgU2NyaXB0T2JqTmFtZSwgZG9SZXNldCkNCnsNCg0KICAgZnVuY3Rpb24gR2V0RnVuY3Rpb25zKHN0cikgew0KICAgICAgICAgdmFyIGFyciA9IG5ldyBBcnJheSgpOw0KICAgICAgdHJ5IHsNCiAgICAgICAgIHZhciBmbnMgPSBzdHIuc3BsaXQoImZ1bmN0aW9uICIpOw0KICAgICAgICAgaWYgKGZucyA9PSBudWxsKSByZXR1cm4gYXJyOw0KICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBmbnMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIHZhciBmbiA9IGZuc1tpXTsNCiAgICAgICAgICAgIHZhciBfbmFtZSA9IGZuLnN1YnN0cmluZygwLCBmbi5pbmRleE9mKCJ7IikpOw0KICAgICAgICAgICAgZXhwID0gL1woW15cKV0rXCkvZzsNCiAgICAgICAgICAgIHZhciBwYXJhbXMgPSBfbmFtZS5tYXRjaChleHApOw0KICAgICAgICAgICAgaWYgKHBhcmFtcyA9PSBudWxsIHx8IHBhcmFtcy5sZW5ndGggPT0gMCkgcGFyYW1zID0gIiI7DQogICAgICAgICAgICBlbHNlIHBhcmFtcyA9IHBhcmFtc1swXTsNCiAgICAgICAgICAgIHBhcmFtcyA9IHBhcmFtcy5yZXBsYWNlKCIoIiwgIiIpLnJlcGxhY2UoIikiLCAiIik7DQogICAgICAgICAgICBpZiAoX25hbWUuaW5kZXhPZigiKCIpID4gLTEpIF9uYW1lID0gX25hbWUuc3Vic3RyaW5nKDAsIF9uYW1lLmluZGV4T2YoIigiKSk7DQogICAgICAgICAgICB2YXIgYm9keSA9IGZuLnN1YnN0cmluZyhmbi5pbmRleE9mKCJ7IikgKyAxKTsNCiAgICAgICAgICAgIGJvZHkgPSBib2R5LnN1YnN0cmluZygwLCBib2R5Lmxhc3RJbmRleE9mKCJ9IikpOw0KICAgICAgICAgICAgdmFyIGZ1bmN0ID0gbmV3IFNjcmlwdChfbmFtZSwgcGFyYW1zLCBib2R5KTsNCiAgICAgICAgICAgIC8vYWxlcnQoIiciICsgX25hbWUgKyAiJ1xuXG4nIiArIHBhcmFtcyArICInXG5cbiciICsgYm9keSArICInIik7DQogICAgICAgICAgICBhcnIucHVzaChmdW5jdCk7DQogICAgICAgICB9DQogICAgICB9IGNhdGNoIChlcnIpIHsgDQoJICB9DQogICAgICAgICByZXR1cm4gYXJyOw0KICAgfQ0KDQoNCiAgIHRyeSB7DQogICAgIHZhciBmbnNkZWJ1ZyA9IFNjcmlwdFRleHQuc3BsaXQoImZ1bmN0aW9uICIpOyANCiAgICAgdmFyIGZucyA9IEdldEZ1bmN0aW9ucyhTY3JpcHRUZXh0KTsgDQogICAgIGlmICh0eXBlb2Yod2luZG93W1NjcmlwdE9iak5hbWVdKT09J3VuZGVmaW5lZCcpIHsNCiAgICAgICB3aW5kb3dbU2NyaXB0T2JqTmFtZV09bmV3IGZ1bmN0aW9uKCl7IHJldHVybiB9Ow0KICAgICB9DQogICAgIHZhciBvYmogPSB3aW5kb3dbU2NyaXB0T2JqTmFtZV07DQoNCiAgICAgaWYgKHR5cGVvZihkb1Jlc2V0KT09J3VuZGVmaW5lZCcpIGRvUmVzZXQ9dHJ1ZTsNCg0KICAgICBpZiAoZG9SZXNldCkgew0KICAgICAgIGlmIChTY3JpcHRPYmpOYW1lPT0nQ3VzdG9tU2NyaXB0JykgIHsNCiAgICAgICAgIEN1c3RvbVNjcmlwdC5SZXNldCgpOw0KICAgICAgIH0gZWxzZSB7IA0KICAgICAgICAgUmVzZXRTY3JpcHRPYmooU2NyaXB0T2JqTmFtZSkgICANCiAgICAgICB9DQogICAgfQ0KDQogICAgIC8vaWYgKCFEb05vdFJlc2V0KSBSZXNldFNjcmlwdE9iaihTY3JpcHRPYmpOYW1lKTsNCiAgICAgdmFyIGxvYWRTY3JpcHRzID0gdHJ1ZTsNCiAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmbnMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgdmFyIGZuID0gZm5zW2ldOw0KICAgICAgICB0cnkgew0KICAgICAgICAgICBvYmpbZm4uTmFtZV0gPSBuZXcgRnVuY3Rpb24oZm4uUGFyYW1zLCBmbi5Cb2R5KTsNCiAgICAgICAgfSBjYXRjaCAoZXJyKSB7DQogICAgICAgICBsb2FkU2NyaXB0cyA9IGZhbHNlOw0KICAgICAgICAgYWxlcnQoIkVycm9yIGJpbmRpbmcgY3VzdG9tIGZ1bmN0aW9uICciICsgZm4uTmFtZSArICInOiAiICsgZXJyLm1lc3NhZ2UpOw0KICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgIH0NCiAgICAgcmV0dXJuIHRydWU7DQogICB9IGNhdGNoKGVycil7IGFsZXJ0KGVycikgfQ0KfQ0KDQoNCmZ1bmN0aW9uIEN1c3RvbVRlbXBsYXRlKHVybCwgdGFyZ2V0b2JqLCBzY3JpcHRvYmpuYW1lLCBjYWxsYmFjaywgcmVzZXRzY3JpcHQpIA0Kew0KICBDb21tdW5pY2F0aW9uLkN1c3RvbVJlcXVlc3QodXJsLCBmdW5jdGlvbihodG1sKXsNCiAgICB0cnkgew0KICAgICQodGFyZ2V0b2JqKS5odG1sKGh0bWwpOw0KICAgIHZhciBlZHQ9JCh0YXJnZXRvYmopLmZpbmQoIi5FZGl0YWJsZUNvbnRlbnQiKTsgIA0KICAgIGlmIChlZHQubGVuZ3RoPjApIHsgDQogICAgICB2YXIgaD1lZHQuaHRtbCgpOw0KICAgICAgJCh0YXJnZXRvYmopLmh0bWwoJycpOw0KICAgICAgJCh0YXJnZXRvYmopLmh0bWwoaCk7DQogICAgfQ0KDQogICAgJCh0YXJnZXRvYmopLmZpbmQoIi5jb21wb25lbnQiKS5lYWNoKGZ1bmN0aW9uICgpIHsNCiAgICAgICB0cnkgew0KICAgICAgICAgIC8vJCh0aGlzKS5jc3MoImRpc3BsYXkiLCAibm9uZSIpOw0KICAgICAgICAgIHZhciBjdHJsID0gSGVscGVyLkdldEVkaXRvckNvbXBvbmVudCgkKHRoaXMpKTsNCiAgICAgICAgICBpZiAodHlwZW9mKGN0cmwpICE9ICd1bmRlZmluZWQnKSAgew0KICAgICAgICAgICAgIGlmICgkKHRoaXMpLmhhc0NsYXNzKCdTY3JpcHRpbmdDb250YWluZXInKSkgew0KICAgICAgICAgICAgICAgdmFyIHR4dD0gJCh0aGlzKS5maW5kKCJwcmUiKS50ZXh0KCk7IA0KICAgICAgICAgICAgICAgQXBwbHlTY3JpcHRUb09iaih0eHQsIHNjcmlwdG9iam5hbWUsIHJlc2V0c2NyaXB0KTsgDQogICAgICAgICAgICAgICBIZWxwZXIuUmVtb3ZlQ29tcG9uZW50SUQoY3RybCk7DQogICAgICAgICAgICAgfSBlbHNlIA0KICAgICAgICAgICAgICAgY3RybC5EZWZhdWx0TW9kZSgpOw0KICAgICAgICAgIH0NCiAgICAgICB9IGNhdGNoIChlcnIpIHsNCiAgICAgICAgICBMb2cuQWRkKCJFZGl0b3IuRW5hYmxlRWRpdG9yIiwgZXJyLCBMb2dUeXBlLkVycm9yKTsNCiAgICAgICB9DQogICAgfSk7DQogICAgaWYgKGNhbGxiYWNrKSBjYWxsYmFjaygpOw0KICAgIH0gY2F0Y2goZXJyKSB7IGFsZXJ0KGVycikgfQ0KICB9KQ0KfQ0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21532100" offset="0" length="1387" />
          <PacketInfo time="21532100" offset="1387" length="1387" />
          <PacketInfo time="21532147" offset="2774" length="1018" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="319" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/workflow.js" url="http://ueatworkuat.maxprocessing.com/script/workflow.js" ip="192.168.250.11" port="8080" connectionId="7" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:47.966+05:30" startTime="21532084" endTime="21532225">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvd29ya2Zsb3cuanMgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6ICovKg0KUmVmZXJlcjogaHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgc2RjaA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjQzNw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2Mzk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjQgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMjQzNw0KQWdlOiAzNTYzOQ0KVmlhOiAxLjEgaW5kLW1ocDJsZnAwMDENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V0ZQb3B1cCA9IG5ldyBmdW5jdGlvbigpIHsgDQogIHJldHVybiB7IA0KICAgIHVzZVBvcHVwIDogZmFsc2UsDQogICAgcG9wdXAgOiBudWxsLA0KICAgIG9wZW46IGZ1bmN0aW9uKFNlc3Npb25JRCkNCiAgICB7ICAgICAgICAgDQogICAgICAgdmFyIHVybCA9ICd3ZndpbmRvdy5odG0/SUQ9JytTZXNzaW9uSUQ7IA0KICAgICAgIGlmIChXRlBvcHVwLnBvcHVwKSB7DQogICAgICAgICANCiAgICAgICAgIGlmIChXRlBvcHVwLnBvcHVwLmNsb3NlZCkgeyANCiAgICAgICAgICAgV0ZQb3B1cC5wb3B1cD1udWxsOw0KICAgICAgICAgfQ0KICAgICAgICAgICAgIA0KICAgICAgIH0NCiAgICAgICBpZiAoIVdGUG9wdXAucG9wdXApIFdGUG9wdXAucG9wdXA9d2luZG93Lm9wZW4odXJsLCAnX2JsYW5rJywgJ2hlaWdodD01MDAsd2lkdGg9NzgwLGxvY2F0aW9uPTAsbWVudWJhcj0wLHJlc2l6YWJsZT0xLHNjcm9sbGJhcnM9MSx0aXRsZWJhcj0wLHRvb2xiYXI9MCxkaXJlY3Rvcmllcz0wJyk7DQogICAgICAgZWxzZSBXRlBvcHVwLnBvcHVwLmZvY3VzKCk7DQogICAgICAgcmV0dXJuIHRydWU7DQogICAgfSwNCiAgICBjbG9zZTogZnVuY3Rpb24oKQ0KICAgIHsNCiAgICAgIGlmIChXRlBvcHVwLnBvcHVwKSB7DQogICAgICAgIFdGUG9wdXAucG9wdXAuY2xvc2UoKTsNCiAgICAgICAgV0ZQb3B1cC5wb3B1cD1udWxsOyAgICAgICAgICANCiAgICAgIH0NCiAgICB9DQogIH0gDQp9DQoNCg0KZnVuY3Rpb24gV29ya2Zsb3dDbGljayhTZXNzaW9uSUQsIE9wZW5JdGVtSUQsIENhbGxCYWNrKQ0Kew0KICB0cnkgew0KICAgIGlmIChXRlBvcHVwLnVzZVBvcHVwKSB7IA0KICAgICAgV0ZQb3B1cC5vcGVuKFNlc3Npb25JRCk7DQogICAgICByZXR1cm47DQogICAgfQ0KDQogICAgdmFyIHdkPSQoIiN3b3JrZmxvd2RpYWxvZyIpOw0KICAgIGlmICh3ZC5sZW5ndGg9PTApIHsNCiAgICAgICQoJyNtaWRkbGUnKS5iZWZvcmUoJzxkaXYgaWQ9d29ya2Zsb3dkaWFsb2c+PC9kaXY+Jyk7DQogICAgICB3ZD0kKCIjd29ya2Zsb3dkaWFsb2ciKTsNCiAgICAgIHdkLmRpYWxvZyh7DQogICAgICAgIGF1dG9PcGVuOiBmYWxzZSwNCiAgICAgICAgd2lkdGg6IDc1MCwNCiAgICAgICAgbW9kYWw6IGZhbHNlLA0KICAgICAgICByZXNpemFibGU6IGZhbHNlLA0KICAgICAgICBhdXRvUmVzaXplOiB0cnVlLA0KICAgICAgICBjYW5NaW5pbWl6ZTogdHJ1ZSwNCiAgICAgICAgY2FuTWF4aW1pemU6IHRydWUsDQogICAgICAgIGZ1bmNNYXhpbWl6ZTogZnVuY3Rpb24odCkgeyANCiAgICAgICAgICBpZiAoV0ZQb3B1cC5vcGVuKFNlc3Npb25JRCkpIHsNCiAgICAgICAgICAgIFdGUG9wdXAudXNlUG9wdXA9dHJ1ZTsNCiAgICAgICAgICAgICQoJyN3b3JrZmxvd2RpYWxvZycpLmRpYWxvZygiY2xvc2UiKTsgDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsgDQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB0aXRsZTogIldvcmtmbG93IEl0ZW1zIiANCiAgICAgIH0pOyANCg0KICAgICAgJCgiI3dvcmtmbG93ZGlhbG9nIikuZGlhbG9nKCJvcGVuIikucGFyZW50KCdkaXYnKS5jc3MoJ3RvcCcsJzEwMHB4Jyk7DQogICAgICBDdXN0b21UZW1wbGF0ZSgnUXVldWVzLm1heD9wcmVwcm9jZXNzPXRydWUmaWQ9JytTZXNzaW9uSUQsIHdkLCAnV0ZTY3JpcHQnLCBmdW5jdGlvbigpIHsNCiAgICAgICAgJCgiI3dvcmtmbG93ZGlhbG9nIikuZGlhbG9nKCJvcGVuIik7DQogICAgICAgIGlmIChXRlNjcmlwdC5PbkxvYWQpIFdGU2NyaXB0Lk9uTG9hZCgpOw0KICAgICAgICBpZiAodHlwZW9mIE9wZW5JdGVtSUQhPSd1bmRlZmluZWQnKSBXRlNjcmlwdC5FZGl0SXRlbShPcGVuSXRlbUlELENhbGxCYWNrKTsNCiAgICAgIH0pOw0KICAgIH0gZWxzZSB7DQogICAgICBpZiAoJCgnI3dvcmtmbG93ZGlhbG9nJykucGFyZW50cygiLnVpLWRpYWxvZyIpLmlzKCI6dmlzaWJsZSIpKXsNCiAgICAgICAgd2QuZGlhbG9nKCJjbG9zZSIpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgd2QuZGlhbG9nKCJvcGVuIik7DQogICAgICAgIGlmIChXRlNjcmlwdC5SZWxvYWQpIFdGU2NyaXB0LlJlbG9hZCgpOw0KICAgICAgICBpZiAodHlwZW9mIE9wZW5JdGVtSUQhPSd1bmRlZmluZWQnKSBXRlNjcmlwdC5FZGl0SXRlbShPcGVuSXRlbUlELENhbGxCYWNrKTsNCiAgICAgIH0JCQ0KICAgICAvLyAgIHdkLmRpYWxvZygiY2xvc2UiKTsNCgkvLwkkKCcjd29ya2Zsb3dkaWFsb2cnKS5odG1sKCcnKTsNCiAgICB9DQogIH0gY2F0Y2goZXJyKSB7DQogICBhbGVydChlcnIpOw0KICB9DQp9DQoNCmZ1bmN0aW9uIFdvcmtmbG93SW5pdChTZXNzaW9uSUQpDQp7DQogICQoJyNXb3JrZmxvd0ljb24nKS51bmJpbmQoJ2NsaWNrJyk7DQogICQoJyNXb3JrZmxvd0ljb24nKS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKCl7V29ya2Zsb3dDbGljayhTZXNzaW9uSUQpO30pOw0KfQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21532225" offset="0" length="1387" />
          <PacketInfo time="21532225" offset="1387" length="1398" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="324" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/addlink.js" url="http://ueatworkuat.maxprocessing.com/script/addlink.js" ip="192.168.250.11" port="8080" connectionId="5" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:47.970+05:30" startTime="21532147" endTime="21532240">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvYWRkbGluay5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyMyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzQ1Mw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMw0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjMgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMzQ1Mw0KQWdlOiAzNTY0MQ0KVmlhOiAxLjEgaW5kLW1ocDJsZnAwMDENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZnVuY3Rpb24gYWRkTGlua1dpbmRvdyh1cmwsY2Ipew0KICAgICAgIA0KIHZhciBkaWFsb2dCb3hEaXYgPSAiPGRpdiBpZD0nZGlhbG9nX0FkZExpbmsnIHRpdGxlPSdQb2xpY3kvUXVvdGUvQ2xhaW0gU2VhcmNoJz48L2Rpdj4iOw0KDQoJaWYoICQoICIjZGlhbG9nX0FkZExpbmsiICkubGVuZ3RoID09IDAgKSB7DQoJCSQoICIjcmlnaHRDb2x1bW4iICkuYXBwZW5kKCBkaWFsb2dCb3hEaXYgKTsNCgl9DQoNCg0KICAkKCBmdW5jdGlvbigpIHsNCgkJJCggIiNkaWFsb2dfQWRkTGluayIgKS5kaWFsb2coew0KCQkJYXV0b09wZW46IGZhbHNlLA0KCQkJd2lkdGg6IDUwMCwNCgkJCW1vZGFsOiB0cnVlLA0KCQkJcmVzaXphYmxlOiBmYWxzZSwNCgkJCXJlc2l6ZTogImF1dG8iDQoJCX0pOw0KCX0pOw0KDQoJCWRlc2MgPSAiUGxlYXNlIGVudGVyIGEgcmVmZXJlbmNlIG51bWJlciwgbmFtZSBvciBhZGRyZXNzOiI7DQoJDQogICAgICAgdmFyIGh0bWwgPSc8ZGl2IGlkPV9fY29tbWVudD4nK2Rlc2MrJzwvZGl2PlxuJw0KICAgICAgICAgKyAiPHRhYmxlIHN0eWxlPSd3aWR0aDoxMDAlO3RleHQtYWxpZ246Y2VudGVyOyc+IFxuIg0KCSArICI8dHIgY2xhc3M9Y29kZXJvdz4gXG4iDQoJICsgIjx0ZCBjb2xzcGFuPTI+PGlucHV0IG5hbWU9J0NvZGUnIHN0eWxlPSd3aWR0aDo5MCUnIHR5cGU9J3RleHQnIGlkPSdDb2RlJy8+PC90ZD4gXG4iDQogCSArICI8L3RyPiBcbiINCgkgKyAiPHRyIGNsYXNzPWxpbmtwcm9ncmVzc2JhciBzdHlsZT0nZGlzcGxheTpub25lOyB0ZXh0LWFsaWduOmNlbnRlcjsnPiBcbiINCgkgKyAiPHRkIGNvbHNwYW49Mj48aW1nIHN0eWxlPSdhbGlnbjpjZW50ZXInIHNyYz0nLi4vLi4vaW1hZ2VzL3Byb2dyZXNzYmFyLmdpZic+PC90ZD4gXG4iDQoJICsgIjwvdHI+IFxuIg0KCSArICI8L3RhYmxlPiBcbiINCgkgKyAiPGRpdiBzdHlsZT0nbWFyZ2luLXRvcDoyMHB4OyBtYXJnaW4tYm90dG9tOjIwcHgnPiINCgkgKyAiPGlucHV0IHN0eWxlPSdXSURUSDogOTBweDsgSEVJR0hUOiAyMnB4JyBpZD1fX0Nsb3NlTGlua1dpbmRvdyB0aXRsZT0nQ2xpY2sgaGVyZSB0byBjYW5jZWwgc2VhcmNoLicgdmFsdWU9J0NhbmNlbCcgdHlwZT0nYnV0dG9uJyBuYW1lPV9fQ2xvc2VMaW5rV2luZG93PlxuIg0KCSArICI8aW5wdXQgc3R5bGU9J1dJRFRIOiA4MHB4OyBIRUlHSFQ6IDIycHgnIGlkPV9fQWRkTGluayB0aXRsZT0nQ2xpY2sgaGVyZSB0byBhZGQgbGluay4nIHZhbHVlPSdBZGQnIHR5cGU9J2J1dHRvbicgbmFtZT1fX0FkZExpbms+XG4iDQoJICsgIjwvZGl2PiI7DQoJCQ0KCQkNCgkgdmFyIGRpYWxvZ0JveCA9ICQoICIjZGlhbG9nX0FkZExpbmsiICk7DQoJZGlhbG9nQm94Lmh0bWwoIGh0bWwgKTsNCg0KCQ0KICAgICAgICAgJCgnI0NvZGUnLGRpYWxvZ0JveCkuYXV0b2NvbXBsZXRlKCdxdWV1ZXMubWF4JywNCiAgICAgICAgICB7c2VsZWN0Rmlyc3Q6IGZhbHNlLA0KICAgICAgICAgIGV4dHJhUGFyYW1zOiB7U1VCUFJPQzogJ0dFVENPREVMSVNUJywgUHJlcHJvY2VzczogJ2ZhbHNlJ30NCiAgICAgICAgICB9DQogICAgICAgICApOyAgDQoJCSANCiAgICAgICAgJCggJyNkaWFsb2dfQWRkTGluaycpLmZpbmQoJyNfX0FkZExpbmsnKS5jbGljayggZnVuY3Rpb24oKSB7DQogICAgICAgICAgIHR4dD1kaWFsb2dCb3guZmluZCgnI0NvZGUnKS5zZXJpYWxpemUoKTsNCiAgICAgICAgICAgQ29tbXVuaWNhdGlvbi5DdXN0b21SZXF1ZXN0KHVybCsnJicrdHh0LCANCiAgICAgICAgICAgICAgZnVuY3Rpb24ocmVzcG9uc2UpIHsNCgkgIAlpZiAoY2IpIHsgICAgICAgICAgICAgICAgICAgICAgIA0KCQkgIHZhciByID0gY2IocmVzcG9uc2UpOw0KCSAgCSAgaWYgKHIhPScnKSByZXNwb25zZT1yOw0KCQl9DQogICAgICAgICAgICAgfSkNCiAgCSAgIGNsb3NlTGlua1dpbmRvdygpOw0KICAgICAgICB9KTsNCiAgICAgICAgICAgIA0KICAgICAgICAkKCcjZGlhbG9nX0FkZExpbmsnKS5maW5kKCcjX19DbG9zZUxpbmtXaW5kb3cnKS5jbGljayggZnVuY3Rpb24oKSB7DQoJICAgICAgICAgY2xvc2VMaW5rV2luZG93KCk7DQogICAgICAgICAgICQoJyNsaW5rX2FkZGl0aW9uJykucmVtb3ZlKCk7DQogICAgICAgIH0pOw0KCQkNCgkJJCgnI2RpYWxvZ19BZGRMaW5rJykudW5iaW5kKCdrZXlkb3duJyk7DQogICAgICAgICQoJyNkaWFsb2dfQWRkTGluaycpLmtleWRvd24oZnVuY3Rpb24oZXZlbnQpew0KCSAgICAgIHZhciBrZXljb2RlID0gKGV2ZW50LmtleUNvZGUgPyBldmVudC5rZXlDb2RlIDogZXZlbnQud2hpY2gpOw0KCSAgICAgIGlmKGtleWNvZGUgPT0gJzEzJyl7IA0KCQkkKCAnI2RpYWxvZ19BZGRMaW5rJykuZmluZCgnI19fQWRkTGluaycpLmNsaWNrKCk7DQoJfQ0KIA0KfSk7DQoNCiAJZGlhbG9nQm94LmRpYWxvZyggIm9wZW4iICk7DQoJICQoJyNDb2RlJyxkaWFsb2dCb3gpLmZvY3VzKCk7DQp9DQoNCmZ1bmN0aW9uIGNsb3NlTGlua1dpbmRvdygpIHsNCgl2YXIgZGlhbG9nQm94ID0gJCggIiNkaWFsb2dfQWRkTGluayIgKTsNCglkaWFsb2dCb3guZGlhbG9nKCAiY2xvc2UiICk7DQp9DQoNCmZ1bmN0aW9uIGFkZExpbmsoZm9ybSwgdXJsLCBjYikgew0KICAgICByZXR1cm47DQoJdmFyIGlmcm07CQ0KCQ0KCWlmKCAkKCAiI2xpbmtfYWRkaXRpb24iICkubGVuZ3RoID09IDAgKSB7CQ0KCQl2YXIgaWZyYW1lQXR0ciA9ICJuYW1lPVwibGlua19hZGRpdGlvblwiIg0KCQkrICIgaWQ9XCJsaW5rX2FkZGl0aW9uXCIiDQoJCSsgIiBzdHlsZT1cIndpZHRoOiAwcHg7IGhlaWdodDogMHB4OyBib3JkZXI6IDBweDsgXCIiOw0KCQlpZnJtID0gJCggIjxpZnJhbWUgIiArIGlmcmFtZUF0dHIgKyAiIC8+ICIpLmFwcGVuZFRvKCJib2R5Iik7IA0KCQlpZnJtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaWZyYW1lIik7IA0KCX0NCgl2YXIgaWZybW5lc3MgPSAkKCAiI2xpbmtfYWRkaXRpb24iICk7DQoNCglpZnJtbmVzcy5sb2FkKCBmdW5jdGlvbigpIHsNCgkJaWZybW5lc3MudW5iaW5kKCJsb2FkIik7DQoJCXZhciByZXNwb25zZSA9IGlmcm1uZXNzLmNvbnRlbnRzKCkuZmluZCggJ2JvZHknICkuaHRtbCgpOyANCg0KCQkkKCcjTGlua1NlYXJjaEZvcm0gLmxpbmtwcm9ncmVzc2JhcicpLmhpZGUoKTsJCQ0KCQkNCiAgICAgICAgICAgICAgICB0cnkgew0KCSAgCQlpZiAoY2IpIHsNCgkJCQl2YXIgciA9IGNiKHJlc3BvbnNlKTsNCgkJCQlpZiAociE9JycpIHJlc3BvbnNlPXI7DQoJCQl9DQoJCQkkKCcjTGlua1NlYXJjaEZvcm0gI19fY29tbWVudCcpLmh0bWwocmVzcG9uc2UpOw0KCQkJJCgnI0xpbmtTZWFyY2hGb3JtICNfX0Nsb3NlTGlua1dpbmRvdycpLnZhbCgnT0snKTsJCQ0KCQkJJCgnI0xpbmtTZWFyY2hGb3JtICNfX0Nsb3NlTGlua1dpbmRvdycpLnNob3coKTsJCQ0KCQl9IGNhdGNoKGVyKSB7IGFsZXJ0KGVyKX0NCiAgICAgICAgICAgICAgIA0KDQoJfSk7CQ0KfQ0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21532240" offset="0" length="348" />
          <PacketInfo time="21532256" offset="348" length="3453" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="326" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/pol.js" url="http://ueatworkuat.maxprocessing.com/script/pol.js" ip="192.168.250.11" port="8080" connectionId="6" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:47.976+05:30" startTime="21532147" endTime="21532256">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvcG9sLmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyMyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjI4MA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMw0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjMgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMjI4MA0KQWdlOiAzNTY0MQ0KVmlhOiAxLjEgaW5kLW1ocDJsZnAwMDENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UG9sUG9wdXAgPSBuZXcgZnVuY3Rpb24oKSB7DQogIHJldHVybiB7DQogICAgdXNlUG9wdXAgOiBmYWxzZSwNCiAgICBwb3B1cCA6IG51bGwsDQogICAgb3BlbjogZnVuY3Rpb24oU2Vzc2lvbklELCBPcGVuSXRlbUlEKQ0KICAgIHsNCiAgICAgICB2YXIgdXJsID0gJ3BvbHdpbmRvdy5odG0/SUQ9JytTZXNzaW9uSUQrJyZDTE1JRD0nK09wZW5JdGVtSUQ7DQogICAgICAgaWYgKFBvbFBvcHVwLnBvcHVwKSB7DQoNCiAgICAgICAgIGlmIChQb2xQb3B1cC5wb3B1cC5jbG9zZWQpIHsNCiAgICAgICAgICAgUG9sUG9wdXAucG9wdXA9bnVsbDsNCiAgICAgICAgIH0NCg0KICAgICAgIH0NCiAgICAgICBpZiAoIVBvbFBvcHVwLnBvcHVwKSBQb2xQb3B1cC5wb3B1cD13aW5kb3cub3Blbih1cmwsICdfYmxhbmsnLCAnaGVpZ2h0PTUwMCx3aWR0aD03ODAsbG9jYXRpb249MSxtZW51YmFyPTAscmVzaXphYmxlPTEsc2Nyb2xsYmFycz0xLHRpdGxlYmFyPTEsdG9vbGJhcj0wLGRpcmVjdG9yaWVzPTEnKTsNCiAgICAgICBlbHNlIFBvbFBvcHVwLnBvcHVwLmZvY3VzKCk7DQogICAgICAgcmV0dXJuIHRydWU7DQogICAgfSwNCiAgICBjbG9zZTogZnVuY3Rpb24oKQ0KICAgIHsNCiAgICAgIGlmIChQb2xQb3B1cC5wb3B1cCkgew0KICAgICAgICBQb2xQb3B1cC5wb3B1cC5jbG9zZSgpOw0KICAgICAgICBQb2xQb3B1cC5wb3B1cD1udWxsOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIFBvbENsaWNrKFNlc3Npb25JRCwgT3Blbkl0ZW1JRCwgQ2FsbEJhY2spDQp7DQogIHRyeSB7DQogICAgaWYgKFBvbFBvcHVwLnVzZVBvcHVwKSB7DQogICAgICBQb2xQb3B1cC5vcGVuKFNlc3Npb25JRCwgT3Blbkl0ZW1JRCk7DQogICAgICByZXR1cm47DQogICAgfQ0KDQogICAgdmFyIHdkPSQoIiNwb2xkaWFsb2ciKTsNCiAgICBpZiAod2QubGVuZ3RoPT0wKSB7DQogICAgICAkKCcjbWlkZGxlJykuYmVmb3JlKCc8ZGl2IGlkPXBvbGRpYWxvZz48L2Rpdj4nKTsNCiAgICAgIHdkPSQoIiNwb2xkaWFsb2ciKTsNCiAgICAgIHdkLmRpYWxvZyh7DQogICAgICAgIGF1dG9PcGVuOiBmYWxzZSwNCiAgICAgICAgd2lkdGg6IDc1MCwNCiAgICAgICAgbW9kYWw6IGZhbHNlLA0KICAgICAgICByZXNpemFibGU6IGZhbHNlLA0KICAgICAgICBhdXRvUmVzaXplOiB0cnVlLA0KICAgICAgICBjYW5NaW5pbWl6ZTogdHJ1ZSwNCiAgICAgICAgY2FuTWF4aW1pemU6IHRydWUsDQogICAgICAgIGZ1bmNNYXhpbWl6ZTogZnVuY3Rpb24odCkgew0KICAgICAgICAgIGlmIChQb2xQb3B1cC5vcGVuKFNlc3Npb25JRCkpIHsNCiAgICAgICAgICAgIFBvbFBvcHVwLnVzZVBvcHVwPXRydWU7DQogICAgICAgICAgICAkKCcjcG9sZGlhbG9nJykuZGlhbG9nKCJjbG9zZSIpOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB0aXRsZTogIkNsYWltIFN0dWZmIg0KICAgICAgfSk7DQoNCiAgICAgICQoIiNwb2xkaWFsb2ciKS5kaWFsb2coIm9wZW4iKS5wYXJlbnQoJ2RpdicpLmNzcygndG9wJywnMTAwcHgnKTsNCiAgICAgIEN1c3RvbVRlbXBsYXRlKCdjbGFpbXNfZWdsX3BhZ2UxLm1heD9wcmVwcm9jZXNzPXRydWUmaWQ9JytTZXNzaW9uSUQrJyZDTE1JRD0nK09wZW5JdGVtSUQsIHdkLCAnUG9sU2NyaXB0JywgZnVuY3Rpb24oKSB7DQogICAgICAgICQoIiNwb2xkaWFsb2ciKS5kaWFsb2coIm9wZW4iKTsNCiAgICAgICAgaWYgKFBvbFNjcmlwdC5PbkxvYWQpIFBvbFNjcmlwdC5PbkxvYWQoKTsNCiAgICAgICAgLy9pZiAodHlwZW9mIE9wZW5JdGVtSUQhPSd1bmRlZmluZWQnKSBQb2xTY3JpcHQuRWRpdEl0ZW0oT3Blbkl0ZW1JRCxDYWxsQmFjayk7DQogICAgICB9KTsNCiAgICB9IGVsc2Ugew0KICAgICAgaWYgKCQoJyNwb2xkaWFsb2cnKS5wYXJlbnRzKCIudWktZGlhbG9nIikuaXMoIjp2aXNpYmxlIikpew0KICAgICAgICB3ZC5kaWFsb2coImNsb3NlIik7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB3ZC5kaWFsb2coIm9wZW4iKTsNCiAgICAgICAgaWYgKFBvbFNjcmlwdC5SZWxvYWQpIFBvbFNjcmlwdC5SZWxvYWQoKTsNCiAgICAgICAgLy9pZiAodHlwZW9mIE9wZW5JdGVtSUQhPSd1bmRlZmluZWQnKSBQb2xTY3JpcHQuRWRpdEl0ZW0oT3Blbkl0ZW1JRCxDYWxsQmFjayk7DQogICAgICB9DQogICAgIC8vICAgd2QuZGlhbG9nKCJjbG9zZSIpOw0KCS8vCSQoJyNwb2xkaWFsb2cnKS5odG1sKCcnKTsNCiAgICB9DQogIH0gY2F0Y2goZXJyKSB7DQogICBhbGVydChlcnIpOw0KICB9DQp9</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21532256" offset="0" length="1387" />
          <PacketInfo time="21532428" offset="1387" length="1241" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="344" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/jquery.dialog.extra.js" url="http://ueatworkuat.maxprocessing.com/script/jquery.dialog.extra.js" ip="192.168.250.11" port="8080" connectionId="5" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:47.980+05:30" startTime="21532272" endTime="21532381">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvanF1ZXJ5LmRpYWxvZy5leHRyYS5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTA1MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjQgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMTA1MDINCkFnZTogMzU2NDENClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21532381" offset="0" length="4510" />
          <PacketInfo time="21532381" offset="4510" length="2774" />
          <PacketInfo time="21532428" offset="7284" length="1387" />
          <PacketInfo time="21532428" offset="8671" length="1387" />
          <PacketInfo time="21534518" offset="10058" length="793" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="352" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/custom.js" url="http://ueatworkuat.maxprocessing.com/script/custom.js" ip="192.168.250.11" port="8080" connectionId="7" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:47.985+05:30" startTime="21532272" endTime="21532412">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvY3VzdG9tLmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyMyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAxNTcx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMw0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjMgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMTAxNTcxDQpBZ2U6IDM1NjQyDQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21532412" offset="0" length="4161" />
          <PacketInfo time="21532412" offset="4161" length="4161" />
          <PacketInfo time="21532459" offset="8322" length="1387" />
          <PacketInfo time="21532459" offset="9709" length="1387" />
          <PacketInfo time="21534534" offset="11096" length="16384" />
          <PacketInfo time="21536577" offset="27480" length="16384" />
          <PacketInfo time="21536608" offset="43864" length="16384" />
          <PacketInfo time="21536624" offset="60248" length="16384" />
          <PacketInfo time="21536640" offset="76632" length="16384" />
          <PacketInfo time="21536640" offset="93016" length="8905" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="378" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/tmpl.js" url="http://ueatworkuat.maxprocessing.com/script/tmpl.js" ip="192.168.250.11" port="8080" connectionId="6" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:47.994+05:30" startTime="21532428" endTime="21534534">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvdG1wbC5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyMyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ODc4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyMw0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjMgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogODc4DQpBZ2U6IDM1NjQyDQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZnVuY3Rpb24gVG1wbE5vSGlkZURpdihyVmFsdWUsIGJveCl7DQoNCglpZihyVmFsdWU9PTEpew0KCSAkKCcjJytib3gpLnNob3coKTsNCgl9ZWxzZXsNCgkgJCgnIycrYm94KS5oaWRlKCk7DQoJfQ0KfSANCg0KZnVuY3Rpb24gVG1wbFllc0hpZGVEaXYoclZhbHVlLCBib3gpew0KDQoJaWYoclZhbHVlPT0wKXsNCgkgJCgnIycrYm94KS5zaG93KCk7DQoJfWVsc2V7DQoJICQoJyMnK2JveCkuaGlkZSgpOw0KCX0NCn0gDQoNCmZ1bmN0aW9uIFRtcGxSZWNvcmRzRHJpdmVySGlkZShyVmFsdWUsIGJveCl7DQoNCglpZihyVmFsdWU9PTEpew0KCQkkKCcjJytib3grJ19Sb3cxJykuc2hvdygpOw0KCQkkKCcjJytib3grJ19Sb3cyJykuc2hvdygpOw0KCX1lbHNlew0KCQkkKCcjJytib3grJ19Sb3cxJykuaGlkZSgpOw0KCQkkKCcjJytib3grJ19Sb3cyJykuaGlkZSgpOw0KCX0NCn0gDQoNCmZ1bmN0aW9uIFRtcGxEcml2ZXJzVHJhaW5pbmdIaWRlKHJWYWx1ZSwgYm94KXsNCg0KCWlmKHJWYWx1ZT09MSl7DQoJCSQoJyMnK2JveCsnX1JvdzEnKS5zaG93KCk7DQoJfWVsc2V7DQoJCSQoJyMnK2JveCsnX1JvdzEnKS5oaWRlKCk7DQoJfQ0KfSANCg0KZnVuY3Rpb24gVG1wbEJveGVzKGNsYXNzTmFtZSkNCnsNCglpZigkKCcuJytjbGFzc05hbWUrJzpjaGVja2VkJykubGVuZ3RoPjApDQoJICAkKCcuJytjbGFzc05hbWUrJycpLmVhY2goZnVuY3Rpb24oKXtHbG9iYWwuR2V0Q29udHJvbCgkKHRoaXMpLmF0dHIoJ2lkJykpLlNldFJlcXVpcmVkKCdmYWxzZScpfSkNCiAgZWxzZQ0KCSAgJCgnLicrY2xhc3NOYW1lKycnKS5lYWNoKGZ1bmN0aW9uKCl7R2xvYmFsLkdldENvbnRyb2woJCh0aGlzKS5hdHRyKCdpZCcpKS5TZXRSZXF1aXJlZCgndHJ1ZScpfSkNCn0=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21534518" offset="0" length="1225" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="413" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxdata.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxdata.js" ip="192.168.250.11" port="8080" connectionId="7" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.000+05:30" startTime="21536655" endTime="21536733">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4ZGF0YS5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ODgwNzc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjQgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogODgwNzcNCkFnZTogMzU2NDUNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21536733" offset="0" length="1387" />
          <PacketInfo time="21536749" offset="1387" length="5548" />
          <PacketInfo time="21536764" offset="6935" length="1387" />
          <PacketInfo time="21536780" offset="8322" length="1387" />
          <PacketInfo time="21536858" offset="9709" length="1387" />
          <PacketInfo time="21536858" offset="11096" length="1387" />
          <PacketInfo time="21536889" offset="12483" length="1387" />
          <PacketInfo time="21536889" offset="13870" length="1387" />
          <PacketInfo time="21536905" offset="15257" length="2774" />
          <PacketInfo time="21536936" offset="18031" length="1387" />
          <PacketInfo time="21536936" offset="19418" length="1387" />
          <PacketInfo time="21537217" offset="20805" length="16384" />
          <PacketInfo time="21537513" offset="37189" length="16384" />
          <PacketInfo time="21538028" offset="53573" length="16384" />
          <PacketInfo time="21538044" offset="69957" length="16384" />
          <PacketInfo time="21538059" offset="86341" length="2085" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="416" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxcore.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxcore.js" ip="192.168.250.11" port="8080" connectionId="8" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.008+05:30" startTime="21536655" endTime="21536749">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4Y29yZS5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzUwMjA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjUgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMzUwMjANCkFnZTogMzU2NDQNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21536749" offset="0" length="5548" />
          <PacketInfo time="21536780" offset="5548" length="1387" />
          <PacketInfo time="21536780" offset="6935" length="1387" />
          <PacketInfo time="21536858" offset="8322" length="1387" />
          <PacketInfo time="21536858" offset="9709" length="1387" />
          <PacketInfo time="21536905" offset="11096" length="5548" />
          <PacketInfo time="21536936" offset="16644" length="1387" />
          <PacketInfo time="21536936" offset="18031" length="1387" />
          <PacketInfo time="21537217" offset="19418" length="13870" />
          <PacketInfo time="21537513" offset="33288" length="2081" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="422" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/uetaxonomy.js" url="http://ueatworkuat.maxprocessing.com/script/uetaxonomy.js" ip="192.168.250.11" port="8080" connectionId="5" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.013+05:30" startTime="21536624" endTime="21536780">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvdWV0YXhvbm9teS5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzY1MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjUgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogNzY1MQ0KQWdlOiAzNTY0Mw0KVmlhOiAxLjEgaW5kLW1ocDJsZnAwMDENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21536780" offset="0" length="1387" />
          <PacketInfo time="21536780" offset="1387" length="2774" />
          <PacketInfo time="21536827" offset="4161" length="1387" />
          <PacketInfo time="21536827" offset="5548" length="1387" />
          <PacketInfo time="21536827" offset="6935" length="1064" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="428" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/ace/ace.js" url="http://ueatworkuat.maxprocessing.com/ace/ace.js" ip="192.168.250.11" port="8080" connectionId="6" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.019+05:30" startTime="21536624" endTime="21536796">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9hY2UvYWNlLmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NTA1NDgy</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjUgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogNTA1NDgyDQpBZ2U6IDM1NjQzDQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>LyogKioqKiogQkVHSU4gTElDRU5TRSBCTE9DSyAqKioqKgogKiBEaXN0cmlidXRlZCB1bmRlciB0aGUgQlNEIGxpY2Vuc2U6CiAqCiAqIENvcHlyaWdodCAoYykgMjAxMCwgQWpheC5vcmcgQi5WLgogKiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiAKICogUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0CiAqIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmUgbWV0OgogKiAgICAgKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodAogKiAgICAgICBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCiAqICAgICAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0CiAqICAgICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUKICogICAgICAgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KICogICAgICogTmVpdGhlciB0aGUgbmFtZSBvZiBBamF4Lm9yZyBCLlYuIG5vciB0aGUKICogICAgICAgbmFtZXMgb2YgaXRzIGNvbnRyaWJ1dG9ycyBtYXkgYmUgdXNlZCB0byBlbmRvcnNlIG9yIHByb21vdGUgcHJvZHVjdHMKICogICAgICAgZGVyaXZlZCBmcm9tIHRoaXMgc29mdHdhcmUgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uCiAqIAogKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTICJBUyBJUyIgQU5ECiAqIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVECiAqIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUKICogRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgQUpBWC5PUkcgQi5WLiBCRSBMSUFCTEUgRk9SIEFOWQogKiBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUwogKiAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7CiAqIExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORAogKiBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVAogKiAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUwogKiBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4KICoKICogKioqKiogRU5EIExJQ0VOU0UgQkxPQ0sgKioqKiogKi8KCihmdW5jdGlvbigpIHsKCnZhciBBQ0VfTkFNRVNQQUNFID0gImFjZSI7Cgp2YXIgZ2xvYmFsID0gKGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHRoaXM7Cn0pKCk7CgoKaWYgKCFBQ0VfTkFNRVNQQUNFICYmIHR5cGVvZiByZXF1aXJlanMgIT09ICJ1bmRlZmluZWQiKQogICAgcmV0dXJuOwoKCnZhciBfZGVmaW5lID0gZnVuY3Rpb24obW9kdWxlLCBkZXBzLCBwYXlsb2FkKSB7CiAgICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3N0cmluZycpIHsKICAgICAgICBpZiAoX2RlZmluZS5vcmlnaW5hbCkKICAgICAgICAgICAgX2RlZmluZS5vcmlnaW5hbC5hcHBseSh3aW5kb3csIGFyZ3VtZW50cyk7CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2Ryb3BwaW5nIG1vZHVsZSBiZWNhdXNlIGRlZmluZSB3YXNuXCd0IGEgc3RyaW5nLicpOwogICAgICAgICAgICBjb25zb2xlLnRyYWNlKCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PSAyKQogICAgICAgIHBheWxvYWQgPSBkZXBzOwoKICAgIGlmICghX2RlZmluZS5tb2R1bGVzKQogICAgICAgIF9kZWZpbmUubW9kdWxlcyA9IHt9OwoKICAgIF9kZWZpbmUubW9kdWxlc1ttb2R1bGVdID0gcGF5bG9hZDsKfTsKdmFyIF9yZXF1aXJlID0gZnVuY3Rpb24ocGFyZW50SWQsIG1vZHVsZSwgY2FsbGJhY2spIHsKICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobW9kdWxlKSA9PT0gIltvYmplY3QgQXJyYXldIikgewogICAgICAgIHZhciBwYXJhbXMgPSBbXTsKICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IG1vZHVsZS5sZW5ndGg7IGkgPCBsOyArK2kpIHsKICAgICAgICAgICAgdmFyIGRlcCA9IGxvb2t1cChwYXJlbnRJZCwgbW9kdWxlW2ldKTsKICAgICAgICAgICAgaWYgKCFkZXAgJiYgX3JlcXVpcmUub3JpZ2luYWwpCiAgICAgICAgICAgICAgICByZXR1cm4gX3JlcXVpcmUub3JpZ2luYWwuYXBwbHkod2luZG93LCBhcmd1bWVudHMpOwogICAgICAgICAgICBwYXJhbXMucHVzaChkZXApOwogICAgICAgIH0KICAgICAgICBpZiAoY2FsbGJhY2spIHsKICAgICAgICAgICAgY2FsbGJhY2suYXBwbHkobnVsbCwgcGFyYW1zKTsKICAgICAgICB9CiAgICB9CiAgICBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSAnc3RyaW5nJykgewogICAgICAgIHZhciBwYXlsb2FkID0gbG9va3VwKHBhcmVudElkLCBtb2R1bGUpOwogICAgICAgIGlmICghcGF5bG9hZCAmJiBfcmVxdWlyZS5vcmlnaW5hbCkKICAgICAgICAgICAgcmV0dXJuIF9yZXF1aXJlLm9yaWdpbmFsLmFwcGx5KHdpbmRvdywgYXJndW1lbnRzKTsKCiAgICAgICAgaWYgKGNhbGxiYWNrKSB7CiAgICAgICAgICAgIGNhbGxiYWNrKCk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gcGF5bG9hZDsKICAgIH0KICAgIGVsc2UgewogICAgICAgIGlmIChfcmVxdWlyZS5vcmlnaW5hbCkKICAgICAgICAgICAgcmV0dXJuIF9yZXF1aXJlLm9yaWdpbmFsLmFwcGx5KHdpbmRvdywgYXJndW1lbnRzKTsKICAgIH0KfTsKCnZhciBub3JtYWxpemVNb2R1bGUgPSBmdW5jdGlvbihwYXJlbnRJZCwgbW9kdWxlTmFtZSkgewogICAgaWYgKG1vZHVsZU5hbWUuaW5kZXhPZigiISIpICE9PSAtMSkgewogICAgICAgIHZhciBjaHVua3MgPSBtb2R1bGVOYW1lLnNwbGl0KCIhIik7CiAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZU1vZHVsZShwYXJlbnRJZCwgY2h1bmtzWzBdKSArICIhIiArIG5vcm1hbGl6ZU1vZHVsZShwYXJlbnRJZCwgY2h1bmtzWzFdKTsKICAgIH0KICAgIGlmIChtb2R1bGVOYW1lLmNoYXJBdCgwKSA9PSAiLiIpIHsKICAgICAgICB2YXIgYmFzZSA9IHBhcmVudElkLnNwbGl0KCIvIikuc2xpY2UoMCwgLTEpLmpvaW4oIi8iKTsKICAgICAgICBtb2R1bGVOYW1lID0gYmFzZSArICIvIiArIG1vZHVsZU5hbWU7CgogICAgICAgIHdoaWxlKG1vZHVsZU5hbWUuaW5kZXhPZigiLiIpICE9PSAtMSAmJiBwcmV2aW91cyAhPSBtb2R1bGVOYW1lKSB7CiAgICAgICAgICAgIHZhciBwcmV2aW91cyA9IG1vZHVsZU5hbWU7CiAgICAgICAgICAgIG1vZHVsZU5hbWUgPSBtb2R1bGVOYW1lLnJlcGxhY2UoL1wvXC5cLy8sICIvIikucmVwbGFjZSgvW15cL10rXC9cLlwuXC8vLCAiIik7CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBtb2R1bGVOYW1lOwp9Owp2YXIgbG9va3VwID0gZnVuY3Rpb24ocGFyZW50SWQsIG1vZHVsZU5hbWUpIHsKCiAgICBtb2R1bGVOYW1lID0gbm9ybWFsaXplTW9kdWxlKHBhcmVudElkLCBtb2R1bGVOYW1lKTsKCiAgICB2YXIgbW9kdWxlID0gX2RlZmluZS5tb2R1bGVzW21vZHVsZU5hbWVdOwogICAgaWYgKCFtb2R1bGUpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgIH0KCiAgICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHZhciBleHBvcnRzID0ge307CiAgICAgICAgdmFyIG1vZCA9IHsKICAgICAgICAgICAgaWQ6IG1vZHVsZU5hbWUsCiAgICAgICAgICAgIHVyaTogJycsCiAgICAgICAgICAgIGV4cG9ydHM6IGV4cG9ydHMsCiAgICAgICAgICAgIHBhY2thZ2VkOiB0cnVlCiAgICAgICAgfTsKCiAgICAgICAgdmFyIHJlcSA9IGZ1bmN0aW9uKG1vZHVsZSwgY2FsbGJhY2spIHsKICAgICAgICAgICAgcmV0dXJuIF9yZXF1aXJlKG1vZHVsZU5hbWUsIG1vZHVsZSwgY2FsbGJhY2spOwogICAgICAgIH07CgogICAgICAgIHZhciByZXR1cm5WYWx1ZSA9IG1vZHVsZShyZXEsIGV4cG9ydHMsIG1vZCk7CiAgICAgICAgZXhwb3J0cyA9IHJldHVyblZhbHVlIHx8IG1vZC5leHBvcnRzOwogICAgICAgIF9kZWZpbmUubW9kdWxlc1ttb2R1bGVOYW1lXSA9IGV4cG9ydHM7CiAgICAgICAgcmV0dXJuIGV4cG9ydHM7CiAgICB9CgogICAgcmV0dXJuIG1vZHVsZTsKfTsKCmZ1bmN0aW9uIGV4cG9ydEFjZShucykgewogICAgdmFyIHJlcXVpcmUgPSBmdW5jdGlvbihtb2R1bGUsIGNhbGxiYWNrKSB7CiAgICAgICAgcmV0dXJuIF9yZXF1aXJlKCIiLCBtb2R1bGUsIGNhbGxiYWNrKTsKICAgIH07ICAgIAoKICAgIHZhciByb290ID0gZ2xvYmFsOwogICAgaWYgKG5zKSB7CiAgICAgICAgaWYgKCFnbG9iYWxbbnNdKQogICAgICAgICAgICBnbG9iYWxbbnNdID0ge307CiAgICAgICAgcm9vdCA9IGdsb2JhbFtuc107CiAgICB9CgogICAgaWYgKCFyb290LmRlZmluZSB8fCAhcm9vdC5kZWZpbmUucGFja2FnZWQpIHsKICAgICAgICBfZGVmaW5lLm9yaWdpbmFsID0gcm9vdC5kZWZpbmU7CiAgICAgICAgcm9vdC5kZWZpbmUgPSBfZGVmaW5lOwogICAgICAgIHJvb3QuZGVmaW5lLnBhY2thZ2VkID0gdHJ1ZTsKICAgIH0KCiAgICBpZiAoIXJvb3QucmVxdWlyZSB8fCAhcm9vdC5yZXF1aXJlLnBhY2thZ2VkKSB7CiAgICAgICAgX3JlcXVpcmUub3JpZ2luYWwgPSByb290LnJlcXVpcmU7CiAgICAgICAgcm9vdC5yZXF1aXJlID0gcmVxdWlyZTsKICAgICAgICByb290LnJlcXVpcmUucGFja2FnZWQgPSB0cnVlOwogICAgfQp9CgpleHBvcnRBY2UoQUNFX05BTUVTUEFDRSk7Cgp9KSgpOwoKYWNlLmRlZmluZSgnYWNlL2FjZScsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9maXhvbGRicm93c2VycycsICdhY2UvbGliL2RvbScsICdhY2UvbGliL2V2ZW50JywgJ2FjZS9lZGl0b3InLCAnYWNlL2VkaXRfc2Vzc2lvbicsICdhY2UvdW5kb21hbmFnZXInLCAnYWNlL3ZpcnR1YWxfcmVuZGVyZXInLCAnYWNlL211bHRpX3NlbGVjdCcsICdhY2Uvd29ya2VyL3dvcmtlcl9jbGllbnQnLCAnYWNlL2tleWJvYXJkL2hhc2hfaGFuZGxlcicsICdhY2UvcGxhY2Vob2xkZXInLCAnYWNlL21vZGUvZm9sZGluZy9mb2xkX21vZGUnLCAnYWNlL2NvbmZpZyddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgpyZXF1aXJlKCIuL2xpYi9maXhvbGRicm93c2VycyIpOwoKdmFyIGRvbSA9IHJlcXVpcmUoIi4vbGliL2RvbSIpOwp2YXIgZXZlbnQgPSByZXF1aXJlKCIuL2xpYi9ldmVudCIpOwoKdmFyIEVkaXRvciA9IHJlcXVpcmUoIi4vZWRpdG9yIikuRWRpdG9yOwp2YXIgRWRpdFNlc3Npb24gPSByZXF1aXJlKCIuL2VkaXRfc2Vzc2lvbiIpLkVkaXRTZXNzaW9uOwp2YXIgVW5kb01hbmFnZXIgPSByZXF1aXJlKCIuL3VuZG9tYW5hZ2VyIikuVW5kb01hbmFnZXI7CnZhciBSZW5kZXJlciA9IHJlcXVpcmUoIi4vdmlydHVhbF9yZW5kZXJlciIpLlZpcnR1YWxSZW5kZXJlcjsKdmFyIE11bHRpU2VsZWN0ID0gcmVxdWlyZSgiLi9tdWx0aV9zZWxlY3QiKS5NdWx0aVNlbGVjdDsKcmVxdWlyZSgiLi93b3JrZXIvd29ya2VyX2NsaWVudCIpOwpyZXF1aXJlKCIuL2tleWJvYXJkL2hhc2hfaGFuZGxlciIpOwpyZXF1aXJlKCIuL3BsYWNlaG9sZGVyIik7CnJlcXVpcmUoIi4vbW9kZS9mb2xkaW5nL2ZvbGRfbW9kZSIpOwpleHBvcnRzLmNvbmZpZyA9IHJlcXVpcmUoIi4vY29uZmlnIik7CmV4cG9ydHMucmVxdWlyZSA9IHJlcXVpcmU7CmV4cG9ydHMuZWRpdCA9IGZ1bmN0aW9uKGVsKSB7CiAgICBpZiAodHlwZW9mKGVsKSA9PSAic3RyaW5nIikgewogICAgICAgIHZhciBfaWQgPSBlbDsKICAgICAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChfaWQpOwogICAgICAgIGlmICghZWwpCiAgICAgICAgICAgIHRocm93ICJhY2UuZWRpdCBjYW4ndCBmaW5kIGRpdiAjIiArIF9pZDsKICAgIH0KCiAgICBpZiAoZWwuZW52ICYmIGVsLmVudi5lZGl0b3IgaW5zdGFuY2VvZiBFZGl0b3IpCiAgICAgICAgcmV0dXJuIGVsLmVudi5lZGl0b3I7CgogICAgdmFyIGRvYyA9IGV4cG9ydHMuY3JlYXRlRWRpdFNlc3Npb24oZG9tLmdldElubmVyVGV4dChlbCkpOwogICAgZWwuaW5uZXJIVE1MID0gJyc7CgogICAgdmFyIGVkaXRvciA9IG5ldyBFZGl0b3IobmV3IFJlbmRlcmVyKGVsKSk7CiAgICBuZXcgTXVsdGlTZWxlY3QoZWRpdG9yKTsKICAgIGVkaXRvci5zZXRTZXNzaW9uKGRvYyk7CgogICAgdmFyIGVudiA9IHsKICAgICAgICBkb2N1bWVudDogZG9jLAogICAgICAgIGVkaXRvcjogZWRpdG9yLAogICAgICAgIG9uUmVzaXplOiBlZGl0b3IucmVzaXplLmJpbmQoZWRpdG9yKQogICAgfTsKICAgIGV2ZW50LmFkZExpc3RlbmVyKHdpbmRvdywgInJlc2l6ZSIsIGVudi5vblJlc2l6ZSk7CiAgICBlbC5lbnYgPSBlZGl0b3IuZW52ID0gZW52OwogICAgcmV0dXJuIGVkaXRvcjsKfTsKZXhwb3J0cy5jcmVhdGVFZGl0U2Vzc2lvbiA9IGZ1bmN0aW9uKHRleHQsIG1vZGUpIHsKICAgIHZhciBkb2MgPSBuZXcgRWRpdFNlc3Npb24odGV4dCwgZG9jKTsKICAgIGRvYy5zZXRVbmRvTWFuYWdlcihuZXcgVW5kb01hbmFnZXIoKSk7CiAgICByZXR1cm4gZG9jOwp9CmV4cG9ydHMuRWRpdFNlc3Npb24gPSBFZGl0U2Vzc2lvbjsKZXhwb3J0cy5VbmRvTWFuYWdlciA9IFVuZG9NYW5hZ2VyOwp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9saWIvZml4b2xkYnJvd3NlcnMnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvcmVnZXhwJywgJ2FjZS9saWIvZXM1LXNoaW0nXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKcmVxdWlyZSgiLi9yZWdleHAiKTsKcmVxdWlyZSgiLi9lczUtc2hpbSIpOwoKfSk7CiAKYWNlLmRlZmluZSgnYWNlL2xpYi9yZWdleHAnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnIF0sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKICAgIHZhciByZWFsID0gewogICAgICAgICAgICBleGVjOiBSZWdFeHAucHJvdG90eXBlLmV4ZWMsCiAgICAgICAgICAgIHRlc3Q6IFJlZ0V4cC5wcm90b3R5cGUudGVzdCwKICAgICAgICAgICAgbWF0Y2g6IFN0cmluZy5wcm90b3R5cGUubWF0Y2gsCiAgICAgICAgICAgIHJlcGxhY2U6IFN0cmluZy5wcm90b3R5cGUucmVwbGFjZSwKICAgICAgICAgICAgc3BsaXQ6IFN0cmluZy5wcm90b3R5cGUuc3BsaXQKICAgICAgICB9LAogICAgICAgIGNvbXBsaWFudEV4ZWNOcGNnID0gcmVhbC5leGVjLmNhbGwoLygpPz8vLCAiIilbMV0gPT09IHVuZGVmaW5lZCwgLy8gY2hlY2sgYGV4ZWNgIGhhbmRsaW5nIG9mIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nIGdyb3VwcwogICAgICAgIGNvbXBsaWFudExhc3RJbmRleEluY3JlbWVudCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHggPSAvXi9nOwogICAgICAgICAgICByZWFsLnRlc3QuY2FsbCh4LCAiIik7CiAgICAgICAgICAgIHJldHVybiAheC5sYXN0SW5kZXg7CiAgICAgICAgfSgpOwoKICAgIGlmIChjb21wbGlhbnRMYXN0SW5kZXhJbmNyZW1lbnQgJiYgY29tcGxpYW50RXhlY05wY2cpCiAgICAgICAgcmV0dXJuOwogICAgUmVnRXhwLnByb3RvdHlwZS5leGVjID0gZnVuY3Rpb24gKHN0cikgewogICAgICAgIHZhciBtYXRjaCA9IHJlYWwuZXhlYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpLAogICAgICAgICAgICBuYW1lLCByMjsKICAgICAgICBpZiAoIHR5cGVvZihzdHIpID09ICdzdHJpbmcnICYmIG1hdGNoKSB7CiAgICAgICAgICAgIGlmICghY29tcGxpYW50RXhlY05wY2cgJiYgbWF0Y2gubGVuZ3RoID4gMSAmJiBpbmRleE9mKG1hdGNoLCAiIikgPiAtMSkgewogICAgICAgICAgICAgICAgcjIgPSBSZWdFeHAodGhpcy5zb3VyY2UsIHJlYWwucmVwbGFjZS5jYWxsKGdldE5hdGl2ZUZsYWdzKHRoaXMpLCAiZyIsICIiKSk7CiAgICAgICAgICAgICAgICByZWFsLnJlcGxhY2UuY2FsbChzdHIuc2xpY2UobWF0Y2guaW5kZXgpLCByMiwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAtIDI7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXJndW1lbnRzW2ldID09PSB1bmRlZmluZWQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaFtpXSA9IHVuZGVmaW5lZDsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy5feHJlZ2V4cCAmJiB0aGlzLl94cmVnZXhwLmNhcHR1cmVOYW1lcykgewogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBtYXRjaC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgIG5hbWUgPSB0aGlzLl94cmVnZXhwLmNhcHR1cmVOYW1lc1tpIC0gMV07CiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUpCiAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hbbmFtZV0gPSBtYXRjaFtpXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIWNvbXBsaWFudExhc3RJbmRleEluY3JlbWVudCAmJiB0aGlzLmdsb2JhbCAmJiAhbWF0Y2hbMF0ubGVuZ3RoICYmICh0aGlzLmxhc3RJbmRleCA+IG1hdGNoLmluZGV4KSkKICAgICAgICAgICAgICAgIHRoaXMubGFzdEluZGV4LS07CiAgICAgICAgfQogICAgICAgIHJldHVybiBtYXRjaDsKICAgIH07CiAgICBpZiAoIWNvbXBsaWFudExhc3RJbmRleEluY3JlbWVudCkgewogICAgICAgIFJlZ0V4cC5wcm90b3R5cGUudGVzdCA9IGZ1bmN0aW9uIChzdHIpIHsKICAgICAgICAgICAgdmFyIG1hdGNoID0gcmVhbC5leGVjLmNhbGwodGhpcywgc3RyKTsKICAgICAgICAgICAgaWYgKG1hdGNoICYmIHRoaXMuZ2xvYmFsICYmICFtYXRjaFswXS5sZW5ndGggJiYgKHRoaXMubGFzdEluZGV4ID4gbWF0Y2guaW5kZXgpKQogICAgICAgICAgICAgICAgdGhpcy5sYXN0SW5kZXgtLTsKICAgICAgICAgICAgcmV0dXJuICEhbWF0Y2g7CiAgICAgICAgfTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXROYXRpdmVGbGFncyAocmVnZXgpIHsKICAgICAgICByZXR1cm4gKHJlZ2V4Lmdsb2JhbCAgICAgPyAiZyIgOiAiIikgKwogICAgICAgICAgICAgICAocmVnZXguaWdub3JlQ2FzZSA/ICJpIiA6ICIiKSArCiAgICAgICAgICAgICAgIChyZWdleC5tdWx0aWxpbmUgID8gIm0iIDogIiIpICsKICAgICAgICAgICAgICAgKHJlZ2V4LmV4dGVuZGVkICAgPyAieCIgOiAiIikgKyAvLyBQcm9wb3NlZCBmb3IgRVM0OyBpbmNsdWRlZCBpbiBBUzMKICAgICAgICAgICAgICAgKHJlZ2V4LnN0aWNreSAgICAgPyAieSIgOiAiIik7CiAgICB9CgogICAgZnVuY3Rpb24gaW5kZXhPZiAoYXJyYXksIGl0ZW0sIGZyb20pIHsKICAgICAgICBpZiAoQXJyYXkucHJvdG90eXBlLmluZGV4T2YpIC8vIFVzZSB0aGUgbmF0aXZlIGFycmF5IG1ldGhvZCBpZiBhdmFpbGFibGUKICAgICAgICAgICAgcmV0dXJuIGFycmF5LmluZGV4T2YoaXRlbSwgZnJvbSk7CiAgICAgICAgZm9yICh2YXIgaSA9IGZyb20gfHwgMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChhcnJheVtpXSA9PT0gaXRlbSkKICAgICAgICAgICAgICAgIHJldHVybiBpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gLTE7CiAgICB9Cgp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9saWIvZXM1LXNoaW0nLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnIF0sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKZnVuY3Rpb24gRW1wdHkoKSB7fQoKaWYgKCFGdW5jdGlvbi5wcm90b3R5cGUuYmluZCkgewogICAgRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiBiaW5kKHRoYXQpIHsgLy8gLmxlbmd0aCBpcyAxCiAgICAgICAgdmFyIHRhcmdldCA9IHRoaXM7CiAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgIT0gImZ1bmN0aW9uIikgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJGdW5jdGlvbi5wcm90b3R5cGUuYmluZCBjYWxsZWQgb24gaW5jb21wYXRpYmxlICIgKyB0YXJnZXQpOwogICAgICAgIH0KICAgICAgICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTsgLy8gZm9yIG5vcm1hbCBjYWxsCiAgICAgICAgdmFyIGJvdW5kID0gZnVuY3Rpb24gKCkgewoKICAgICAgICAgICAgaWYgKHRoaXMgaW5zdGFuY2VvZiBib3VuZCkgewoKICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSB0YXJnZXQuYXBwbHkoCiAgICAgICAgICAgICAgICAgICAgdGhpcywKICAgICAgICAgICAgICAgICAgICBhcmdzLmNvbmNhdChzbGljZS5jYWxsKGFyZ3VtZW50cykpCiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgaWYgKE9iamVjdChyZXN1bHQpID09PSByZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7CgogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseSgKICAgICAgICAgICAgICAgICAgICB0aGF0LAogICAgICAgICAgICAgICAgICAgIGFyZ3MuY29uY2F0KHNsaWNlLmNhbGwoYXJndW1lbnRzKSkKICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICB9CgogICAgICAgIH07CiAgICAgICAgaWYodGFyZ2V0LnByb3RvdHlwZSkgewogICAgICAgICAgICBFbXB0eS5wcm90b3R5cGUgPSB0YXJnZXQucHJvdG90eXBlOwogICAgICAgICAgICBib3VuZC5wcm90b3R5cGUgPSBuZXcgRW1wdHkoKTsKICAgICAgICAgICAgRW1wdHkucHJvdG90eXBlID0gbnVsbDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGJvdW5kOwogICAgfTsKfQp2YXIgY2FsbCA9IEZ1bmN0aW9uLnByb3RvdHlwZS5jYWxsOwp2YXIgcHJvdG90eXBlT2ZBcnJheSA9IEFycmF5LnByb3RvdHlwZTsKdmFyIHByb3RvdHlwZU9mT2JqZWN0ID0gT2JqZWN0LnByb3RvdHlwZTsKdmFyIHNsaWNlID0gcHJvdG90eXBlT2ZBcnJheS5zbGljZTsKdmFyIF90b1N0cmluZyA9IGNhbGwuYmluZChwcm90b3R5cGVPZk9iamVjdC50b1N0cmluZyk7CnZhciBvd25zID0gY2FsbC5iaW5kKHByb3RvdHlwZU9mT2JqZWN0Lmhhc093blByb3BlcnR5KTsKdmFyIGRlZmluZUdldHRlcjsKdmFyIGRlZmluZVNldHRlcjsKdmFyIGxvb2t1cEdldHRlcjsKdmFyIGxvb2t1cFNldHRlcjsKdmFyIHN1cHBvcnRzQWNjZXNzb3JzOwppZiAoKHN1cHBvcnRzQWNjZXNzb3JzID0gb3ducyhwcm90b3R5cGVPZk9iamVjdCwgIl9fZGVmaW5lR2V0dGVyX18iKSkpIHsKICAgIGRlZmluZUdldHRlciA9IGNhbGwuYmluZChwcm90b3R5cGVPZk9iamVjdC5fX2RlZmluZUdldHRlcl9fKTsKICAgIGRlZmluZVNldHRlciA9IGNhbGwuYmluZChwcm90b3R5cGVPZk9iamVjdC5fX2RlZmluZVNldHRlcl9fKTsKICAgIGxvb2t1cEdldHRlciA9IGNhbGwuYmluZChwcm90b3R5cGVPZk9iamVjdC5fX2xvb2t1cEdldHRlcl9fKTsKICAgIGxvb2t1cFNldHRlciA9IGNhbGwuYmluZChwcm90b3R5cGVPZk9iamVjdC5fX2xvb2t1cFNldHRlcl9fKTsKfQppZiAoWzEsMl0uc3BsaWNlKDApLmxlbmd0aCAhPSAyKSB7CiAgICBpZihmdW5jdGlvbigpIHsgLy8gdGVzdCBJRSA8IDkgdG8gc3BsaWNlIGJ1ZyAtIHNlZSBpc3N1ZSAjMTM4CiAgICAgICAgZnVuY3Rpb24gbWFrZUFycmF5KGwpIHsKICAgICAgICAgICAgdmFyIGEgPSBuZXcgQXJyYXkobCsyKTsKICAgICAgICAgICAgYVswXSA9IGFbMV0gPSAwOwogICAgICAgICAgICByZXR1cm4gYTsKICAgICAgICB9CiAgICAgICAgdmFyIGFycmF5ID0gW10sIGxlbmd0aEJlZm9yZTsKICAgICAgICAKICAgICAgICBhcnJheS5zcGxpY2UuYXBwbHkoYXJyYXksIG1ha2VBcnJheSgyMCkpOwogICAgICAgIGFycmF5LnNwbGljZS5hcHBseShhcnJheSwgbWFrZUFycmF5KDI2KSk7CgogICAgICAgIGxlbmd0aEJlZm9yZSA9IGFycmF5Lmxlbmd0aDsgLy80NgogICAgICAgIGFycmF5LnNwbGljZSg1LCAwLCAiWFhYIik7IC8vIGFkZCBvbmUgZWxlbWVudAoKICAgICAgICBsZW5ndGhCZWZvcmUgKyAxID09IGFycmF5Lmxlbmd0aAoKICAgICAgICBpZiAobGVuZ3RoQmVmb3JlICsgMSA9PSBhcnJheS5sZW5ndGgpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7Ly8gaGFzIHJpZ2h0IHNwbGljZSBpbXBsZW1lbnRhdGlvbiB3aXRob3V0IGJ1Z3MKICAgICAgICB9CiAgICB9KCkpIHsvL0lFIDYvNwogICAgICAgIHZhciBhcnJheV9zcGxpY2UgPSBBcnJheS5wcm90b3R5cGUuc3BsaWNlOwogICAgICAgIEFycmF5LnByb3RvdHlwZS5zcGxpY2UgPSBmdW5jdGlvbihzdGFydCwgZGVsZXRlQ291bnQpIHsKICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gW107CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gYXJyYXlfc3BsaWNlLmFwcGx5KHRoaXMsIFsKICAgICAgICAgICAgICAgICAgICBzdGFydCA9PT0gdm9pZCAwID8gMCA6IHN0YXJ0LAogICAgICAgICAgICAgICAgICAgIGRlbGV0ZUNvdW50ID09PSB2b2lkIDAgPyAodGhpcy5sZW5ndGggLSBzdGFydCkgOiBkZWxldGVDb3VudAogICAgICAgICAgICAgICAgXS5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpKSkKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9IGVsc2Ugey8vSUU4CiAgICAgICAgQXJyYXkucHJvdG90eXBlLnNwbGljZSA9IGZ1bmN0aW9uKHBvcywgcmVtb3ZlQ291bnQpewogICAgICAgICAgICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGg7CiAgICAgICAgICAgIGlmIChwb3MgPiAwKSB7CiAgICAgICAgICAgICAgICBpZiAocG9zID4gbGVuZ3RoKQogICAgICAgICAgICAgICAgICAgIHBvcyA9IGxlbmd0aDsKICAgICAgICAgICAgfSBlbHNlIGlmIChwb3MgPT0gdm9pZCAwKSB7CiAgICAgICAgICAgICAgICBwb3MgPSAwOwogICAgICAgICAgICB9IGVsc2UgaWYgKHBvcyA8IDApIHsKICAgICAgICAgICAgICAgIHBvcyA9IE1hdGgubWF4KGxlbmd0aCArIHBvcywgMCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghKHBvcytyZW1vdmVDb3VudCA8IGxlbmd0aCkpCiAgICAgICAgICAgICAgICByZW1vdmVDb3VudCA9IGxlbmd0aCAtIHBvczsKCiAgICAgICAgICAgIHZhciByZW1vdmVkID0gdGhpcy5zbGljZShwb3MsIHBvcytyZW1vdmVDb3VudCk7CiAgICAgICAgICAgIHZhciBpbnNlcnQgPSBzbGljZS5jYWxsKGFyZ3VtZW50cywgMik7CiAgICAgICAgICAgIHZhciBhZGQgPSBpbnNlcnQubGVuZ3RoOyAgICAgICAgICAgIAogICAgICAgICAgICBpZiAocG9zID09PSBsZW5ndGgpIHsKICAgICAgICAgICAgICAgIGlmIChhZGQpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnB1c2guYXBwbHkodGhpcywgaW5zZXJ0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciByZW1vdmUgPSBNYXRoLm1pbihyZW1vdmVDb3VudCwgbGVuZ3RoIC0gcG9zKTsKICAgICAgICAgICAgICAgIHZhciB0YWlsT2xkUG9zID0gcG9zICsgcmVtb3ZlOwogICAgICAgICAgICAgICAgdmFyIHRhaWxOZXdQb3MgPSB0YWlsT2xkUG9zICsgYWRkIC0gcmVtb3ZlOwogICAgICAgICAgICAgICAgdmFyIHRhaWxDb3VudCA9IGxlbmd0aCAtIHRhaWxPbGRQb3M7CiAgICAgICAgICAgICAgICB2YXIgbGVuZ3RoQWZ0ZXJSZW1vdmUgPSBsZW5ndGggLSByZW1vdmU7CgogICAgICAgICAgICAgICAgaWYgKHRhaWxOZXdQb3MgPCB0YWlsT2xkUG9zKSB7IC8vIGNhc2UgQQogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGFpbENvdW50OyArK2kpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1t0YWlsTmV3UG9zK2ldID0gdGhpc1t0YWlsT2xkUG9zK2ldOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGFpbE5ld1BvcyA+IHRhaWxPbGRQb3MpIHsgLy8gY2FzZSBCCiAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gdGFpbENvdW50OyBpLS07ICkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzW3RhaWxOZXdQb3MraV0gPSB0aGlzW3RhaWxPbGRQb3MraV07CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSAvLyBlbHNlLCBhZGQgPT0gcmVtb3ZlIChub3RoaW5nIHRvIGRvKQoKICAgICAgICAgICAgICAgIGlmIChhZGQgJiYgcG9zID09PSBsZW5ndGhBZnRlclJlbW92ZSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoQWZ0ZXJSZW1vdmU7IC8vIHRydW5jYXRlIGFycmF5CiAgICAgICAgICAgICAgICAgICAgdGhpcy5wdXNoLmFwcGx5KHRoaXMsIGluc2VydCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoQWZ0ZXJSZW1vdmUgKyBhZGQ7IC8vIHJlc2VydmVzIHNwYWNlCiAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGFkZDsgKytpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbcG9zK2ldID0gaW5zZXJ0W2ldOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVtb3ZlZDsKICAgICAgICB9OwogICAgfQp9CmlmICghQXJyYXkuaXNBcnJheSkgewogICAgQXJyYXkuaXNBcnJheSA9IGZ1bmN0aW9uIGlzQXJyYXkob2JqKSB7CiAgICAgICAgcmV0dXJuIF90b1N0cmluZyhvYmopID09ICJbb2JqZWN0IEFycmF5XSI7CiAgICB9Owp9CnZhciBib3hlZFN0cmluZyA9IE9iamVjdCgiYSIpLAogICAgc3BsaXRTdHJpbmcgPSBib3hlZFN0cmluZ1swXSAhPSAiYSIgfHwgISgwIGluIGJveGVkU3RyaW5nKTsKCmlmICghQXJyYXkucHJvdG90eXBlLmZvckVhY2gpIHsKICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChmdW4gLyosIHRoaXNwKi8pIHsKICAgICAgICB2YXIgb2JqZWN0ID0gdG9PYmplY3QodGhpcyksCiAgICAgICAgICAgIHNlbGYgPSBzcGxpdFN0cmluZyAmJiBfdG9TdHJpbmcodGhpcykgPT0gIltvYmplY3QgU3RyaW5nXSIgPwogICAgICAgICAgICAgICAgdGhpcy5zcGxpdCgiIikgOgogICAgICAgICAgICAgICAgb2JqZWN0LAogICAgICAgICAgICB0aGlzcCA9IGFyZ3VtZW50c1sxXSwKICAgICAgICAgICAgaSA9IC0xLAogICAgICAgICAgICBsZW5ndGggPSBzZWxmLmxlbmd0aCA+Pj4gMDsKICAgICAgICBpZiAoX3RvU3RyaW5nKGZ1bikgIT0gIltvYmplY3QgRnVuY3Rpb25dIikgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7IC8vIFRPRE8gbWVzc2FnZQogICAgICAgIH0KCiAgICAgICAgd2hpbGUgKCsraSA8IGxlbmd0aCkgewogICAgICAgICAgICBpZiAoaSBpbiBzZWxmKSB7CiAgICAgICAgICAgICAgICBmdW4uY2FsbCh0aGlzcCwgc2VsZltpXSwgaSwgb2JqZWN0KTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH07Cn0KaWYgKCFBcnJheS5wcm90b3R5cGUubWFwKSB7CiAgICBBcnJheS5wcm90b3R5cGUubWFwID0gZnVuY3Rpb24gbWFwKGZ1biAvKiwgdGhpc3AqLykgewogICAgICAgIHZhciBvYmplY3QgPSB0b09iamVjdCh0aGlzKSwKICAgICAgICAgICAgc2VsZiA9IHNwbGl0U3RyaW5nICYmIF90b1N0cmluZyh0aGlzKSA9PSAiW29iamVjdCBTdHJpbmddIiA/CiAgICAgICAgICAgICAgICB0aGlzLnNwbGl0KCIiKSA6CiAgICAgICAgICAgICAgICBvYmplY3QsCiAgICAgICAgICAgIGxlbmd0aCA9IHNlbGYubGVuZ3RoID4+PiAwLAogICAgICAgICAgICByZXN1bHQgPSBBcnJheShsZW5ndGgpLAogICAgICAgICAgICB0aGlzcCA9IGFyZ3VtZW50c1sxXTsKICAgICAgICBpZiAoX3RvU3RyaW5nKGZ1bikgIT0gIltvYmplY3QgRnVuY3Rpb25dIikgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGZ1biArICIgaXMgbm90IGEgZnVuY3Rpb24iKTsKICAgICAgICB9CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGkgaW4gc2VsZikKICAgICAgICAgICAgICAgIHJlc3VsdFtpXSA9IGZ1bi5jYWxsKHRoaXNwLCBzZWxmW2ldLCBpLCBvYmplY3QpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfTsKfQppZiAoIUFycmF5LnByb3RvdHlwZS5maWx0ZXIpIHsKICAgIEFycmF5LnByb3RvdHlwZS5maWx0ZXIgPSBmdW5jdGlvbiBmaWx0ZXIoZnVuIC8qLCB0aGlzcCAqLykgewogICAgICAgIHZhciBvYmplY3QgPSB0b09iamVjdCh0aGlzKSwKICAgICAgICAgICAgc2VsZiA9IHNwbGl0U3RyaW5nICYmIF90b1N0cmluZyh0aGlzKSA9PSAiW29iamVjdCBTdHJpbmddIiA/CiAgICAgICAgICAgICAgICB0aGlzLnNwbGl0KCIiKSA6CiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LAogICAgICAgICAgICBsZW5ndGggPSBzZWxmLmxlbmd0aCA+Pj4gMCwKICAgICAgICAgICAgcmVzdWx0ID0gW10sCiAgICAgICAgICAgIHZhbHVlLAogICAgICAgICAgICB0aGlzcCA9IGFyZ3VtZW50c1sxXTsKICAgICAgICBpZiAoX3RvU3RyaW5nKGZ1bikgIT0gIltvYmplY3QgRnVuY3Rpb25dIikgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGZ1biArICIgaXMgbm90IGEgZnVuY3Rpb24iKTsKICAgICAgICB9CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGkgaW4gc2VsZikgewogICAgICAgICAgICAgICAgdmFsdWUgPSBzZWxmW2ldOwogICAgICAgICAgICAgICAgaWYgKGZ1bi5jYWxsKHRoaXNwLCB2YWx1ZSwgaSwgb2JqZWN0KSkgewogICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfTsKfQppZiAoIUFycmF5LnByb3RvdHlwZS5ldmVyeSkgewogICAgQXJyYXkucHJvdG90eXBlLmV2ZXJ5ID0gZnVuY3Rpb24gZXZlcnkoZnVuIC8qLCB0aGlzcCAqLykgewogICAgICAgIHZhciBvYmplY3QgPSB0b09iamVjdCh0aGlzKSwKICAgICAgICAgICAgc2VsZiA9IHNwbGl0U3RyaW5nICYmIF90b1N0cmluZyh0aGlzKSA9PSAiW29iamVjdCBTdHJpbmddIiA/CiAgICAgICAgICAgICAgICB0aGlzLnNwbGl0KCIiKSA6CiAgICAgICAgICAgICAgICBvYmplY3QsCiAgICAgICAgICAgIGxlbmd0aCA9IHNlbGYubGVuZ3RoID4+PiAwLAogICAgICAgICAgICB0aGlzcCA9IGFyZ3VtZW50c1sxXTsKICAgICAgICBpZiAoX3RvU3RyaW5nKGZ1bikgIT0gIltvYmplY3QgRnVuY3Rpb25dIikgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGZ1biArICIgaXMgbm90IGEgZnVuY3Rpb24iKTsKICAgICAgICB9CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGkgaW4gc2VsZiAmJiAhZnVuLmNhbGwodGhpc3AsIHNlbGZbaV0sIGksIG9iamVjdCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH07Cn0KaWYgKCFBcnJheS5wcm90b3R5cGUuc29tZSkgewogICAgQXJyYXkucHJvdG90eXBlLnNvbWUgPSBmdW5jdGlvbiBzb21lKGZ1biAvKiwgdGhpc3AgKi8pIHsKICAgICAgICB2YXIgb2JqZWN0ID0gdG9PYmplY3QodGhpcyksCiAgICAgICAgICAgIHNlbGYgPSBzcGxpdFN0cmluZyAmJiBfdG9TdHJpbmcodGhpcykgPT0gIltvYmplY3QgU3RyaW5nXSIgPwogICAgICAgICAgICAgICAgdGhpcy5zcGxpdCgiIikgOgogICAgICAgICAgICAgICAgb2JqZWN0LAogICAgICAgICAgICBsZW5ndGggPSBzZWxmLmxlbmd0aCA+Pj4gMCwKICAgICAgICAgICAgdGhpc3AgPSBhcmd1bWVudHNbMV07CiAgICAgICAgaWYgKF90b1N0cmluZyhmdW4pICE9ICJbb2JqZWN0IEZ1bmN0aW9uXSIpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihmdW4gKyAiIGlzIG5vdCBhIGZ1bmN0aW9uIik7CiAgICAgICAgfQoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChpIGluIHNlbGYgJiYgZnVuLmNhbGwodGhpc3AsIHNlbGZbaV0sIGksIG9iamVjdCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH07Cn0KaWYgKCFBcnJheS5wcm90b3R5cGUucmVkdWNlKSB7CiAgICBBcnJheS5wcm90b3R5cGUucmVkdWNlID0gZnVuY3Rpb24gcmVkdWNlKGZ1biAvKiwgaW5pdGlhbCovKSB7CiAgICAgICAgdmFyIG9iamVjdCA9IHRvT2JqZWN0KHRoaXMpLAogICAgICAgICAgICBzZWxmID0gc3BsaXRTdHJpbmcgJiYgX3RvU3RyaW5nKHRoaXMpID09ICJbb2JqZWN0IFN0cmluZ10iID8KICAgICAgICAgICAgICAgIHRoaXMuc3BsaXQoIiIpIDoKICAgICAgICAgICAgICAgIG9iamVjdCwKICAgICAgICAgICAgbGVuZ3RoID0gc2VsZi5sZW5ndGggPj4+IDA7CiAgICAgICAgaWYgKF90b1N0cmluZyhmdW4pICE9ICJbb2JqZWN0IEZ1bmN0aW9uXSIpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihmdW4gKyAiIGlzIG5vdCBhIGZ1bmN0aW9uIik7CiAgICAgICAgfQogICAgICAgIGlmICghbGVuZ3RoICYmIGFyZ3VtZW50cy5sZW5ndGggPT0gMSkgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJyZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlIik7CiAgICAgICAgfQoKICAgICAgICB2YXIgaSA9IDA7CiAgICAgICAgdmFyIHJlc3VsdDsKICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+PSAyKSB7CiAgICAgICAgICAgIHJlc3VsdCA9IGFyZ3VtZW50c1sxXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBkbyB7CiAgICAgICAgICAgICAgICBpZiAoaSBpbiBzZWxmKSB7CiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gc2VsZltpKytdOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKCsraSA+PSBsZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJyZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gd2hpbGUgKHRydWUpOwogICAgICAgIH0KCiAgICAgICAgZm9yICg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAoaSBpbiBzZWxmKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgPSBmdW4uY2FsbCh2b2lkIDAsIHJlc3VsdCwgc2VsZltpXSwgaSwgb2JqZWN0KTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH07Cn0KaWYgKCFBcnJheS5wcm90b3R5cGUucmVkdWNlUmlnaHQpIHsKICAgIEFycmF5LnByb3RvdHlwZS5yZWR1Y2VSaWdodCA9IGZ1bmN0aW9uIHJlZHVjZVJpZ2h0KGZ1biAvKiwgaW5pdGlhbCovKSB7CiAgICAgICAgdmFyIG9iamVjdCA9IHRvT2JqZWN0KHRoaXMpLAogICAgICAgICAgICBzZWxmID0gc3BsaXRTdHJpbmcgJiYgX3RvU3RyaW5nKHRoaXMpID09ICJbb2JqZWN0IFN0cmluZ10iID8KICAgICAgICAgICAgICAgIHRoaXMuc3BsaXQoIiIpIDoKICAgICAgICAgICAgICAgIG9iamVjdCwKICAgICAgICAgICAgbGVuZ3RoID0gc2VsZi5sZW5ndGggPj4+IDA7CiAgICAgICAgaWYgKF90b1N0cmluZyhmdW4pICE9ICJbb2JqZWN0IEZ1bmN0aW9uXSIpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihmdW4gKyAiIGlzIG5vdCBhIGZ1bmN0aW9uIik7CiAgICAgICAgfQogICAgICAgIGlmICghbGVuZ3RoICYmIGFyZ3VtZW50cy5sZW5ndGggPT0gMSkgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJyZWR1Y2VSaWdodCBvZiBlbXB0eSBhcnJheSB3aXRoIG5vIGluaXRpYWwgdmFsdWUiKTsKICAgICAgICB9CgogICAgICAgIHZhciByZXN1bHQsIGkgPSBsZW5ndGggLSAxOwogICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID49IDIpIHsKICAgICAgICAgICAgcmVzdWx0ID0gYXJndW1lbnRzWzFdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRvIHsKICAgICAgICAgICAgICAgIGlmIChpIGluIHNlbGYpIHsKICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBzZWxmW2ktLV07CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoLS1pIDwgMCkgewogICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoInJlZHVjZVJpZ2h0IG9mIGVtcHR5IGFycmF5IHdpdGggbm8gaW5pdGlhbCB2YWx1ZSIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IHdoaWxlICh0cnVlKTsKICAgICAgICB9CgogICAgICAgIGRvIHsKICAgICAgICAgICAgaWYgKGkgaW4gdGhpcykgewogICAgICAgICAgICAgICAgcmVzdWx0ID0gZnVuLmNhbGwodm9pZCAwLCByZXN1bHQsIHNlbGZbaV0sIGksIG9iamVjdCk7CiAgICAgICAgICAgIH0KICAgICAgICB9IHdoaWxlIChpLS0pOwoKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfTsKfQppZiAoIUFycmF5LnByb3RvdHlwZS5pbmRleE9mIHx8IChbMCwgMV0uaW5kZXhPZigxLCAyKSAhPSAtMSkpIHsKICAgIEFycmF5LnByb3RvdHlwZS5pbmRleE9mID0gZnVuY3Rpb24gaW5kZXhPZihzb3VnaHQgLyosIGZyb21JbmRleCAqLyApIHsKICAgICAgICB2YXIgc2VsZiA9IHNwbGl0U3RyaW5nICYmIF90b1N0cmluZyh0aGlzKSA9PSAiW29iamVjdCBTdHJpbmddIiA/CiAgICAgICAgICAgICAgICB0aGlzLnNwbGl0KCIiKSA6CiAgICAgICAgICAgICAgICB0b09iamVjdCh0aGlzKSwKICAgICAgICAgICAgbGVuZ3RoID0gc2VsZi5sZW5ndGggPj4+IDA7CgogICAgICAgIGlmICghbGVuZ3RoKSB7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICB9CgogICAgICAgIHZhciBpID0gMDsKICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHsKICAgICAgICAgICAgaSA9IHRvSW50ZWdlcihhcmd1bWVudHNbMV0pOwogICAgICAgIH0KICAgICAgICBpID0gaSA+PSAwID8gaSA6IE1hdGgubWF4KDAsIGxlbmd0aCArIGkpOwogICAgICAgIGZvciAoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGkgaW4gc2VsZiAmJiBzZWxmW2ldID09PSBzb3VnaHQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiAtMTsKICAgIH07Cn0KaWYgKCFBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2YgfHwgKFswLCAxXS5sYXN0SW5kZXhPZigwLCAtMykgIT0gLTEpKSB7CiAgICBBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2YgPSBmdW5jdGlvbiBsYXN0SW5kZXhPZihzb3VnaHQgLyosIGZyb21JbmRleCAqLykgewogICAgICAgIHZhciBzZWxmID0gc3BsaXRTdHJpbmcgJiYgX3RvU3RyaW5nKHRoaXMpID09ICJbb2JqZWN0IFN0cmluZ10iID8KICAgICAgICAgICAgICAgIHRoaXMuc3BsaXQoIiIpIDoKICAgICAgICAgICAgICAgIHRvT2JqZWN0KHRoaXMpLAogICAgICAgICAgICBsZW5ndGggPSBzZWxmLmxlbmd0aCA+Pj4gMDsKCiAgICAgICAgaWYgKCFsZW5ndGgpIHsKICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgIH0KICAgICAgICB2YXIgaSA9IGxlbmd0aCAtIDE7CiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7CiAgICAgICAgICAgIGkgPSBNYXRoLm1pbihpLCB0b0ludGVnZXIoYXJndW1lbnRzWzFdKSk7CiAgICAgICAgfQogICAgICAgIGkgPSBpID49IDAgPyBpIDogbGVuZ3RoIC0gTWF0aC5hYnMoaSk7CiAgICAgICAgZm9yICg7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgICAgIGlmIChpIGluIHNlbGYgJiYgc291Z2h0ID09PSBzZWxmW2ldKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gLTE7CiAgICB9Owp9CmlmICghT2JqZWN0LmdldFByb3RvdHlwZU9mKSB7CiAgICBPYmplY3QuZ2V0UHJvdG90eXBlT2YgPSBmdW5jdGlvbiBnZXRQcm90b3R5cGVPZihvYmplY3QpIHsKICAgICAgICByZXR1cm4gb2JqZWN0Ll9fcHJvdG9fXyB8fCAoCiAgICAgICAgICAgIG9iamVjdC5jb25zdHJ1Y3RvciA/CiAgICAgICAgICAgIG9iamVjdC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgOgogICAgICAgICAgICBwcm90b3R5cGVPZk9iamVjdAogICAgICAgICk7CiAgICB9Owp9CmlmICghT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcikgewogICAgdmFyIEVSUl9OT05fT0JKRUNUID0gIk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgY2FsbGVkIG9uIGEgIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAibm9uLW9iamVjdDogIjsKICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSkgewogICAgICAgIGlmICgodHlwZW9mIG9iamVjdCAhPSAib2JqZWN0IiAmJiB0eXBlb2Ygb2JqZWN0ICE9ICJmdW5jdGlvbiIpIHx8IG9iamVjdCA9PT0gbnVsbCkKICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihFUlJfTk9OX09CSkVDVCArIG9iamVjdCk7CiAgICAgICAgaWYgKCFvd25zKG9iamVjdCwgcHJvcGVydHkpKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIHZhciBkZXNjcmlwdG9yLCBnZXR0ZXIsIHNldHRlcjsKICAgICAgICBkZXNjcmlwdG9yID0gIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH07CiAgICAgICAgaWYgKHN1cHBvcnRzQWNjZXNzb3JzKSB7CiAgICAgICAgICAgIHZhciBwcm90b3R5cGUgPSBvYmplY3QuX19wcm90b19fOwogICAgICAgICAgICBvYmplY3QuX19wcm90b19fID0gcHJvdG90eXBlT2ZPYmplY3Q7CgogICAgICAgICAgICB2YXIgZ2V0dGVyID0gbG9va3VwR2V0dGVyKG9iamVjdCwgcHJvcGVydHkpOwogICAgICAgICAgICB2YXIgc2V0dGVyID0gbG9va3VwU2V0dGVyKG9iamVjdCwgcHJvcGVydHkpOwogICAgICAgICAgICBvYmplY3QuX19wcm90b19fID0gcHJvdG90eXBlOwoKICAgICAgICAgICAgaWYgKGdldHRlciB8fCBzZXR0ZXIpIHsKICAgICAgICAgICAgICAgIGlmIChnZXR0ZXIpIGRlc2NyaXB0b3IuZ2V0ID0gZ2V0dGVyOwogICAgICAgICAgICAgICAgaWYgKHNldHRlcikgZGVzY3JpcHRvci5zZXQgPSBzZXR0ZXI7CiAgICAgICAgICAgICAgICByZXR1cm4gZGVzY3JpcHRvcjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBkZXNjcmlwdG9yLnZhbHVlID0gb2JqZWN0W3Byb3BlcnR5XTsKICAgICAgICByZXR1cm4gZGVzY3JpcHRvcjsKICAgIH07Cn0KaWYgKCFPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcykgewogICAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKG9iamVjdCkgewogICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmplY3QpOwogICAgfTsKfQppZiAoIU9iamVjdC5jcmVhdGUpIHsKICAgIHZhciBjcmVhdGVFbXB0eTsKICAgIGlmIChPYmplY3QucHJvdG90eXBlLl9fcHJvdG9fXyA9PT0gbnVsbCkgewogICAgICAgIGNyZWF0ZUVtcHR5ID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4geyAiX19wcm90b19fIjogbnVsbCB9OwogICAgICAgIH07CiAgICB9IGVsc2UgewogICAgICAgIGNyZWF0ZUVtcHR5ID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgZW1wdHkgPSB7fTsKICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBlbXB0eSkKICAgICAgICAgICAgICAgIGVtcHR5W2ldID0gbnVsbDsKICAgICAgICAgICAgZW1wdHkuY29uc3RydWN0b3IgPQogICAgICAgICAgICBlbXB0eS5oYXNPd25Qcm9wZXJ0eSA9CiAgICAgICAgICAgIGVtcHR5LnByb3BlcnR5SXNFbnVtZXJhYmxlID0KICAgICAgICAgICAgZW1wdHkuaXNQcm90b3R5cGVPZiA9CiAgICAgICAgICAgIGVtcHR5LnRvTG9jYWxlU3RyaW5nID0KICAgICAgICAgICAgZW1wdHkudG9TdHJpbmcgPQogICAgICAgICAgICBlbXB0eS52YWx1ZU9mID0KICAgICAgICAgICAgZW1wdHkuX19wcm90b19fID0gbnVsbDsKICAgICAgICAgICAgcmV0dXJuIGVtcHR5OwogICAgICAgIH0KICAgIH0KCiAgICBPYmplY3QuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKHByb3RvdHlwZSwgcHJvcGVydGllcykgewogICAgICAgIHZhciBvYmplY3Q7CiAgICAgICAgaWYgKHByb3RvdHlwZSA9PT0gbnVsbCkgewogICAgICAgICAgICBvYmplY3QgPSBjcmVhdGVFbXB0eSgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvdG90eXBlICE9ICJvYmplY3QiKQogICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigidHlwZW9mIHByb3RvdHlwZVsiKyh0eXBlb2YgcHJvdG90eXBlKSsiXSAhPSAnb2JqZWN0JyIpOwogICAgICAgICAgICB2YXIgVHlwZSA9IGZ1bmN0aW9uICgpIHt9OwogICAgICAgICAgICBUeXBlLnByb3RvdHlwZSA9IHByb3RvdHlwZTsKICAgICAgICAgICAgb2JqZWN0ID0gbmV3IFR5cGUoKTsKICAgICAgICAgICAgb2JqZWN0Ll9fcHJvdG9fXyA9IHByb3RvdHlwZTsKICAgICAgICB9CiAgICAgICAgaWYgKHByb3BlcnRpZXMgIT09IHZvaWQgMCkKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMob2JqZWN0LCBwcm9wZXJ0aWVzKTsKICAgICAgICByZXR1cm4gb2JqZWN0OwogICAgfTsKfQoKZnVuY3Rpb24gZG9lc0RlZmluZVByb3BlcnR5V29yayhvYmplY3QpIHsKICAgIHRyeSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgInNlbnRpbmVsIiwge30pOwogICAgICAgIHJldHVybiAic2VudGluZWwiIGluIG9iamVjdDsKICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikgewogICAgfQp9CmlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsKICAgIHZhciBkZWZpbmVQcm9wZXJ0eVdvcmtzT25PYmplY3QgPSBkb2VzRGVmaW5lUHJvcGVydHlXb3JrKHt9KTsKICAgIHZhciBkZWZpbmVQcm9wZXJ0eVdvcmtzT25Eb20gPSB0eXBlb2YgZG9jdW1lbnQgPT0gInVuZGVmaW5lZCIgfHwKICAgICAgICBkb2VzRGVmaW5lUHJvcGVydHlXb3JrKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpKTsKICAgIGlmICghZGVmaW5lUHJvcGVydHlXb3Jrc09uT2JqZWN0IHx8ICFkZWZpbmVQcm9wZXJ0eVdvcmtzT25Eb20pIHsKICAgICAgICB2YXIgZGVmaW5lUHJvcGVydHlGYWxsYmFjayA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTsKICAgIH0KfQoKaWYgKCFPYmplY3QuZGVmaW5lUHJvcGVydHkgfHwgZGVmaW5lUHJvcGVydHlGYWxsYmFjaykgewogICAgdmFyIEVSUl9OT05fT0JKRUNUX0RFU0NSSVBUT1IgPSAiUHJvcGVydHkgZGVzY3JpcHRpb24gbXVzdCBiZSBhbiBvYmplY3Q6ICI7CiAgICB2YXIgRVJSX05PTl9PQkpFQ1RfVEFSR0VUID0gIk9iamVjdC5kZWZpbmVQcm9wZXJ0eSBjYWxsZWQgb24gbm9uLW9iamVjdDogIgogICAgdmFyIEVSUl9BQ0NFU1NPUlNfTk9UX1NVUFBPUlRFRCA9ICJnZXR0ZXJzICYgc2V0dGVycyBjYW4gbm90IGJlIGRlZmluZWQgIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm9uIHRoaXMgamF2YXNjcmlwdCBlbmdpbmUiOwoKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KG9iamVjdCwgcHJvcGVydHksIGRlc2NyaXB0b3IpIHsKICAgICAgICBpZiAoKHR5cGVvZiBvYmplY3QgIT0gIm9iamVjdCIgJiYgdHlwZW9mIG9iamVjdCAhPSAiZnVuY3Rpb24iKSB8fCBvYmplY3QgPT09IG51bGwpCiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRVJSX05PTl9PQkpFQ1RfVEFSR0VUICsgb2JqZWN0KTsKICAgICAgICBpZiAoKHR5cGVvZiBkZXNjcmlwdG9yICE9ICJvYmplY3QiICYmIHR5cGVvZiBkZXNjcmlwdG9yICE9ICJmdW5jdGlvbiIpIHx8IGRlc2NyaXB0b3IgPT09IG51bGwpCiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRVJSX05PTl9PQkpFQ1RfREVTQ1JJUFRPUiArIGRlc2NyaXB0b3IpOwogICAgICAgIGlmIChkZWZpbmVQcm9wZXJ0eUZhbGxiYWNrKSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZGVmaW5lUHJvcGVydHlGYWxsYmFjay5jYWxsKE9iamVjdCwgb2JqZWN0LCBwcm9wZXJ0eSwgZGVzY3JpcHRvcik7CiAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikgewogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChvd25zKGRlc2NyaXB0b3IsICJ2YWx1ZSIpKSB7CgogICAgICAgICAgICBpZiAoc3VwcG9ydHNBY2Nlc3NvcnMgJiYgKGxvb2t1cEdldHRlcihvYmplY3QsIHByb3BlcnR5KSB8fAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvb2t1cFNldHRlcihvYmplY3QsIHByb3BlcnR5KSkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHZhciBwcm90b3R5cGUgPSBvYmplY3QuX19wcm90b19fOwogICAgICAgICAgICAgICAgb2JqZWN0Ll9fcHJvdG9fXyA9IHByb3RvdHlwZU9mT2JqZWN0OwogICAgICAgICAgICAgICAgZGVsZXRlIG9iamVjdFtwcm9wZXJ0eV07CiAgICAgICAgICAgICAgICBvYmplY3RbcHJvcGVydHldID0gZGVzY3JpcHRvci52YWx1ZTsKICAgICAgICAgICAgICAgIG9iamVjdC5fX3Byb3RvX18gPSBwcm90b3R5cGU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBvYmplY3RbcHJvcGVydHldID0gZGVzY3JpcHRvci52YWx1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmICghc3VwcG9ydHNBY2Nlc3NvcnMpCiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEVSUl9BQ0NFU1NPUlNfTk9UX1NVUFBPUlRFRCk7CiAgICAgICAgICAgIGlmIChvd25zKGRlc2NyaXB0b3IsICJnZXQiKSkKICAgICAgICAgICAgICAgIGRlZmluZUdldHRlcihvYmplY3QsIHByb3BlcnR5LCBkZXNjcmlwdG9yLmdldCk7CiAgICAgICAgICAgIGlmIChvd25zKGRlc2NyaXB0b3IsICJzZXQiKSkKICAgICAgICAgICAgICAgIGRlZmluZVNldHRlcihvYmplY3QsIHByb3BlcnR5LCBkZXNjcmlwdG9yLnNldCk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gb2JqZWN0OwogICAgfTsKfQppZiAoIU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMob2JqZWN0LCBwcm9wZXJ0aWVzKSB7CiAgICAgICAgZm9yICh2YXIgcHJvcGVydHkgaW4gcHJvcGVydGllcykgewogICAgICAgICAgICBpZiAob3ducyhwcm9wZXJ0aWVzLCBwcm9wZXJ0eSkpCiAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBwcm9wZXJ0eSwgcHJvcGVydGllc1twcm9wZXJ0eV0pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gb2JqZWN0OwogICAgfTsKfQppZiAoIU9iamVjdC5zZWFsKSB7CiAgICBPYmplY3Quc2VhbCA9IGZ1bmN0aW9uIHNlYWwob2JqZWN0KSB7CiAgICAgICAgcmV0dXJuIG9iamVjdDsKICAgIH07Cn0KaWYgKCFPYmplY3QuZnJlZXplKSB7CiAgICBPYmplY3QuZnJlZXplID0gZnVuY3Rpb24gZnJlZXplKG9iamVjdCkgewogICAgICAgIHJldHVybiBvYmplY3Q7CiAgICB9Owp9CnRyeSB7CiAgICBPYmplY3QuZnJlZXplKGZ1bmN0aW9uICgpIHt9KTsKfSBjYXRjaCAoZXhjZXB0aW9uKSB7CiAgICBPYmplY3QuZnJlZXplID0gKGZ1bmN0aW9uIGZyZWV6ZShmcmVlemVPYmplY3QpIHsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gZnJlZXplKG9iamVjdCkgewogICAgICAgICAgICBpZiAodHlwZW9mIG9iamVjdCA9PSAiZnVuY3Rpb24iKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gb2JqZWN0OwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGZyZWV6ZU9iamVjdChvYmplY3QpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgIH0pKE9iamVjdC5mcmVlemUpOwp9CmlmICghT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKSB7CiAgICBPYmplY3QucHJldmVudEV4dGVuc2lvbnMgPSBmdW5jdGlvbiBwcmV2ZW50RXh0ZW5zaW9ucyhvYmplY3QpIHsKICAgICAgICByZXR1cm4gb2JqZWN0OwogICAgfTsKfQppZiAoIU9iamVjdC5pc1NlYWxlZCkgewogICAgT2JqZWN0LmlzU2VhbGVkID0gZnVuY3Rpb24gaXNTZWFsZWQob2JqZWN0KSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfTsKfQppZiAoIU9iamVjdC5pc0Zyb3plbikgewogICAgT2JqZWN0LmlzRnJvemVuID0gZnVuY3Rpb24gaXNGcm96ZW4ob2JqZWN0KSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfTsKfQppZiAoIU9iamVjdC5pc0V4dGVuc2libGUpIHsKICAgIE9iamVjdC5pc0V4dGVuc2libGUgPSBmdW5jdGlvbiBpc0V4dGVuc2libGUob2JqZWN0KSB7CiAgICAgICAgaWYgKE9iamVjdChvYmplY3QpID09PSBvYmplY3QpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigpOyAvLyBUT0RPIG1lc3NhZ2UKICAgICAgICB9CiAgICAgICAgdmFyIG5hbWUgPSAnJzsKICAgICAgICB3aGlsZSAob3ducyhvYmplY3QsIG5hbWUpKSB7CiAgICAgICAgICAgIG5hbWUgKz0gJz8nOwogICAgICAgIH0KICAgICAgICBvYmplY3RbbmFtZV0gPSB0cnVlOwogICAgICAgIHZhciByZXR1cm5WYWx1ZSA9IG93bnMob2JqZWN0LCBuYW1lKTsKICAgICAgICBkZWxldGUgb2JqZWN0W25hbWVdOwogICAgICAgIHJldHVybiByZXR1cm5WYWx1ZTsKICAgIH07Cn0KaWYgKCFPYmplY3Qua2V5cykgewogICAgdmFyIGhhc0RvbnRFbnVtQnVnID0gdHJ1ZSwKICAgICAgICBkb250RW51bXMgPSBbCiAgICAgICAgICAgICJ0b1N0cmluZyIsCiAgICAgICAgICAgICJ0b0xvY2FsZVN0cmluZyIsCiAgICAgICAgICAgICJ2YWx1ZU9mIiwKICAgICAgICAgICAgImhhc093blByb3BlcnR5IiwKICAgICAgICAgICAgImlzUHJvdG90eXBlT2YiLAogICAgICAgICAgICAicHJvcGVydHlJc0VudW1lcmFibGUiLAogICAgICAgICAgICAiY29uc3RydWN0b3IiCiAgICAgICAgXSwKICAgICAgICBkb250RW51bXNMZW5ndGggPSBkb250RW51bXMubGVuZ3RoOwoKICAgIGZvciAodmFyIGtleSBpbiB7InRvU3RyaW5nIjogbnVsbH0pIHsKICAgICAgICBoYXNEb250RW51bUJ1ZyA9IGZhbHNlOwogICAgfQoKICAgIE9iamVjdC5rZXlzID0gZnVuY3Rpb24ga2V5cyhvYmplY3QpIHsKCiAgICAgICAgaWYgKAogICAgICAgICAgICAodHlwZW9mIG9iamVjdCAhPSAib2JqZWN0IiAmJiB0eXBlb2Ygb2JqZWN0ICE9ICJmdW5jdGlvbiIpIHx8CiAgICAgICAgICAgIG9iamVjdCA9PT0gbnVsbAogICAgICAgICkgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3Qua2V5cyBjYWxsZWQgb24gYSBub24tb2JqZWN0Iik7CiAgICAgICAgfQoKICAgICAgICB2YXIga2V5cyA9IFtdOwogICAgICAgIGZvciAodmFyIG5hbWUgaW4gb2JqZWN0KSB7CiAgICAgICAgICAgIGlmIChvd25zKG9iamVjdCwgbmFtZSkpIHsKICAgICAgICAgICAgICAgIGtleXMucHVzaChuYW1lKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKGhhc0RvbnRFbnVtQnVnKSB7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBpaSA9IGRvbnRFbnVtc0xlbmd0aDsgaSA8IGlpOyBpKyspIHsKICAgICAgICAgICAgICAgIHZhciBkb250RW51bSA9IGRvbnRFbnVtc1tpXTsKICAgICAgICAgICAgICAgIGlmIChvd25zKG9iamVjdCwgZG9udEVudW0pKSB7CiAgICAgICAgICAgICAgICAgICAga2V5cy5wdXNoKGRvbnRFbnVtKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4ga2V5czsKICAgIH07Cgp9CmlmICghRGF0ZS5ub3cpIHsKICAgIERhdGUubm93ID0gZnVuY3Rpb24gbm93KCkgewogICAgICAgIHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgIH07Cn0KaWYoIjAiLnNwbGl0KHZvaWQgMCwgMCkubGVuZ3RoKSB7CiAgICB2YXIgc3RyaW5nX3NwbGl0ID0gU3RyaW5nLnByb3RvdHlwZS5zcGxpdDsKICAgIFN0cmluZy5wcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbihzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICAgICAgaWYoc2VwYXJhdG9yID09PSB2b2lkIDAgJiYgbGltaXQgPT09IDApcmV0dXJuIFtdOwogICAgICAgIHJldHVybiBzdHJpbmdfc3BsaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KfQppZigiIi5zdWJzdHIgJiYgIjBiIi5zdWJzdHIoLTEpICE9PSAiYiIpIHsKICAgIHZhciBzdHJpbmdfc3Vic3RyID0gU3RyaW5nLnByb3RvdHlwZS5zdWJzdHI7CiAgICBTdHJpbmcucHJvdG90eXBlLnN1YnN0ciA9IGZ1bmN0aW9uKHN0YXJ0LCBsZW5ndGgpIHsKICAgICAgICByZXR1cm4gc3RyaW5nX3N1YnN0ci5jYWxsKAogICAgICAgICAgICB0aGlzLAogICAgICAgICAgICBzdGFydCA8IDAgPyAoc3RhcnQgPSB0aGlzLmxlbmd0aCArIHN0YXJ0KSA8IDAgPyAwIDogc3RhcnQgOiBzdGFydCwKICAgICAgICAgICAgbGVuZ3RoCiAgICAgICAgKTsKICAgIH0KfQp2YXIgd3MgPSAiXHgwOVx4MEFceDBCXHgwQ1x4MERceDIwXHhBMFx1MTY4MFx1MTgwRVx1MjAwMFx1MjAwMVx1MjAwMlx1MjAwMyIgKwogICAgIlx1MjAwNFx1MjAwNVx1MjAwNlx1MjAwN1x1MjAwOFx1MjAwOVx1MjAwQVx1MjAyRlx1MjA1Rlx1MzAwMFx1MjAyOCIgKwogICAgIlx1MjAyOVx1RkVGRiI7CmlmICghU3RyaW5nLnByb3RvdHlwZS50cmltIHx8IHdzLnRyaW0oKSkgewogICAgd3MgPSAiWyIgKyB3cyArICJdIjsKICAgIHZhciB0cmltQmVnaW5SZWdleHAgPSBuZXcgUmVnRXhwKCJeIiArIHdzICsgd3MgKyAiKiIpLAogICAgICAgIHRyaW1FbmRSZWdleHAgPSBuZXcgUmVnRXhwKHdzICsgd3MgKyAiKiQiKTsKICAgIFN0cmluZy5wcm90b3R5cGUudHJpbSA9IGZ1bmN0aW9uIHRyaW0oKSB7CiAgICAgICAgaWYgKHRoaXMgPT09IHVuZGVmaW5lZCB8fCB0aGlzID09PSBudWxsKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoImNhbid0IGNvbnZlcnQgIit0aGlzKyIgdG8gb2JqZWN0Iik7CiAgICAgICAgfQogICAgICAgIHJldHVybiBTdHJpbmcodGhpcykKICAgICAgICAgICAgLnJlcGxhY2UodHJpbUJlZ2luUmVnZXhwLCAiIikKICAgICAgICAgICAgLnJlcGxhY2UodHJpbUVuZFJlZ2V4cCwgIiIpOwogICAgfTsKfQoKZnVuY3Rpb24gdG9JbnRlZ2VyKG4pIHsKICAgIG4gPSArbjsKICAgIGlmIChuICE9PSBuKSB7IC8vIGlzTmFOCiAgICAgICAgbiA9IDA7CiAgICB9IGVsc2UgaWYgKG4gIT09IDAgJiYgbiAhPT0gKDEvMCkgJiYgbiAhPT0gLSgxLzApKSB7CiAgICAgICAgbiA9IChuID4gMCB8fCAtMSkgKiBNYXRoLmZsb29yKE1hdGguYWJzKG4pKTsKICAgIH0KICAgIHJldHVybiBuOwp9CgpmdW5jdGlvbiBpc1ByaW1pdGl2ZShpbnB1dCkgewogICAgdmFyIHR5cGUgPSB0eXBlb2YgaW5wdXQ7CiAgICByZXR1cm4gKAogICAgICAgIGlucHV0ID09PSBudWxsIHx8CiAgICAgICAgdHlwZSA9PT0gInVuZGVmaW5lZCIgfHwKICAgICAgICB0eXBlID09PSAiYm9vbGVhbiIgfHwKICAgICAgICB0eXBlID09PSAibnVtYmVyIiB8fAogICAgICAgIHR5cGUgPT09ICJzdHJpbmciCiAgICApOwp9CgpmdW5jdGlvbiB0b1ByaW1pdGl2ZShpbnB1dCkgewogICAgdmFyIHZhbCwgdmFsdWVPZiwgdG9TdHJpbmc7CiAgICBpZiAoaXNQcmltaXRpdmUoaW5wdXQpKSB7CiAgICAgICAgcmV0dXJuIGlucHV0OwogICAgfQogICAgdmFsdWVPZiA9IGlucHV0LnZhbHVlT2Y7CiAgICBpZiAodHlwZW9mIHZhbHVlT2YgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICB2YWwgPSB2YWx1ZU9mLmNhbGwoaW5wdXQpOwogICAgICAgIGlmIChpc1ByaW1pdGl2ZSh2YWwpKSB7CiAgICAgICAgICAgIHJldHVybiB2YWw7CiAgICAgICAgfQogICAgfQogICAgdG9TdHJpbmcgPSBpbnB1dC50b1N0cmluZzsKICAgIGlmICh0eXBlb2YgdG9TdHJpbmcgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICB2YWwgPSB0b1N0cmluZy5jYWxsKGlucHV0KTsKICAgICAgICBpZiAoaXNQcmltaXRpdmUodmFsKSkgewogICAgICAgICAgICByZXR1cm4gdmFsOwogICAgICAgIH0KICAgIH0KICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKTsKfQp2YXIgdG9PYmplY3QgPSBmdW5jdGlvbiAobykgewogICAgaWYgKG8gPT0gbnVsbCkgeyAvLyB0aGlzIG1hdGNoZXMgYm90aCBudWxsIGFuZCB1bmRlZmluZWQKICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJjYW4ndCBjb252ZXJ0ICIrbysiIHRvIG9iamVjdCIpOwogICAgfQogICAgcmV0dXJuIE9iamVjdChvKTsKfTsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL2xpYi9kb20nLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnIF0sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBYSFRNTF9OUyA9ICJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIjsKCmV4cG9ydHMuY3JlYXRlRWxlbWVudCA9IGZ1bmN0aW9uKHRhZywgbnMpIHsKICAgIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMgPwogICAgICAgICAgIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhucyB8fCBYSFRNTF9OUywgdGFnKSA6CiAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpOwp9OwoKZXhwb3J0cy5zZXRUZXh0ID0gZnVuY3Rpb24oZWxlbSwgdGV4dCkgewogICAgaWYgKGVsZW0uaW5uZXJUZXh0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBlbGVtLmlubmVyVGV4dCA9IHRleHQ7CiAgICB9CiAgICBpZiAoZWxlbS50ZXh0Q29udGVudCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgZWxlbS50ZXh0Q29udGVudCA9IHRleHQ7CiAgICB9Cn07CgpleHBvcnRzLmhhc0Nzc0NsYXNzID0gZnVuY3Rpb24oZWwsIG5hbWUpIHsKICAgIHZhciBjbGFzc2VzID0gZWwuY2xhc3NOYW1lLnNwbGl0KC9ccysvZyk7CiAgICByZXR1cm4gY2xhc3Nlcy5pbmRleE9mKG5hbWUpICE9PSAtMTsKfTsKZXhwb3J0cy5hZGRDc3NDbGFzcyA9IGZ1bmN0aW9uKGVsLCBuYW1lKSB7CiAgICBpZiAoIWV4cG9ydHMuaGFzQ3NzQ2xhc3MoZWwsIG5hbWUpKSB7CiAgICAgICAgZWwuY2xhc3NOYW1lICs9ICIgIiArIG5hbWU7CiAgICB9Cn07CmV4cG9ydHMucmVtb3ZlQ3NzQ2xhc3MgPSBmdW5jdGlvbihlbCwgbmFtZSkgewogICAgdmFyIGNsYXNzZXMgPSBlbC5jbGFzc05hbWUuc3BsaXQoL1xzKy9nKTsKICAgIHdoaWxlICh0cnVlKSB7CiAgICAgICAgdmFyIGluZGV4ID0gY2xhc3Nlcy5pbmRleE9mKG5hbWUpOwogICAgICAgIGlmIChpbmRleCA9PSAtMSkgewogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgY2xhc3Nlcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfQogICAgZWwuY2xhc3NOYW1lID0gY2xhc3Nlcy5qb2luKCIgIik7Cn07CgpleHBvcnRzLnRvZ2dsZUNzc0NsYXNzID0gZnVuY3Rpb24oZWwsIG5hbWUpIHsKICAgIHZhciBjbGFzc2VzID0gZWwuY2xhc3NOYW1lLnNwbGl0KC9ccysvZyksIGFkZCA9IHRydWU7CiAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgIHZhciBpbmRleCA9IGNsYXNzZXMuaW5kZXhPZihuYW1lKTsKICAgICAgICBpZiAoaW5kZXggPT0gLTEpIHsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIGFkZCA9IGZhbHNlOwogICAgICAgIGNsYXNzZXMuc3BsaWNlKGluZGV4LCAxKTsKICAgIH0KICAgIGlmKGFkZCkKICAgICAgICBjbGFzc2VzLnB1c2gobmFtZSk7CgogICAgZWwuY2xhc3NOYW1lID0gY2xhc3Nlcy5qb2luKCIgIik7CiAgICByZXR1cm4gYWRkOwp9OwpleHBvcnRzLnNldENzc0NsYXNzID0gZnVuY3Rpb24obm9kZSwgY2xhc3NOYW1lLCBpbmNsdWRlKSB7CiAgICBpZiAoaW5jbHVkZSkgewogICAgICAgIGV4cG9ydHMuYWRkQ3NzQ2xhc3Mobm9kZSwgY2xhc3NOYW1lKTsKICAgIH0gZWxzZSB7CiAgICAgICAgZXhwb3J0cy5yZW1vdmVDc3NDbGFzcyhub2RlLCBjbGFzc05hbWUpOwogICAgfQp9OwoKZXhwb3J0cy5oYXNDc3NTdHJpbmcgPSBmdW5jdGlvbihpZCwgZG9jKSB7CiAgICB2YXIgaW5kZXggPSAwLCBzaGVldHM7CiAgICBkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7CgogICAgaWYgKGRvYy5jcmVhdGVTdHlsZVNoZWV0ICYmIChzaGVldHMgPSBkb2Muc3R5bGVTaGVldHMpKSB7CiAgICAgICAgd2hpbGUgKGluZGV4IDwgc2hlZXRzLmxlbmd0aCkKICAgICAgICAgICAgaWYgKHNoZWV0c1tpbmRleCsrXS5vd25pbmdFbGVtZW50LmlkID09PSBpZCkgcmV0dXJuIHRydWU7CiAgICB9IGVsc2UgaWYgKChzaGVldHMgPSBkb2MuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInN0eWxlIikpKSB7CiAgICAgICAgd2hpbGUgKGluZGV4IDwgc2hlZXRzLmxlbmd0aCkKICAgICAgICAgICAgaWYgKHNoZWV0c1tpbmRleCsrXS5pZCA9PT0gaWQpIHJldHVybiB0cnVlOwogICAgfQoKICAgIHJldHVybiBmYWxzZTsKfTsKCmV4cG9ydHMuaW1wb3J0Q3NzU3RyaW5nID0gZnVuY3Rpb24gaW1wb3J0Q3NzU3RyaW5nKGNzc1RleHQsIGlkLCBkb2MpIHsKICAgIGRvYyA9IGRvYyB8fCBkb2N1bWVudDsKICAgIGlmIChpZCAmJiBleHBvcnRzLmhhc0Nzc1N0cmluZyhpZCwgZG9jKSkKICAgICAgICByZXR1cm4gbnVsbDsKICAgIAogICAgdmFyIHN0eWxlOwogICAgCiAgICBpZiAoZG9jLmNyZWF0ZVN0eWxlU2hlZXQpIHsKICAgICAgICBzdHlsZSA9IGRvYy5jcmVhdGVTdHlsZVNoZWV0KCk7CiAgICAgICAgc3R5bGUuY3NzVGV4dCA9IGNzc1RleHQ7CiAgICAgICAgaWYgKGlkKQogICAgICAgICAgICBzdHlsZS5vd25pbmdFbGVtZW50LmlkID0gaWQ7CiAgICB9IGVsc2UgewogICAgICAgIHN0eWxlID0gZG9jLmNyZWF0ZUVsZW1lbnROUwogICAgICAgICAgICA/IGRvYy5jcmVhdGVFbGVtZW50TlMoWEhUTUxfTlMsICJzdHlsZSIpCiAgICAgICAgICAgIDogZG9jLmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7CgogICAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvYy5jcmVhdGVUZXh0Tm9kZShjc3NUZXh0KSk7CiAgICAgICAgaWYgKGlkKQogICAgICAgICAgICBzdHlsZS5pZCA9IGlkOwoKICAgICAgICB2YXIgaGVhZCA9IGRvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdIHx8IGRvYy5kb2N1bWVudEVsZW1lbnQ7CiAgICAgICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7CiAgICB9Cn07CgpleHBvcnRzLmltcG9ydENzc1N0eWxzaGVldCA9IGZ1bmN0aW9uKHVyaSwgZG9jKSB7CiAgICBpZiAoZG9jLmNyZWF0ZVN0eWxlU2hlZXQpIHsKICAgICAgICBkb2MuY3JlYXRlU3R5bGVTaGVldCh1cmkpOwogICAgfSBlbHNlIHsKICAgICAgICB2YXIgbGluayA9IGV4cG9ydHMuY3JlYXRlRWxlbWVudCgnbGluaycpOwogICAgICAgIGxpbmsucmVsID0gJ3N0eWxlc2hlZXQnOwogICAgICAgIGxpbmsuaHJlZiA9IHVyaTsKCiAgICAgICAgdmFyIGhlYWQgPSBkb2MuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKVswXSB8fCBkb2MuZG9jdW1lbnRFbGVtZW50OwogICAgICAgIGhlYWQuYXBwZW5kQ2hpbGQobGluayk7CiAgICB9Cn07CgpleHBvcnRzLmdldElubmVyV2lkdGggPSBmdW5jdGlvbihlbGVtZW50KSB7CiAgICByZXR1cm4gKAogICAgICAgIHBhcnNlSW50KGV4cG9ydHMuY29tcHV0ZWRTdHlsZShlbGVtZW50LCAicGFkZGluZ0xlZnQiKSwgMTApICsKICAgICAgICBwYXJzZUludChleHBvcnRzLmNvbXB1dGVkU3R5bGUoZWxlbWVudCwgInBhZGRpbmdSaWdodCIpLCAxMCkgKyAKICAgICAgICBlbGVtZW50LmNsaWVudFdpZHRoCiAgICApOwp9OwoKZXhwb3J0cy5nZXRJbm5lckhlaWdodCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIHJldHVybiAoCiAgICAgICAgcGFyc2VJbnQoZXhwb3J0cy5jb21wdXRlZFN0eWxlKGVsZW1lbnQsICJwYWRkaW5nVG9wIiksIDEwKSArCiAgICAgICAgcGFyc2VJbnQoZXhwb3J0cy5jb21wdXRlZFN0eWxlKGVsZW1lbnQsICJwYWRkaW5nQm90dG9tIiksIDEwKSArCiAgICAgICAgZWxlbWVudC5jbGllbnRIZWlnaHQKICAgICk7Cn07CgppZiAod2luZG93LnBhZ2VZT2Zmc2V0ICE9PSB1bmRlZmluZWQpIHsKICAgIGV4cG9ydHMuZ2V0UGFnZVNjcm9sbFRvcCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB3aW5kb3cucGFnZVlPZmZzZXQ7CiAgICB9OwoKICAgIGV4cG9ydHMuZ2V0UGFnZVNjcm9sbExlZnQgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gd2luZG93LnBhZ2VYT2Zmc2V0OwogICAgfTsKfQplbHNlIHsKICAgIGV4cG9ydHMuZ2V0UGFnZVNjcm9sbFRvcCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDsKICAgIH07CgogICAgZXhwb3J0cy5nZXRQYWdlU2Nyb2xsTGVmdCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiBkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQ7CiAgICB9Owp9CgppZiAod2luZG93LmdldENvbXB1dGVkU3R5bGUpCiAgICBleHBvcnRzLmNvbXB1dGVkU3R5bGUgPSBmdW5jdGlvbihlbGVtZW50LCBzdHlsZSkgewogICAgICAgIGlmIChzdHlsZSkKICAgICAgICAgICAgcmV0dXJuICh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50LCAiIikgfHwge30pW3N0eWxlXSB8fCAiIjsKICAgICAgICByZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCwgIiIpIHx8IHt9OwogICAgfTsKZWxzZQogICAgZXhwb3J0cy5jb21wdXRlZFN0eWxlID0gZnVuY3Rpb24oZWxlbWVudCwgc3R5bGUpIHsKICAgICAgICBpZiAoc3R5bGUpCiAgICAgICAgICAgIHJldHVybiBlbGVtZW50LmN1cnJlbnRTdHlsZVtzdHlsZV07CiAgICAgICAgcmV0dXJuIGVsZW1lbnQuY3VycmVudFN0eWxlOwogICAgfTsKCmV4cG9ydHMuc2Nyb2xsYmFyV2lkdGggPSBmdW5jdGlvbihkb2N1bWVudCkgewogICAgdmFyIGlubmVyID0gZXhwb3J0cy5jcmVhdGVFbGVtZW50KCJhY2VfaW5uZXIiKTsKICAgIGlubmVyLnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgaW5uZXIuc3R5bGUubWluV2lkdGggPSAiMHB4IjsKICAgIGlubmVyLnN0eWxlLmhlaWdodCA9ICIyMDBweCI7CiAgICBpbm5lci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKCiAgICB2YXIgb3V0ZXIgPSBleHBvcnRzLmNyZWF0ZUVsZW1lbnQoImFjZV9vdXRlciIpOwogICAgdmFyIHN0eWxlID0gb3V0ZXIuc3R5bGU7CgogICAgc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwogICAgc3R5bGUubGVmdCA9ICItMTAwMDBweCI7CiAgICBzdHlsZS5vdmVyZmxvdyA9ICJoaWRkZW4iOwogICAgc3R5bGUud2lkdGggPSAiMjAwcHgiOwogICAgc3R5bGUubWluV2lkdGggPSAiMHB4IjsKICAgIHN0eWxlLmhlaWdodCA9ICIxNTBweCI7CiAgICBzdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKCiAgICBvdXRlci5hcHBlbmRDaGlsZChpbm5lcik7CgogICAgdmFyIGJvZHkgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7CiAgICBib2R5LmFwcGVuZENoaWxkKG91dGVyKTsKCiAgICB2YXIgbm9TY3JvbGxiYXIgPSBpbm5lci5vZmZzZXRXaWR0aDsKCiAgICBzdHlsZS5vdmVyZmxvdyA9ICJzY3JvbGwiOwogICAgdmFyIHdpdGhTY3JvbGxiYXIgPSBpbm5lci5vZmZzZXRXaWR0aDsKCiAgICBpZiAobm9TY3JvbGxiYXIgPT0gd2l0aFNjcm9sbGJhcikgewogICAgICAgIHdpdGhTY3JvbGxiYXIgPSBvdXRlci5jbGllbnRXaWR0aDsKICAgIH0KCiAgICBib2R5LnJlbW92ZUNoaWxkKG91dGVyKTsKCiAgICByZXR1cm4gbm9TY3JvbGxiYXItd2l0aFNjcm9sbGJhcjsKfTsKZXhwb3J0cy5zZXRJbm5lckh0bWwgPSBmdW5jdGlvbihlbCwgaW5uZXJIdG1sKSB7CiAgICB2YXIgZWxlbWVudCA9IGVsLmNsb25lTm9kZShmYWxzZSk7Ly9kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gaW5uZXJIdG1sOwogICAgZWwucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZWxlbWVudCwgZWwpOwogICAgcmV0dXJuIGVsZW1lbnQ7Cn07CgpleHBvcnRzLnNldElubmVyVGV4dCA9IGZ1bmN0aW9uKGVsLCBpbm5lclRleHQpIHsKICAgIHZhciBkb2N1bWVudCA9IGVsLm93bmVyRG9jdW1lbnQ7CiAgICBpZiAoZG9jdW1lbnQuYm9keSAmJiAidGV4dENvbnRlbnQiIGluIGRvY3VtZW50LmJvZHkpCiAgICAgICAgZWwudGV4dENvbnRlbnQgPSBpbm5lclRleHQ7CiAgICBlbHNlCiAgICAgICAgZWwuaW5uZXJUZXh0ID0gaW5uZXJUZXh0OwoKfTsKCmV4cG9ydHMuZ2V0SW5uZXJUZXh0ID0gZnVuY3Rpb24oZWwpIHsKICAgIHZhciBkb2N1bWVudCA9IGVsLm93bmVyRG9jdW1lbnQ7CiAgICBpZiAoZG9jdW1lbnQuYm9keSAmJiAidGV4dENvbnRlbnQiIGluIGRvY3VtZW50LmJvZHkpCiAgICAgICAgcmV0dXJuIGVsLnRleHRDb250ZW50OwogICAgZWxzZQogICAgICAgICByZXR1cm4gZWwuaW5uZXJUZXh0IHx8IGVsLnRleHRDb250ZW50IHx8ICIiOwp9OwoKZXhwb3J0cy5nZXRQYXJlbnRXaW5kb3cgPSBmdW5jdGlvbihkb2N1bWVudCkgewogICAgcmV0dXJuIGRvY3VtZW50LmRlZmF1bHRWaWV3IHx8IGRvY3VtZW50LnBhcmVudFdpbmRvdzsKfTsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL2xpYi9ldmVudCcsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9rZXlzJywgJ2FjZS9saWIvdXNlcmFnZW50JywgJ2FjZS9saWIvZG9tJ10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBrZXlzID0gcmVxdWlyZSgiLi9rZXlzIik7CnZhciB1c2VyYWdlbnQgPSByZXF1aXJlKCIuL3VzZXJhZ2VudCIpOwp2YXIgZG9tID0gcmVxdWlyZSgiLi9kb20iKTsKCmV4cG9ydHMuYWRkTGlzdGVuZXIgPSBmdW5jdGlvbihlbGVtLCB0eXBlLCBjYWxsYmFjaykgewogICAgaWYgKGVsZW0uYWRkRXZlbnRMaXN0ZW5lcikgewogICAgICAgIHJldHVybiBlbGVtLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgY2FsbGJhY2ssIGZhbHNlKTsKICAgIH0KICAgIGlmIChlbGVtLmF0dGFjaEV2ZW50KSB7CiAgICAgICAgdmFyIHdyYXBwZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgY2FsbGJhY2sod2luZG93LmV2ZW50KTsKICAgICAgICB9OwogICAgICAgIGNhbGxiYWNrLl93cmFwcGVyID0gd3JhcHBlcjsKICAgICAgICBlbGVtLmF0dGFjaEV2ZW50KCJvbiIgKyB0eXBlLCB3cmFwcGVyKTsKICAgIH0KfTsKCmV4cG9ydHMucmVtb3ZlTGlzdGVuZXIgPSBmdW5jdGlvbihlbGVtLCB0eXBlLCBjYWxsYmFjaykgewogICAgaWYgKGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lcikgewogICAgICAgIHJldHVybiBlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgY2FsbGJhY2ssIGZhbHNlKTsKICAgIH0KICAgIGlmIChlbGVtLmRldGFjaEV2ZW50KSB7CiAgICAgICAgZWxlbS5kZXRhY2hFdmVudCgib24iICsgdHlwZSwgY2FsbGJhY2suX3dyYXBwZXIgfHwgY2FsbGJhY2spOwogICAgfQp9OwpleHBvcnRzLnN0b3BFdmVudCA9IGZ1bmN0aW9uKGUpIHsKICAgIGV4cG9ydHMuc3RvcFByb3BhZ2F0aW9uKGUpOwogICAgZXhwb3J0cy5wcmV2ZW50RGVmYXVsdChlKTsKICAgIHJldHVybiBmYWxzZTsKfTsKCmV4cG9ydHMuc3RvcFByb3BhZ2F0aW9uID0gZnVuY3Rpb24oZSkgewogICAgaWYgKGUuc3RvcFByb3BhZ2F0aW9uKQogICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICBlbHNlCiAgICAgICAgZS5jYW5jZWxCdWJibGUgPSB0cnVlOwp9OwoKZXhwb3J0cy5wcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uKGUpIHsKICAgIGlmIChlLnByZXZlbnREZWZhdWx0KQogICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgIGVsc2UKICAgICAgICBlLnJldHVyblZhbHVlID0gZmFsc2U7Cn07CmV4cG9ydHMuZ2V0QnV0dG9uID0gZnVuY3Rpb24oZSkgewogICAgaWYgKGUudHlwZSA9PSAiZGJsY2xpY2siKQogICAgICAgIHJldHVybiAwOwogICAgaWYgKGUudHlwZSA9PSAiY29udGV4dG1lbnUiIHx8IChlLmN0cmxLZXkgJiYgdXNlcmFnZW50LmlzTWFjKSkKICAgICAgICByZXR1cm4gMjsKICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSB7CiAgICAgICAgcmV0dXJuIGUuYnV0dG9uOwogICAgfQogICAgZWxzZSB7CiAgICAgICAgcmV0dXJuIHsxOjAsIDI6MiwgNDoxfVtlLmJ1dHRvbl07CiAgICB9Cn07CgppZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNldENhcHR1cmUpIHsKICAgIGV4cG9ydHMuY2FwdHVyZSA9IGZ1bmN0aW9uKGVsLCBldmVudEhhbmRsZXIsIHJlbGVhc2VDYXB0dXJlSGFuZGxlcikgewogICAgICAgIHZhciBjYWxsZWQgPSBmYWxzZTsKICAgICAgICBmdW5jdGlvbiBvblJlbGVhc2VDYXB0dXJlKGUpIHsKICAgICAgICAgICAgZXZlbnRIYW5kbGVyKGUpOwoKICAgICAgICAgICAgaWYgKCFjYWxsZWQpIHsKICAgICAgICAgICAgICAgIGNhbGxlZCA9IHRydWU7CiAgICAgICAgICAgICAgICByZWxlYXNlQ2FwdHVyZUhhbmRsZXIoZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGV4cG9ydHMucmVtb3ZlTGlzdGVuZXIoZWwsICJtb3VzZW1vdmUiLCBldmVudEhhbmRsZXIpOwogICAgICAgICAgICBleHBvcnRzLnJlbW92ZUxpc3RlbmVyKGVsLCAibW91c2V1cCIsIG9uUmVsZWFzZUNhcHR1cmUpOwogICAgICAgICAgICBleHBvcnRzLnJlbW92ZUxpc3RlbmVyKGVsLCAibG9zZWNhcHR1cmUiLCBvblJlbGVhc2VDYXB0dXJlKTsKCiAgICAgICAgICAgIGVsLnJlbGVhc2VDYXB0dXJlKCk7CiAgICAgICAgfQoKICAgICAgICBleHBvcnRzLmFkZExpc3RlbmVyKGVsLCAibW91c2Vtb3ZlIiwgZXZlbnRIYW5kbGVyKTsKICAgICAgICBleHBvcnRzLmFkZExpc3RlbmVyKGVsLCAibW91c2V1cCIsIG9uUmVsZWFzZUNhcHR1cmUpOwogICAgICAgIGV4cG9ydHMuYWRkTGlzdGVuZXIoZWwsICJsb3NlY2FwdHVyZSIsIG9uUmVsZWFzZUNhcHR1cmUpOwogICAgICAgIGVsLnNldENhcHR1cmUoKTsKICAgIH07Cn0KZWxzZSB7CiAgICBleHBvcnRzLmNhcHR1cmUgPSBmdW5jdGlvbihlbCwgZXZlbnRIYW5kbGVyLCByZWxlYXNlQ2FwdHVyZUhhbmRsZXIpIHsKICAgICAgICBmdW5jdGlvbiBvbk1vdXNlVXAoZSkgewogICAgICAgICAgICBldmVudEhhbmRsZXIgJiYgZXZlbnRIYW5kbGVyKGUpOwogICAgICAgICAgICByZWxlYXNlQ2FwdHVyZUhhbmRsZXIgJiYgcmVsZWFzZUNhcHR1cmVIYW5kbGVyKGUpOwoKICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIiwgZXZlbnRIYW5kbGVyLCB0cnVlKTsKICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2V1cCIsIG9uTW91c2VVcCwgdHJ1ZSk7CgogICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgIH0KCiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIiwgZXZlbnRIYW5kbGVyLCB0cnVlKTsKICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZXVwIiwgb25Nb3VzZVVwLCB0cnVlKTsKICAgIH07Cn0KCmV4cG9ydHMuYWRkTW91c2VXaGVlbExpc3RlbmVyID0gZnVuY3Rpb24oZWwsIGNhbGxiYWNrKSB7CiAgICB2YXIgZmFjdG9yID0gODsKICAgIHZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICBpZiAoZS53aGVlbERlbHRhICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgaWYgKGUud2hlZWxEZWx0YVggIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgZS53aGVlbFggPSAtZS53aGVlbERlbHRhWCAvIGZhY3RvcjsKICAgICAgICAgICAgICAgIGUud2hlZWxZID0gLWUud2hlZWxEZWx0YVkgLyBmYWN0b3I7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBlLndoZWVsWCA9IDA7CiAgICAgICAgICAgICAgICBlLndoZWVsWSA9IC1lLndoZWVsRGVsdGEgLyBmYWN0b3I7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIGlmIChlLmF4aXMgJiYgZS5heGlzID09IGUuSE9SSVpPTlRBTF9BWElTKSB7CiAgICAgICAgICAgICAgICBlLndoZWVsWCA9IChlLmRldGFpbCB8fCAwKSAqIDU7CiAgICAgICAgICAgICAgICBlLndoZWVsWSA9IDA7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBlLndoZWVsWCA9IDA7CiAgICAgICAgICAgICAgICBlLndoZWVsWSA9IChlLmRldGFpbCB8fCAwKSAqIDU7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY2FsbGJhY2soZSk7CiAgICB9OwogICAgZXhwb3J0cy5hZGRMaXN0ZW5lcihlbCwgIkRPTU1vdXNlU2Nyb2xsIiwgbGlzdGVuZXIpOwogICAgZXhwb3J0cy5hZGRMaXN0ZW5lcihlbCwgIm1vdXNld2hlZWwiLCBsaXN0ZW5lcik7Cn07CgpleHBvcnRzLmFkZE11bHRpTW91c2VEb3duTGlzdGVuZXIgPSBmdW5jdGlvbihlbCwgdGltZW91dHMsIGV2ZW50SGFuZGxlciwgY2FsbGJhY2tOYW1lKSB7CiAgICB2YXIgY2xpY2tzID0gMDsKICAgIHZhciBzdGFydFgsIHN0YXJ0WSwgdGltZXI7CiAgICB2YXIgZXZlbnROYW1lcyA9IHsKICAgICAgICAyOiAiZGJsY2xpY2siLAogICAgICAgIDM6ICJ0cmlwbGVjbGljayIsCiAgICAgICAgNDogInF1YWRjbGljayIKICAgIH07CgogICAgZXhwb3J0cy5hZGRMaXN0ZW5lcihlbCwgIm1vdXNlZG93biIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICBpZiAoZXhwb3J0cy5nZXRCdXR0b24oZSkgIT0gMCkgewogICAgICAgICAgICBjbGlja3MgPSAwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBpc05ld0NsaWNrID0gTWF0aC5hYnMoZS5jbGllbnRYIC0gc3RhcnRYKSA+IDUgfHwgTWF0aC5hYnMoZS5jbGllbnRZIC0gc3RhcnRZKSA+IDU7CgogICAgICAgICAgICBpZiAoIXRpbWVyIHx8IGlzTmV3Q2xpY2spCiAgICAgICAgICAgICAgICBjbGlja3MgPSAwOwoKICAgICAgICAgICAgY2xpY2tzICs9IDE7CgogICAgICAgICAgICBpZiAodGltZXIpCiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpCiAgICAgICAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHt0aW1lciA9IG51bGx9LCB0aW1lb3V0c1tjbGlja3MgLSAxXSB8fCA2MDApOwogICAgICAgIH0KICAgICAgICBpZiAoY2xpY2tzID09IDEpIHsKICAgICAgICAgICAgc3RhcnRYID0gZS5jbGllbnRYOwogICAgICAgICAgICBzdGFydFkgPSBlLmNsaWVudFk7CiAgICAgICAgfQoKICAgICAgICBldmVudEhhbmRsZXJbY2FsbGJhY2tOYW1lXSgibW91c2Vkb3duIiwgZSk7CgogICAgICAgIGlmIChjbGlja3MgPiA0KQogICAgICAgICAgICBjbGlja3MgPSAwOwogICAgICAgIGVsc2UgaWYgKGNsaWNrcyA+IDEpCiAgICAgICAgICAgIHJldHVybiBldmVudEhhbmRsZXJbY2FsbGJhY2tOYW1lXShldmVudE5hbWVzW2NsaWNrc10sIGUpOwogICAgfSk7CgogICAgaWYgKHVzZXJhZ2VudC5pc09sZElFKSB7CiAgICAgICAgZXhwb3J0cy5hZGRMaXN0ZW5lcihlbCwgImRibGNsaWNrIiwgZnVuY3Rpb24oZSkgewogICAgICAgICAgICBjbGlja3MgPSAyOwogICAgICAgICAgICBpZiAodGltZXIpCiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpOwogICAgICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7dGltZXIgPSBudWxsfSwgdGltZW91dHNbY2xpY2tzIC0gMV0gfHwgNjAwKTsKICAgICAgICAgICAgZXZlbnRIYW5kbGVyW2NhbGxiYWNrTmFtZV0oIm1vdXNlZG93biIsIGUpOwogICAgICAgICAgICBldmVudEhhbmRsZXJbY2FsbGJhY2tOYW1lXShldmVudE5hbWVzW2NsaWNrc10sIGUpOwogICAgICAgIH0pOwogICAgfQp9OwoKZnVuY3Rpb24gbm9ybWFsaXplQ29tbWFuZEtleXMoY2FsbGJhY2ssIGUsIGtleUNvZGUpIHsKICAgIHZhciBoYXNoSWQgPSAwOwogICAgaWYgKCh1c2VyYWdlbnQuaXNPcGVyYSAmJiAhKCJLZXlib2FyZEV2ZW50IiBpbiB3aW5kb3cpKSAmJiB1c2VyYWdlbnQuaXNNYWMpIHsKICAgICAgICBoYXNoSWQgPSAwIHwgKGUubWV0YUtleSA/IDEgOiAwKSB8IChlLmFsdEtleSA/IDIgOiAwKQogICAgICAgICAgICB8IChlLnNoaWZ0S2V5ID8gNCA6IDApIHwgKGUuY3RybEtleSA/IDggOiAwKTsKICAgIH0gZWxzZSB7CiAgICAgICAgaGFzaElkID0gMCB8IChlLmN0cmxLZXkgPyAxIDogMCkgfCAoZS5hbHRLZXkgPyAyIDogMCkKICAgICAgICAgICAgfCAoZS5zaGlmdEtleSA/IDQgOiAwKSB8IChlLm1ldGFLZXkgPyA4IDogMCk7CiAgICB9CgogICAgaWYgKGtleUNvZGUgaW4ga2V5cy5NT0RJRklFUl9LRVlTKSB7CiAgICAgICAgc3dpdGNoIChrZXlzLk1PRElGSUVSX0tFWVNba2V5Q29kZV0pIHsKICAgICAgICAgICAgY2FzZSAiQWx0IjoKICAgICAgICAgICAgICAgIGhhc2hJZCA9IDI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAiU2hpZnQiOgogICAgICAgICAgICAgICAgaGFzaElkID0gNDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlICJDdHJsIjoKICAgICAgICAgICAgICAgIGhhc2hJZCA9IDE7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIGhhc2hJZCA9IDg7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAga2V5Q29kZSA9IDA7CiAgICB9CgogICAgaWYgKGhhc2hJZCAmIDggJiYgKGtleUNvZGUgPT0gOTEgfHwga2V5Q29kZSA9PSA5MykpIHsKICAgICAgICBrZXlDb2RlID0gMDsKICAgIH0KICAgIGlmICghaGFzaElkICYmICEoa2V5Q29kZSBpbiBrZXlzLkZVTkNUSU9OX0tFWVMpICYmICEoa2V5Q29kZSBpbiBrZXlzLlBSSU5UQUJMRV9LRVlTKSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIHJldHVybiBjYWxsYmFjayhlLCBoYXNoSWQsIGtleUNvZGUpOwp9CgpleHBvcnRzLmFkZENvbW1hbmRLZXlMaXN0ZW5lciA9IGZ1bmN0aW9uKGVsLCBjYWxsYmFjaykgewogICAgdmFyIGFkZExpc3RlbmVyID0gZXhwb3J0cy5hZGRMaXN0ZW5lcjsKICAgIGlmICh1c2VyYWdlbnQuaXNPbGRHZWNrbyB8fCAodXNlcmFnZW50LmlzT3BlcmEgJiYgISgiS2V5Ym9hcmRFdmVudCIgaW4gd2luZG93KSkpIHsKICAgICAgICB2YXIgbGFzdEtleURvd25LZXlDb2RlID0gbnVsbDsKICAgICAgICBhZGRMaXN0ZW5lcihlbCwgImtleWRvd24iLCBmdW5jdGlvbihlKSB7CiAgICAgICAgICAgIGxhc3RLZXlEb3duS2V5Q29kZSA9IGUua2V5Q29kZTsKICAgICAgICB9KTsKICAgICAgICBhZGRMaXN0ZW5lcihlbCwgImtleXByZXNzIiwgZnVuY3Rpb24oZSkgewogICAgICAgICAgICByZXR1cm4gbm9ybWFsaXplQ29tbWFuZEtleXMoY2FsbGJhY2ssIGUsIGxhc3RLZXlEb3duS2V5Q29kZSk7CiAgICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICAgIHZhciBsYXN0RG93biA9IG51bGw7CgogICAgICAgIGFkZExpc3RlbmVyKGVsLCAia2V5ZG93biIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgbGFzdERvd24gPSBlLmtleUlkZW50aWZpZXIgfHwgZS5rZXlDb2RlOwogICAgICAgICAgICByZXR1cm4gbm9ybWFsaXplQ29tbWFuZEtleXMoY2FsbGJhY2ssIGUsIGUua2V5Q29kZSk7CiAgICAgICAgfSk7CiAgICB9Cn07CgppZiAod2luZG93LnBvc3RNZXNzYWdlICYmICF1c2VyYWdlbnQuaXNPbGRJRSkgewogICAgdmFyIHBvc3RNZXNzYWdlSWQgPSAxOwogICAgZXhwb3J0cy5uZXh0VGljayA9IGZ1bmN0aW9uKGNhbGxiYWNrLCB3aW4pIHsKICAgICAgICB3aW4gPSB3aW4gfHwgd2luZG93OwogICAgICAgIHZhciBtZXNzYWdlTmFtZSA9ICJ6ZXJvLXRpbWVvdXQtbWVzc2FnZS0iICsgcG9zdE1lc3NhZ2VJZDsKICAgICAgICBleHBvcnRzLmFkZExpc3RlbmVyKHdpbiwgIm1lc3NhZ2UiLCBmdW5jdGlvbiBsaXN0ZW5lcihlKSB7CiAgICAgICAgICAgIGlmIChlLmRhdGEgPT0gbWVzc2FnZU5hbWUpIHsKICAgICAgICAgICAgICAgIGV4cG9ydHMuc3RvcFByb3BhZ2F0aW9uKGUpOwogICAgICAgICAgICAgICAgZXhwb3J0cy5yZW1vdmVMaXN0ZW5lcih3aW4sICJtZXNzYWdlIiwgbGlzdGVuZXIpOwogICAgICAgICAgICAgICAgY2FsbGJhY2soKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHdpbi5wb3N0TWVzc2FnZShtZXNzYWdlTmFtZSwgIioiKTsKICAgIH07Cn0KCgpleHBvcnRzLm5leHRGcmFtZSA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwKICAgIHdpbmRvdy5vUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8CiAgICB3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwKICAgIHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwKICAgIHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWU7CgppZiAoZXhwb3J0cy5uZXh0RnJhbWUpCiAgICBleHBvcnRzLm5leHRGcmFtZSA9IGV4cG9ydHMubmV4dEZyYW1lLmJpbmQod2luZG93KTsKZWxzZQogICAgZXhwb3J0cy5uZXh0RnJhbWUgPSBmdW5jdGlvbihjYWxsYmFjaykgewogICAgICAgIHNldFRpbWVvdXQoY2FsbGJhY2ssIDE3KTsKICAgIH07Cn0pOwoKYWNlLmRlZmluZSgnYWNlL2xpYi9rZXlzJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL29vcCddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgb29wID0gcmVxdWlyZSgiLi9vb3AiKTsKdmFyIEtleXMgPSAoZnVuY3Rpb24oKSB7CiAgICB2YXIgcmV0ID0gewogICAgICAgIE1PRElGSUVSX0tFWVM6IHsKICAgICAgICAgICAgMTY6ICdTaGlmdCcsIDE3OiAnQ3RybCcsIDE4OiAnQWx0JywgMjI0OiAnTWV0YScKICAgICAgICB9LAoKICAgICAgICBLRVlfTU9EUzogewogICAgICAgICAgICAiY3RybCI6IDEsICJhbHQiOiAyLCAib3B0aW9uIiA6IDIsCiAgICAgICAgICAgICJzaGlmdCI6IDQsICJtZXRhIjogOCwgImNvbW1hbmQiOiA4CiAgICAgICAgfSwKCiAgICAgICAgRlVOQ1RJT05fS0VZUyA6IHsKICAgICAgICAgICAgOCAgOiAiQmFja3NwYWNlIiwKICAgICAgICAgICAgOSAgOiAiVGFiIiwKICAgICAgICAgICAgMTMgOiAiUmV0dXJuIiwKICAgICAgICAgICAgMTkgOiAiUGF1c2UiLAogICAgICAgICAgICAyNyA6ICJFc2MiLAogICAgICAgICAgICAzMiA6ICJTcGFjZSIsCiAgICAgICAgICAgIDMzIDogIlBhZ2VVcCIsCiAgICAgICAgICAgIDM0IDogIlBhZ2VEb3duIiwKICAgICAgICAgICAgMzUgOiAiRW5kIiwKICAgICAgICAgICAgMzYgOiAiSG9tZSIsCiAgICAgICAgICAgIDM3IDogIkxlZnQiLAogICAgICAgICAgICAzOCA6ICJVcCIsCiAgICAgICAgICAgIDM5IDogIlJpZ2h0IiwKICAgICAgICAgICAgNDAgOiAiRG93biIsCiAgICAgICAgICAgIDQ0IDogIlByaW50IiwKICAgICAgICAgICAgNDUgOiAiSW5zZXJ0IiwKICAgICAgICAgICAgNDYgOiAiRGVsZXRlIiwKICAgICAgICAgICAgOTYgOiAiTnVtcGFkMCIsCiAgICAgICAgICAgIDk3IDogIk51bXBhZDEiLAogICAgICAgICAgICA5OCA6ICJOdW1wYWQyIiwKICAgICAgICAgICAgOTkgOiAiTnVtcGFkMyIsCiAgICAgICAgICAgIDEwMDogIk51bXBhZDQiLAogICAgICAgICAgICAxMDE6ICJOdW1wYWQ1IiwKICAgICAgICAgICAgMTAyOiAiTnVtcGFkNiIsCiAgICAgICAgICAgIDEwMzogIk51bXBhZDciLAogICAgICAgICAgICAxMDQ6ICJOdW1wYWQ4IiwKICAgICAgICAgICAgMTA1OiAiTnVtcGFkOSIsCiAgICAgICAgICAgIDExMjogIkYxIiwKICAgICAgICAgICAgMTEzOiAiRjIiLAogICAgICAgICAgICAxMTQ6ICJGMyIsCiAgICAgICAgICAgIDExNTogIkY0IiwKICAgICAgICAgICAgMTE2OiAiRjUiLAogICAgICAgICAgICAxMTc6ICJGNiIsCiAgICAgICAgICAgIDExODogIkY3IiwKICAgICAgICAgICAgMTE5OiAiRjgiLAogICAgICAgICAgICAxMjA6ICJGOSIsCiAgICAgICAgICAgIDEyMTogIkYxMCIsCiAgICAgICAgICAgIDEyMjogIkYxMSIsCiAgICAgICAgICAgIDEyMzogIkYxMiIsCiAgICAgICAgICAgIDE0NDogIk51bWxvY2siLAogICAgICAgICAgICAxNDU6ICJTY3JvbGxsb2NrIgogICAgICAgIH0sCgogICAgICAgIFBSSU5UQUJMRV9LRVlTOiB7CiAgICAgICAgICAgMzI6ICcgJywgIDQ4OiAnMCcsICA0OTogJzEnLCAgNTA6ICcyJywgIDUxOiAnMycsICA1MjogJzQnLCA1MzogICc1JywKICAgICAgICAgICA1NDogJzYnLCAgNTU6ICc3JywgIDU2OiAnOCcsICA1NzogJzknLCAgNTk6ICc7JywgIDYxOiAnPScsIDY1OiAgJ2EnLAogICAgICAgICAgIDY2OiAnYicsICA2NzogJ2MnLCAgNjg6ICdkJywgIDY5OiAnZScsICA3MDogJ2YnLCAgNzE6ICdnJywgNzI6ICAnaCcsCiAgICAgICAgICAgNzM6ICdpJywgIDc0OiAnaicsICA3NTogJ2snLCAgNzY6ICdsJywgIDc3OiAnbScsICA3ODogJ24nLCA3OTogICdvJywKICAgICAgICAgICA4MDogJ3AnLCAgODE6ICdxJywgIDgyOiAncicsICA4MzogJ3MnLCAgODQ6ICd0JywgIDg1OiAndScsIDg2OiAgJ3YnLAogICAgICAgICAgIDg3OiAndycsICA4ODogJ3gnLCAgODk6ICd5JywgIDkwOiAneicsIDEwNzogJysnLCAxMDk6ICctJywgMTEwOiAnLicsCiAgICAgICAgICAxODg6ICcsJywgMTkwOiAnLicsIDE5MTogJy8nLCAxOTI6ICdgJywgMjE5OiAnWycsIDIyMDogJ1xcJywKICAgICAgICAgIDIyMTogJ10nLCAyMjI6ICdcJycKICAgICAgICB9CiAgICB9OwogICAgZm9yICh2YXIgaSBpbiByZXQuRlVOQ1RJT05fS0VZUykgewogICAgICAgIHZhciBuYW1lID0gcmV0LkZVTkNUSU9OX0tFWVNbaV0udG9Mb3dlckNhc2UoKTsKICAgICAgICByZXRbbmFtZV0gPSBwYXJzZUludChpLCAxMCk7CiAgICB9CiAgICBvb3AubWl4aW4ocmV0LCByZXQuTU9ESUZJRVJfS0VZUyk7CiAgICBvb3AubWl4aW4ocmV0LCByZXQuUFJJTlRBQkxFX0tFWVMpOwogICAgb29wLm1peGluKHJldCwgcmV0LkZVTkNUSU9OX0tFWVMpOwogICAgcmV0LmVudGVyID0gcmV0WyJyZXR1cm4iXTsKICAgIHJldC5lc2NhcGUgPSByZXQuZXNjOwogICAgcmV0LmRlbCA9IHJldFsiZGVsZXRlIl07CiAgICByZXRbMTczXSA9ICctJzsKCiAgICByZXR1cm4gcmV0Owp9KSgpOwpvb3AubWl4aW4oZXhwb3J0cywgS2V5cyk7CgpleHBvcnRzLmtleUNvZGVUb1N0cmluZyA9IGZ1bmN0aW9uKGtleUNvZGUpIHsKICAgIHJldHVybiAoS2V5c1trZXlDb2RlXSB8fCBTdHJpbmcuZnJvbUNoYXJDb2RlKGtleUNvZGUpKS50b0xvd2VyQ2FzZSgpOwp9Cgp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9saWIvb29wJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyBdLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgpleHBvcnRzLmluaGVyaXRzID0gKGZ1bmN0aW9uKCkgewogICAgdmFyIHRlbXBDdG9yID0gZnVuY3Rpb24oKSB7fTsKICAgIHJldHVybiBmdW5jdGlvbihjdG9yLCBzdXBlckN0b3IpIHsKICAgICAgICB0ZW1wQ3Rvci5wcm90b3R5cGUgPSBzdXBlckN0b3IucHJvdG90eXBlOwogICAgICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yLnByb3RvdHlwZTsKICAgICAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyB0ZW1wQ3RvcigpOwogICAgICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvcjsKICAgIH07Cn0oKSk7CgpleHBvcnRzLm1peGluID0gZnVuY3Rpb24ob2JqLCBtaXhpbikgewogICAgZm9yICh2YXIga2V5IGluIG1peGluKSB7CiAgICAgICAgb2JqW2tleV0gPSBtaXhpbltrZXldOwogICAgfQp9OwoKZXhwb3J0cy5pbXBsZW1lbnQgPSBmdW5jdGlvbihwcm90bywgbWl4aW4pIHsKICAgIGV4cG9ydHMubWl4aW4ocHJvdG8sIG1peGluKTsKfTsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL2xpYi91c2VyYWdlbnQnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnIF0sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewpleHBvcnRzLk9TID0gewogICAgTElOVVg6ICJMSU5VWCIsCiAgICBNQUM6ICJNQUMiLAogICAgV0lORE9XUzogIldJTkRPV1MiCn07CmV4cG9ydHMuZ2V0T1MgPSBmdW5jdGlvbigpIHsKICAgIGlmIChleHBvcnRzLmlzTWFjKSB7CiAgICAgICAgcmV0dXJuIGV4cG9ydHMuT1MuTUFDOwogICAgfSBlbHNlIGlmIChleHBvcnRzLmlzTGludXgpIHsKICAgICAgICByZXR1cm4gZXhwb3J0cy5PUy5MSU5VWDsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGV4cG9ydHMuT1MuV0lORE9XUzsKICAgIH0KfTsKaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT0gIm9iamVjdCIpCiAgICByZXR1cm47Cgp2YXIgb3MgPSAobmF2aWdhdG9yLnBsYXRmb3JtLm1hdGNoKC9tYWN8d2lufGxpbnV4L2kpIHx8IFsib3RoZXIiXSlbMF0udG9Mb3dlckNhc2UoKTsKdmFyIHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudDsKZXhwb3J0cy5pc1dpbiA9IChvcyA9PSAid2luIik7CmV4cG9ydHMuaXNNYWMgPSAob3MgPT0gIm1hYyIpOwpleHBvcnRzLmlzTGludXggPSAob3MgPT0gImxpbnV4Iik7CmV4cG9ydHMuaXNJRSA9IAogICAgKG5hdmlnYXRvci5hcHBOYW1lID09ICJNaWNyb3NvZnQgSW50ZXJuZXQgRXhwbG9yZXIiIHx8IG5hdmlnYXRvci5hcHBOYW1lLmluZGV4T2YoIk1TQXBwSG9zdCIpID49IDApCiAgICAmJiBwYXJzZUZsb2F0KG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUgKFswLTldK1tcLjAtOV0rKS8pWzFdKTsKICAgIApleHBvcnRzLmlzT2xkSUUgPSBleHBvcnRzLmlzSUUgJiYgZXhwb3J0cy5pc0lFIDwgOTsKZXhwb3J0cy5pc0dlY2tvID0gZXhwb3J0cy5pc01vemlsbGEgPSB3aW5kb3cuY29udHJvbGxlcnMgJiYgd2luZG93Lm5hdmlnYXRvci5wcm9kdWN0ID09PSAiR2Vja28iOwpleHBvcnRzLmlzT2xkR2Vja28gPSBleHBvcnRzLmlzR2Vja28gJiYgcGFyc2VJbnQoKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL3J2XDooXGQrKS8pfHxbXSlbMV0sIDEwKSA8IDQ7CmV4cG9ydHMuaXNPcGVyYSA9IHdpbmRvdy5vcGVyYSAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwod2luZG93Lm9wZXJhKSA9PSAiW29iamVjdCBPcGVyYV0iOwpleHBvcnRzLmlzV2ViS2l0ID0gcGFyc2VGbG9hdCh1YS5zcGxpdCgiV2ViS2l0LyIpWzFdKSB8fCB1bmRlZmluZWQ7CgpleHBvcnRzLmlzQ2hyb21lID0gcGFyc2VGbG9hdCh1YS5zcGxpdCgiIENocm9tZS8iKVsxXSkgfHwgdW5kZWZpbmVkOwoKZXhwb3J0cy5pc0FJUiA9IHVhLmluZGV4T2YoIkFkb2JlQUlSIikgPj0gMDsKCmV4cG9ydHMuaXNJUGFkID0gdWEuaW5kZXhPZigiaVBhZCIpID49IDA7CgpleHBvcnRzLmlzVG91Y2hQYWQgPSB1YS5pbmRleE9mKCJUb3VjaFBhZCIpID49IDA7Cgp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9lZGl0b3InLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvZml4b2xkYnJvd3NlcnMnLCAnYWNlL2xpYi9vb3AnLCAnYWNlL2xpYi9sYW5nJywgJ2FjZS9saWIvdXNlcmFnZW50JywgJ2FjZS9rZXlib2FyZC90ZXh0aW5wdXQnLCAnYWNlL21vdXNlL21vdXNlX2hhbmRsZXInLCAnYWNlL21vdXNlL2ZvbGRfaGFuZGxlcicsICdhY2Uva2V5Ym9hcmQva2V5YmluZGluZycsICdhY2UvZWRpdF9zZXNzaW9uJywgJ2FjZS9zZWFyY2gnLCAnYWNlL3JhbmdlJywgJ2FjZS9saWIvZXZlbnRfZW1pdHRlcicsICdhY2UvY29tbWFuZHMvY29tbWFuZF9tYW5hZ2VyJywgJ2FjZS9jb21tYW5kcy9kZWZhdWx0X2NvbW1hbmRzJywgJ2FjZS9jb25maWcnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKcmVxdWlyZSgiLi9saWIvZml4b2xkYnJvd3NlcnMiKTsKCnZhciBvb3AgPSByZXF1aXJlKCIuL2xpYi9vb3AiKTsKdmFyIGxhbmcgPSByZXF1aXJlKCIuL2xpYi9sYW5nIik7CnZhciB1c2VyYWdlbnQgPSByZXF1aXJlKCIuL2xpYi91c2VyYWdlbnQiKTsKdmFyIFRleHRJbnB1dCA9IHJlcXVpcmUoIi4va2V5Ym9hcmQvdGV4dGlucHV0IikuVGV4dElucHV0Owp2YXIgTW91c2VIYW5kbGVyID0gcmVxdWlyZSgiLi9tb3VzZS9tb3VzZV9oYW5kbGVyIikuTW91c2VIYW5kbGVyOwp2YXIgRm9sZEhhbmRsZXIgPSByZXF1aXJlKCIuL21vdXNlL2ZvbGRfaGFuZGxlciIpLkZvbGRIYW5kbGVyOwp2YXIgS2V5QmluZGluZyA9IHJlcXVpcmUoIi4va2V5Ym9hcmQva2V5YmluZGluZyIpLktleUJpbmRpbmc7CnZhciBFZGl0U2Vzc2lvbiA9IHJlcXVpcmUoIi4vZWRpdF9zZXNzaW9uIikuRWRpdFNlc3Npb247CnZhciBTZWFyY2ggPSByZXF1aXJlKCIuL3NlYXJjaCIpLlNlYXJjaDsKdmFyIFJhbmdlID0gcmVxdWlyZSgiLi9yYW5nZSIpLlJhbmdlOwp2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgiLi9saWIvZXZlbnRfZW1pdHRlciIpLkV2ZW50RW1pdHRlcjsKdmFyIENvbW1hbmRNYW5hZ2VyID0gcmVxdWlyZSgiLi9jb21tYW5kcy9jb21tYW5kX21hbmFnZXIiKS5Db21tYW5kTWFuYWdlcjsKdmFyIGRlZmF1bHRDb21tYW5kcyA9IHJlcXVpcmUoIi4vY29tbWFuZHMvZGVmYXVsdF9jb21tYW5kcyIpLmNvbW1hbmRzOwp2YXIgY29uZmlnID0gcmVxdWlyZSgiLi9jb25maWciKTsKdmFyIEVkaXRvciA9IGZ1bmN0aW9uKHJlbmRlcmVyLCBzZXNzaW9uKSB7CiAgICB2YXIgY29udGFpbmVyID0gcmVuZGVyZXIuZ2V0Q29udGFpbmVyRWxlbWVudCgpOwogICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7CiAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7CgogICAgdGhpcy5jb21tYW5kcyA9IG5ldyBDb21tYW5kTWFuYWdlcih1c2VyYWdlbnQuaXNNYWMgPyAibWFjIiA6ICJ3aW4iLCBkZWZhdWx0Q29tbWFuZHMpOwogICAgdGhpcy50ZXh0SW5wdXQgID0gbmV3IFRleHRJbnB1dChyZW5kZXJlci5nZXRUZXh0QXJlYUNvbnRhaW5lcigpLCB0aGlzKTsKICAgIHRoaXMucmVuZGVyZXIudGV4dGFyZWEgPSB0aGlzLnRleHRJbnB1dC5nZXRFbGVtZW50KCk7CiAgICB0aGlzLmtleUJpbmRpbmcgPSBuZXcgS2V5QmluZGluZyh0aGlzKTsKICAgIHRoaXMuJG1vdXNlSGFuZGxlciA9IG5ldyBNb3VzZUhhbmRsZXIodGhpcyk7CiAgICBuZXcgRm9sZEhhbmRsZXIodGhpcyk7CgogICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcgPSAwOwogICAgdGhpcy4kc2VhcmNoID0gbmV3IFNlYXJjaCgpLnNldCh7CiAgICAgICAgd3JhcDogdHJ1ZQogICAgfSk7CgogICAgdGhpcy5zZXRTZXNzaW9uKHNlc3Npb24gfHwgbmV3IEVkaXRTZXNzaW9uKCIiKSk7Cn07CgooZnVuY3Rpb24oKXsKCiAgICBvb3AuaW1wbGVtZW50KHRoaXMsIEV2ZW50RW1pdHRlcik7CiAgICB0aGlzLnNldEtleWJvYXJkSGFuZGxlciA9IGZ1bmN0aW9uKGtleWJvYXJkSGFuZGxlcikgewogICAgICAgIGlmICh0eXBlb2Yga2V5Ym9hcmRIYW5kbGVyID09ICJzdHJpbmciICYmIGtleWJvYXJkSGFuZGxlcikgewogICAgICAgICAgICB0aGlzLiRrZXliaW5kaW5nSWQgPSBrZXlib2FyZEhhbmRsZXI7CiAgICAgICAgICAgIHZhciBfc2VsZiA9IHRoaXM7CiAgICAgICAgICAgIGNvbmZpZy5sb2FkTW9kdWxlKFsia2V5YmluZGluZyIsIGtleWJvYXJkSGFuZGxlcl0sIGZ1bmN0aW9uKG1vZHVsZSkgewogICAgICAgICAgICAgICAgaWYgKF9zZWxmLiRrZXliaW5kaW5nSWQgPT0ga2V5Ym9hcmRIYW5kbGVyKQogICAgICAgICAgICAgICAgICAgIF9zZWxmLmtleUJpbmRpbmcuc2V0S2V5Ym9hcmRIYW5kbGVyKG1vZHVsZSAmJiBtb2R1bGUuaGFuZGxlcik7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLiRrZXliaW5kaW5nSWQ7CiAgICAgICAgICAgIHRoaXMua2V5QmluZGluZy5zZXRLZXlib2FyZEhhbmRsZXIoa2V5Ym9hcmRIYW5kbGVyKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5nZXRLZXlib2FyZEhhbmRsZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5rZXlCaW5kaW5nLmdldEtleWJvYXJkSGFuZGxlcigpOwogICAgfTsKICAgIHRoaXMuc2V0U2Vzc2lvbiA9IGZ1bmN0aW9uKHNlc3Npb24pIHsKICAgICAgICBpZiAodGhpcy5zZXNzaW9uID09IHNlc3Npb24pCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgaWYgKHRoaXMuc2Vzc2lvbikgewogICAgICAgICAgICB2YXIgb2xkU2Vzc2lvbiA9IHRoaXMuc2Vzc2lvbjsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIHRoaXMuJG9uRG9jdW1lbnRDaGFuZ2UpOwogICAgICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2hhbmdlTW9kZSIsIHRoaXMuJG9uQ2hhbmdlTW9kZSk7CiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmVFdmVudExpc3RlbmVyKCJ0b2tlbml6ZXJVcGRhdGUiLCB0aGlzLiRvblRva2VuaXplclVwZGF0ZSk7CiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmVFdmVudExpc3RlbmVyKCJjaGFuZ2VUYWJTaXplIiwgdGhpcy4kb25DaGFuZ2VUYWJTaXplKTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZVdyYXBMaW1pdCIsIHRoaXMuJG9uQ2hhbmdlV3JhcExpbWl0KTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZVdyYXBNb2RlIiwgdGhpcy4kb25DaGFuZ2VXcmFwTW9kZSk7CiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmVFdmVudExpc3RlbmVyKCJvbkNoYW5nZUZvbGQiLCB0aGlzLiRvbkNoYW5nZUZvbGQpOwogICAgICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2hhbmdlRnJvbnRNYXJrZXIiLCB0aGlzLiRvbkNoYW5nZUZyb250TWFya2VyKTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZUJhY2tNYXJrZXIiLCB0aGlzLiRvbkNoYW5nZUJhY2tNYXJrZXIpOwogICAgICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2hhbmdlQnJlYWtwb2ludCIsIHRoaXMuJG9uQ2hhbmdlQnJlYWtwb2ludCk7CiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmVFdmVudExpc3RlbmVyKCJjaGFuZ2VBbm5vdGF0aW9uIiwgdGhpcy4kb25DaGFuZ2VBbm5vdGF0aW9uKTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZU92ZXJ3cml0ZSIsIHRoaXMuJG9uQ3Vyc29yQ2hhbmdlKTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZVNjcm9sbFRvcCIsIHRoaXMuJG9uU2Nyb2xsVG9wQ2hhbmdlKTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZUxlZnRUb3AiLCB0aGlzLiRvblNjcm9sbExlZnRDaGFuZ2UpOwoKICAgICAgICAgICAgdmFyIHNlbGVjdGlvbiA9IHRoaXMuc2Vzc2lvbi5nZXRTZWxlY3Rpb24oKTsKICAgICAgICAgICAgc2VsZWN0aW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZUN1cnNvciIsIHRoaXMuJG9uQ3Vyc29yQ2hhbmdlKTsKICAgICAgICAgICAgc2VsZWN0aW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZVNlbGVjdGlvbiIsIHRoaXMuJG9uU2VsZWN0aW9uQ2hhbmdlKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuc2Vzc2lvbiA9IHNlc3Npb247CgogICAgICAgIHRoaXMuJG9uRG9jdW1lbnRDaGFuZ2UgPSB0aGlzLm9uRG9jdW1lbnRDaGFuZ2UuYmluZCh0aGlzKTsKICAgICAgICBzZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIHRoaXMuJG9uRG9jdW1lbnRDaGFuZ2UpOwogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U2Vzc2lvbihzZXNzaW9uKTsKCiAgICAgICAgdGhpcy4kb25DaGFuZ2VNb2RlID0gdGhpcy5vbkNoYW5nZU1vZGUuYmluZCh0aGlzKTsKICAgICAgICBzZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZU1vZGUiLCB0aGlzLiRvbkNoYW5nZU1vZGUpOwoKICAgICAgICB0aGlzLiRvblRva2VuaXplclVwZGF0ZSA9IHRoaXMub25Ub2tlbml6ZXJVcGRhdGUuYmluZCh0aGlzKTsKICAgICAgICBzZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoInRva2VuaXplclVwZGF0ZSIsIHRoaXMuJG9uVG9rZW5pemVyVXBkYXRlKTsKCiAgICAgICAgdGhpcy4kb25DaGFuZ2VUYWJTaXplID0gdGhpcy5yZW5kZXJlci5vbkNoYW5nZVRhYlNpemUuYmluZCh0aGlzLnJlbmRlcmVyKTsKICAgICAgICBzZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZVRhYlNpemUiLCB0aGlzLiRvbkNoYW5nZVRhYlNpemUpOwoKICAgICAgICB0aGlzLiRvbkNoYW5nZVdyYXBMaW1pdCA9IHRoaXMub25DaGFuZ2VXcmFwTGltaXQuYmluZCh0aGlzKTsKICAgICAgICBzZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZVdyYXBMaW1pdCIsIHRoaXMuJG9uQ2hhbmdlV3JhcExpbWl0KTsKCiAgICAgICAgdGhpcy4kb25DaGFuZ2VXcmFwTW9kZSA9IHRoaXMub25DaGFuZ2VXcmFwTW9kZS5iaW5kKHRoaXMpOwogICAgICAgIHNlc3Npb24uYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlV3JhcE1vZGUiLCB0aGlzLiRvbkNoYW5nZVdyYXBNb2RlKTsKCiAgICAgICAgdGhpcy4kb25DaGFuZ2VGb2xkID0gdGhpcy5vbkNoYW5nZUZvbGQuYmluZCh0aGlzKTsKICAgICAgICBzZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZUZvbGQiLCB0aGlzLiRvbkNoYW5nZUZvbGQpOwoKICAgICAgICB0aGlzLiRvbkNoYW5nZUZyb250TWFya2VyID0gdGhpcy5vbkNoYW5nZUZyb250TWFya2VyLmJpbmQodGhpcyk7CiAgICAgICAgdGhpcy5zZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZUZyb250TWFya2VyIiwgdGhpcy4kb25DaGFuZ2VGcm9udE1hcmtlcik7CgogICAgICAgIHRoaXMuJG9uQ2hhbmdlQmFja01hcmtlciA9IHRoaXMub25DaGFuZ2VCYWNrTWFya2VyLmJpbmQodGhpcyk7CiAgICAgICAgdGhpcy5zZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZUJhY2tNYXJrZXIiLCB0aGlzLiRvbkNoYW5nZUJhY2tNYXJrZXIpOwoKICAgICAgICB0aGlzLiRvbkNoYW5nZUJyZWFrcG9pbnQgPSB0aGlzLm9uQ2hhbmdlQnJlYWtwb2ludC5iaW5kKHRoaXMpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2VCcmVha3BvaW50IiwgdGhpcy4kb25DaGFuZ2VCcmVha3BvaW50KTsKCiAgICAgICAgdGhpcy4kb25DaGFuZ2VBbm5vdGF0aW9uID0gdGhpcy5vbkNoYW5nZUFubm90YXRpb24uYmluZCh0aGlzKTsKICAgICAgICB0aGlzLnNlc3Npb24uYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlQW5ub3RhdGlvbiIsIHRoaXMuJG9uQ2hhbmdlQW5ub3RhdGlvbik7CgogICAgICAgIHRoaXMuJG9uQ3Vyc29yQ2hhbmdlID0gdGhpcy5vbkN1cnNvckNoYW5nZS5iaW5kKHRoaXMpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2VPdmVyd3JpdGUiLCB0aGlzLiRvbkN1cnNvckNoYW5nZSk7CgogICAgICAgIHRoaXMuJG9uU2Nyb2xsVG9wQ2hhbmdlID0gdGhpcy5vblNjcm9sbFRvcENoYW5nZS5iaW5kKHRoaXMpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2VTY3JvbGxUb3AiLCB0aGlzLiRvblNjcm9sbFRvcENoYW5nZSk7CgogICAgICAgIHRoaXMuJG9uU2Nyb2xsTGVmdENoYW5nZSA9IHRoaXMub25TY3JvbGxMZWZ0Q2hhbmdlLmJpbmQodGhpcyk7CiAgICAgICAgdGhpcy5zZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZVNjcm9sbExlZnQiLCB0aGlzLiRvblNjcm9sbExlZnRDaGFuZ2UpOwoKICAgICAgICB0aGlzLnNlbGVjdGlvbiA9IHNlc3Npb24uZ2V0U2VsZWN0aW9uKCk7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlQ3Vyc29yIiwgdGhpcy4kb25DdXJzb3JDaGFuZ2UpOwoKICAgICAgICB0aGlzLiRvblNlbGVjdGlvbkNoYW5nZSA9IHRoaXMub25TZWxlY3Rpb25DaGFuZ2UuYmluZCh0aGlzKTsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2VTZWxlY3Rpb24iLCB0aGlzLiRvblNlbGVjdGlvbkNoYW5nZSk7CgogICAgICAgIHRoaXMub25DaGFuZ2VNb2RlKCk7CgogICAgICAgIHRoaXMuJGJsb2NrU2Nyb2xsaW5nICs9IDE7CiAgICAgICAgdGhpcy5vbkN1cnNvckNoYW5nZSgpOwogICAgICAgIHRoaXMuJGJsb2NrU2Nyb2xsaW5nIC09IDE7CgogICAgICAgIHRoaXMub25TY3JvbGxUb3BDaGFuZ2UoKTsKICAgICAgICB0aGlzLm9uU2Nyb2xsTGVmdENoYW5nZSgpOwogICAgICAgIHRoaXMub25TZWxlY3Rpb25DaGFuZ2UoKTsKICAgICAgICB0aGlzLm9uQ2hhbmdlRnJvbnRNYXJrZXIoKTsKICAgICAgICB0aGlzLm9uQ2hhbmdlQmFja01hcmtlcigpOwogICAgICAgIHRoaXMub25DaGFuZ2VCcmVha3BvaW50KCk7CiAgICAgICAgdGhpcy5vbkNoYW5nZUFubm90YXRpb24oKTsKICAgICAgICB0aGlzLnNlc3Npb24uZ2V0VXNlV3JhcE1vZGUoKSAmJiB0aGlzLnJlbmRlcmVyLmFkanVzdFdyYXBMaW1pdCgpOwogICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlRnVsbCgpOwoKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VTZXNzaW9uIiwgewogICAgICAgICAgICBzZXNzaW9uOiBzZXNzaW9uLAogICAgICAgICAgICBvbGRTZXNzaW9uOiBvbGRTZXNzaW9uCiAgICAgICAgfSk7CiAgICB9OwogICAgdGhpcy5nZXRTZXNzaW9uID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc2Vzc2lvbjsKICAgIH07CiAgICB0aGlzLnNldFZhbHVlID0gZnVuY3Rpb24odmFsLCBjdXJzb3JQb3MpIHsKICAgICAgICB0aGlzLnNlc3Npb24uZG9jLnNldFZhbHVlKHZhbCk7CgogICAgICAgIGlmICghY3Vyc29yUG9zKQogICAgICAgICAgICB0aGlzLnNlbGVjdEFsbCgpOwogICAgICAgIGVsc2UgaWYgKGN1cnNvclBvcyA9PSAxKQogICAgICAgICAgICB0aGlzLm5hdmlnYXRlRmlsZUVuZCgpOwogICAgICAgIGVsc2UgaWYgKGN1cnNvclBvcyA9PSAtMSkKICAgICAgICAgICAgdGhpcy5uYXZpZ2F0ZUZpbGVTdGFydCgpOwoKICAgICAgICByZXR1cm4gdmFsOwogICAgfTsKICAgIHRoaXMuZ2V0VmFsdWUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5zZXNzaW9uLmdldFZhbHVlKCk7CiAgICB9OwogICAgdGhpcy5nZXRTZWxlY3Rpb24gPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb247CiAgICB9OwogICAgdGhpcy5yZXNpemUgPSBmdW5jdGlvbihmb3JjZSkgewogICAgICAgIHRoaXMucmVuZGVyZXIub25SZXNpemUoZm9yY2UpOwogICAgfTsKICAgIHRoaXMuc2V0VGhlbWUgPSBmdW5jdGlvbih0aGVtZSkgewogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0VGhlbWUodGhlbWUpOwogICAgfTsKICAgIHRoaXMuZ2V0VGhlbWUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5nZXRUaGVtZSgpOwogICAgfTsKICAgIHRoaXMuc2V0U3R5bGUgPSBmdW5jdGlvbihzdHlsZSkgewogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUoc3R5bGUpOwogICAgfTsKICAgIHRoaXMudW5zZXRTdHlsZSA9IGZ1bmN0aW9uKHN0eWxlKSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci51bnNldFN0eWxlKHN0eWxlKTsKICAgIH07CiAgICB0aGlzLnNldEZvbnRTaXplID0gZnVuY3Rpb24oc2l6ZSkgewogICAgICAgIGlmICh0eXBlb2Ygc2l6ZSA9PSAibnVtYmVyIikKICAgICAgICAgICAgc2l6ZSA9IHNpemUgKyAicHgiOwogICAgICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmZvbnRTaXplID0gc2l6ZTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnVwZGF0ZUZvbnRTaXplKCk7CiAgICB9OwoKICAgIHRoaXMuJGhpZ2hsaWdodEJyYWNrZXRzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKHRoaXMuc2Vzc2lvbi4kYnJhY2tldEhpZ2hsaWdodCkgewogICAgICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlTWFya2VyKHRoaXMuc2Vzc2lvbi4kYnJhY2tldEhpZ2hsaWdodCk7CiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbi4kYnJhY2tldEhpZ2hsaWdodCA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy4kaGlnaGxpZ2h0UGVuZGluZykgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgICB0aGlzLiRoaWdobGlnaHRQZW5kaW5nID0gdHJ1ZTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICBzZWxmLiRoaWdobGlnaHRQZW5kaW5nID0gZmFsc2U7CgogICAgICAgICAgICB2YXIgcG9zID0gc2VsZi5zZXNzaW9uLmZpbmRNYXRjaGluZ0JyYWNrZXQoc2VsZi5nZXRDdXJzb3JQb3NpdGlvbigpKTsKICAgICAgICAgICAgaWYgKHBvcykgewogICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gbmV3IFJhbmdlKHBvcy5yb3csIHBvcy5jb2x1bW4sIHBvcy5yb3csIHBvcy5jb2x1bW4rMSk7CiAgICAgICAgICAgICAgICBzZWxmLnNlc3Npb24uJGJyYWNrZXRIaWdobGlnaHQgPSBzZWxmLnNlc3Npb24uYWRkTWFya2VyKHJhbmdlLCAiYWNlX2JyYWNrZXQiLCAidGV4dCIpOwogICAgICAgICAgICB9CiAgICAgICAgfSwgNTApOwogICAgfTsKICAgIHRoaXMuZm9jdXMgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgX3NlbGYgPSB0aGlzOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIF9zZWxmLnRleHRJbnB1dC5mb2N1cygpOwogICAgICAgIH0pOwogICAgICAgIHRoaXMudGV4dElucHV0LmZvY3VzKCk7CiAgICB9OwogICAgdGhpcy5pc0ZvY3VzZWQgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy50ZXh0SW5wdXQuaXNGb2N1c2VkKCk7CiAgICB9OwogICAgdGhpcy5ibHVyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy50ZXh0SW5wdXQuYmx1cigpOwogICAgfTsKICAgIHRoaXMub25Gb2N1cyA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh0aGlzLiRpc0ZvY3VzZWQpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB0aGlzLiRpc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgIHRoaXMucmVuZGVyZXIuc2hvd0N1cnNvcigpOwogICAgICAgIHRoaXMucmVuZGVyZXIudmlzdWFsaXplRm9jdXMoKTsKICAgICAgICB0aGlzLl9lbWl0KCJmb2N1cyIpOwogICAgfTsKICAgIHRoaXMub25CbHVyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKCF0aGlzLiRpc0ZvY3VzZWQpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB0aGlzLiRpc0ZvY3VzZWQgPSBmYWxzZTsKICAgICAgICB0aGlzLnJlbmRlcmVyLmhpZGVDdXJzb3IoKTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnZpc3VhbGl6ZUJsdXIoKTsKICAgICAgICB0aGlzLl9lbWl0KCJibHVyIik7CiAgICB9OwoKICAgIHRoaXMuJGN1cnNvckNoYW5nZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlQ3Vyc29yKCk7CiAgICB9OwogICAgdGhpcy5vbkRvY3VtZW50Q2hhbmdlID0gZnVuY3Rpb24oZSkgewogICAgICAgIHZhciBkZWx0YSA9IGUuZGF0YTsKICAgICAgICB2YXIgcmFuZ2UgPSBkZWx0YS5yYW5nZTsKICAgICAgICB2YXIgbGFzdFJvdzsKCiAgICAgICAgaWYgKHJhbmdlLnN0YXJ0LnJvdyA9PSByYW5nZS5lbmQucm93ICYmIGRlbHRhLmFjdGlvbiAhPSAiaW5zZXJ0TGluZXMiICYmIGRlbHRhLmFjdGlvbiAhPSAicmVtb3ZlTGluZXMiKQogICAgICAgICAgICBsYXN0Um93ID0gcmFuZ2UuZW5kLnJvdzsKICAgICAgICBlbHNlCiAgICAgICAgICAgIGxhc3RSb3cgPSBJbmZpbml0eTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnVwZGF0ZUxpbmVzKHJhbmdlLnN0YXJ0LnJvdywgbGFzdFJvdyk7CgogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZSIsIGUpOwogICAgICAgIHRoaXMuJGN1cnNvckNoYW5nZSgpOwogICAgfTsKCiAgICB0aGlzLm9uVG9rZW5pemVyVXBkYXRlID0gZnVuY3Rpb24oZSkgewogICAgICAgIHZhciByb3dzID0gZS5kYXRhOwogICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlTGluZXMocm93cy5maXJzdCwgcm93cy5sYXN0KTsKICAgIH07CgoKICAgIHRoaXMub25TY3JvbGxUb3BDaGFuZ2UgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnJlbmRlcmVyLnNjcm9sbFRvWSh0aGlzLnNlc3Npb24uZ2V0U2Nyb2xsVG9wKCkpOwogICAgfTsKICAgIAogICAgdGhpcy5vblNjcm9sbExlZnRDaGFuZ2UgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnJlbmRlcmVyLnNjcm9sbFRvWCh0aGlzLnNlc3Npb24uZ2V0U2Nyb2xsTGVmdCgpKTsKICAgIH07CiAgICB0aGlzLm9uQ3Vyc29yQ2hhbmdlID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kY3Vyc29yQ2hhbmdlKCk7CgogICAgICAgIGlmICghdGhpcy4kYmxvY2tTY3JvbGxpbmcpIHsKICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zY3JvbGxDdXJzb3JJbnRvVmlldygpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kaGlnaGxpZ2h0QnJhY2tldHMoKTsKICAgICAgICB0aGlzLiR1cGRhdGVIaWdobGlnaHRBY3RpdmVMaW5lKCk7CiAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlU2VsZWN0aW9uIik7CiAgICB9OwoKICAgIHRoaXMuJHVwZGF0ZUhpZ2hsaWdodEFjdGl2ZUxpbmUgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgc2Vzc2lvbiA9IHRoaXMuZ2V0U2Vzc2lvbigpOwoKICAgICAgICB2YXIgaGlnaGxpZ2h0OwogICAgICAgIGlmICh0aGlzLiRoaWdobGlnaHRBY3RpdmVMaW5lKSB7CiAgICAgICAgICAgIGlmICgodGhpcy4kc2VsZWN0aW9uU3R5bGUgIT0gImxpbmUiIHx8ICF0aGlzLnNlbGVjdGlvbi5pc011bHRpTGluZSgpKSkKICAgICAgICAgICAgICAgIGhpZ2hsaWdodCA9IHRoaXMuZ2V0Q3Vyc29yUG9zaXRpb24oKTsKICAgICAgICB9CgogICAgICAgIGlmIChzZXNzaW9uLiRoaWdobGlnaHRMaW5lTWFya2VyICYmICFoaWdobGlnaHQpIHsKICAgICAgICAgICAgc2Vzc2lvbi5yZW1vdmVNYXJrZXIoc2Vzc2lvbi4kaGlnaGxpZ2h0TGluZU1hcmtlci5pZCk7CiAgICAgICAgICAgIHNlc3Npb24uJGhpZ2hsaWdodExpbmVNYXJrZXIgPSBudWxsOwogICAgICAgIH0gZWxzZSBpZiAoIXNlc3Npb24uJGhpZ2hsaWdodExpbmVNYXJrZXIgJiYgaGlnaGxpZ2h0KSB7CiAgICAgICAgICAgIHNlc3Npb24uJGhpZ2hsaWdodExpbmVNYXJrZXIgPSBzZXNzaW9uLmhpZ2hsaWdodExpbmVzKGhpZ2hsaWdodC5yb3csIGhpZ2hsaWdodC5yb3csICJhY2VfYWN0aXZlLWxpbmUiKTsKICAgICAgICB9IGVsc2UgaWYgKGhpZ2hsaWdodCkgewogICAgICAgICAgICBzZXNzaW9uLiRoaWdobGlnaHRMaW5lTWFya2VyLnN0YXJ0LnJvdyA9IGhpZ2hsaWdodC5yb3c7CiAgICAgICAgICAgIHNlc3Npb24uJGhpZ2hsaWdodExpbmVNYXJrZXIuZW5kLnJvdyA9IGhpZ2hsaWdodC5yb3c7CiAgICAgICAgICAgIHNlc3Npb24uX2VtaXQoImNoYW5nZUJhY2tNYXJrZXIiKTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMub25TZWxlY3Rpb25DaGFuZ2UgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgdmFyIHNlc3Npb24gPSB0aGlzLnNlc3Npb247CgogICAgICAgIGlmIChzZXNzaW9uLiRzZWxlY3Rpb25NYXJrZXIpIHsKICAgICAgICAgICAgc2Vzc2lvbi5yZW1vdmVNYXJrZXIoc2Vzc2lvbi4kc2VsZWN0aW9uTWFya2VyKTsKICAgICAgICB9CiAgICAgICAgc2Vzc2lvbi4kc2VsZWN0aW9uTWFya2VyID0gbnVsbDsKCiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdGlvbi5pc0VtcHR5KCkpIHsKICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTsKICAgICAgICAgICAgdmFyIHN0eWxlID0gdGhpcy5nZXRTZWxlY3Rpb25TdHlsZSgpOwogICAgICAgICAgICBzZXNzaW9uLiRzZWxlY3Rpb25NYXJrZXIgPSBzZXNzaW9uLmFkZE1hcmtlcihyYW5nZSwgImFjZV9zZWxlY3Rpb24iLCBzdHlsZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kdXBkYXRlSGlnaGxpZ2h0QWN0aXZlTGluZSgpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJlID0gdGhpcy4kaGlnaGxpZ2h0U2VsZWN0ZWRXb3JkICYmIHRoaXMuJGdldFNlbGVjdGlvbkhpZ2hMaWdodFJlZ2V4cCgpCiAgICAgICAgdGhpcy5zZXNzaW9uLmhpZ2hsaWdodChyZSk7CiAgICAgICAgCiAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlU2VsZWN0aW9uIik7CiAgICB9OwoKICAgIHRoaXMuJGdldFNlbGVjdGlvbkhpZ2hMaWdodFJlZ2V4cCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBzZXNzaW9uID0gdGhpcy5zZXNzaW9uOwoKICAgICAgICB2YXIgc2VsZWN0aW9uID0gdGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpOwogICAgICAgIGlmIChzZWxlY3Rpb24uaXNFbXB0eSgpIHx8IHNlbGVjdGlvbi5pc011bHRpTGluZSgpKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIHZhciBzdGFydE91dGVyID0gc2VsZWN0aW9uLnN0YXJ0LmNvbHVtbiAtIDE7CiAgICAgICAgdmFyIGVuZE91dGVyID0gc2VsZWN0aW9uLmVuZC5jb2x1bW4gKyAxOwogICAgICAgIHZhciBsaW5lID0gc2Vzc2lvbi5nZXRMaW5lKHNlbGVjdGlvbi5zdGFydC5yb3cpOwogICAgICAgIHZhciBsaW5lQ29scyA9IGxpbmUubGVuZ3RoOwogICAgICAgIHZhciBuZWVkbGUgPSBsaW5lLnN1YnN0cmluZyhNYXRoLm1heChzdGFydE91dGVyLCAwKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWF0aC5taW4oZW5kT3V0ZXIsIGxpbmVDb2xzKSk7CiAgICAgICAgaWYgKChzdGFydE91dGVyID49IDAgJiYgL15bXHdcZF0vLnRlc3QobmVlZGxlKSkgfHwKICAgICAgICAgICAgKGVuZE91dGVyIDw9IGxpbmVDb2xzICYmIC9bXHdcZF0kLy50ZXN0KG5lZWRsZSkpKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIG5lZWRsZSA9IGxpbmUuc3Vic3RyaW5nKHNlbGVjdGlvbi5zdGFydC5jb2x1bW4sIHNlbGVjdGlvbi5lbmQuY29sdW1uKTsKICAgICAgICBpZiAoIS9eW1x3XGRdKyQvLnRlc3QobmVlZGxlKSkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB2YXIgcmUgPSB0aGlzLiRzZWFyY2guJGFzc2VtYmxlUmVnRXhwKHsKICAgICAgICAgICAgd2hvbGVXb3JkOiB0cnVlLAogICAgICAgICAgICBjYXNlU2Vuc2l0aXZlOiB0cnVlLAogICAgICAgICAgICBuZWVkbGU6IG5lZWRsZQogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gcmU7CiAgICB9OwoKCiAgICB0aGlzLm9uQ2hhbmdlRnJvbnRNYXJrZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnJlbmRlcmVyLnVwZGF0ZUZyb250TWFya2VycygpOwogICAgfTsKCiAgICB0aGlzLm9uQ2hhbmdlQmFja01hcmtlciA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlQmFja01hcmtlcnMoKTsKICAgIH07CgoKICAgIHRoaXMub25DaGFuZ2VCcmVha3BvaW50ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci51cGRhdGVCcmVha3BvaW50cygpOwogICAgfTsKCiAgICB0aGlzLm9uQ2hhbmdlQW5ub3RhdGlvbiA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0QW5ub3RhdGlvbnModGhpcy5zZXNzaW9uLmdldEFubm90YXRpb25zKCkpOwogICAgfTsKCgogICAgdGhpcy5vbkNoYW5nZU1vZGUgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnJlbmRlcmVyLnVwZGF0ZVRleHQoKTsKICAgIH07CgoKICAgIHRoaXMub25DaGFuZ2VXcmFwTGltaXQgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnJlbmRlcmVyLnVwZGF0ZUZ1bGwoKTsKICAgIH07CgogICAgdGhpcy5vbkNoYW5nZVdyYXBNb2RlID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci5vblJlc2l6ZSh0cnVlKTsKICAgIH07CgoKICAgIHRoaXMub25DaGFuZ2VGb2xkID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kdXBkYXRlSGlnaGxpZ2h0QWN0aXZlTGluZSgpOwogICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlRnVsbCgpOwogICAgfTsKCiAgICB0aGlzLmdldENvcHlUZXh0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHRleHQgPSAiIjsKICAgICAgICBpZiAoIXRoaXMuc2VsZWN0aW9uLmlzRW1wdHkoKSkKICAgICAgICAgICAgdGV4dCA9IHRoaXMuc2Vzc2lvbi5nZXRUZXh0UmFuZ2UodGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpKTsKCiAgICAgICAgdGhpcy5fZW1pdCgiY29weSIsIHRleHQpOwogICAgICAgIHJldHVybiB0ZXh0OwogICAgfTsKICAgIHRoaXMub25Db3B5ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5jb21tYW5kcy5leGVjKCJjb3B5IiwgdGhpcyk7CiAgICB9OwogICAgdGhpcy5vbkN1dCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuY29tbWFuZHMuZXhlYygiY3V0IiwgdGhpcyk7CiAgICB9OwogICAgdGhpcy5vblBhc3RlID0gZnVuY3Rpb24odGV4dCkgewogICAgICAgIGlmICh0aGlzLiRyZWFkT25seSkgCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB0aGlzLl9lbWl0KCJwYXN0ZSIsIHRleHQpOwogICAgICAgIHRoaXMuaW5zZXJ0KHRleHQpOwogICAgfTsKCgogICAgdGhpcy5leGVjQ29tbWFuZCA9IGZ1bmN0aW9uKGNvbW1hbmQsIGFyZ3MpIHsKICAgICAgICB0aGlzLmNvbW1hbmRzLmV4ZWMoY29tbWFuZCwgdGhpcywgYXJncyk7CiAgICB9OwogICAgdGhpcy5pbnNlcnQgPSBmdW5jdGlvbih0ZXh0KSB7CiAgICAgICAgdmFyIHNlc3Npb24gPSB0aGlzLnNlc3Npb247CiAgICAgICAgdmFyIG1vZGUgPSBzZXNzaW9uLmdldE1vZGUoKTsKICAgICAgICB2YXIgY3Vyc29yID0gdGhpcy5nZXRDdXJzb3JQb3NpdGlvbigpOwoKICAgICAgICBpZiAodGhpcy5nZXRCZWhhdmlvdXJzRW5hYmxlZCgpKSB7CiAgICAgICAgICAgIHZhciB0cmFuc2Zvcm0gPSBtb2RlLnRyYW5zZm9ybUFjdGlvbihzZXNzaW9uLmdldFN0YXRlKGN1cnNvci5yb3cpLCAnaW5zZXJ0aW9uJywgdGhpcywgc2Vzc2lvbiwgdGV4dCk7CiAgICAgICAgICAgIGlmICh0cmFuc2Zvcm0pCiAgICAgICAgICAgICAgICB0ZXh0ID0gdHJhbnNmb3JtLnRleHQ7CiAgICAgICAgfQoKICAgICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKCJcdCIsIHRoaXMuc2Vzc2lvbi5nZXRUYWJTdHJpbmcoKSk7CiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdGlvbi5pc0VtcHR5KCkpIHsKICAgICAgICAgICAgY3Vyc29yID0gdGhpcy5zZXNzaW9uLnJlbW92ZSh0aGlzLmdldFNlbGVjdGlvblJhbmdlKCkpOwogICAgICAgICAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKHRoaXMuc2Vzc2lvbi5nZXRPdmVyd3JpdGUoKSkgewogICAgICAgICAgICB2YXIgcmFuZ2UgPSBuZXcgUmFuZ2UuZnJvbVBvaW50cyhjdXJzb3IsIGN1cnNvcik7CiAgICAgICAgICAgIHJhbmdlLmVuZC5jb2x1bW4gKz0gdGV4dC5sZW5ndGg7CiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmUocmFuZ2UpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5jbGVhclNlbGVjdGlvbigpOwoKICAgICAgICB2YXIgc3RhcnQgPSBjdXJzb3IuY29sdW1uOwogICAgICAgIHZhciBsaW5lU3RhdGUgPSBzZXNzaW9uLmdldFN0YXRlKGN1cnNvci5yb3cpOwogICAgICAgIHZhciBsaW5lID0gc2Vzc2lvbi5nZXRMaW5lKGN1cnNvci5yb3cpOwogICAgICAgIHZhciBzaG91bGRPdXRkZW50ID0gbW9kZS5jaGVja091dGRlbnQobGluZVN0YXRlLCBsaW5lLCB0ZXh0KTsKICAgICAgICB2YXIgZW5kID0gc2Vzc2lvbi5pbnNlcnQoY3Vyc29yLCB0ZXh0KTsKCiAgICAgICAgaWYgKHRyYW5zZm9ybSAmJiB0cmFuc2Zvcm0uc2VsZWN0aW9uKSB7CiAgICAgICAgICAgIGlmICh0cmFuc2Zvcm0uc2VsZWN0aW9uLmxlbmd0aCA9PSAyKSB7IC8vIFRyYW5zZm9ybSByZWxhdGl2ZSB0byB0aGUgY3VycmVudCBjb2x1bW4KICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNldFNlbGVjdGlvblJhbmdlKAogICAgICAgICAgICAgICAgICAgIG5ldyBSYW5nZShjdXJzb3Iucm93LCBzdGFydCArIHRyYW5zZm9ybS5zZWxlY3Rpb25bMF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvci5yb3csIHN0YXJ0ICsgdHJhbnNmb3JtLnNlbGVjdGlvblsxXSkpOwogICAgICAgICAgICB9IGVsc2UgeyAvLyBUcmFuc2Zvcm0gcmVsYXRpdmUgdG8gdGhlIGN1cnJlbnQgcm93LgogICAgICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uc2V0U2VsZWN0aW9uUmFuZ2UoCiAgICAgICAgICAgICAgICAgICAgbmV3IFJhbmdlKGN1cnNvci5yb3cgKyB0cmFuc2Zvcm0uc2VsZWN0aW9uWzBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0uc2VsZWN0aW9uWzFdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3Iucm93ICsgdHJhbnNmb3JtLnNlbGVjdGlvblsyXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLnNlbGVjdGlvblszXSkpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChzZXNzaW9uLmdldERvY3VtZW50KCkuaXNOZXdMaW5lKHRleHQpKSB7CiAgICAgICAgICAgIHZhciBsaW5lSW5kZW50ID0gbW9kZS5nZXROZXh0TGluZUluZGVudChsaW5lU3RhdGUsIGxpbmUuc2xpY2UoMCwgY3Vyc29yLmNvbHVtbiksIHNlc3Npb24uZ2V0VGFiU3RyaW5nKCkpOwoKICAgICAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8oY3Vyc29yLnJvdysxLCAwKTsKCiAgICAgICAgICAgIHZhciBzaXplID0gc2Vzc2lvbi5nZXRUYWJTaXplKCk7CiAgICAgICAgICAgIHZhciBtaW5JbmRlbnQgPSBOdW1iZXIuTUFYX1ZBTFVFOwoKICAgICAgICAgICAgZm9yICh2YXIgcm93ID0gY3Vyc29yLnJvdyArIDE7IHJvdyA8PSBlbmQucm93OyArK3JvdykgewogICAgICAgICAgICAgICAgdmFyIGluZGVudCA9IDA7CgogICAgICAgICAgICAgICAgbGluZSA9IHNlc3Npb24uZ2V0TGluZShyb3cpOwogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lLmxlbmd0aDsgKytpKQogICAgICAgICAgICAgICAgICAgIGlmIChsaW5lLmNoYXJBdChpKSA9PSAnXHQnKQogICAgICAgICAgICAgICAgICAgICAgICBpbmRlbnQgKz0gc2l6ZTsKICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChsaW5lLmNoYXJBdChpKSA9PSAnICcpCiAgICAgICAgICAgICAgICAgICAgICAgIGluZGVudCArPSAxOwogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBpZiAoL1teXHNdLy50ZXN0KGxpbmUpKQogICAgICAgICAgICAgICAgICAgIG1pbkluZGVudCA9IE1hdGgubWluKGluZGVudCwgbWluSW5kZW50KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZm9yICh2YXIgcm93ID0gY3Vyc29yLnJvdyArIDE7IHJvdyA8PSBlbmQucm93OyArK3JvdykgewogICAgICAgICAgICAgICAgdmFyIG91dGRlbnQgPSBtaW5JbmRlbnQ7CgogICAgICAgICAgICAgICAgbGluZSA9IHNlc3Npb24uZ2V0TGluZShyb3cpOwogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lLmxlbmd0aCAmJiBvdXRkZW50ID4gMDsgKytpKQogICAgICAgICAgICAgICAgICAgIGlmIChsaW5lLmNoYXJBdChpKSA9PSAnXHQnKQogICAgICAgICAgICAgICAgICAgICAgICBvdXRkZW50IC09IHNpemU7CiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAobGluZS5jaGFyQXQoaSkgPT0gJyAnKQogICAgICAgICAgICAgICAgICAgICAgICBvdXRkZW50IC09IDE7CiAgICAgICAgICAgICAgICBzZXNzaW9uLnJlbW92ZShuZXcgUmFuZ2Uocm93LCAwLCByb3csIGkpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBzZXNzaW9uLmluZGVudFJvd3MoY3Vyc29yLnJvdyArIDEsIGVuZC5yb3csIGxpbmVJbmRlbnQpOwogICAgICAgIH0KICAgICAgICBpZiAoc2hvdWxkT3V0ZGVudCkKICAgICAgICAgICAgbW9kZS5hdXRvT3V0ZGVudChsaW5lU3RhdGUsIHNlc3Npb24sIGN1cnNvci5yb3cpOwogICAgfTsKCiAgICB0aGlzLm9uVGV4dElucHV0ID0gZnVuY3Rpb24odGV4dCkgewogICAgICAgIHRoaXMua2V5QmluZGluZy5vblRleHRJbnB1dCh0ZXh0KTsKICAgIH07CgogICAgdGhpcy5vbkNvbW1hbmRLZXkgPSBmdW5jdGlvbihlLCBoYXNoSWQsIGtleUNvZGUpIHsKICAgICAgICB0aGlzLmtleUJpbmRpbmcub25Db21tYW5kS2V5KGUsIGhhc2hJZCwga2V5Q29kZSk7CiAgICB9OwogICAgdGhpcy5zZXRPdmVyd3JpdGUgPSBmdW5jdGlvbihvdmVyd3JpdGUpIHsKICAgICAgICB0aGlzLnNlc3Npb24uc2V0T3ZlcndyaXRlKG92ZXJ3cml0ZSk7CiAgICB9OwogICAgdGhpcy5nZXRPdmVyd3JpdGUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5zZXNzaW9uLmdldE92ZXJ3cml0ZSgpOwogICAgfTsKICAgIHRoaXMudG9nZ2xlT3ZlcndyaXRlID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5zZXNzaW9uLnRvZ2dsZU92ZXJ3cml0ZSgpOwogICAgfTsKICAgIHRoaXMuc2V0U2Nyb2xsU3BlZWQgPSBmdW5jdGlvbihzcGVlZCkgewogICAgICAgIHRoaXMuJG1vdXNlSGFuZGxlci5zZXRTY3JvbGxTcGVlZChzcGVlZCk7CiAgICB9OwogICAgdGhpcy5nZXRTY3JvbGxTcGVlZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRtb3VzZUhhbmRsZXIuZ2V0U2Nyb2xsU3BlZWQoKTsKICAgIH07CiAgICB0aGlzLnNldERyYWdEZWxheSA9IGZ1bmN0aW9uKGRyYWdEZWxheSkgewogICAgICAgIHRoaXMuJG1vdXNlSGFuZGxlci5zZXREcmFnRGVsYXkoZHJhZ0RlbGF5KTsKICAgIH07CiAgICB0aGlzLmdldERyYWdEZWxheSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRtb3VzZUhhbmRsZXIuZ2V0RHJhZ0RlbGF5KCk7CiAgICB9OwoKICAgIHRoaXMuJHNlbGVjdGlvblN0eWxlID0gImxpbmUiOwogICAgdGhpcy5zZXRTZWxlY3Rpb25TdHlsZSA9IGZ1bmN0aW9uKHN0eWxlKSB7CiAgICAgICAgaWYgKHRoaXMuJHNlbGVjdGlvblN0eWxlID09IHN0eWxlKSByZXR1cm47CgogICAgICAgIHRoaXMuJHNlbGVjdGlvblN0eWxlID0gc3R5bGU7CiAgICAgICAgdGhpcy5vblNlbGVjdGlvbkNoYW5nZSgpOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZVNlbGVjdGlvblN0eWxlIiwge2RhdGE6IHN0eWxlfSk7CiAgICB9OwogICAgdGhpcy5nZXRTZWxlY3Rpb25TdHlsZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzZWxlY3Rpb25TdHlsZTsKICAgIH07CgogICAgdGhpcy4kaGlnaGxpZ2h0QWN0aXZlTGluZSA9IHRydWU7CiAgICB0aGlzLnNldEhpZ2hsaWdodEFjdGl2ZUxpbmUgPSBmdW5jdGlvbihzaG91bGRIaWdobGlnaHQpIHsKICAgICAgICBpZiAodGhpcy4kaGlnaGxpZ2h0QWN0aXZlTGluZSA9PSBzaG91bGRIaWdobGlnaHQpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdGhpcy4kaGlnaGxpZ2h0QWN0aXZlTGluZSA9IHNob3VsZEhpZ2hsaWdodDsKICAgICAgICB0aGlzLiR1cGRhdGVIaWdobGlnaHRBY3RpdmVMaW5lKCk7CiAgICB9OwogICAgdGhpcy5nZXRIaWdobGlnaHRBY3RpdmVMaW5lID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJGhpZ2hsaWdodEFjdGl2ZUxpbmU7CiAgICB9OwoKICAgIHRoaXMuJGhpZ2hsaWdodEd1dHRlckxpbmUgPSB0cnVlOwogICAgdGhpcy5zZXRIaWdobGlnaHRHdXR0ZXJMaW5lID0gZnVuY3Rpb24oc2hvdWxkSGlnaGxpZ2h0KSB7CiAgICAgICAgaWYgKHRoaXMuJGhpZ2hsaWdodEd1dHRlckxpbmUgPT0gc2hvdWxkSGlnaGxpZ2h0KQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0SGlnaGxpZ2h0R3V0dGVyTGluZShzaG91bGRIaWdobGlnaHQpOwogICAgICAgIHRoaXMuJGhpZ2hsaWdodEd1dHRlckxpbmUgPSBzaG91bGRIaWdobGlnaHQ7CiAgICB9OwoKICAgIHRoaXMuZ2V0SGlnaGxpZ2h0R3V0dGVyTGluZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRoaWdobGlnaHRHdXR0ZXJMaW5lOwogICAgfTsKCiAgICB0aGlzLiRoaWdobGlnaHRTZWxlY3RlZFdvcmQgPSB0cnVlOwogICAgdGhpcy5zZXRIaWdobGlnaHRTZWxlY3RlZFdvcmQgPSBmdW5jdGlvbihzaG91bGRIaWdobGlnaHQpIHsKICAgICAgICBpZiAodGhpcy4kaGlnaGxpZ2h0U2VsZWN0ZWRXb3JkID09IHNob3VsZEhpZ2hsaWdodCkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB0aGlzLiRoaWdobGlnaHRTZWxlY3RlZFdvcmQgPSBzaG91bGRIaWdobGlnaHQ7CiAgICAgICAgdGhpcy4kb25TZWxlY3Rpb25DaGFuZ2UoKTsKICAgIH07CiAgICB0aGlzLmdldEhpZ2hsaWdodFNlbGVjdGVkV29yZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRoaWdobGlnaHRTZWxlY3RlZFdvcmQ7CiAgICB9OwoKICAgIHRoaXMuc2V0QW5pbWF0ZWRTY3JvbGwgPSBmdW5jdGlvbihzaG91bGRBbmltYXRlKXsKICAgICAgICB0aGlzLnJlbmRlcmVyLnNldEFuaW1hdGVkU2Nyb2xsKHNob3VsZEFuaW1hdGUpOwogICAgfTsKCiAgICB0aGlzLmdldEFuaW1hdGVkU2Nyb2xsID0gZnVuY3Rpb24oKXsKICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5nZXRBbmltYXRlZFNjcm9sbCgpOwogICAgfTsKICAgIHRoaXMuc2V0U2hvd0ludmlzaWJsZXMgPSBmdW5jdGlvbihzaG93SW52aXNpYmxlcykgewogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U2hvd0ludmlzaWJsZXMoc2hvd0ludmlzaWJsZXMpOwogICAgfTsKICAgIHRoaXMuZ2V0U2hvd0ludmlzaWJsZXMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5nZXRTaG93SW52aXNpYmxlcygpOwogICAgfTsKCiAgICB0aGlzLnNldERpc3BsYXlJbmRlbnRHdWlkZXMgPSBmdW5jdGlvbihkaXNwbGF5KSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci5zZXREaXNwbGF5SW5kZW50R3VpZGVzKGRpc3BsYXkpOwogICAgfTsKCiAgICB0aGlzLmdldERpc3BsYXlJbmRlbnRHdWlkZXMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5nZXREaXNwbGF5SW5kZW50R3VpZGVzKCk7CiAgICB9OwogICAgdGhpcy5zZXRTaG93UHJpbnRNYXJnaW4gPSBmdW5jdGlvbihzaG93UHJpbnRNYXJnaW4pIHsKICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFNob3dQcmludE1hcmdpbihzaG93UHJpbnRNYXJnaW4pOwogICAgfTsKICAgIHRoaXMuZ2V0U2hvd1ByaW50TWFyZ2luID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuZ2V0U2hvd1ByaW50TWFyZ2luKCk7CiAgICB9OwogICAgdGhpcy5zZXRQcmludE1hcmdpbkNvbHVtbiA9IGZ1bmN0aW9uKHNob3dQcmludE1hcmdpbikgewogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0UHJpbnRNYXJnaW5Db2x1bW4oc2hvd1ByaW50TWFyZ2luKTsKICAgIH07CiAgICB0aGlzLmdldFByaW50TWFyZ2luQ29sdW1uID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuZ2V0UHJpbnRNYXJnaW5Db2x1bW4oKTsKICAgIH07CgogICAgdGhpcy4kcmVhZE9ubHkgPSBmYWxzZTsKICAgIHRoaXMuc2V0UmVhZE9ubHkgPSBmdW5jdGlvbihyZWFkT25seSkgewogICAgICAgIHRoaXMuJHJlYWRPbmx5ID0gcmVhZE9ubHk7CiAgICAgICAgdGhpcy50ZXh0SW5wdXQuc2V0UmVhZE9ubHkocmVhZE9ubHkpOwogICAgICAgIHRoaXMucmVuZGVyZXIuJGN1cnNvckxheWVyLnNldEJsaW5raW5nKCFyZWFkT25seSk7CiAgICB9OwogICAgdGhpcy5nZXRSZWFkT25seSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRyZWFkT25seTsKICAgIH07CgogICAgdGhpcy4kbW9kZUJlaGF2aW91cnMgPSB0cnVlOwogICAgdGhpcy5zZXRCZWhhdmlvdXJzRW5hYmxlZCA9IGZ1bmN0aW9uIChlbmFibGVkKSB7CiAgICAgICAgdGhpcy4kbW9kZUJlaGF2aW91cnMgPSBlbmFibGVkOwogICAgfTsKICAgIHRoaXMuZ2V0QmVoYXZpb3Vyc0VuYWJsZWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1vZGVCZWhhdmlvdXJzOwogICAgfTsKCiAgICB0aGlzLiRtb2RlV3JhcEJlaGF2aW91cnMgPSB0cnVlOwogICAgdGhpcy5zZXRXcmFwQmVoYXZpb3Vyc0VuYWJsZWQgPSBmdW5jdGlvbiAoZW5hYmxlZCkgewogICAgICAgIHRoaXMuJG1vZGVXcmFwQmVoYXZpb3VycyA9IGVuYWJsZWQ7CiAgICB9OwogICAgdGhpcy5nZXRXcmFwQmVoYXZpb3Vyc0VuYWJsZWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1vZGVXcmFwQmVoYXZpb3VyczsKICAgIH07CiAgICB0aGlzLnNldFNob3dGb2xkV2lkZ2V0cyA9IGZ1bmN0aW9uKHNob3cpIHsKICAgICAgICB2YXIgZ3V0dGVyID0gdGhpcy5yZW5kZXJlci4kZ3V0dGVyTGF5ZXI7CiAgICAgICAgaWYgKGd1dHRlci5nZXRTaG93Rm9sZFdpZGdldHMoKSA9PSBzaG93KQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIHRoaXMucmVuZGVyZXIuJGd1dHRlckxheWVyLnNldFNob3dGb2xkV2lkZ2V0cyhzaG93KTsKICAgICAgICB0aGlzLiRzaG93Rm9sZFdpZGdldHMgPSBzaG93OwogICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlRnVsbCgpOwogICAgfTsKICAgIHRoaXMuZ2V0U2hvd0ZvbGRXaWRnZXRzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuJGd1dHRlckxheWVyLmdldFNob3dGb2xkV2lkZ2V0cygpOwogICAgfTsKCiAgICB0aGlzLnNldEZhZGVGb2xkV2lkZ2V0cyA9IGZ1bmN0aW9uKHNob3cpIHsKICAgICAgICB0aGlzLnJlbmRlcmVyLnNldEZhZGVGb2xkV2lkZ2V0cyhzaG93KTsKICAgIH07CgogICAgdGhpcy5nZXRGYWRlRm9sZFdpZGdldHMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5nZXRGYWRlRm9sZFdpZGdldHMoKTsKICAgIH07CiAgICB0aGlzLnJlbW92ZSA9IGZ1bmN0aW9uKGRpcikgewogICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbi5pc0VtcHR5KCkpewogICAgICAgICAgICBpZiAoZGlyID09ICJsZWZ0IikKICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNlbGVjdExlZnQoKTsKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uc2VsZWN0UmlnaHQoKTsKICAgICAgICB9CgogICAgICAgIHZhciByYW5nZSA9IHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICBpZiAodGhpcy5nZXRCZWhhdmlvdXJzRW5hYmxlZCgpKSB7CiAgICAgICAgICAgIHZhciBzZXNzaW9uID0gdGhpcy5zZXNzaW9uOwogICAgICAgICAgICB2YXIgc3RhdGUgPSBzZXNzaW9uLmdldFN0YXRlKHJhbmdlLnN0YXJ0LnJvdyk7CiAgICAgICAgICAgIHZhciBuZXdfcmFuZ2UgPSBzZXNzaW9uLmdldE1vZGUoKS50cmFuc2Zvcm1BY3Rpb24oc3RhdGUsICdkZWxldGlvbicsIHRoaXMsIHNlc3Npb24sIHJhbmdlKTsKICAgICAgICAgICAgaWYgKG5ld19yYW5nZSkKICAgICAgICAgICAgICAgIHJhbmdlID0gbmV3X3JhbmdlOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZShyYW5nZSk7CiAgICAgICAgdGhpcy5jbGVhclNlbGVjdGlvbigpOwogICAgfTsKICAgIHRoaXMucmVtb3ZlV29yZFJpZ2h0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uLmlzRW1wdHkoKSkKICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uc2VsZWN0V29yZFJpZ2h0KCk7CgogICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmUodGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpKTsKICAgICAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKCk7CiAgICB9OwogICAgdGhpcy5yZW1vdmVXb3JkTGVmdCA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbi5pc0VtcHR5KCkpCiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNlbGVjdFdvcmRMZWZ0KCk7CgogICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmUodGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpKTsKICAgICAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKCk7CiAgICB9OwogICAgdGhpcy5yZW1vdmVUb0xpbmVTdGFydCA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbi5pc0VtcHR5KCkpCiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNlbGVjdExpbmVTdGFydCgpOwoKICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlKHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKSk7CiAgICAgICAgdGhpcy5jbGVhclNlbGVjdGlvbigpOwogICAgfTsKICAgIHRoaXMucmVtb3ZlVG9MaW5lRW5kID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uLmlzRW1wdHkoKSkKICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uc2VsZWN0TGluZUVuZCgpOwoKICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLmdldFNlbGVjdGlvblJhbmdlKCk7CiAgICAgICAgaWYgKHJhbmdlLnN0YXJ0LmNvbHVtbiA9PSByYW5nZS5lbmQuY29sdW1uICYmIHJhbmdlLnN0YXJ0LnJvdyA9PSByYW5nZS5lbmQucm93KSB7CiAgICAgICAgICAgIHJhbmdlLmVuZC5jb2x1bW4gPSAwOwogICAgICAgICAgICByYW5nZS5lbmQucm93Kys7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlKHJhbmdlKTsKICAgICAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKCk7CiAgICB9OwogICAgdGhpcy5zcGxpdExpbmUgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAoIXRoaXMuc2VsZWN0aW9uLmlzRW1wdHkoKSkgewogICAgICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlKHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKSk7CiAgICAgICAgICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICB9CgogICAgICAgIHZhciBjdXJzb3IgPSB0aGlzLmdldEN1cnNvclBvc2l0aW9uKCk7CiAgICAgICAgdGhpcy5pbnNlcnQoIlxuIik7CiAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG9Qb3NpdGlvbihjdXJzb3IpOwogICAgfTsKICAgIHRoaXMudHJhbnNwb3NlTGV0dGVycyA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICghdGhpcy5zZWxlY3Rpb24uaXNFbXB0eSgpKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHZhciBjdXJzb3IgPSB0aGlzLmdldEN1cnNvclBvc2l0aW9uKCk7CiAgICAgICAgdmFyIGNvbHVtbiA9IGN1cnNvci5jb2x1bW47CiAgICAgICAgaWYgKGNvbHVtbiA9PT0gMCkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB2YXIgbGluZSA9IHRoaXMuc2Vzc2lvbi5nZXRMaW5lKGN1cnNvci5yb3cpOwogICAgICAgIHZhciBzd2FwLCByYW5nZTsKICAgICAgICBpZiAoY29sdW1uIDwgbGluZS5sZW5ndGgpIHsKICAgICAgICAgICAgc3dhcCA9IGxpbmUuY2hhckF0KGNvbHVtbikgKyBsaW5lLmNoYXJBdChjb2x1bW4tMSk7CiAgICAgICAgICAgIHJhbmdlID0gbmV3IFJhbmdlKGN1cnNvci5yb3csIGNvbHVtbi0xLCBjdXJzb3Iucm93LCBjb2x1bW4rMSk7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICBzd2FwID0gbGluZS5jaGFyQXQoY29sdW1uLTEpICsgbGluZS5jaGFyQXQoY29sdW1uLTIpOwogICAgICAgICAgICByYW5nZSA9IG5ldyBSYW5nZShjdXJzb3Iucm93LCBjb2x1bW4tMiwgY3Vyc29yLnJvdywgY29sdW1uKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5zZXNzaW9uLnJlcGxhY2UocmFuZ2UsIHN3YXApOwogICAgfTsKICAgIHRoaXMudG9Mb3dlckNhc2UgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgb3JpZ2luYWxSYW5nZSA9IHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb24uaXNFbXB0eSgpKSB7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNlbGVjdFdvcmQoKTsKICAgICAgICB9CgogICAgICAgIHZhciByYW5nZSA9IHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICB2YXIgdGV4dCA9IHRoaXMuc2Vzc2lvbi5nZXRUZXh0UmFuZ2UocmFuZ2UpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5yZXBsYWNlKHJhbmdlLCB0ZXh0LnRvTG93ZXJDYXNlKCkpOwogICAgICAgIHRoaXMuc2VsZWN0aW9uLnNldFNlbGVjdGlvblJhbmdlKG9yaWdpbmFsUmFuZ2UpOwogICAgfTsKICAgIHRoaXMudG9VcHBlckNhc2UgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgb3JpZ2luYWxSYW5nZSA9IHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb24uaXNFbXB0eSgpKSB7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNlbGVjdFdvcmQoKTsKICAgICAgICB9CgogICAgICAgIHZhciByYW5nZSA9IHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICB2YXIgdGV4dCA9IHRoaXMuc2Vzc2lvbi5nZXRUZXh0UmFuZ2UocmFuZ2UpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5yZXBsYWNlKHJhbmdlLCB0ZXh0LnRvVXBwZXJDYXNlKCkpOwogICAgICAgIHRoaXMuc2VsZWN0aW9uLnNldFNlbGVjdGlvblJhbmdlKG9yaWdpbmFsUmFuZ2UpOwogICAgfTsKICAgIHRoaXMuaW5kZW50ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHNlc3Npb24gPSB0aGlzLnNlc3Npb247CiAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpOwoKICAgICAgICBpZiAocmFuZ2Uuc3RhcnQucm93IDwgcmFuZ2UuZW5kLnJvdyB8fCByYW5nZS5zdGFydC5jb2x1bW4gPCByYW5nZS5lbmQuY29sdW1uKSB7CiAgICAgICAgICAgIHZhciByb3dzID0gdGhpcy4kZ2V0U2VsZWN0ZWRSb3dzKCk7CiAgICAgICAgICAgIHNlc3Npb24uaW5kZW50Um93cyhyb3dzLmZpcnN0LCByb3dzLmxhc3QsICJcdCIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBpbmRlbnRTdHJpbmc7CgogICAgICAgICAgICBpZiAodGhpcy5zZXNzaW9uLmdldFVzZVNvZnRUYWJzKCkpIHsKICAgICAgICAgICAgICAgIHZhciBzaXplICAgICAgICA9IHNlc3Npb24uZ2V0VGFiU2l6ZSgpLAogICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uICAgID0gdGhpcy5nZXRDdXJzb3JQb3NpdGlvbigpLAogICAgICAgICAgICAgICAgICAgIGNvbHVtbiAgICAgID0gc2Vzc2lvbi5kb2N1bWVudFRvU2NyZWVuQ29sdW1uKHBvc2l0aW9uLnJvdywgcG9zaXRpb24uY29sdW1uKSwKICAgICAgICAgICAgICAgICAgICBjb3VudCAgICAgICA9IChzaXplIC0gY29sdW1uICUgc2l6ZSk7CgogICAgICAgICAgICAgICAgaW5kZW50U3RyaW5nID0gbGFuZy5zdHJpbmdSZXBlYXQoIiAiLCBjb3VudCk7CiAgICAgICAgICAgIH0gZWxzZQogICAgICAgICAgICAgICAgaW5kZW50U3RyaW5nID0gIlx0IjsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW5zZXJ0KGluZGVudFN0cmluZyk7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuYmxvY2tJbmRlbnQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgcm93cyA9IHRoaXMuJGdldFNlbGVjdGVkUm93cygpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5pbmRlbnRSb3dzKHJvd3MuZmlyc3QsIHJvd3MubGFzdCwgIlx0Iik7CiAgICB9OwogICAgdGhpcy5ibG9ja091dGRlbnQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgc2VsZWN0aW9uID0gdGhpcy5zZXNzaW9uLmdldFNlbGVjdGlvbigpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5vdXRkZW50Um93cyhzZWxlY3Rpb24uZ2V0UmFuZ2UoKSk7CiAgICB9OwogICAgdGhpcy5zb3J0TGluZXMgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgcm93cyA9IHRoaXMuJGdldFNlbGVjdGVkUm93cygpOwogICAgICAgIHZhciBzZXNzaW9uID0gdGhpcy5zZXNzaW9uOwoKICAgICAgICB2YXIgbGluZXMgPSBbXTsKICAgICAgICBmb3IgKGkgPSByb3dzLmZpcnN0OyBpIDw9IHJvd3MubGFzdDsgaSsrKQogICAgICAgICAgICBsaW5lcy5wdXNoKHNlc3Npb24uZ2V0TGluZShpKSk7CgogICAgICAgIGxpbmVzLnNvcnQoZnVuY3Rpb24oYSwgYikgewogICAgICAgICAgICBpZiAoYS50b0xvd2VyQ2FzZSgpIDwgYi50b0xvd2VyQ2FzZSgpKSByZXR1cm4gLTE7CiAgICAgICAgICAgIGlmIChhLnRvTG93ZXJDYXNlKCkgPiBiLnRvTG93ZXJDYXNlKCkpIHJldHVybiAxOwogICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9KTsKCiAgICAgICAgdmFyIGRlbGV0ZVJhbmdlID0gbmV3IFJhbmdlKDAsIDAsIDAsIDApOwogICAgICAgIGZvciAodmFyIGkgPSByb3dzLmZpcnN0OyBpIDw9IHJvd3MubGFzdDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBsaW5lID0gc2Vzc2lvbi5nZXRMaW5lKGkpOwogICAgICAgICAgICBkZWxldGVSYW5nZS5zdGFydC5yb3cgPSBpOwogICAgICAgICAgICBkZWxldGVSYW5nZS5lbmQucm93ID0gaTsKICAgICAgICAgICAgZGVsZXRlUmFuZ2UuZW5kLmNvbHVtbiA9IGxpbmUubGVuZ3RoOwogICAgICAgICAgICBzZXNzaW9uLnJlcGxhY2UoZGVsZXRlUmFuZ2UsIGxpbmVzW2ktcm93cy5maXJzdF0pOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLnRvZ2dsZUNvbW1lbnRMaW5lcyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBzdGF0ZSA9IHRoaXMuc2Vzc2lvbi5nZXRTdGF0ZSh0aGlzLmdldEN1cnNvclBvc2l0aW9uKCkucm93KTsKICAgICAgICB2YXIgcm93cyA9IHRoaXMuJGdldFNlbGVjdGVkUm93cygpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5nZXRNb2RlKCkudG9nZ2xlQ29tbWVudExpbmVzKHN0YXRlLCB0aGlzLnNlc3Npb24sIHJvd3MuZmlyc3QsIHJvd3MubGFzdCk7CiAgICB9OwogICAgdGhpcy5nZXROdW1iZXJBdCA9IGZ1bmN0aW9uKCByb3csIGNvbHVtbiApIHsKICAgICAgICB2YXIgX251bWJlclJ4ID0gL1tcLV0/WzAtOV0rKD86XC5bMC05XSspPy9nCiAgICAgICAgX251bWJlclJ4Lmxhc3RJbmRleCA9IDAKCiAgICAgICAgdmFyIHMgPSB0aGlzLnNlc3Npb24uZ2V0TGluZShyb3cpCiAgICAgICAgd2hpbGUoX251bWJlclJ4Lmxhc3RJbmRleCA8IGNvbHVtbiAtIDEgKXsKICAgICAgICAgICAgdmFyIG0gPSBfbnVtYmVyUnguZXhlYyhzKQogICAgICAgICAgICBpZihtLmluZGV4IDw9IGNvbHVtbiAmJiBtLmluZGV4K21bMF0ubGVuZ3RoID49IGNvbHVtbil7CiAgICAgICAgICAgICAgICB2YXIgbnVtYmVyID0gewogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBtWzBdLAogICAgICAgICAgICAgICAgICAgIHN0YXJ0OiBtLmluZGV4LAogICAgICAgICAgICAgICAgICAgIGVuZDogbS5pbmRleCttWzBdLmxlbmd0aAoKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gbnVsbDsKICAgIH07CiAgICB0aGlzLm1vZGlmeU51bWJlciA9IGZ1bmN0aW9uKGFtb3VudCkgewogICAgICAgIHZhciByb3cgPSB0aGlzLnNlbGVjdGlvbi5nZXRDdXJzb3IoKS5yb3c7CiAgICAgICAgdmFyIGNvbHVtbiA9IHRoaXMuc2VsZWN0aW9uLmdldEN1cnNvcigpLmNvbHVtbjsKICAgICAgICB2YXIgY2hhclJhbmdlID0gbmV3IFJhbmdlKHJvdywgY29sdW1uLTEsIHJvdywgY29sdW1uKTsKCiAgICAgICAgdmFyIGMgPSB0aGlzLnNlc3Npb24uZ2V0VGV4dFJhbmdlKGNoYXJSYW5nZSk7CiAgICAgICAgaWYgKCFpc05hTihwYXJzZUZsb2F0KGMpKSAmJiBpc0Zpbml0ZShjKSkgewogICAgICAgICAgICB2YXIgbnIgPSB0aGlzLmdldE51bWJlckF0KHJvdywgY29sdW1uKTsKICAgICAgICAgICAgaWYgKG5yKSB7CiAgICAgICAgICAgICAgICB2YXIgZnAgPSBuci52YWx1ZS5pbmRleE9mKCIuIikgPj0gMCA/IG5yLnN0YXJ0ICsgbnIudmFsdWUuaW5kZXhPZigiLiIpICsgMSA6IG5yLmVuZDsKICAgICAgICAgICAgICAgIHZhciBkZWNpbWFscyA9IG5yLnN0YXJ0ICsgbnIudmFsdWUubGVuZ3RoIC0gZnA7CgogICAgICAgICAgICAgICAgdmFyIHQgPSBwYXJzZUZsb2F0KG5yLnZhbHVlKTsKICAgICAgICAgICAgICAgIHQgKj0gTWF0aC5wb3coMTAsIGRlY2ltYWxzKTsKICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgIGlmKGZwICE9PSBuci5lbmQgJiYgY29sdW1uIDwgZnApewogICAgICAgICAgICAgICAgICAgIGFtb3VudCAqPSBNYXRoLnBvdygxMCwgbnIuZW5kIC0gY29sdW1uIC0gMSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGFtb3VudCAqPSBNYXRoLnBvdygxMCwgbnIuZW5kIC0gY29sdW1uKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdCArPSBhbW91bnQ7CiAgICAgICAgICAgICAgICB0IC89IE1hdGgucG93KDEwLCBkZWNpbWFscyk7CiAgICAgICAgICAgICAgICB2YXIgbm5yID0gdC50b0ZpeGVkKGRlY2ltYWxzKTsKICAgICAgICAgICAgICAgIHZhciByZXBsYWNlUmFuZ2UgPSBuZXcgUmFuZ2Uocm93LCBuci5zdGFydCwgcm93LCBuci5lbmQpOwogICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlcGxhY2UocmVwbGFjZVJhbmdlLCBubnIpOwogICAgICAgICAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8ocm93LCBNYXRoLm1heChuci5zdGFydCArMSwgY29sdW1uICsgbm5yLmxlbmd0aCAtIG5yLnZhbHVlLmxlbmd0aCkpOwoKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH07CiAgICB0aGlzLnJlbW92ZUxpbmVzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHJvd3MgPSB0aGlzLiRnZXRTZWxlY3RlZFJvd3MoKTsKICAgICAgICB2YXIgcmFuZ2U7CiAgICAgICAgaWYgKHJvd3MuZmlyc3QgPT09IDAgfHwgcm93cy5sYXN0KzEgPCB0aGlzLnNlc3Npb24uZ2V0TGVuZ3RoKCkpCiAgICAgICAgICAgIHJhbmdlID0gbmV3IFJhbmdlKHJvd3MuZmlyc3QsIDAsIHJvd3MubGFzdCsxLCAwKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHJhbmdlID0gbmV3IFJhbmdlKAogICAgICAgICAgICAgICAgcm93cy5maXJzdC0xLCB0aGlzLnNlc3Npb24uZ2V0TGluZShyb3dzLmZpcnN0LTEpLmxlbmd0aCwKICAgICAgICAgICAgICAgIHJvd3MubGFzdCwgdGhpcy5zZXNzaW9uLmdldExpbmUocm93cy5sYXN0KS5sZW5ndGgKICAgICAgICAgICAgKTsKICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlKHJhbmdlKTsKICAgICAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKCk7CiAgICB9OwoKICAgIHRoaXMuZHVwbGljYXRlU2VsZWN0aW9uID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHNlbCA9IHRoaXMuc2VsZWN0aW9uOwogICAgICAgIHZhciBkb2MgPSB0aGlzLnNlc3Npb247CiAgICAgICAgdmFyIHJhbmdlID0gc2VsLmdldFJhbmdlKCk7CiAgICAgICAgaWYgKHJhbmdlLmlzRW1wdHkoKSkgewogICAgICAgICAgICB2YXIgcm93ID0gcmFuZ2Uuc3RhcnQucm93OwogICAgICAgICAgICBkb2MuZHVwbGljYXRlTGluZXMocm93LCByb3cpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciByZXZlcnNlID0gc2VsLmlzQmFja3dhcmRzKCkKICAgICAgICAgICAgdmFyIHBvaW50ID0gc2VsLmlzQmFja3dhcmRzKCkgPyByYW5nZS5zdGFydCA6IHJhbmdlLmVuZDsKICAgICAgICAgICAgdmFyIGVuZFBvaW50ID0gZG9jLmluc2VydChwb2ludCwgZG9jLmdldFRleHRSYW5nZShyYW5nZSksIGZhbHNlKTsKICAgICAgICAgICAgcmFuZ2Uuc3RhcnQgPSBwb2ludDsKICAgICAgICAgICAgcmFuZ2UuZW5kID0gZW5kUG9pbnQ7CiAgICAgICAgICAgIAogICAgICAgICAgICBzZWwuc2V0U2VsZWN0aW9uUmFuZ2UocmFuZ2UsIHJldmVyc2UpCiAgICAgICAgfQogICAgfTsKICAgIHRoaXMubW92ZUxpbmVzRG93biA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJG1vdmVMaW5lcyhmdW5jdGlvbihmaXJzdFJvdywgbGFzdFJvdykgewogICAgICAgICAgICByZXR1cm4gdGhpcy5zZXNzaW9uLm1vdmVMaW5lc0Rvd24oZmlyc3RSb3csIGxhc3RSb3cpOwogICAgICAgIH0pOwogICAgfTsKICAgIHRoaXMubW92ZUxpbmVzVXAgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtb3ZlTGluZXMoZnVuY3Rpb24oZmlyc3RSb3csIGxhc3RSb3cpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2Vzc2lvbi5tb3ZlTGluZXNVcChmaXJzdFJvdywgbGFzdFJvdyk7CiAgICAgICAgfSk7CiAgICB9OwogICAgdGhpcy5tb3ZlVGV4dCA9IGZ1bmN0aW9uKHJhbmdlLCB0b1Bvc2l0aW9uKSB7CiAgICAgICAgaWYgKHRoaXMuJHJlYWRPbmx5KQogICAgICAgICAgICByZXR1cm4gbnVsbDsKCiAgICAgICAgcmV0dXJuIHRoaXMuc2Vzc2lvbi5tb3ZlVGV4dChyYW5nZSwgdG9Qb3NpdGlvbik7CiAgICB9OwogICAgdGhpcy5jb3B5TGluZXNVcCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJG1vdmVMaW5lcyhmdW5jdGlvbihmaXJzdFJvdywgbGFzdFJvdykgewogICAgICAgICAgICB0aGlzLnNlc3Npb24uZHVwbGljYXRlTGluZXMoZmlyc3RSb3csIGxhc3RSb3cpOwogICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9KTsKICAgIH07CiAgICB0aGlzLmNvcHlMaW5lc0Rvd24gPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtb3ZlTGluZXMoZnVuY3Rpb24oZmlyc3RSb3csIGxhc3RSb3cpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2Vzc2lvbi5kdXBsaWNhdGVMaW5lcyhmaXJzdFJvdywgbGFzdFJvdyk7CiAgICAgICAgfSk7CiAgICB9OwogICAgdGhpcy4kbW92ZUxpbmVzID0gZnVuY3Rpb24obW92ZXIpIHsKICAgICAgICB2YXIgcm93cyA9IHRoaXMuJGdldFNlbGVjdGVkUm93cygpOwogICAgICAgIHZhciBzZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbjsKICAgICAgICBpZiAoIXNlbGVjdGlvbi5pc011bHRpTGluZSgpKSB7CiAgICAgICAgICAgIHZhciByYW5nZSA9IHNlbGVjdGlvbi5nZXRSYW5nZSgpOwogICAgICAgICAgICB2YXIgcmV2ZXJzZSA9IHNlbGVjdGlvbi5pc0JhY2t3YXJkcygpOwogICAgICAgIH0KCiAgICAgICAgdmFyIGxpbmVzTW92ZWQgPSBtb3Zlci5jYWxsKHRoaXMsIHJvd3MuZmlyc3QsIHJvd3MubGFzdCk7CgogICAgICAgIGlmIChyYW5nZSkgewogICAgICAgICAgICByYW5nZS5zdGFydC5yb3cgKz0gbGluZXNNb3ZlZDsKICAgICAgICAgICAgcmFuZ2UuZW5kLnJvdyArPSBsaW5lc01vdmVkOwogICAgICAgICAgICBzZWxlY3Rpb24uc2V0U2VsZWN0aW9uUmFuZ2UocmFuZ2UsIHJldmVyc2UpOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgc2VsZWN0aW9uLnNldFNlbGVjdGlvbkFuY2hvcihyb3dzLmxhc3QrbGluZXNNb3ZlZCsxLCAwKTsKICAgICAgICAgICAgc2VsZWN0aW9uLiRtb3ZlU2VsZWN0aW9uKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgc2VsZWN0aW9uLm1vdmVDdXJzb3JUbyhyb3dzLmZpcnN0K2xpbmVzTW92ZWQsIDApOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy4kZ2V0U2VsZWN0ZWRSb3dzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpLmNvbGxhcHNlUm93cygpOwoKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBmaXJzdDogcmFuZ2Uuc3RhcnQucm93LAogICAgICAgICAgICBsYXN0OiByYW5nZS5lbmQucm93CiAgICAgICAgfTsKICAgIH07CgogICAgdGhpcy5vbkNvbXBvc2l0aW9uU3RhcnQgPSBmdW5jdGlvbih0ZXh0KSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci5zaG93Q29tcG9zaXRpb24odGhpcy5nZXRDdXJzb3JQb3NpdGlvbigpKTsKICAgIH07CgogICAgdGhpcy5vbkNvbXBvc2l0aW9uVXBkYXRlID0gZnVuY3Rpb24odGV4dCkgewogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0Q29tcG9zaXRpb25UZXh0KHRleHQpOwogICAgfTsKCiAgICB0aGlzLm9uQ29tcG9zaXRpb25FbmQgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnJlbmRlcmVyLmhpZGVDb21wb3NpdGlvbigpOwogICAgfTsKICAgIHRoaXMuZ2V0Rmlyc3RWaXNpYmxlUm93ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuZ2V0Rmlyc3RWaXNpYmxlUm93KCk7CiAgICB9OwogICAgdGhpcy5nZXRMYXN0VmlzaWJsZVJvdyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLmdldExhc3RWaXNpYmxlUm93KCk7CiAgICB9OwogICAgdGhpcy5pc1Jvd1Zpc2libGUgPSBmdW5jdGlvbihyb3cpIHsKICAgICAgICByZXR1cm4gKHJvdyA+PSB0aGlzLmdldEZpcnN0VmlzaWJsZVJvdygpICYmIHJvdyA8PSB0aGlzLmdldExhc3RWaXNpYmxlUm93KCkpOwogICAgfTsKICAgIHRoaXMuaXNSb3dGdWxseVZpc2libGUgPSBmdW5jdGlvbihyb3cpIHsKICAgICAgICByZXR1cm4gKHJvdyA+PSB0aGlzLnJlbmRlcmVyLmdldEZpcnN0RnVsbHlWaXNpYmxlUm93KCkgJiYgcm93IDw9IHRoaXMucmVuZGVyZXIuZ2V0TGFzdEZ1bGx5VmlzaWJsZVJvdygpKTsKICAgIH07CiAgICB0aGlzLiRnZXRWaXNpYmxlUm93Q291bnQgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5nZXRTY3JvbGxCb3R0b21Sb3coKSAtIHRoaXMucmVuZGVyZXIuZ2V0U2Nyb2xsVG9wUm93KCkgKyAxOwogICAgfTsKCiAgICB0aGlzLiRtb3ZlQnlQYWdlID0gZnVuY3Rpb24oZGlyLCBzZWxlY3QpIHsKICAgICAgICB2YXIgcmVuZGVyZXIgPSB0aGlzLnJlbmRlcmVyOwogICAgICAgIHZhciBjb25maWcgPSB0aGlzLnJlbmRlcmVyLmxheWVyQ29uZmlnOwogICAgICAgIHZhciByb3dzID0gZGlyICogTWF0aC5mbG9vcihjb25maWcuaGVpZ2h0IC8gY29uZmlnLmxpbmVIZWlnaHQpOwoKICAgICAgICB0aGlzLiRibG9ja1Njcm9sbGluZysrOwogICAgICAgIGlmIChzZWxlY3QgPT0gdHJ1ZSkgewogICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi4kbW92ZVNlbGVjdGlvbihmdW5jdGlvbigpewogICAgICAgICAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yQnkocm93cywgMCk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAoc2VsZWN0ID09IGZhbHNlKSB7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLm1vdmVDdXJzb3JCeShyb3dzLCAwKTsKICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICB9CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmctLTsKCiAgICAgICAgdmFyIHNjcm9sbFRvcCA9IHJlbmRlcmVyLnNjcm9sbFRvcDsKCiAgICAgICAgcmVuZGVyZXIuc2Nyb2xsQnkoMCwgcm93cyAqIGNvbmZpZy5saW5lSGVpZ2h0KTsKICAgICAgICBpZiAoc2VsZWN0ICE9IG51bGwpCiAgICAgICAgICAgIHJlbmRlcmVyLnNjcm9sbEN1cnNvckludG9WaWV3KG51bGwsIDAuNSk7CgogICAgICAgIHJlbmRlcmVyLmFuaW1hdGVTY3JvbGxpbmcoc2Nyb2xsVG9wKTsKICAgIH07CiAgICB0aGlzLnNlbGVjdFBhZ2VEb3duID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kbW92ZUJ5UGFnZSgxLCB0cnVlKTsKICAgIH07CiAgICB0aGlzLnNlbGVjdFBhZ2VVcCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJG1vdmVCeVBhZ2UoLTEsIHRydWUpOwogICAgfTsKICAgIHRoaXMuZ290b1BhZ2VEb3duID0gZnVuY3Rpb24oKSB7CiAgICAgICB0aGlzLiRtb3ZlQnlQYWdlKDEsIGZhbHNlKTsKICAgIH07CiAgICB0aGlzLmdvdG9QYWdlVXAgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtb3ZlQnlQYWdlKC0xLCBmYWxzZSk7CiAgICB9OwogICAgdGhpcy5zY3JvbGxQYWdlRG93biA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJG1vdmVCeVBhZ2UoMSk7CiAgICB9OwogICAgdGhpcy5zY3JvbGxQYWdlVXAgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtb3ZlQnlQYWdlKC0xKTsKICAgIH07CiAgICB0aGlzLnNjcm9sbFRvUm93ID0gZnVuY3Rpb24ocm93KSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci5zY3JvbGxUb1Jvdyhyb3cpOwogICAgfTsKICAgIHRoaXMuc2Nyb2xsVG9MaW5lID0gZnVuY3Rpb24obGluZSwgY2VudGVyLCBhbmltYXRlLCBjYWxsYmFjaykgewogICAgICAgIHRoaXMucmVuZGVyZXIuc2Nyb2xsVG9MaW5lKGxpbmUsIGNlbnRlciwgYW5pbWF0ZSwgY2FsbGJhY2spOwogICAgfTsKICAgIHRoaXMuY2VudGVyU2VsZWN0aW9uID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpOwogICAgICAgIHZhciBwb3MgPSB7CiAgICAgICAgICAgIHJvdzogTWF0aC5mbG9vcihyYW5nZS5zdGFydC5yb3cgKyAocmFuZ2UuZW5kLnJvdyAtIHJhbmdlLnN0YXJ0LnJvdykgLyAyKSwKICAgICAgICAgICAgY29sdW1uOiBNYXRoLmZsb29yKHJhbmdlLnN0YXJ0LmNvbHVtbiArIChyYW5nZS5lbmQuY29sdW1uIC0gcmFuZ2Uuc3RhcnQuY29sdW1uKSAvIDIpCiAgICAgICAgfQogICAgICAgIHRoaXMucmVuZGVyZXIuYWxpZ25DdXJzb3IocG9zLCAwLjUpOwogICAgfTsKICAgIHRoaXMuZ2V0Q3Vyc29yUG9zaXRpb24gPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb24uZ2V0Q3Vyc29yKCk7CiAgICB9OwogICAgdGhpcy5nZXRDdXJzb3JQb3NpdGlvblNjcmVlbiA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLnNlc3Npb24uZG9jdW1lbnRUb1NjcmVlblBvc2l0aW9uKHRoaXMuZ2V0Q3Vyc29yUG9zaXRpb24oKSk7CiAgICB9OwogICAgdGhpcy5nZXRTZWxlY3Rpb25SYW5nZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpOwogICAgfTsKICAgIHRoaXMuc2VsZWN0QWxsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcgKz0gMTsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5zZWxlY3RBbGwoKTsKICAgICAgICB0aGlzLiRibG9ja1Njcm9sbGluZyAtPSAxOwogICAgfTsKICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24gPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5jbGVhclNlbGVjdGlvbigpOwogICAgfTsKICAgIHRoaXMubW92ZUN1cnNvclRvID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5tb3ZlQ3Vyc29yVG8ocm93LCBjb2x1bW4pOwogICAgfTsKICAgIHRoaXMubW92ZUN1cnNvclRvUG9zaXRpb24gPSBmdW5jdGlvbihwb3MpIHsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5tb3ZlQ3Vyc29yVG9Qb3NpdGlvbihwb3MpOwogICAgfTsKICAgIHRoaXMuanVtcFRvTWF0Y2hpbmcgPSBmdW5jdGlvbihzZWxlY3QpIHsKICAgICAgICB2YXIgY3Vyc29yID0gdGhpcy5nZXRDdXJzb3JQb3NpdGlvbigpOwoKICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLnNlc3Npb24uZ2V0QnJhY2tldFJhbmdlKGN1cnNvcik7CiAgICAgICAgaWYgKCFyYW5nZSkgewogICAgICAgICAgICByYW5nZSA9IHRoaXMuZmluZCh7CiAgICAgICAgICAgICAgICBuZWVkbGU6IC9be30oKVxbXF1dL2csCiAgICAgICAgICAgICAgICBwcmV2ZW50U2Nyb2xsOnRydWUsCiAgICAgICAgICAgICAgICBzdGFydDoge3JvdzogY3Vyc29yLnJvdywgY29sdW1uOiBjdXJzb3IuY29sdW1uIC0gMX0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGlmICghcmFuZ2UpCiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIHZhciBwb3MgPSByYW5nZS5zdGFydDsKICAgICAgICAgICAgaWYgKHBvcy5yb3cgPT0gY3Vyc29yLnJvdyAmJiBNYXRoLmFicyhwb3MuY29sdW1uIC0gY3Vyc29yLmNvbHVtbikgPCAyKQogICAgICAgICAgICAgICAgcmFuZ2UgPSB0aGlzLnNlc3Npb24uZ2V0QnJhY2tldFJhbmdlKHBvcyk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHBvcyA9IHJhbmdlICYmIHJhbmdlLmN1cnNvciB8fCBwb3M7CiAgICAgICAgaWYgKHBvcykgewogICAgICAgICAgICBpZiAoc2VsZWN0KSB7CiAgICAgICAgICAgICAgICBpZiAocmFuZ2UgJiYgcmFuZ2UuaXNFcXVhbCh0aGlzLmdldFNlbGVjdGlvblJhbmdlKCkpKQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5zZWxlY3RUbyhwb3Mucm93LCBwb3MuY29sdW1uKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvclRvKHBvcy5yb3csIHBvcy5jb2x1bW4pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuZ290b0xpbmUgPSBmdW5jdGlvbihsaW5lTnVtYmVyLCBjb2x1bW4sIGFuaW1hdGUpIHsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5jbGVhclNlbGVjdGlvbigpOwogICAgICAgIHRoaXMuc2Vzc2lvbi51bmZvbGQoe3JvdzogbGluZU51bWJlciAtIDEsIGNvbHVtbjogY29sdW1uIHx8IDB9KTsKCiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcgKz0gMTsKICAgICAgICB0aGlzLm1vdmVDdXJzb3JUbyhsaW5lTnVtYmVyIC0gMSwgY29sdW1uIHx8IDApOwogICAgICAgIHRoaXMuJGJsb2NrU2Nyb2xsaW5nIC09IDE7CgogICAgICAgIGlmICghdGhpcy5pc1Jvd0Z1bGx5VmlzaWJsZShsaW5lTnVtYmVyIC0gMSkpCiAgICAgICAgICAgIHRoaXMuc2Nyb2xsVG9MaW5lKGxpbmVOdW1iZXIgLSAxLCB0cnVlLCBhbmltYXRlKTsKICAgIH07CiAgICB0aGlzLm5hdmlnYXRlVG8gPSBmdW5jdGlvbihyb3csIGNvbHVtbikgewogICAgICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICB0aGlzLm1vdmVDdXJzb3JUbyhyb3csIGNvbHVtbik7CiAgICB9OwogICAgdGhpcy5uYXZpZ2F0ZVVwID0gZnVuY3Rpb24odGltZXMpIHsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5jbGVhclNlbGVjdGlvbigpOwogICAgICAgIHRpbWVzID0gdGltZXMgfHwgMTsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5tb3ZlQ3Vyc29yQnkoLXRpbWVzLCAwKTsKICAgIH07CiAgICB0aGlzLm5hdmlnYXRlRG93biA9IGZ1bmN0aW9uKHRpbWVzKSB7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24uY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICB0aW1lcyA9IHRpbWVzIHx8IDE7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24ubW92ZUN1cnNvckJ5KHRpbWVzLCAwKTsKICAgIH07CiAgICB0aGlzLm5hdmlnYXRlTGVmdCA9IGZ1bmN0aW9uKHRpbWVzKSB7CiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdGlvbi5pc0VtcHR5KCkpIHsKICAgICAgICAgICAgdmFyIHNlbGVjdGlvblN0YXJ0ID0gdGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpLnN0YXJ0OwogICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JUb1Bvc2l0aW9uKHNlbGVjdGlvblN0YXJ0KTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHRpbWVzID0gdGltZXMgfHwgMTsKICAgICAgICAgICAgd2hpbGUgKHRpbWVzLS0pIHsKICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLm1vdmVDdXJzb3JMZWZ0KCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy5jbGVhclNlbGVjdGlvbigpOwogICAgfTsKICAgIHRoaXMubmF2aWdhdGVSaWdodCA9IGZ1bmN0aW9uKHRpbWVzKSB7CiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdGlvbi5pc0VtcHR5KCkpIHsKICAgICAgICAgICAgdmFyIHNlbGVjdGlvbkVuZCA9IHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKS5lbmQ7CiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvclRvUG9zaXRpb24oc2VsZWN0aW9uRW5kKTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHRpbWVzID0gdGltZXMgfHwgMTsKICAgICAgICAgICAgd2hpbGUgKHRpbWVzLS0pIHsKICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLm1vdmVDdXJzb3JSaWdodCgpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgIH07CiAgICB0aGlzLm5hdmlnYXRlTGluZVN0YXJ0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24ubW92ZUN1cnNvckxpbmVTdGFydCgpOwogICAgICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgIH07CiAgICB0aGlzLm5hdmlnYXRlTGluZUVuZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuc2VsZWN0aW9uLm1vdmVDdXJzb3JMaW5lRW5kKCk7CiAgICAgICAgdGhpcy5jbGVhclNlbGVjdGlvbigpOwogICAgfTsKICAgIHRoaXMubmF2aWdhdGVGaWxlRW5kID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHNjcm9sbFRvcCA9IHRoaXMucmVuZGVyZXIuc2Nyb2xsVG9wOwogICAgICAgIHRoaXMuc2VsZWN0aW9uLm1vdmVDdXJzb3JGaWxlRW5kKCk7CiAgICAgICAgdGhpcy5jbGVhclNlbGVjdGlvbigpOwogICAgICAgIHRoaXMucmVuZGVyZXIuYW5pbWF0ZVNjcm9sbGluZyhzY3JvbGxUb3ApOwogICAgfTsKICAgIHRoaXMubmF2aWdhdGVGaWxlU3RhcnQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgc2Nyb2xsVG9wID0gdGhpcy5yZW5kZXJlci5zY3JvbGxUb3A7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24ubW92ZUN1cnNvckZpbGVTdGFydCgpOwogICAgICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICB0aGlzLnJlbmRlcmVyLmFuaW1hdGVTY3JvbGxpbmcoc2Nyb2xsVG9wKTsKICAgIH07CiAgICB0aGlzLm5hdmlnYXRlV29yZFJpZ2h0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24ubW92ZUN1cnNvcldvcmRSaWdodCgpOwogICAgICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgIH07CiAgICB0aGlzLm5hdmlnYXRlV29yZExlZnQgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5tb3ZlQ3Vyc29yV29yZExlZnQoKTsKICAgICAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKCk7CiAgICB9OwogICAgdGhpcy5yZXBsYWNlID0gZnVuY3Rpb24ocmVwbGFjZW1lbnQsIG9wdGlvbnMpIHsKICAgICAgICBpZiAob3B0aW9ucykKICAgICAgICAgICAgdGhpcy4kc2VhcmNoLnNldChvcHRpb25zKTsKCiAgICAgICAgdmFyIHJhbmdlID0gdGhpcy4kc2VhcmNoLmZpbmQodGhpcy5zZXNzaW9uKTsKICAgICAgICB2YXIgcmVwbGFjZWQgPSAwOwogICAgICAgIGlmICghcmFuZ2UpCiAgICAgICAgICAgIHJldHVybiByZXBsYWNlZDsKCiAgICAgICAgaWYgKHRoaXMuJHRyeVJlcGxhY2UocmFuZ2UsIHJlcGxhY2VtZW50KSkgewogICAgICAgICAgICByZXBsYWNlZCA9IDE7CiAgICAgICAgfQogICAgICAgIGlmIChyYW5nZSAhPT0gbnVsbCkgewogICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5zZXRTZWxlY3Rpb25SYW5nZShyYW5nZSk7CiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuc2Nyb2xsU2VsZWN0aW9uSW50b1ZpZXcocmFuZ2Uuc3RhcnQsIHJhbmdlLmVuZCk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gcmVwbGFjZWQ7CiAgICB9OwogICAgdGhpcy5yZXBsYWNlQWxsID0gZnVuY3Rpb24ocmVwbGFjZW1lbnQsIG9wdGlvbnMpIHsKICAgICAgICBpZiAob3B0aW9ucykgewogICAgICAgICAgICB0aGlzLiRzZWFyY2guc2V0KG9wdGlvbnMpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJhbmdlcyA9IHRoaXMuJHNlYXJjaC5maW5kQWxsKHRoaXMuc2Vzc2lvbik7CiAgICAgICAgdmFyIHJlcGxhY2VkID0gMDsKICAgICAgICBpZiAoIXJhbmdlcy5sZW5ndGgpCiAgICAgICAgICAgIHJldHVybiByZXBsYWNlZDsKCiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcgKz0gMTsKCiAgICAgICAgdmFyIHNlbGVjdGlvbiA9IHRoaXMuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24ubW92ZUN1cnNvclRvKDAsIDApOwoKICAgICAgICBmb3IgKHZhciBpID0gcmFuZ2VzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7CiAgICAgICAgICAgIGlmKHRoaXMuJHRyeVJlcGxhY2UocmFuZ2VzW2ldLCByZXBsYWNlbWVudCkpIHsKICAgICAgICAgICAgICAgIHJlcGxhY2VkKys7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMuc2VsZWN0aW9uLnNldFNlbGVjdGlvblJhbmdlKHNlbGVjdGlvbik7CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcgLT0gMTsKCiAgICAgICAgcmV0dXJuIHJlcGxhY2VkOwogICAgfTsKCiAgICB0aGlzLiR0cnlSZXBsYWNlID0gZnVuY3Rpb24ocmFuZ2UsIHJlcGxhY2VtZW50KSB7CiAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5zZXNzaW9uLmdldFRleHRSYW5nZShyYW5nZSk7CiAgICAgICAgcmVwbGFjZW1lbnQgPSB0aGlzLiRzZWFyY2gucmVwbGFjZShpbnB1dCwgcmVwbGFjZW1lbnQpOwogICAgICAgIGlmIChyZXBsYWNlbWVudCAhPT0gbnVsbCkgewogICAgICAgICAgICByYW5nZS5lbmQgPSB0aGlzLnNlc3Npb24ucmVwbGFjZShyYW5nZSwgcmVwbGFjZW1lbnQpOwogICAgICAgICAgICByZXR1cm4gcmFuZ2U7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuZ2V0TGFzdFNlYXJjaE9wdGlvbnMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc2VhcmNoLmdldE9wdGlvbnMoKTsKICAgIH07CiAgICB0aGlzLmZpbmQgPSBmdW5jdGlvbihuZWVkbGUsIG9wdGlvbnMsIGFuaW1hdGUpIHsKICAgICAgICBpZiAoIW9wdGlvbnMpCiAgICAgICAgICAgIG9wdGlvbnMgPSB7fTsKCiAgICAgICAgaWYgKHR5cGVvZiBuZWVkbGUgPT0gInN0cmluZyIgfHwgbmVlZGxlIGluc3RhbmNlb2YgUmVnRXhwKQogICAgICAgICAgICBvcHRpb25zLm5lZWRsZSA9IG5lZWRsZTsKICAgICAgICBlbHNlIGlmICh0eXBlb2YgbmVlZGxlID09ICJvYmplY3QiKQogICAgICAgICAgICBvb3AubWl4aW4ob3B0aW9ucywgbmVlZGxlKTsKCiAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTsKICAgICAgICBpZiAob3B0aW9ucy5uZWVkbGUgPT0gbnVsbCkgewogICAgICAgICAgICBuZWVkbGUgPSB0aGlzLnNlc3Npb24uZ2V0VGV4dFJhbmdlKHJhbmdlKQogICAgICAgICAgICAgICAgfHwgdGhpcy4kc2VhcmNoLiRvcHRpb25zLm5lZWRsZTsKICAgICAgICAgICAgaWYgKCFuZWVkbGUpIHsKICAgICAgICAgICAgICAgIHJhbmdlID0gdGhpcy5zZXNzaW9uLmdldFdvcmRSYW5nZShyYW5nZS5zdGFydC5yb3csIHJhbmdlLnN0YXJ0LmNvbHVtbik7CiAgICAgICAgICAgICAgICBuZWVkbGUgPSB0aGlzLnNlc3Npb24uZ2V0VGV4dFJhbmdlKHJhbmdlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLiRzZWFyY2guc2V0KHtuZWVkbGU6IG5lZWRsZX0pOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kc2VhcmNoLnNldChvcHRpb25zKTsKICAgICAgICBpZiAoIW9wdGlvbnMuc3RhcnQpCiAgICAgICAgICAgIHRoaXMuJHNlYXJjaC5zZXQoe3N0YXJ0OiByYW5nZX0pOwoKICAgICAgICB2YXIgbmV3UmFuZ2UgPSB0aGlzLiRzZWFyY2guZmluZCh0aGlzLnNlc3Npb24pOwogICAgICAgIGlmIChvcHRpb25zLnByZXZlbnRTY3JvbGwpCiAgICAgICAgICAgIHJldHVybiBuZXdSYW5nZTsKICAgICAgICBpZiAobmV3UmFuZ2UpIHsKICAgICAgICAgICAgdGhpcy5yZXZlYWxSYW5nZShuZXdSYW5nZSwgYW5pbWF0ZSk7CiAgICAgICAgICAgIHJldHVybiBuZXdSYW5nZTsKICAgICAgICB9CiAgICAgICAgaWYgKG9wdGlvbnMuYmFja3dhcmRzKQogICAgICAgICAgICByYW5nZS5zdGFydCA9IHJhbmdlLmVuZDsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHJhbmdlLmVuZCA9IHJhbmdlLnN0YXJ0OwogICAgICAgIHRoaXMuc2VsZWN0aW9uLnNldFJhbmdlKHJhbmdlKTsKICAgIH07CiAgICB0aGlzLmZpbmROZXh0ID0gZnVuY3Rpb24ob3B0aW9ucywgYW5pbWF0ZSkgewogICAgICAgIHRoaXMuZmluZCh7c2tpcEN1cnJlbnQ6IHRydWUsIGJhY2t3YXJkczogZmFsc2V9LCBvcHRpb25zLCBhbmltYXRlKTsKICAgIH07CiAgICB0aGlzLmZpbmRQcmV2aW91cyA9IGZ1bmN0aW9uKG9wdGlvbnMsIGFuaW1hdGUpIHsKICAgICAgICB0aGlzLmZpbmQob3B0aW9ucywge3NraXBDdXJyZW50OiB0cnVlLCBiYWNrd2FyZHM6IHRydWV9LCBhbmltYXRlKTsKICAgIH07CgogICAgdGhpcy5yZXZlYWxSYW5nZSA9IGZ1bmN0aW9uKHJhbmdlLCBhbmltYXRlKSB7CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcgKz0gMTsKICAgICAgICB0aGlzLnNlc3Npb24udW5mb2xkKHJhbmdlKTsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5zZXRTZWxlY3Rpb25SYW5nZShyYW5nZSk7CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcgLT0gMTsKCiAgICAgICAgdmFyIHNjcm9sbFRvcCA9IHRoaXMucmVuZGVyZXIuc2Nyb2xsVG9wOwogICAgICAgIHRoaXMucmVuZGVyZXIuc2Nyb2xsU2VsZWN0aW9uSW50b1ZpZXcocmFuZ2Uuc3RhcnQsIHJhbmdlLmVuZCwgMC41KTsKICAgICAgICBpZiAoYW5pbWF0ZSAhPSBmYWxzZSkKICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hbmltYXRlU2Nyb2xsaW5nKHNjcm9sbFRvcCk7CiAgICB9OwogICAgdGhpcy51bmRvID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcrKzsKICAgICAgICB0aGlzLnNlc3Npb24uZ2V0VW5kb01hbmFnZXIoKS51bmRvKCk7CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmctLTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnNjcm9sbEN1cnNvckludG9WaWV3KG51bGwsIDAuNSk7CiAgICB9OwogICAgdGhpcy5yZWRvID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmcrKzsKICAgICAgICB0aGlzLnNlc3Npb24uZ2V0VW5kb01hbmFnZXIoKS5yZWRvKCk7CiAgICAgICAgdGhpcy4kYmxvY2tTY3JvbGxpbmctLTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnNjcm9sbEN1cnNvckludG9WaWV3KG51bGwsIDAuNSk7CiAgICB9OwogICAgdGhpcy5kZXN0cm95ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci5kZXN0cm95KCk7CiAgICB9OwoKfSkuY2FsbChFZGl0b3IucHJvdG90eXBlKTsKCgpleHBvcnRzLkVkaXRvciA9IEVkaXRvcjsKfSk7CgphY2UuZGVmaW5lKCdhY2UvbGliL2xhbmcnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnIF0sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCmV4cG9ydHMuc3RyaW5nUmV2ZXJzZSA9IGZ1bmN0aW9uKHN0cmluZykgewogICAgcmV0dXJuIHN0cmluZy5zcGxpdCgiIikucmV2ZXJzZSgpLmpvaW4oIiIpOwp9OwoKZXhwb3J0cy5zdHJpbmdSZXBlYXQgPSBmdW5jdGlvbiAoc3RyaW5nLCBjb3VudCkgewogICAgdmFyIHJlc3VsdCA9ICcnOwogICAgd2hpbGUgKGNvdW50ID4gMCkgewogICAgICAgIGlmIChjb3VudCAmIDEpCiAgICAgICAgICAgIHJlc3VsdCArPSBzdHJpbmc7CgogICAgICAgIGlmIChjb3VudCA+Pj0gMSkKICAgICAgICAgICAgc3RyaW5nICs9IHN0cmluZzsKICAgIH0KICAgIHJldHVybiByZXN1bHQ7Cn07Cgp2YXIgdHJpbUJlZ2luUmVnZXhwID0gL15cc1xzKi87CnZhciB0cmltRW5kUmVnZXhwID0gL1xzXHMqJC87CgpleHBvcnRzLnN0cmluZ1RyaW1MZWZ0ID0gZnVuY3Rpb24gKHN0cmluZykgewogICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKHRyaW1CZWdpblJlZ2V4cCwgJycpOwp9OwoKZXhwb3J0cy5zdHJpbmdUcmltUmlnaHQgPSBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodHJpbUVuZFJlZ2V4cCwgJycpOwp9OwoKZXhwb3J0cy5jb3B5T2JqZWN0ID0gZnVuY3Rpb24ob2JqKSB7CiAgICB2YXIgY29weSA9IHt9OwogICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGNvcHlba2V5XSA9IG9ialtrZXldOwogICAgfQogICAgcmV0dXJuIGNvcHk7Cn07CgpleHBvcnRzLmNvcHlBcnJheSA9IGZ1bmN0aW9uKGFycmF5KXsKICAgIHZhciBjb3B5ID0gW107CiAgICBmb3IgKHZhciBpPTAsIGw9YXJyYXkubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgIGlmIChhcnJheVtpXSAmJiB0eXBlb2YgYXJyYXlbaV0gPT0gIm9iamVjdCIpCiAgICAgICAgICAgIGNvcHlbaV0gPSB0aGlzLmNvcHlPYmplY3QoIGFycmF5W2ldICk7CiAgICAgICAgZWxzZSAKICAgICAgICAgICAgY29weVtpXSA9IGFycmF5W2ldOwogICAgfQogICAgcmV0dXJuIGNvcHk7Cn07CgpleHBvcnRzLmRlZXBDb3B5ID0gZnVuY3Rpb24gKG9iaikgewogICAgaWYgKHR5cGVvZiBvYmogIT0gIm9iamVjdCIpIHsKICAgICAgICByZXR1cm4gb2JqOwogICAgfQogICAgCiAgICB2YXIgY29weSA9IG9iai5jb25zdHJ1Y3RvcigpOwogICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmICh0eXBlb2Ygb2JqW2tleV0gPT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgY29weVtrZXldID0gdGhpcy5kZWVwQ29weShvYmpba2V5XSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29weVtrZXldID0gb2JqW2tleV07CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGNvcHk7Cn07CgpleHBvcnRzLmFycmF5VG9NYXAgPSBmdW5jdGlvbihhcnIpIHsKICAgIHZhciBtYXAgPSB7fTsKICAgIGZvciAodmFyIGk9MDsgaTxhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgICBtYXBbYXJyW2ldXSA9IDE7CiAgICB9CiAgICByZXR1cm4gbWFwOwoKfTsKCmV4cG9ydHMuY3JlYXRlTWFwID0gZnVuY3Rpb24ocHJvcHMpIHsKICAgIHZhciBtYXAgPSBPYmplY3QuY3JlYXRlKG51bGwpOwogICAgZm9yICh2YXIgaSBpbiBwcm9wcykgewogICAgICAgIG1hcFtpXSA9IHByb3BzW2ldOwogICAgfQogICAgcmV0dXJuIG1hcDsKfTsKZXhwb3J0cy5hcnJheVJlbW92ZSA9IGZ1bmN0aW9uKGFycmF5LCB2YWx1ZSkgewogIGZvciAodmFyIGkgPSAwOyBpIDw9IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICBpZiAodmFsdWUgPT09IGFycmF5W2ldKSB7CiAgICAgIGFycmF5LnNwbGljZShpLCAxKTsKICAgIH0KICB9Cn07CgpleHBvcnRzLmVzY2FwZVJlZ0V4cCA9IGZ1bmN0aW9uKHN0cikgewogICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4qKz9eJHt9KCl8W1xdXC9cXF0pL2csICdcXCQxJyk7Cn07CgpleHBvcnRzLmVzY2FwZUhUTUwgPSBmdW5jdGlvbihzdHIpIHsKICAgIHJldHVybiBzdHIucmVwbGFjZSgvJi9nLCAiJiMzODsiKS5yZXBsYWNlKC8iL2csICImIzM0OyIpLnJlcGxhY2UoLycvZywgIiYjMzk7IikucmVwbGFjZSgvPC9nLCAiJiM2MDsiKTsKfTsKCmV4cG9ydHMuZ2V0TWF0Y2hPZmZzZXRzID0gZnVuY3Rpb24oc3RyaW5nLCByZWdFeHApIHsKICAgIHZhciBtYXRjaGVzID0gW107CgogICAgc3RyaW5nLnJlcGxhY2UocmVnRXhwLCBmdW5jdGlvbihzdHIpIHsKICAgICAgICBtYXRjaGVzLnB1c2goewogICAgICAgICAgICBvZmZzZXQ6IGFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoLTJdLAogICAgICAgICAgICBsZW5ndGg6IHN0ci5sZW5ndGgKICAgICAgICB9KTsKICAgIH0pOwoKICAgIHJldHVybiBtYXRjaGVzOwp9OwpleHBvcnRzLmRlZmVycmVkQ2FsbCA9IGZ1bmN0aW9uKGZjbikgewoKICAgIHZhciB0aW1lciA9IG51bGw7CiAgICB2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aW1lciA9IG51bGw7CiAgICAgICAgZmNuKCk7CiAgICB9OwoKICAgIHZhciBkZWZlcnJlZCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHsKICAgICAgICBkZWZlcnJlZC5jYW5jZWwoKTsKICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoY2FsbGJhY2ssIHRpbWVvdXQgfHwgMCk7CiAgICAgICAgcmV0dXJuIGRlZmVycmVkOwogICAgfTsKCiAgICBkZWZlcnJlZC5zY2hlZHVsZSA9IGRlZmVycmVkOwoKICAgIGRlZmVycmVkLmNhbGwgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLmNhbmNlbCgpOwogICAgICAgIGZjbigpOwogICAgICAgIHJldHVybiBkZWZlcnJlZDsKICAgIH07CgogICAgZGVmZXJyZWQuY2FuY2VsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTsKICAgICAgICB0aW1lciA9IG51bGw7CiAgICAgICAgcmV0dXJuIGRlZmVycmVkOwogICAgfTsKCiAgICByZXR1cm4gZGVmZXJyZWQ7Cn07CgoKZXhwb3J0cy5kZWxheWVkQ2FsbCA9IGZ1bmN0aW9uKGZjbiwgZGVmYXVsdFRpbWVvdXQpIHsKICAgIHZhciB0aW1lciA9IG51bGw7CiAgICB2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aW1lciA9IG51bGw7CiAgICAgICAgZmNuKCk7CiAgICB9OwoKICAgIHZhciBfc2VsZiA9IGZ1bmN0aW9uKHRpbWVvdXQpIHsKICAgICAgICB0aW1lciAmJiBjbGVhclRpbWVvdXQodGltZXIpOwogICAgICAgIHRpbWVyID0gc2V0VGltZW91dChjYWxsYmFjaywgdGltZW91dCB8fCBkZWZhdWx0VGltZW91dCk7CiAgICB9OwoKICAgIF9zZWxmLmRlbGF5ID0gX3NlbGY7CiAgICBfc2VsZi5zY2hlZHVsZSA9IGZ1bmN0aW9uKHRpbWVvdXQpIHsKICAgICAgICBpZiAodGltZXIgPT0gbnVsbCkKICAgICAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGNhbGxiYWNrLCB0aW1lb3V0IHx8IDApOwogICAgfTsKCiAgICBfc2VsZi5jYWxsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5jYW5jZWwoKTsKICAgICAgICBmY24oKTsKICAgIH07CgogICAgX3NlbGYuY2FuY2VsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGltZXIgJiYgY2xlYXJUaW1lb3V0KHRpbWVyKTsKICAgICAgICB0aW1lciA9IG51bGw7CiAgICB9OwoKICAgIF9zZWxmLmlzUGVuZGluZyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aW1lcjsKICAgIH07CgogICAgcmV0dXJuIF9zZWxmOwp9Owp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9rZXlib2FyZC90ZXh0aW5wdXQnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvZXZlbnQnLCAnYWNlL2xpYi91c2VyYWdlbnQnLCAnYWNlL2xpYi9kb20nLCAnYWNlL2xpYi9sYW5nJ10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBldmVudCA9IHJlcXVpcmUoIi4uL2xpYi9ldmVudCIpOwp2YXIgdXNlcmFnZW50ID0gcmVxdWlyZSgiLi4vbGliL3VzZXJhZ2VudCIpOwp2YXIgZG9tID0gcmVxdWlyZSgiLi4vbGliL2RvbSIpOwp2YXIgbGFuZyA9IHJlcXVpcmUoIi4uL2xpYi9sYW5nIik7CnZhciBCUk9LRU5fU0VUREFUQSA9IHVzZXJhZ2VudC5pc0Nocm9tZSA8IDE4OwoKdmFyIFRleHRJbnB1dCA9IGZ1bmN0aW9uKHBhcmVudE5vZGUsIGhvc3QpIHsKICAgIHZhciB0ZXh0ID0gZG9tLmNyZWF0ZUVsZW1lbnQoInRleHRhcmVhIik7CiAgICB0ZXh0LmNsYXNzTmFtZSA9ICJhY2VfdGV4dC1pbnB1dCI7CiAgICBpZiAodXNlcmFnZW50LmlzVG91Y2hQYWQpCiAgICAgICAgdGV4dC5zZXRBdHRyaWJ1dGUoIngtcGFsbS1kaXNhYmxlLWF1dG8tY2FwIiwgdHJ1ZSk7CgogICAgdGV4dC53cmFwID0gIm9mZiI7CiAgICB0ZXh0LmF1dG9jb3JyZWN0ID0gIm9mZiI7CiAgICB0ZXh0LmF1dG9jYXBpdGFsaXplID0gIm9mZiI7CiAgICB0ZXh0LnNwZWxsY2hlY2sgPSBmYWxzZTsKCiAgICB0ZXh0LnN0eWxlLmJvdHRvbSA9ICIyMDAwZW0iOwogICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGV4dCwgcGFyZW50Tm9kZS5maXJzdENoaWxkKTsKCiAgICB2YXIgUExBQ0VIT0xERVIgPSAiXHgwMVx4MDEiOwoKICAgIHZhciBjdXQgPSBmYWxzZTsKICAgIHZhciBjb3BpZWQgPSBmYWxzZTsKICAgIHZhciBwYXN0ZWQgPSBmYWxzZTsKICAgIHZhciBpbkNvbXBvc3Rpb24gPSBmYWxzZTsKICAgIHZhciB0ZW1wU3R5bGUgPSAnJzsKICAgIHZhciBpc1NlbGVjdGlvbkVtcHR5ID0gdHJ1ZTsKICAgIHRyeSB7IHZhciBpc0ZvY3VzZWQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSB0ZXh0OyB9IGNhdGNoKGUpIHt9CiAgICAKICAgIGV2ZW50LmFkZExpc3RlbmVyKHRleHQsICJibHVyIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgaG9zdC5vbkJsdXIoKTsKICAgICAgICBpc0ZvY3VzZWQgPSBmYWxzZTsKICAgIH0pOwogICAgZXZlbnQuYWRkTGlzdGVuZXIodGV4dCwgImZvY3VzIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgaXNGb2N1c2VkID0gdHJ1ZTsKICAgICAgICBob3N0Lm9uRm9jdXMoKTsKICAgICAgICByZXNldFNlbGVjdGlvbigpOwogICAgfSk7CiAgICB0aGlzLmZvY3VzID0gZnVuY3Rpb24oKSB7IHRleHQuZm9jdXMoKTsgfTsKICAgIHRoaXMuYmx1ciA9IGZ1bmN0aW9uKCkgeyB0ZXh0LmJsdXIoKTsgfTsKICAgIHRoaXMuaXNGb2N1c2VkID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIGlzRm9jdXNlZDsKICAgIH07CiAgICB2YXIgc3luY1NlbGVjdGlvbiA9IGxhbmcuZGVsYXllZENhbGwoZnVuY3Rpb24oKSB7CiAgICAgICAgaXNGb2N1c2VkICYmIHJlc2V0U2VsZWN0aW9uKGlzU2VsZWN0aW9uRW1wdHkpOwogICAgfSk7CiAgICB2YXIgc3luY1ZhbHVlID0gbGFuZy5kZWxheWVkQ2FsbChmdW5jdGlvbigpIHsKICAgICAgICAgaWYgKCFpbkNvbXBvc3Rpb24pIHsKICAgICAgICAgICAgdGV4dC52YWx1ZSA9IFBMQUNFSE9MREVSOwogICAgICAgICAgICBpc0ZvY3VzZWQgJiYgcmVzZXRTZWxlY3Rpb24oKTsKICAgICAgICAgfQogICAgfSk7CgogICAgZnVuY3Rpb24gcmVzZXRTZWxlY3Rpb24oaXNFbXB0eSkgewogICAgICAgIGlmIChpbkNvbXBvc3Rpb24pCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB2YXIgc2VsZWN0aW9uU3RhcnQgPSBpc0VtcHR5ID8gMiA6IDE7CiAgICAgICAgdmFyIHNlbGVjdGlvbkVuZCA9IDI7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgdGV4dC5zZXRTZWxlY3Rpb25SYW5nZShzZWxlY3Rpb25TdGFydCwgc2VsZWN0aW9uRW5kKTsKICAgICAgICB9IGNhdGNoKGUpe30KICAgIH0KCiAgICBmdW5jdGlvbiByZXNldFZhbHVlKCkgewogICAgICAgIGlmIChpbkNvbXBvc3Rpb24pCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB0ZXh0LnZhbHVlID0gUExBQ0VIT0xERVI7CiAgICAgICAgaWYgKHVzZXJhZ2VudC5pc1dlYktpdCkKICAgICAgICAgICAgc3luY1ZhbHVlLnNjaGVkdWxlKCk7CiAgICB9CgogICAgdXNlcmFnZW50LmlzV2ViS2l0IHx8IGhvc3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlU2VsZWN0aW9uJywgZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKGhvc3Quc2VsZWN0aW9uLmlzRW1wdHkoKSAhPSBpc1NlbGVjdGlvbkVtcHR5KSB7CiAgICAgICAgICAgIGlzU2VsZWN0aW9uRW1wdHkgPSAhaXNTZWxlY3Rpb25FbXB0eTsKICAgICAgICAgICAgc3luY1NlbGVjdGlvbi5zY2hlZHVsZSgpOwogICAgICAgIH0KICAgIH0pOwoKICAgIHJlc2V0VmFsdWUoKTsKICAgIGlmIChpc0ZvY3VzZWQpCiAgICAgICAgaG9zdC5vbkZvY3VzKCk7CgoKICAgIHZhciBpc0FsbFNlbGVjdGVkID0gZnVuY3Rpb24odGV4dCkgewogICAgICAgIHJldHVybiB0ZXh0LnNlbGVjdGlvblN0YXJ0ID09PSAwICYmIHRleHQuc2VsZWN0aW9uRW5kID09PSB0ZXh0LnZhbHVlLmxlbmd0aDsKICAgIH07CiAgICBpZiAoIXRleHQuc2V0U2VsZWN0aW9uUmFuZ2UgJiYgdGV4dC5jcmVhdGVUZXh0UmFuZ2UpIHsKICAgICAgICB0ZXh0LnNldFNlbGVjdGlvblJhbmdlID0gZnVuY3Rpb24oc2VsZWN0aW9uU3RhcnQsIHNlbGVjdGlvbkVuZCkgewogICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLmNyZWF0ZVRleHRSYW5nZSgpOwogICAgICAgICAgICByYW5nZS5jb2xsYXBzZSh0cnVlKTsKICAgICAgICAgICAgcmFuZ2UubW92ZVN0YXJ0KCdjaGFyYWN0ZXInLCBzZWxlY3Rpb25TdGFydCk7CiAgICAgICAgICAgIHJhbmdlLm1vdmVFbmQoJ2NoYXJhY3RlcicsIHNlbGVjdGlvbkVuZCk7CiAgICAgICAgICAgIHJhbmdlLnNlbGVjdCgpOwogICAgICAgIH07CiAgICAgICAgaXNBbGxTZWxlY3RlZCA9IGZ1bmN0aW9uKHRleHQpIHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHRleHQub3duZXJEb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKTsKICAgICAgICAgICAgfWNhdGNoKGUpIHt9CiAgICAgICAgICAgIGlmICghcmFuZ2UgfHwgcmFuZ2UucGFyZW50RWxlbWVudCgpICE9IHRleHQpIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIHJldHVybiByYW5nZS50ZXh0ID09IHRleHQudmFsdWU7CiAgICAgICAgfQogICAgfQogICAgaWYgKHVzZXJhZ2VudC5pc09sZElFKSB7CiAgICAgICAgdmFyIGluUHJvcGVydHlDaGFuZ2UgPSBmYWxzZTsKICAgICAgICB2YXIgb25Qcm9wZXJ0eUNoYW5nZSA9IGZ1bmN0aW9uKGUpewogICAgICAgICAgICBpZiAoaW5Qcm9wZXJ0eUNoYW5nZSkKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgdmFyIGRhdGEgPSB0ZXh0LnZhbHVlOwogICAgICAgICAgICBpZiAoaW5Db21wb3N0aW9uIHx8ICFkYXRhIHx8IGRhdGEgPT0gUExBQ0VIT0xERVIpCiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIGlmIChlICYmIGRhdGEgPT0gUExBQ0VIT0xERVJbMF0pCiAgICAgICAgICAgICAgICByZXR1cm4gc3luY1Byb3BlcnR5LnNjaGVkdWxlKCk7CgogICAgICAgICAgICBzZW5kVGV4dChkYXRhKTsKICAgICAgICAgICAgaW5Qcm9wZXJ0eUNoYW5nZSA9IHRydWU7CiAgICAgICAgICAgIHJlc2V0VmFsdWUoKTsKICAgICAgICAgICAgaW5Qcm9wZXJ0eUNoYW5nZSA9IGZhbHNlOwogICAgICAgIH07CiAgICAgICAgdmFyIHN5bmNQcm9wZXJ0eSA9IGxhbmcuZGVsYXllZENhbGwob25Qcm9wZXJ0eUNoYW5nZSk7CiAgICAgICAgZXZlbnQuYWRkTGlzdGVuZXIodGV4dCwgInByb3BlcnR5Y2hhbmdlIiwgb25Qcm9wZXJ0eUNoYW5nZSk7CgogICAgICAgIHZhciBrZXl0YWJsZSA9IHsgMTM6MSwgMjc6MSB9OwogICAgICAgIGV2ZW50LmFkZExpc3RlbmVyKHRleHQsICJrZXl1cCIsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGlmIChpbkNvbXBvc3Rpb24gJiYgKCF0ZXh0LnZhbHVlIHx8IGtleXRhYmxlW2Uua2V5Q29kZV0pKQogICAgICAgICAgICAgICAgc2V0VGltZW91dChvbkNvbXBvc2l0aW9uRW5kLCAwKTsKICAgICAgICAgICAgaWYgKCh0ZXh0LnZhbHVlLmNoYXJDb2RlQXQoMCl8fDApIDwgMTI5KSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaW5Db21wb3N0aW9uID8gb25Db21wb3NpdGlvblVwZGF0ZSgpIDogb25Db21wb3NpdGlvblN0YXJ0KCk7CiAgICAgICAgfSk7CiAgICB9CgogICAgdmFyIG9uU2VsZWN0ID0gZnVuY3Rpb24oZSkgewogICAgICAgIGlmIChjdXQpIHsKICAgICAgICAgICAgY3V0ID0gZmFsc2U7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgaWYgKGNvcGllZCkgewogICAgICAgICAgICBjb3BpZWQgPSBmYWxzZTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBpZiAoaXNBbGxTZWxlY3RlZCh0ZXh0KSkgewogICAgICAgICAgICBob3N0LnNlbGVjdEFsbCgpOwogICAgICAgICAgICByZXNldFNlbGVjdGlvbigpOwogICAgICAgIH0KICAgIH07CgogICAgdmFyIHNlbmRUZXh0ID0gZnVuY3Rpb24oZGF0YSkgewogICAgICAgIGlmIChwYXN0ZWQpIHsKICAgICAgICAgICAgcmVzZXRTZWxlY3Rpb24oKTsKICAgICAgICAgICAgaWYgKGRhdGEpCiAgICAgICAgICAgICAgICBob3N0Lm9uUGFzdGUoZGF0YSk7CiAgICAgICAgICAgIHBhc3RlZCA9IGZhbHNlOwogICAgICAgIH0gZWxzZSBpZiAoZGF0YSA9PSBQTEFDRUhPTERFUlswXSkgewogICAgICAgICAgICBob3N0LmV4ZWNDb21tYW5kKCJkZWwiLCB7c291cmNlOiAiYWNlIn0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIChkYXRhLnN1YnN0cmluZygwLCAyKSA9PSBQTEFDRUhPTERFUikKICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhLnN1YnN0cigyKTsKICAgICAgICAgICAgZWxzZSBpZiAoZGF0YVswXSA9PSBQTEFDRUhPTERFUlswXSkKICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhLnN1YnN0cigxKTsKICAgICAgICAgICAgZWxzZSBpZiAoZGF0YVtkYXRhLmxlbmd0aCAtIDFdID09IFBMQUNFSE9MREVSWzBdKQogICAgICAgICAgICAgICAgZGF0YSA9IGRhdGEuc2xpY2UoMCwgLTEpOwogICAgICAgICAgICBpZiAoZGF0YVtkYXRhLmxlbmd0aCAtIDFdID09IFBMQUNFSE9MREVSWzBdKQogICAgICAgICAgICAgICAgZGF0YSA9IGRhdGEuc2xpY2UoMCwgLTEpOwogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKGRhdGEpCiAgICAgICAgICAgICAgICBob3N0Lm9uVGV4dElucHV0KGRhdGEpOwogICAgICAgIH0KICAgIH07CiAgICB2YXIgb25JbnB1dCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICBpZiAoaW5Db21wb3N0aW9uKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdmFyIGRhdGEgPSB0ZXh0LnZhbHVlOwogICAgICAgIHJlc2V0VmFsdWUoKTsKCiAgICAgICAgc2VuZFRleHQoZGF0YSk7CiAgICB9OwoKICAgIHZhciBvbkN1dCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICB2YXIgZGF0YSA9IGhvc3QuZ2V0Q29weVRleHQoKTsKICAgICAgICBpZiAoIWRhdGEpIHsKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoZSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHZhciBjbGlwYm9hcmREYXRhID0gZS5jbGlwYm9hcmREYXRhIHx8IHdpbmRvdy5jbGlwYm9hcmREYXRhOwoKICAgICAgICBpZiAoY2xpcGJvYXJkRGF0YSAmJiAhQlJPS0VOX1NFVERBVEEpIHsKICAgICAgICAgICAgdmFyIHN1cHBvcnRlZCA9IGNsaXBib2FyZERhdGEuc2V0RGF0YSgiVGV4dCIsIGRhdGEpOwogICAgICAgICAgICBpZiAoc3VwcG9ydGVkKSB7CiAgICAgICAgICAgICAgICBob3N0Lm9uQ3V0KCk7CiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdChlKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKCFzdXBwb3J0ZWQpIHsKICAgICAgICAgICAgY3V0ID0gdHJ1ZTsKICAgICAgICAgICAgdGV4dC52YWx1ZSA9IGRhdGE7CiAgICAgICAgICAgIHRleHQuc2VsZWN0KCk7CiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgIGN1dCA9IGZhbHNlOwogICAgICAgICAgICAgICAgcmVzZXRWYWx1ZSgpOwogICAgICAgICAgICAgICAgcmVzZXRTZWxlY3Rpb24oKTsKICAgICAgICAgICAgICAgIGhvc3Qub25DdXQoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfTsKCiAgICB2YXIgb25Db3B5ID0gZnVuY3Rpb24oZSkgewogICAgICAgIHZhciBkYXRhID0gaG9zdC5nZXRDb3B5VGV4dCgpOwogICAgICAgIGlmICghZGF0YSkgewogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdChlKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIGNsaXBib2FyZERhdGEgPSBlLmNsaXBib2FyZERhdGEgfHwgd2luZG93LmNsaXBib2FyZERhdGE7CiAgICAgICAgaWYgKGNsaXBib2FyZERhdGEgJiYgIUJST0tFTl9TRVREQVRBKSB7CiAgICAgICAgICAgIHZhciBzdXBwb3J0ZWQgPSBjbGlwYm9hcmREYXRhLnNldERhdGEoIlRleHQiLCBkYXRhKTsKICAgICAgICAgICAgaWYgKHN1cHBvcnRlZCkgewogICAgICAgICAgICAgICAgaG9zdC5vbkNvcHkoKTsKICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KGUpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICghc3VwcG9ydGVkKSB7CiAgICAgICAgICAgIGNvcGllZCA9IHRydWU7CiAgICAgICAgICAgIHRleHQudmFsdWUgPSBkYXRhOwogICAgICAgICAgICB0ZXh0LnNlbGVjdCgpOwogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICAgICAgICAgICAgICBjb3BpZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHJlc2V0VmFsdWUoKTsKICAgICAgICAgICAgICAgIHJlc2V0U2VsZWN0aW9uKCk7CiAgICAgICAgICAgICAgICBob3N0Lm9uQ29weSgpOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9OwoKICAgIHZhciBvblBhc3RlID0gZnVuY3Rpb24oZSkgewogICAgICAgIHZhciBjbGlwYm9hcmREYXRhID0gZS5jbGlwYm9hcmREYXRhIHx8IHdpbmRvdy5jbGlwYm9hcmREYXRhOwoKICAgICAgICBpZiAoY2xpcGJvYXJkRGF0YSkgewogICAgICAgICAgICB2YXIgZGF0YSA9IGNsaXBib2FyZERhdGEuZ2V0RGF0YSgiVGV4dCIpOwogICAgICAgICAgICBpZiAoZGF0YSkKICAgICAgICAgICAgICAgIGhvc3Qub25QYXN0ZShkYXRhKTsKICAgICAgICAgICAgaWYgKHVzZXJhZ2VudC5pc0lFKQogICAgICAgICAgICAgICAgc2V0VGltZW91dChyZXNldFNlbGVjdGlvbik7CiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KGUpOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgdGV4dC52YWx1ZSA9ICIiOwogICAgICAgICAgICBwYXN0ZWQgPSB0cnVlOwogICAgICAgIH0KICAgIH07CgogICAgZXZlbnQuYWRkQ29tbWFuZEtleUxpc3RlbmVyKHRleHQsIGhvc3Qub25Db21tYW5kS2V5LmJpbmQoaG9zdCkpOwoKICAgIGV2ZW50LmFkZExpc3RlbmVyKHRleHQsICJzZWxlY3QiLCBvblNlbGVjdCk7CgogICAgZXZlbnQuYWRkTGlzdGVuZXIodGV4dCwgImlucHV0Iiwgb25JbnB1dCk7CgogICAgZXZlbnQuYWRkTGlzdGVuZXIodGV4dCwgImN1dCIsIG9uQ3V0KTsKICAgIGV2ZW50LmFkZExpc3RlbmVyKHRleHQsICJjb3B5Iiwgb25Db3B5KTsKICAgIGV2ZW50LmFkZExpc3RlbmVyKHRleHQsICJwYXN0ZSIsIG9uUGFzdGUpOwogICAgaWYgKCEoJ29uY3V0JyBpbiB0ZXh0KSB8fCAhKCdvbmNvcHknIGluIHRleHQpIHx8ICEoJ29ucGFzdGUnIGluIHRleHQpKXsKICAgICAgICBldmVudC5hZGRMaXN0ZW5lcihwYXJlbnROb2RlLCAia2V5ZG93biIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgaWYgKCh1c2VyYWdlbnQuaXNNYWMgJiYgIWUubWV0YUtleSkgfHwgIWUuY3RybEtleSkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHsKICAgICAgICAgICAgICAgIGNhc2UgNjc6CiAgICAgICAgICAgICAgICAgICAgb25Db3B5KGUpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSA4NjoKICAgICAgICAgICAgICAgICAgICBvblBhc3RlKGUpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSA4ODoKICAgICAgICAgICAgICAgICAgICBvbkN1dChlKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQogICAgdmFyIG9uQ29tcG9zaXRpb25TdGFydCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICBpbkNvbXBvc3Rpb24gPSB0cnVlOwogICAgICAgIGhvc3Qub25Db21wb3NpdGlvblN0YXJ0KCk7CiAgICAgICAgc2V0VGltZW91dChvbkNvbXBvc2l0aW9uVXBkYXRlLCAwKTsKICAgIH07CgogICAgdmFyIG9uQ29tcG9zaXRpb25VcGRhdGUgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAoIWluQ29tcG9zdGlvbikgcmV0dXJuOwogICAgICAgIGhvc3Qub25Db21wb3NpdGlvblVwZGF0ZSh0ZXh0LnZhbHVlKTsKICAgIH07CgogICAgdmFyIG9uQ29tcG9zaXRpb25FbmQgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgaW5Db21wb3N0aW9uID0gZmFsc2U7CiAgICAgICAgaG9zdC5vbkNvbXBvc2l0aW9uRW5kKCk7CiAgICB9OwoKICAgIHZhciBzeW5jQ29tcG9zaXRpb24gPSBsYW5nLmRlbGF5ZWRDYWxsKG9uQ29tcG9zaXRpb25VcGRhdGUsIDUwKTsKCiAgICBldmVudC5hZGRMaXN0ZW5lcih0ZXh0LCAiY29tcG9zaXRpb25zdGFydCIsIG9uQ29tcG9zaXRpb25TdGFydCk7CiAgICBldmVudC5hZGRMaXN0ZW5lcih0ZXh0LCB1c2VyYWdlbnQuaXNHZWNrbyA/ICJ0ZXh0IiA6ICJrZXl1cCIsIGZ1bmN0aW9uKCl7c3luY0NvbXBvc2l0aW9uLnNjaGVkdWxlKCl9KTsKICAgIGV2ZW50LmFkZExpc3RlbmVyKHRleHQsICJjb21wb3NpdGlvbmVuZCIsIG9uQ29tcG9zaXRpb25FbmQpOwoKICAgIHRoaXMuZ2V0RWxlbWVudCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0ZXh0OwogICAgfTsKCiAgICB0aGlzLnNldFJlYWRPbmx5ID0gZnVuY3Rpb24ocmVhZE9ubHkpIHsKICAgICAgIHRleHQucmVhZE9ubHkgPSByZWFkT25seTsKICAgIH07CgogICAgdGhpcy5vbkNvbnRleHRNZW51ID0gZnVuY3Rpb24oZSkgewogICAgICAgIGlmICghdGVtcFN0eWxlKQogICAgICAgICAgICB0ZW1wU3R5bGUgPSB0ZXh0LnN0eWxlLmNzc1RleHQ7CgogICAgICAgIHRleHQuc3R5bGUuY3NzVGV4dCA9ICJ6LWluZGV4OjEwMDAwMDsiICsgKHVzZXJhZ2VudC5pc0lFID8gIm9wYWNpdHk6MC4xOyIgOiAiIik7CgogICAgICAgIHJlc2V0U2VsZWN0aW9uKGhvc3Quc2VsZWN0aW9uLmlzRW1wdHkoKSk7CiAgICAgICAgaG9zdC5fZW1pdCgibmF0aXZlY29udGV4dG1lbnUiLCB7dGFyZ2V0OiBob3N0fSk7CiAgICAgICAgdmFyIHJlY3QgPSBob3N0LmNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgICAgICB2YXIgbW92ZSA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgdGV4dC5zdHlsZS5sZWZ0ID0gZS5jbGllbnRYIC0gcmVjdC5sZWZ0IC0gMiArICJweCI7CiAgICAgICAgICAgIHRleHQuc3R5bGUudG9wID0gZS5jbGllbnRZIC0gcmVjdC50b3AgLSAyICsgInB4IjsKICAgICAgICB9OwogICAgICAgIG1vdmUoZSk7CgogICAgICAgIGlmIChlLnR5cGUgIT0gIm1vdXNlZG93biIpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgaWYgKGhvc3QucmVuZGVyZXIuJGtlZXBUZXh0QXJlYUF0Q3Vyc29yKQogICAgICAgICAgICBob3N0LnJlbmRlcmVyLiRrZWVwVGV4dEFyZWFBdEN1cnNvciA9IG51bGw7CiAgICAgICAgaWYgKHVzZXJhZ2VudC5pc1dpbikKICAgICAgICAgICAgZXZlbnQuY2FwdHVyZShob3N0LmNvbnRhaW5lciwgbW92ZSwgb25Db250ZXh0TWVudUNsb3NlKTsKICAgIH07CgogICAgdGhpcy5vbkNvbnRleHRNZW51Q2xvc2UgPSBvbkNvbnRleHRNZW51Q2xvc2U7CiAgICBmdW5jdGlvbiBvbkNvbnRleHRNZW51Q2xvc2UoKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmICh0ZW1wU3R5bGUpIHsKICAgICAgICAgICAgICAgIHRleHQuc3R5bGUuY3NzVGV4dCA9IHRlbXBTdHlsZTsKICAgICAgICAgICAgICAgIHRlbXBTdHlsZSA9ICcnOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChob3N0LnJlbmRlcmVyLiRrZWVwVGV4dEFyZWFBdEN1cnNvciA9PSBudWxsKSB7CiAgICAgICAgICAgICAgICBob3N0LnJlbmRlcmVyLiRrZWVwVGV4dEFyZWFBdEN1cnNvciA9IHRydWU7CiAgICAgICAgICAgICAgICBob3N0LnJlbmRlcmVyLiRtb3ZlVGV4dEFyZWFUb0N1cnNvcigpOwogICAgICAgICAgICB9CiAgICAgICAgfSwgMCk7CiAgICB9CiAgICBpZiAoIXVzZXJhZ2VudC5pc0dlY2tvKSB7CiAgICAgICAgZXZlbnQuYWRkTGlzdGVuZXIodGV4dCwgImNvbnRleHRtZW51IiwgZnVuY3Rpb24oZSkgewogICAgICAgICAgICBob3N0LnRleHRJbnB1dC5vbkNvbnRleHRNZW51KGUpOwogICAgICAgICAgICBvbkNvbnRleHRNZW51Q2xvc2UoKTsKICAgICAgICB9KTsKICAgIH0KfTsKCmV4cG9ydHMuVGV4dElucHV0ID0gVGV4dElucHV0Owp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9tb3VzZS9tb3VzZV9oYW5kbGVyJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL2V2ZW50JywgJ2FjZS9saWIvdXNlcmFnZW50JywgJ2FjZS9tb3VzZS9kZWZhdWx0X2hhbmRsZXJzJywgJ2FjZS9tb3VzZS9kZWZhdWx0X2d1dHRlcl9oYW5kbGVyJywgJ2FjZS9tb3VzZS9tb3VzZV9ldmVudCcsICdhY2UvbW91c2UvZHJhZ2Ryb3AnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIGV2ZW50ID0gcmVxdWlyZSgiLi4vbGliL2V2ZW50Iik7CnZhciB1c2VyYWdlbnQgPSByZXF1aXJlKCIuLi9saWIvdXNlcmFnZW50Iik7CnZhciBEZWZhdWx0SGFuZGxlcnMgPSByZXF1aXJlKCIuL2RlZmF1bHRfaGFuZGxlcnMiKS5EZWZhdWx0SGFuZGxlcnM7CnZhciBEZWZhdWx0R3V0dGVySGFuZGxlciA9IHJlcXVpcmUoIi4vZGVmYXVsdF9ndXR0ZXJfaGFuZGxlciIpLkd1dHRlckhhbmRsZXI7CnZhciBNb3VzZUV2ZW50ID0gcmVxdWlyZSgiLi9tb3VzZV9ldmVudCIpLk1vdXNlRXZlbnQ7CnZhciBEcmFnZHJvcEhhbmRsZXIgPSByZXF1aXJlKCIuL2RyYWdkcm9wIikuRHJhZ2Ryb3BIYW5kbGVyOwoKdmFyIE1vdXNlSGFuZGxlciA9IGZ1bmN0aW9uKGVkaXRvcikgewogICAgdGhpcy5lZGl0b3IgPSBlZGl0b3I7CgogICAgbmV3IERlZmF1bHRIYW5kbGVycyh0aGlzKTsKICAgIG5ldyBEZWZhdWx0R3V0dGVySGFuZGxlcih0aGlzKTsKICAgIG5ldyBEcmFnZHJvcEhhbmRsZXIodGhpcyk7CgogICAgZXZlbnQuYWRkTGlzdGVuZXIoZWRpdG9yLmNvbnRhaW5lciwgIm1vdXNlZG93biIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICBlZGl0b3IuZm9jdXMoKTsKICAgICAgICByZXR1cm4gZXZlbnQucHJldmVudERlZmF1bHQoZSk7CiAgICB9KTsKCiAgICB2YXIgbW91c2VUYXJnZXQgPSBlZGl0b3IucmVuZGVyZXIuZ2V0TW91c2VFdmVudFRhcmdldCgpOwogICAgZXZlbnQuYWRkTGlzdGVuZXIobW91c2VUYXJnZXQsICJjbGljayIsIHRoaXMub25Nb3VzZUV2ZW50LmJpbmQodGhpcywgImNsaWNrIikpOwogICAgZXZlbnQuYWRkTGlzdGVuZXIobW91c2VUYXJnZXQsICJtb3VzZW1vdmUiLCB0aGlzLm9uTW91c2VNb3ZlLmJpbmQodGhpcywgIm1vdXNlbW92ZSIpKTsKICAgIGV2ZW50LmFkZE11bHRpTW91c2VEb3duTGlzdGVuZXIobW91c2VUYXJnZXQsIFszMDAsIDMwMCwgMjUwXSwgdGhpcywgIm9uTW91c2VFdmVudCIpOwogICAgZXZlbnQuYWRkTW91c2VXaGVlbExpc3RlbmVyKGVkaXRvci5jb250YWluZXIsIHRoaXMub25Nb3VzZVdoZWVsLmJpbmQodGhpcywgIm1vdXNld2hlZWwiKSk7CgogICAgdmFyIGd1dHRlckVsID0gZWRpdG9yLnJlbmRlcmVyLiRndXR0ZXI7CiAgICBldmVudC5hZGRMaXN0ZW5lcihndXR0ZXJFbCwgIm1vdXNlZG93biIsIHRoaXMub25Nb3VzZUV2ZW50LmJpbmQodGhpcywgImd1dHRlcm1vdXNlZG93biIpKTsKICAgIGV2ZW50LmFkZExpc3RlbmVyKGd1dHRlckVsLCAiY2xpY2siLCB0aGlzLm9uTW91c2VFdmVudC5iaW5kKHRoaXMsICJndXR0ZXJjbGljayIpKTsKICAgIGV2ZW50LmFkZExpc3RlbmVyKGd1dHRlckVsLCAiZGJsY2xpY2siLCB0aGlzLm9uTW91c2VFdmVudC5iaW5kKHRoaXMsICJndXR0ZXJkYmxjbGljayIpKTsKICAgIGV2ZW50LmFkZExpc3RlbmVyKGd1dHRlckVsLCAibW91c2Vtb3ZlIiwgdGhpcy5vbk1vdXNlRXZlbnQuYmluZCh0aGlzLCAiZ3V0dGVybW91c2Vtb3ZlIikpOwp9OwoKKGZ1bmN0aW9uKCkgewoKICAgIHRoaXMuJHNjcm9sbFNwZWVkID0gMTsKICAgIHRoaXMuc2V0U2Nyb2xsU3BlZWQgPSBmdW5jdGlvbihzcGVlZCkgewogICAgICAgIHRoaXMuJHNjcm9sbFNwZWVkID0gc3BlZWQ7CiAgICB9OwoKICAgIHRoaXMuZ2V0U2Nyb2xsU3BlZWQgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc2Nyb2xsU3BlZWQ7CiAgICB9OwoKICAgIHRoaXMub25Nb3VzZUV2ZW50ID0gZnVuY3Rpb24obmFtZSwgZSkgewogICAgICAgIHRoaXMuZWRpdG9yLl9lbWl0KG5hbWUsIG5ldyBNb3VzZUV2ZW50KGUsIHRoaXMuZWRpdG9yKSk7CiAgICB9OwoKICAgIHRoaXMuJGRyYWdEZWxheSA9IDI1MDsKICAgIHRoaXMuc2V0RHJhZ0RlbGF5ID0gZnVuY3Rpb24oZHJhZ0RlbGF5KSB7CiAgICAgICAgdGhpcy4kZHJhZ0RlbGF5ID0gZHJhZ0RlbGF5OwogICAgfTsKCiAgICB0aGlzLmdldERyYWdEZWxheSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRkcmFnRGVsYXk7CiAgICB9OwoKICAgIHRoaXMub25Nb3VzZU1vdmUgPSBmdW5jdGlvbihuYW1lLCBlKSB7CiAgICAgICAgdmFyIGxpc3RlbmVycyA9IHRoaXMuZWRpdG9yLl9ldmVudFJlZ2lzdHJ5ICYmIHRoaXMuZWRpdG9yLl9ldmVudFJlZ2lzdHJ5Lm1vdXNlbW92ZTsKICAgICAgICBpZiAoIWxpc3RlbmVycyB8fCAhbGlzdGVuZXJzLmxlbmd0aCkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB0aGlzLmVkaXRvci5fZW1pdChuYW1lLCBuZXcgTW91c2VFdmVudChlLCB0aGlzLmVkaXRvcikpOwogICAgfTsKCiAgICB0aGlzLm9uTW91c2VXaGVlbCA9IGZ1bmN0aW9uKG5hbWUsIGUpIHsKICAgICAgICB2YXIgbW91c2VFdmVudCA9IG5ldyBNb3VzZUV2ZW50KGUsIHRoaXMuZWRpdG9yKTsKICAgICAgICBtb3VzZUV2ZW50LnNwZWVkID0gdGhpcy4kc2Nyb2xsU3BlZWQgKiAyOwogICAgICAgIG1vdXNlRXZlbnQud2hlZWxYID0gZS53aGVlbFg7CiAgICAgICAgbW91c2VFdmVudC53aGVlbFkgPSBlLndoZWVsWTsKCiAgICAgICAgdGhpcy5lZGl0b3IuX2VtaXQobmFtZSwgbW91c2VFdmVudCk7CiAgICB9OwoKICAgIHRoaXMuc2V0U3RhdGUgPSBmdW5jdGlvbihzdGF0ZSkgewogICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTsKICAgIH07CgogICAgdGhpcy5jYXB0dXJlTW91c2UgPSBmdW5jdGlvbihldiwgc3RhdGUpIHsKICAgICAgICBpZiAoc3RhdGUpCiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoc3RhdGUpOwoKICAgICAgICB0aGlzLnggPSBldi54OwogICAgICAgIHRoaXMueSA9IGV2Lnk7CiAgICAgICAgCiAgICAgICAgdGhpcy5pc01vdXNlUHJlc3NlZCA9IHRydWU7CiAgICAgICAgdmFyIHJlbmRlcmVyID0gdGhpcy5lZGl0b3IucmVuZGVyZXI7CiAgICAgICAgaWYgKHJlbmRlcmVyLiRrZWVwVGV4dEFyZWFBdEN1cnNvcikKICAgICAgICAgICAgcmVuZGVyZXIuJGtlZXBUZXh0QXJlYUF0Q3Vyc29yID0gbnVsbDsKCiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICAgIHZhciBvbk1vdXNlTW92ZSA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgc2VsZi54ID0gZS5jbGllbnRYOwogICAgICAgICAgICBzZWxmLnkgPSBlLmNsaWVudFk7CiAgICAgICAgfTsKCiAgICAgICAgdmFyIG9uQ2FwdHVyZUVuZCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcklkKTsKICAgICAgICAgICAgc2VsZltzZWxmLnN0YXRlICsgIkVuZCJdICYmIHNlbGZbc2VsZi5zdGF0ZSArICJFbmQiXShlKTsKICAgICAgICAgICAgc2VsZi4kY2xpY2tTZWxlY3Rpb24gPSBudWxsOwogICAgICAgICAgICBpZiAocmVuZGVyZXIuJGtlZXBUZXh0QXJlYUF0Q3Vyc29yID09IG51bGwpIHsKICAgICAgICAgICAgICAgIHJlbmRlcmVyLiRrZWVwVGV4dEFyZWFBdEN1cnNvciA9IHRydWU7CiAgICAgICAgICAgICAgICByZW5kZXJlci4kbW92ZVRleHRBcmVhVG9DdXJzb3IoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBzZWxmLmlzTW91c2VQcmVzc2VkID0gZmFsc2U7CiAgICAgICAgfTsKCiAgICAgICAgdmFyIG9uQ2FwdHVyZUludGVydmFsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHNlbGZbc2VsZi5zdGF0ZV0gJiYgc2VsZltzZWxmLnN0YXRlXSgpOwogICAgICAgIH0KICAgICAgICAKICAgICAgICBpZiAodXNlcmFnZW50LmlzT2xkSUUgJiYgZXYuZG9tRXZlbnQudHlwZSA9PSAiZGJsY2xpY2siKSB7CiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBvbkNhcHR1cmVJbnRlcnZhbCgpOwogICAgICAgICAgICAgICAgb25DYXB0dXJlRW5kKGV2LmRvbUV2ZW50KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGV2ZW50LmNhcHR1cmUodGhpcy5lZGl0b3IuY29udGFpbmVyLCBvbk1vdXNlTW92ZSwgb25DYXB0dXJlRW5kKTsKICAgICAgICB2YXIgdGltZXJJZCA9IHNldEludGVydmFsKG9uQ2FwdHVyZUludGVydmFsLCAyMCk7CiAgICB9Owp9KS5jYWxsKE1vdXNlSGFuZGxlci5wcm90b3R5cGUpOwoKZXhwb3J0cy5Nb3VzZUhhbmRsZXIgPSBNb3VzZUhhbmRsZXI7Cn0pOwoKYWNlLmRlZmluZSgnYWNlL21vdXNlL2RlZmF1bHRfaGFuZGxlcnMnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvZG9tJywgJ2FjZS9saWIvdXNlcmFnZW50J10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBkb20gPSByZXF1aXJlKCIuLi9saWIvZG9tIik7CnZhciB1c2VyYWdlbnQgPSByZXF1aXJlKCIuLi9saWIvdXNlcmFnZW50Iik7Cgp2YXIgRFJBR19PRkZTRVQgPSA1OyAvLyBwaXhlbHMKCmZ1bmN0aW9uIERlZmF1bHRIYW5kbGVycyhtb3VzZUhhbmRsZXIpIHsKICAgIG1vdXNlSGFuZGxlci4kY2xpY2tTZWxlY3Rpb24gPSBudWxsOwoKICAgIHZhciBlZGl0b3IgPSBtb3VzZUhhbmRsZXIuZWRpdG9yOwogICAgZWRpdG9yLnNldERlZmF1bHRIYW5kbGVyKCJtb3VzZWRvd24iLCB0aGlzLm9uTW91c2VEb3duLmJpbmQobW91c2VIYW5kbGVyKSk7CiAgICBlZGl0b3Iuc2V0RGVmYXVsdEhhbmRsZXIoImRibGNsaWNrIiwgdGhpcy5vbkRvdWJsZUNsaWNrLmJpbmQobW91c2VIYW5kbGVyKSk7CiAgICBlZGl0b3Iuc2V0RGVmYXVsdEhhbmRsZXIoInRyaXBsZWNsaWNrIiwgdGhpcy5vblRyaXBsZUNsaWNrLmJpbmQobW91c2VIYW5kbGVyKSk7CiAgICBlZGl0b3Iuc2V0RGVmYXVsdEhhbmRsZXIoInF1YWRjbGljayIsIHRoaXMub25RdWFkQ2xpY2suYmluZChtb3VzZUhhbmRsZXIpKTsKICAgIGVkaXRvci5zZXREZWZhdWx0SGFuZGxlcigibW91c2V3aGVlbCIsIHRoaXMub25Nb3VzZVdoZWVsLmJpbmQobW91c2VIYW5kbGVyKSk7CgogICAgdmFyIGV4cG9ydHMgPSBbInNlbGVjdCIsICJzdGFydFNlbGVjdCIsICJkcmFnIiwgImRyYWdFbmQiLCAiZHJhZ1dhaXQiLAogICAgICAgICJkcmFnV2FpdEVuZCIsICJzdGFydERyYWciLCAiZm9jdXNXYWl0Il07CgogICAgZXhwb3J0cy5mb3JFYWNoKGZ1bmN0aW9uKHgpIHsKICAgICAgICBtb3VzZUhhbmRsZXJbeF0gPSB0aGlzW3hdOwogICAgfSwgdGhpcyk7CgogICAgbW91c2VIYW5kbGVyLnNlbGVjdEJ5TGluZXMgPSB0aGlzLmV4dGVuZFNlbGVjdGlvbkJ5LmJpbmQobW91c2VIYW5kbGVyLCAiZ2V0TGluZVJhbmdlIik7CiAgICBtb3VzZUhhbmRsZXIuc2VsZWN0QnlXb3JkcyA9IHRoaXMuZXh0ZW5kU2VsZWN0aW9uQnkuYmluZChtb3VzZUhhbmRsZXIsICJnZXRXb3JkUmFuZ2UiKTsKCiAgICBtb3VzZUhhbmRsZXIuJGZvY3VzV2FpdFRpbW91dCA9IDI1MDsKfQoKKGZ1bmN0aW9uKCkgewoKICAgIHRoaXMub25Nb3VzZURvd24gPSBmdW5jdGlvbihldikgewogICAgICAgIHZhciBpblNlbGVjdGlvbiA9IGV2LmluU2VsZWN0aW9uKCk7CiAgICAgICAgdmFyIHBvcyA9IGV2LmdldERvY3VtZW50UG9zaXRpb24oKTsKICAgICAgICB0aGlzLm1vdXNlZG93bkV2ZW50ID0gZXY7CiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOwoKICAgICAgICB2YXIgYnV0dG9uID0gZXYuZ2V0QnV0dG9uKCk7CiAgICAgICAgaWYgKGJ1dHRvbiAhPT0gMCkgewogICAgICAgICAgICB2YXIgc2VsZWN0aW9uUmFuZ2UgPSBlZGl0b3IuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICAgICAgdmFyIHNlbGVjdGlvbkVtcHR5ID0gc2VsZWN0aW9uUmFuZ2UuaXNFbXB0eSgpOwoKICAgICAgICAgICAgaWYgKHNlbGVjdGlvbkVtcHR5KSB7CiAgICAgICAgICAgICAgICBlZGl0b3IubW92ZUN1cnNvclRvUG9zaXRpb24ocG9zKTsKICAgICAgICAgICAgICAgIGVkaXRvci5zZWxlY3Rpb24uY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlZGl0b3IudGV4dElucHV0Lm9uQ29udGV4dE1lbnUoZXYuZG9tRXZlbnQpOwogICAgICAgICAgICByZXR1cm47IC8vIHN0b3BwaW5nIGV2ZW50IGhlcmUgYnJlYWtzIGNvbnRleHRtZW51IG9uIGZmIG1hYwogICAgICAgIH0KICAgICAgICBpZiAoaW5TZWxlY3Rpb24gJiYgIWVkaXRvci5pc0ZvY3VzZWQoKSkgewogICAgICAgICAgICBlZGl0b3IuZm9jdXMoKTsKICAgICAgICAgICAgaWYgKHRoaXMuJGZvY3VzV2FpdFRpbW91dCAmJiAhdGhpcy4kY2xpY2tTZWxlY3Rpb24pIHsKICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoImZvY3VzV2FpdCIpOwogICAgICAgICAgICAgICAgdGhpcy5jYXB0dXJlTW91c2UoZXYpOwogICAgICAgICAgICAgICAgcmV0dXJuIGV2LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmICghaW5TZWxlY3Rpb24gfHwgdGhpcy4kY2xpY2tTZWxlY3Rpb24gfHwgZXYuZ2V0U2hpZnRLZXkoKSkgewogICAgICAgICAgICB0aGlzLnN0YXJ0U2VsZWN0KHBvcyk7CiAgICAgICAgfSBlbHNlIGlmIChpblNlbGVjdGlvbikgewogICAgICAgICAgICB0aGlzLm1vdXNlZG93bkV2ZW50LnRpbWUgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpOwogICAgICAgICAgICB0aGlzLnNldFN0YXRlKCJkcmFnV2FpdCIpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5jYXB0dXJlTW91c2UoZXYpOwogICAgICAgIHJldHVybiBldi5wcmV2ZW50RGVmYXVsdCgpOwogICAgfTsKCiAgICB0aGlzLnN0YXJ0U2VsZWN0ID0gZnVuY3Rpb24ocG9zKSB7CiAgICAgICAgcG9zID0gcG9zIHx8IHRoaXMuZWRpdG9yLnJlbmRlcmVyLnNjcmVlblRvVGV4dENvb3JkaW5hdGVzKHRoaXMueCwgdGhpcy55KTsKICAgICAgICBpZiAodGhpcy5tb3VzZWRvd25FdmVudC5nZXRTaGlmdEtleSgpKSB7CiAgICAgICAgICAgIHRoaXMuZWRpdG9yLnNlbGVjdGlvbi5zZWxlY3RUb1Bvc2l0aW9uKHBvcyk7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKCF0aGlzLiRjbGlja1NlbGVjdGlvbikgewogICAgICAgICAgICB0aGlzLmVkaXRvci5tb3ZlQ3Vyc29yVG9Qb3NpdGlvbihwb3MpOwogICAgICAgICAgICB0aGlzLmVkaXRvci5zZWxlY3Rpb24uY2xlYXJTZWxlY3Rpb24oKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5zZXRTdGF0ZSgic2VsZWN0Iik7CiAgICB9OwoKICAgIHRoaXMuc2VsZWN0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGFuY2hvciwgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgICAgdmFyIGN1cnNvciA9IGVkaXRvci5yZW5kZXJlci5zY3JlZW5Ub1RleHRDb29yZGluYXRlcyh0aGlzLngsIHRoaXMueSk7CgogICAgICAgIGlmICh0aGlzLiRjbGlja1NlbGVjdGlvbikgewogICAgICAgICAgICB2YXIgY21wID0gdGhpcy4kY2xpY2tTZWxlY3Rpb24uY29tcGFyZVBvaW50KGN1cnNvcik7CgogICAgICAgICAgICBpZiAoY21wID09IC0xKSB7CiAgICAgICAgICAgICAgICBhbmNob3IgPSB0aGlzLiRjbGlja1NlbGVjdGlvbi5lbmQ7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoY21wID09IDEpIHsKICAgICAgICAgICAgICAgIGFuY2hvciA9IHRoaXMuJGNsaWNrU2VsZWN0aW9uLnN0YXJ0OwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdmFyIG9yaWVudGVkUmFuZ2UgPSBjYWxjUmFuZ2VPcmllbnRhdGlvbih0aGlzLiRjbGlja1NlbGVjdGlvbiwgY3Vyc29yKTsKICAgICAgICAgICAgICAgIGN1cnNvciA9IG9yaWVudGVkUmFuZ2UuY3Vyc29yOwogICAgICAgICAgICAgICAgYW5jaG9yID0gb3JpZW50ZWRSYW5nZS5hbmNob3I7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWRpdG9yLnNlbGVjdGlvbi5zZXRTZWxlY3Rpb25BbmNob3IoYW5jaG9yLnJvdywgYW5jaG9yLmNvbHVtbik7CiAgICAgICAgfQogICAgICAgIGVkaXRvci5zZWxlY3Rpb24uc2VsZWN0VG9Qb3NpdGlvbihjdXJzb3IpOwoKICAgICAgICBlZGl0b3IucmVuZGVyZXIuc2Nyb2xsQ3Vyc29ySW50b1ZpZXcoKTsKICAgIH07CgogICAgdGhpcy5leHRlbmRTZWxlY3Rpb25CeSA9IGZ1bmN0aW9uKHVuaXROYW1lKSB7CiAgICAgICAgdmFyIGFuY2hvciwgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgICAgdmFyIGN1cnNvciA9IGVkaXRvci5yZW5kZXJlci5zY3JlZW5Ub1RleHRDb29yZGluYXRlcyh0aGlzLngsIHRoaXMueSk7CiAgICAgICAgdmFyIHJhbmdlID0gZWRpdG9yLnNlbGVjdGlvblt1bml0TmFtZV0oY3Vyc29yLnJvdywgY3Vyc29yLmNvbHVtbik7CgogICAgICAgIGlmICh0aGlzLiRjbGlja1NlbGVjdGlvbikgewogICAgICAgICAgICB2YXIgY21wU3RhcnQgPSB0aGlzLiRjbGlja1NlbGVjdGlvbi5jb21wYXJlUG9pbnQocmFuZ2Uuc3RhcnQpOwogICAgICAgICAgICB2YXIgY21wRW5kID0gdGhpcy4kY2xpY2tTZWxlY3Rpb24uY29tcGFyZVBvaW50KHJhbmdlLmVuZCk7CgogICAgICAgICAgICBpZiAoY21wU3RhcnQgPT0gLTEgJiYgY21wRW5kIDw9IDApIHsKICAgICAgICAgICAgICAgIGFuY2hvciA9IHRoaXMuJGNsaWNrU2VsZWN0aW9uLmVuZDsKICAgICAgICAgICAgICAgIGlmIChyYW5nZS5lbmQucm93ICE9IGN1cnNvci5yb3cgfHwgcmFuZ2UuZW5kLmNvbHVtbiAhPSBjdXJzb3IuY29sdW1uKQogICAgICAgICAgICAgICAgICAgIGN1cnNvciA9IHJhbmdlLnN0YXJ0OwogICAgICAgICAgICB9IGVsc2UgaWYgKGNtcEVuZCA9PSAxICYmIGNtcFN0YXJ0ID49IDApIHsKICAgICAgICAgICAgICAgIGFuY2hvciA9IHRoaXMuJGNsaWNrU2VsZWN0aW9uLnN0YXJ0OwogICAgICAgICAgICAgICAgaWYgKHJhbmdlLnN0YXJ0LnJvdyAhPSBjdXJzb3Iucm93IHx8IHJhbmdlLnN0YXJ0LmNvbHVtbiAhPSBjdXJzb3IuY29sdW1uKQogICAgICAgICAgICAgICAgICAgIGN1cnNvciA9IHJhbmdlLmVuZDsKICAgICAgICAgICAgfSBlbHNlIGlmIChjbXBTdGFydCA9PSAtMSAmJiBjbXBFbmQgPT0gMSkgewogICAgICAgICAgICAgICAgY3Vyc29yID0gcmFuZ2UuZW5kOwogICAgICAgICAgICAgICAgYW5jaG9yID0gcmFuZ2Uuc3RhcnQ7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB2YXIgb3JpZW50ZWRSYW5nZSA9IGNhbGNSYW5nZU9yaWVudGF0aW9uKHRoaXMuJGNsaWNrU2VsZWN0aW9uLCBjdXJzb3IpOwogICAgICAgICAgICAgICAgY3Vyc29yID0gb3JpZW50ZWRSYW5nZS5jdXJzb3I7CiAgICAgICAgICAgICAgICBhbmNob3IgPSBvcmllbnRlZFJhbmdlLmFuY2hvcjsKICAgICAgICAgICAgfQogICAgICAgICAgICBlZGl0b3Iuc2VsZWN0aW9uLnNldFNlbGVjdGlvbkFuY2hvcihhbmNob3Iucm93LCBhbmNob3IuY29sdW1uKTsKICAgICAgICB9CiAgICAgICAgZWRpdG9yLnNlbGVjdGlvbi5zZWxlY3RUb1Bvc2l0aW9uKGN1cnNvcik7CgogICAgICAgIGVkaXRvci5yZW5kZXJlci5zY3JvbGxDdXJzb3JJbnRvVmlldygpOwogICAgfTsKCiAgICB0aGlzLnN0YXJ0RHJhZyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjsKICAgICAgICB0aGlzLnNldFN0YXRlKCJkcmFnIik7CiAgICAgICAgdGhpcy5kcmFnUmFuZ2UgPSBlZGl0b3IuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICB2YXIgc3R5bGUgPSBlZGl0b3IuZ2V0U2VsZWN0aW9uU3R5bGUoKTsKICAgICAgICB0aGlzLmRyYWdTZWxlY3Rpb25NYXJrZXIgPSBlZGl0b3Iuc2Vzc2lvbi5hZGRNYXJrZXIodGhpcy5kcmFnUmFuZ2UsICJhY2Vfc2VsZWN0aW9uIiwgc3R5bGUpOwogICAgICAgIGVkaXRvci5jbGVhclNlbGVjdGlvbigpOwogICAgICAgIGRvbS5hZGRDc3NDbGFzcyhlZGl0b3IuY29udGFpbmVyLCAiYWNlX2RyYWdnaW5nIik7CiAgICAgICAgaWYgKCF0aGlzLiRkcmFnS2V5YmluZGluZykgewogICAgICAgICAgICB0aGlzLiRkcmFnS2V5YmluZGluZyA9IHsKICAgICAgICAgICAgICAgIGhhbmRsZUtleWJvYXJkOiBmdW5jdGlvbihkYXRhLCBoYXNoSWQsIGtleVN0cmluZywga2V5Q29kZSkgewogICAgICAgICAgICAgICAgICAgIGlmIChrZXlTdHJpbmcgPT0gImVzYyIpCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7Y29tbWFuZDogdGhpcy5jb21tYW5kfTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBjb21tYW5kOiB7CiAgICAgICAgICAgICAgICAgICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzZWxmID0gZWRpdG9yLiRtb3VzZUhhbmRsZXI7CiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZHJhZ0N1cnNvciA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZHJhZ0VuZCgpOwogICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnN0YXJ0U2VsZWN0KCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBlZGl0b3Iua2V5QmluZGluZy5hZGRLZXlib2FyZEhhbmRsZXIodGhpcy4kZHJhZ0tleWJpbmRpbmcpOwogICAgfTsKCiAgICB0aGlzLmZvY3VzV2FpdCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBkaXN0YW5jZSA9IGNhbGNEaXN0YW5jZSh0aGlzLm1vdXNlZG93bkV2ZW50LngsIHRoaXMubW91c2Vkb3duRXZlbnQueSwgdGhpcy54LCB0aGlzLnkpOwogICAgICAgIHZhciB0aW1lID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTsKCiAgICAgICAgaWYgKGRpc3RhbmNlID4gRFJBR19PRkZTRVQgfHx0aW1lIC0gdGhpcy5tb3VzZWRvd25FdmVudC50aW1lID4gdGhpcy4kZm9jdXNXYWl0VGltb3V0KQogICAgICAgICAgICB0aGlzLnN0YXJ0U2VsZWN0KCk7CiAgICB9OwoKICAgIHRoaXMuZHJhZ1dhaXQgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgdmFyIGRpc3RhbmNlID0gY2FsY0Rpc3RhbmNlKHRoaXMubW91c2Vkb3duRXZlbnQueCwgdGhpcy5tb3VzZWRvd25FdmVudC55LCB0aGlzLngsIHRoaXMueSk7CiAgICAgICAgdmFyIHRpbWUgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpOwogICAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjsKCiAgICAgICAgaWYgKGRpc3RhbmNlID4gRFJBR19PRkZTRVQpIHsKICAgICAgICAgICAgdGhpcy5zdGFydFNlbGVjdCh0aGlzLm1vdXNlZG93bkV2ZW50LmdldERvY3VtZW50UG9zaXRpb24oKSk7CiAgICAgICAgfSBlbHNlIGlmICh0aW1lIC0gdGhpcy5tb3VzZWRvd25FdmVudC50aW1lID4gZWRpdG9yLmdldERyYWdEZWxheSgpKSB7CiAgICAgICAgICAgIHRoaXMuc3RhcnREcmFnKCk7CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLmRyYWdXYWl0RW5kID0gZnVuY3Rpb24oZSkgewogICAgICAgIHRoaXMubW91c2Vkb3duRXZlbnQuZG9tRXZlbnQgPSBlOwogICAgICAgIHRoaXMuc3RhcnRTZWxlY3QoKTsKICAgIH07CgogICAgdGhpcy5kcmFnID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOwogICAgICAgIHRoaXMuZHJhZ0N1cnNvciA9IGVkaXRvci5yZW5kZXJlci5zY3JlZW5Ub1RleHRDb29yZGluYXRlcyh0aGlzLngsIHRoaXMueSk7CiAgICAgICAgZWRpdG9yLm1vdmVDdXJzb3JUb1Bvc2l0aW9uKHRoaXMuZHJhZ0N1cnNvcik7CiAgICAgICAgZWRpdG9yLnJlbmRlcmVyLnNjcm9sbEN1cnNvckludG9WaWV3KCk7CiAgICB9OwoKICAgIHRoaXMuZHJhZ0VuZCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgICAgdmFyIGRyYWdDdXJzb3IgPSB0aGlzLmRyYWdDdXJzb3I7CiAgICAgICAgdmFyIGRyYWdSYW5nZSA9IHRoaXMuZHJhZ1JhbmdlOwogICAgICAgIGRvbS5yZW1vdmVDc3NDbGFzcyhlZGl0b3IuY29udGFpbmVyLCAiYWNlX2RyYWdnaW5nIik7CiAgICAgICAgZWRpdG9yLnNlc3Npb24ucmVtb3ZlTWFya2VyKHRoaXMuZHJhZ1NlbGVjdGlvbk1hcmtlcik7CiAgICAgICAgZWRpdG9yLmtleUJpbmRpbmcucmVtb3ZlS2V5Ym9hcmRIYW5kbGVyKHRoaXMuJGRyYWdLZXliaW5kaW5nKTsKCiAgICAgICAgaWYgKCFkcmFnQ3Vyc29yKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIGVkaXRvci5jbGVhclNlbGVjdGlvbigpOwogICAgICAgIGlmIChlICYmIChlLmN0cmxLZXkgfHwgZS5hbHRLZXkpKSB7CiAgICAgICAgICAgIHZhciBzZXNzaW9uID0gZWRpdG9yLnNlc3Npb247CiAgICAgICAgICAgIHZhciBuZXdSYW5nZSA9IGRyYWdSYW5nZTsKICAgICAgICAgICAgbmV3UmFuZ2UuZW5kID0gc2Vzc2lvbi5pbnNlcnQoZHJhZ0N1cnNvciwgc2Vzc2lvbi5nZXRUZXh0UmFuZ2UoZHJhZ1JhbmdlKSk7CiAgICAgICAgICAgIG5ld1JhbmdlLnN0YXJ0ID0gZHJhZ0N1cnNvcjsKICAgICAgICB9IGVsc2UgaWYgKGRyYWdSYW5nZS5jb250YWlucyhkcmFnQ3Vyc29yLnJvdywgZHJhZ0N1cnNvci5jb2x1bW4pKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgbmV3UmFuZ2UgPSBlZGl0b3IubW92ZVRleHQoZHJhZ1JhbmdlLCBkcmFnQ3Vyc29yKTsKICAgICAgICB9CgogICAgICAgIGlmICghbmV3UmFuZ2UpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgZWRpdG9yLnNlbGVjdGlvbi5zZXRTZWxlY3Rpb25SYW5nZShuZXdSYW5nZSk7CiAgICB9OwoKICAgIHRoaXMub25Eb3VibGVDbGljayA9IGZ1bmN0aW9uKGV2KSB7CiAgICAgICAgdmFyIHBvcyA9IGV2LmdldERvY3VtZW50UG9zaXRpb24oKTsKICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgICAgdmFyIHNlc3Npb24gPSBlZGl0b3Iuc2Vzc2lvbjsKCiAgICAgICAgdmFyIHJhbmdlID0gc2Vzc2lvbi5nZXRCcmFja2V0UmFuZ2UocG9zKTsKICAgICAgICBpZiAocmFuZ2UpIHsKICAgICAgICAgICAgaWYgKHJhbmdlLmlzRW1wdHkoKSkgewogICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnQuY29sdW1uLS07CiAgICAgICAgICAgICAgICByYW5nZS5lbmQuY29sdW1uKys7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy4kY2xpY2tTZWxlY3Rpb24gPSByYW5nZTsKICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSgic2VsZWN0Iik7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHRoaXMuJGNsaWNrU2VsZWN0aW9uID0gZWRpdG9yLnNlbGVjdGlvbi5nZXRXb3JkUmFuZ2UocG9zLnJvdywgcG9zLmNvbHVtbik7CiAgICAgICAgdGhpcy5zZXRTdGF0ZSgic2VsZWN0QnlXb3JkcyIpOwogICAgfTsKCiAgICB0aGlzLm9uVHJpcGxlQ2xpY2sgPSBmdW5jdGlvbihldikgewogICAgICAgIHZhciBwb3MgPSBldi5nZXREb2N1bWVudFBvc2l0aW9uKCk7CiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOwoKICAgICAgICB0aGlzLnNldFN0YXRlKCJzZWxlY3RCeUxpbmVzIik7CiAgICAgICAgdGhpcy4kY2xpY2tTZWxlY3Rpb24gPSBlZGl0b3Iuc2VsZWN0aW9uLmdldExpbmVSYW5nZShwb3Mucm93KTsKICAgIH07CgogICAgdGhpcy5vblF1YWRDbGljayA9IGZ1bmN0aW9uKGV2KSB7CiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOwoKICAgICAgICBlZGl0b3Iuc2VsZWN0QWxsKCk7CiAgICAgICAgdGhpcy4kY2xpY2tTZWxlY3Rpb24gPSBlZGl0b3IuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICB0aGlzLnNldFN0YXRlKCJudWxsIik7CiAgICB9OwoKICAgIHRoaXMub25Nb3VzZVdoZWVsID0gZnVuY3Rpb24oZXYpIHsKICAgICAgICBpZiAoZXYuZ2V0U2hpZnRLZXkoKSB8fCBldi5nZXRBY2NlbEtleSgpKXsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgICAgdmFyIGlzU2Nyb2xhYmxlID0gZWRpdG9yLnJlbmRlcmVyLmlzU2Nyb2xsYWJsZUJ5KGV2LndoZWVsWCAqIGV2LnNwZWVkLCBldi53aGVlbFkgKiBldi5zcGVlZCk7CiAgICAgICAgaWYgKGlzU2Nyb2xhYmxlKSB7CiAgICAgICAgICAgIHRoaXMuJHBhc3NTY3JvbGxFdmVudCA9IGZhbHNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmICh0aGlzLiRwYXNzU2Nyb2xsRXZlbnQpCiAgICAgICAgICAgICAgICByZXR1cm47CgogICAgICAgICAgICBpZiAoIXRoaXMuJHNjcm9sbFN0b3BUaW1lb3V0KSB7CiAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgICAgICAgICAgICB0aGlzLiRzY3JvbGxTdG9wVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgc2VsZi4kcGFzc1Njcm9sbEV2ZW50ID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICBzZWxmLiRzY3JvbGxTdG9wVGltZW91dCA9IG51bGw7CiAgICAgICAgICAgICAgICB9LCAyMDApOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBlZGl0b3IucmVuZGVyZXIuc2Nyb2xsQnkoZXYud2hlZWxYICogZXYuc3BlZWQsIGV2LndoZWVsWSAqIGV2LnNwZWVkKTsKICAgICAgICByZXR1cm4gZXYucHJldmVudERlZmF1bHQoKTsKICAgIH07Cgp9KS5jYWxsKERlZmF1bHRIYW5kbGVycy5wcm90b3R5cGUpOwoKZXhwb3J0cy5EZWZhdWx0SGFuZGxlcnMgPSBEZWZhdWx0SGFuZGxlcnM7CgpmdW5jdGlvbiBjYWxjRGlzdGFuY2UoYXgsIGF5LCBieCwgYnkpIHsKICAgIHJldHVybiBNYXRoLnNxcnQoTWF0aC5wb3coYnggLSBheCwgMikgKyBNYXRoLnBvdyhieSAtIGF5LCAyKSk7Cn0KCmZ1bmN0aW9uIGNhbGNSYW5nZU9yaWVudGF0aW9uKHJhbmdlLCBjdXJzb3IpIHsKICAgIGlmIChyYW5nZS5zdGFydC5yb3cgPT0gcmFuZ2UuZW5kLnJvdykKICAgICAgICB2YXIgY21wID0gMiAqIGN1cnNvci5jb2x1bW4gLSByYW5nZS5zdGFydC5jb2x1bW4gLSByYW5nZS5lbmQuY29sdW1uOwogICAgZWxzZQogICAgICAgIHZhciBjbXAgPSAyICogY3Vyc29yLnJvdyAtIHJhbmdlLnN0YXJ0LnJvdyAtIHJhbmdlLmVuZC5yb3c7CgogICAgaWYgKGNtcCA8IDApCiAgICAgICAgcmV0dXJuIHtjdXJzb3I6IHJhbmdlLnN0YXJ0LCBhbmNob3I6IHJhbmdlLmVuZH07CiAgICBlbHNlCiAgICAgICAgcmV0dXJuIHtjdXJzb3I6IHJhbmdlLmVuZCwgYW5jaG9yOiByYW5nZS5zdGFydH07Cn0KCn0pOwoKYWNlLmRlZmluZSgnYWNlL21vdXNlL2RlZmF1bHRfZ3V0dGVyX2hhbmRsZXInLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvZG9tJywgJ2FjZS9saWIvZXZlbnQnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7Cgp2YXIgZG9tID0gcmVxdWlyZSgiLi4vbGliL2RvbSIpOwp2YXIgZXZlbnQgPSByZXF1aXJlKCIuLi9saWIvZXZlbnQiKTsKCmZ1bmN0aW9uIEd1dHRlckhhbmRsZXIobW91c2VIYW5kbGVyKSB7CiAgICB2YXIgZWRpdG9yID0gbW91c2VIYW5kbGVyLmVkaXRvcjsKICAgIHZhciBndXR0ZXIgPSBlZGl0b3IucmVuZGVyZXIuJGd1dHRlckxheWVyOwoKICAgIG1vdXNlSGFuZGxlci5lZGl0b3Iuc2V0RGVmYXVsdEhhbmRsZXIoImd1dHRlcm1vdXNlZG93biIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICBpZiAoIWVkaXRvci5pc0ZvY3VzZWQoKSkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIHZhciBndXR0ZXJSZWdpb24gPSBndXR0ZXIuZ2V0UmVnaW9uKGUpOwoKICAgICAgICBpZiAoZ3V0dGVyUmVnaW9uID09ICJmb2xkV2lkZ2V0cyIpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdmFyIHJvdyA9IGUuZ2V0RG9jdW1lbnRQb3NpdGlvbigpLnJvdzsKICAgICAgICB2YXIgc2VsZWN0aW9uID0gZWRpdG9yLnNlc3Npb24uc2VsZWN0aW9uOwoKICAgICAgICBpZiAoZS5nZXRTaGlmdEtleSgpKQogICAgICAgICAgICBzZWxlY3Rpb24uc2VsZWN0VG8ocm93LCAwKTsKICAgICAgICBlbHNlIHsKICAgICAgICAgICAgaWYgKGUuZG9tRXZlbnQuZGV0YWlsID09IDIpIHsKICAgICAgICAgICAgICAgIGVkaXRvci5zZWxlY3RBbGwoKTsKICAgICAgICAgICAgICAgIHJldHVybiBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgbW91c2VIYW5kbGVyLiRjbGlja1NlbGVjdGlvbiA9IGVkaXRvci5zZWxlY3Rpb24uZ2V0TGluZVJhbmdlKHJvdyk7CiAgICAgICAgfQogICAgICAgIG1vdXNlSGFuZGxlci5jYXB0dXJlTW91c2UoZSwgInNlbGVjdEJ5TGluZXMiKTsKICAgICAgICByZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgfSk7CgoKICAgIHZhciB0b29sdGlwVGltZW91dCwgbW91c2VFdmVudCwgdG9vbHRpcCwgdG9vbHRpcEFubm90YXRpb247CiAgICBmdW5jdGlvbiBjcmVhdGVUb29sdGlwKCkgewogICAgICAgIHRvb2x0aXAgPSBkb20uY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgdG9vbHRpcC5jbGFzc05hbWUgPSAiYWNlX2d1dHRlci10b29sdGlwIjsKICAgICAgICB0b29sdGlwLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgZWRpdG9yLmNvbnRhaW5lci5hcHBlbmRDaGlsZCh0b29sdGlwKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzaG93VG9vbHRpcCgpIHsKICAgICAgICBpZiAoIXRvb2x0aXApIHsKICAgICAgICAgICAgY3JlYXRlVG9vbHRpcCgpOwogICAgICAgIH0KICAgICAgICB2YXIgcm93ID0gbW91c2VFdmVudC5nZXREb2N1bWVudFBvc2l0aW9uKCkucm93OwogICAgICAgIHZhciBhbm5vdGF0aW9uID0gZ3V0dGVyLiRhbm5vdGF0aW9uc1tyb3ddOwogICAgICAgIGlmICghYW5ub3RhdGlvbikKICAgICAgICAgICAgcmV0dXJuIGhpZGVUb29sdGlwKCk7CgogICAgICAgIHZhciBtYXhSb3cgPSBlZGl0b3Iuc2Vzc2lvbi5nZXRMZW5ndGgoKTsKICAgICAgICBpZiAocm93ID09IG1heFJvdykgewogICAgICAgICAgICB2YXIgc2NyZWVuUm93ID0gZWRpdG9yLnJlbmRlcmVyLnBpeGVsVG9TY3JlZW5Db29yZGluYXRlcygwLCBtb3VzZUV2ZW50LnkpLnJvdzsKICAgICAgICAgICAgdmFyIHBvcyA9IG1vdXNlRXZlbnQuJHBvczsKICAgICAgICAgICAgaWYgKHNjcmVlblJvdyA+IGVkaXRvci5zZXNzaW9uLmRvY3VtZW50VG9TY3JlZW5Sb3cocG9zLnJvdywgcG9zLmNvbHVtbikpCiAgICAgICAgICAgICAgICByZXR1cm4gaGlkZVRvb2x0aXAoKTsKICAgICAgICB9CgogICAgICAgIGlmICh0b29sdGlwQW5ub3RhdGlvbiA9PSBhbm5vdGF0aW9uKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdG9vbHRpcEFubm90YXRpb24gPSBhbm5vdGF0aW9uLnRleHQuam9pbigiPGJyLz4iKTsKCiAgICAgICAgdG9vbHRpcC5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgICAgICB0b29sdGlwLmlubmVySFRNTCA9IHRvb2x0aXBBbm5vdGF0aW9uOwogICAgICAgIGVkaXRvci5vbigibW91c2V3aGVlbCIsIGhpZGVUb29sdGlwKTsKCiAgICAgICAgbW92ZVRvb2x0aXAobW91c2VFdmVudCk7CiAgICB9CgogICAgZnVuY3Rpb24gaGlkZVRvb2x0aXAoKSB7CiAgICAgICAgaWYgKHRvb2x0aXBUaW1lb3V0KQogICAgICAgICAgICB0b29sdGlwVGltZW91dCA9IGNsZWFyVGltZW91dCh0b29sdGlwVGltZW91dCk7CiAgICAgICAgaWYgKHRvb2x0aXBBbm5vdGF0aW9uKSB7CiAgICAgICAgICAgIHRvb2x0aXAuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICAgICAgdG9vbHRpcEFubm90YXRpb24gPSBudWxsOwogICAgICAgICAgICBlZGl0b3IucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2V3aGVlbCIsIGhpZGVUb29sdGlwKTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gbW92ZVRvb2x0aXAoZSkgewogICAgICAgIHZhciByZWN0ID0gZWRpdG9yLnJlbmRlcmVyLiRndXR0ZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CiAgICAgICAgdG9vbHRpcC5zdHlsZS5sZWZ0ID0gZS54ICsgMTUgKyAicHgiOwogICAgICAgIGlmIChlLnkgKyAzICogZWRpdG9yLnJlbmRlcmVyLmxpbmVIZWlnaHQgKyAxNSA8IHJlY3QuYm90dG9tKSB7CiAgICAgICAgICAgIHRvb2x0aXAuc3R5bGUuYm90dG9tID0gICIiOwogICAgICAgICAgICB0b29sdGlwLnN0eWxlLnRvcCA9ICBlLnkgKyAxNSArICJweCI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdG9vbHRpcC5zdHlsZS50b3AgPSAgIiI7CiAgICAgICAgICAgIHRvb2x0aXAuc3R5bGUuYm90dG9tID0gcmVjdC5ib3R0b20gLSBlLnkgKyA1ICsgInB4IjsKICAgICAgICB9CiAgICB9CgogICAgbW91c2VIYW5kbGVyLmVkaXRvci5zZXREZWZhdWx0SGFuZGxlcigiZ3V0dGVybW91c2Vtb3ZlIiwgZnVuY3Rpb24oZSkgewogICAgICAgIHZhciB0YXJnZXQgPSBlLmRvbUV2ZW50LnRhcmdldCB8fCBlLmRvbUV2ZW50LnNyY0VsZW1lbnQ7CiAgICAgICAgaWYgKGRvbS5oYXNDc3NDbGFzcyh0YXJnZXQsICJhY2VfZm9sZC13aWRnZXQiKSkKICAgICAgICAgICAgcmV0dXJuIGhpZGVUb29sdGlwKCk7CgogICAgICAgIGlmICh0b29sdGlwQW5ub3RhdGlvbikKICAgICAgICAgICAgbW92ZVRvb2x0aXAoZSk7CgogICAgICAgIG1vdXNlRXZlbnQgPSBlOwogICAgICAgIGlmICh0b29sdGlwVGltZW91dCkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIHRvb2x0aXBUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgdG9vbHRpcFRpbWVvdXQgPSBudWxsOwogICAgICAgICAgICBpZiAobW91c2VFdmVudCAmJiAhbW91c2VIYW5kbGVyLmlzTW91c2VQcmVzc2VkKQogICAgICAgICAgICAgICAgc2hvd1Rvb2x0aXAoKTsKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgaGlkZVRvb2x0aXAoKTsKICAgICAgICB9LCA1MCk7CiAgICB9KTsKCiAgICBldmVudC5hZGRMaXN0ZW5lcihlZGl0b3IucmVuZGVyZXIuJGd1dHRlciwgIm1vdXNlb3V0IiwgZnVuY3Rpb24oZSkgewogICAgICAgIG1vdXNlRXZlbnQgPSBudWxsOwogICAgICAgIGlmICghdG9vbHRpcEFubm90YXRpb24gfHwgdG9vbHRpcFRpbWVvdXQpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdG9vbHRpcFRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICB0b29sdGlwVGltZW91dCA9IG51bGw7CiAgICAgICAgICAgIGhpZGVUb29sdGlwKCk7CiAgICAgICAgfSwgNTApOwogICAgfSk7Cgp9CgpleHBvcnRzLkd1dHRlckhhbmRsZXIgPSBHdXR0ZXJIYW5kbGVyOwoKfSk7CgphY2UuZGVmaW5lKCdhY2UvbW91c2UvbW91c2VfZXZlbnQnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvZXZlbnQnLCAnYWNlL2xpYi91c2VyYWdlbnQnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIGV2ZW50ID0gcmVxdWlyZSgiLi4vbGliL2V2ZW50Iik7CnZhciB1c2VyYWdlbnQgPSByZXF1aXJlKCIuLi9saWIvdXNlcmFnZW50Iik7CnZhciBNb3VzZUV2ZW50ID0gZXhwb3J0cy5Nb3VzZUV2ZW50ID0gZnVuY3Rpb24oZG9tRXZlbnQsIGVkaXRvcikgewogICAgdGhpcy5kb21FdmVudCA9IGRvbUV2ZW50OwogICAgdGhpcy5lZGl0b3IgPSBlZGl0b3I7CiAgICAKICAgIHRoaXMueCA9IHRoaXMuY2xpZW50WCA9IGRvbUV2ZW50LmNsaWVudFg7CiAgICB0aGlzLnkgPSB0aGlzLmNsaWVudFkgPSBkb21FdmVudC5jbGllbnRZOwoKICAgIHRoaXMuJHBvcyA9IG51bGw7CiAgICB0aGlzLiRpblNlbGVjdGlvbiA9IG51bGw7CiAgICAKICAgIHRoaXMucHJvcGFnYXRpb25TdG9wcGVkID0gZmFsc2U7CiAgICB0aGlzLmRlZmF1bHRQcmV2ZW50ZWQgPSBmYWxzZTsKfTsKCihmdW5jdGlvbigpIHsgIAogICAgCiAgICB0aGlzLnN0b3BQcm9wYWdhdGlvbiA9IGZ1bmN0aW9uKCkgewogICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbih0aGlzLmRvbUV2ZW50KTsKICAgICAgICB0aGlzLnByb3BhZ2F0aW9uU3RvcHBlZCA9IHRydWU7CiAgICB9OwogICAgCiAgICB0aGlzLnByZXZlbnREZWZhdWx0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQodGhpcy5kb21FdmVudCk7CiAgICAgICAgdGhpcy5kZWZhdWx0UHJldmVudGVkID0gdHJ1ZTsKICAgIH07CiAgICAKICAgIHRoaXMuc3RvcCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgdGhpcy5wcmV2ZW50RGVmYXVsdCgpOwogICAgfTsKICAgIHRoaXMuZ2V0RG9jdW1lbnRQb3NpdGlvbiA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh0aGlzLiRwb3MpCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRwb3M7CiAgICAgICAgCiAgICAgICAgdGhpcy4kcG9zID0gdGhpcy5lZGl0b3IucmVuZGVyZXIuc2NyZWVuVG9UZXh0Q29vcmRpbmF0ZXModGhpcy5jbGllbnRYLCB0aGlzLmNsaWVudFkpOwogICAgICAgIHJldHVybiB0aGlzLiRwb3M7CiAgICB9OwogICAgdGhpcy5pblNlbGVjdGlvbiA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh0aGlzLiRpblNlbGVjdGlvbiAhPT0gbnVsbCkKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGluU2VsZWN0aW9uOwogICAgICAgICAgICAKICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgICAgCiAgICAgICAgaWYgKGVkaXRvci5nZXRSZWFkT25seSgpKSB7CiAgICAgICAgICAgIHRoaXMuJGluU2VsZWN0aW9uID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICB2YXIgc2VsZWN0aW9uUmFuZ2UgPSBlZGl0b3IuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICAgICAgaWYgKHNlbGVjdGlvblJhbmdlLmlzRW1wdHkoKSkKICAgICAgICAgICAgICAgIHRoaXMuJGluU2VsZWN0aW9uID0gZmFsc2U7CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgdmFyIHBvcyA9IHRoaXMuZ2V0RG9jdW1lbnRQb3NpdGlvbigpOwogICAgICAgICAgICAgICAgdGhpcy4kaW5TZWxlY3Rpb24gPSBzZWxlY3Rpb25SYW5nZS5jb250YWlucyhwb3Mucm93LCBwb3MuY29sdW1uKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy4kaW5TZWxlY3Rpb247CiAgICB9OwogICAgdGhpcy5nZXRCdXR0b24gPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gZXZlbnQuZ2V0QnV0dG9uKHRoaXMuZG9tRXZlbnQpOwogICAgfTsKICAgIHRoaXMuZ2V0U2hpZnRLZXkgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5kb21FdmVudC5zaGlmdEtleTsKICAgIH07CiAgICAKICAgIHRoaXMuZ2V0QWNjZWxLZXkgPSB1c2VyYWdlbnQuaXNNYWMKICAgICAgICA/IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5kb21FdmVudC5tZXRhS2V5OyB9CiAgICAgICAgOiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuZG9tRXZlbnQuY3RybEtleTsgfTsKICAgIAp9KS5jYWxsKE1vdXNlRXZlbnQucHJvdG90eXBlKTsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL21vdXNlL2RyYWdkcm9wJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL2V2ZW50J10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBldmVudCA9IHJlcXVpcmUoIi4uL2xpYi9ldmVudCIpOwoKdmFyIERyYWdkcm9wSGFuZGxlciA9IGZ1bmN0aW9uKG1vdXNlSGFuZGxlcikgewogICAgdmFyIGVkaXRvciA9IG1vdXNlSGFuZGxlci5lZGl0b3I7CiAgICB2YXIgZHJhZ1NlbGVjdGlvbk1hcmtlciwgeCwgeTsKICAgIHZhciB0aW1lcklkLCByYW5nZSwgaXNCYWNrd2FyZHM7CiAgICB2YXIgZHJhZ0N1cnNvciwgY291bnRlciA9IDA7CgogICAgdmFyIG1vdXNlVGFyZ2V0ID0gZWRpdG9yLmNvbnRhaW5lcjsKICAgIGV2ZW50LmFkZExpc3RlbmVyKG1vdXNlVGFyZ2V0LCAiZHJhZ2VudGVyIiwgZnVuY3Rpb24oZSkgewogICAgICAgIGlmIChlZGl0b3IuZ2V0UmVhZE9ubHkoKSkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIGNvdW50ZXIrKzsKICAgICAgICBpZiAoIWRyYWdTZWxlY3Rpb25NYXJrZXIpIHsKICAgICAgICAgICAgcmFuZ2UgPSBlZGl0b3IuZ2V0U2VsZWN0aW9uUmFuZ2UoKTsKICAgICAgICAgICAgaXNCYWNrd2FyZHMgPSBlZGl0b3Iuc2VsZWN0aW9uLmlzQmFja3dhcmRzKCk7CiAgICAgICAgICAgIHZhciBzdHlsZSA9IGVkaXRvci5nZXRTZWxlY3Rpb25TdHlsZSgpOwogICAgICAgICAgICBkcmFnU2VsZWN0aW9uTWFya2VyID0gZWRpdG9yLnNlc3Npb24uYWRkTWFya2VyKHJhbmdlLCAiYWNlX3NlbGVjdGlvbiIsIHN0eWxlKTsKICAgICAgICAgICAgZWRpdG9yLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXJJZCk7CiAgICAgICAgICAgIHRpbWVySWQgPSBzZXRJbnRlcnZhbChvbkRyYWdJbnRlcnZhbCwgMjApOwogICAgICAgIH0KICAgICAgICByZXR1cm4gZXZlbnQucHJldmVudERlZmF1bHQoZSk7CiAgICB9KTsKCiAgICBldmVudC5hZGRMaXN0ZW5lcihtb3VzZVRhcmdldCwgImRyYWdvdmVyIiwgZnVuY3Rpb24oZSkgewogICAgICAgIGlmIChlZGl0b3IuZ2V0UmVhZE9ubHkoKSkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIHggPSBlLmNsaWVudFg7CiAgICAgICAgeSA9IGUuY2xpZW50WTsKICAgICAgICByZXR1cm4gZXZlbnQucHJldmVudERlZmF1bHQoZSk7CiAgICB9KTsKICAgIAogICAgdmFyIG9uRHJhZ0ludGVydmFsID0gIGZ1bmN0aW9uKCkgewogICAgICAgIGRyYWdDdXJzb3IgPSBlZGl0b3IucmVuZGVyZXIuc2NyZWVuVG9UZXh0Q29vcmRpbmF0ZXMoeCwgeSk7CiAgICAgICAgZWRpdG9yLm1vdmVDdXJzb3JUb1Bvc2l0aW9uKGRyYWdDdXJzb3IpOwogICAgICAgIGVkaXRvci5yZW5kZXJlci5zY3JvbGxDdXJzb3JJbnRvVmlldygpOwogICAgfTsKICAgIAogICAgZXZlbnQuYWRkTGlzdGVuZXIobW91c2VUYXJnZXQsICJkcmFnbGVhdmUiLCBmdW5jdGlvbihlKSB7CiAgICAgICAgaWYgKGVkaXRvci5nZXRSZWFkT25seSgpKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgY291bnRlci0tOwogICAgICAgIGlmIChjb3VudGVyID4gMCkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXJJZCk7CiAgICAgICAgZWRpdG9yLnNlc3Npb24ucmVtb3ZlTWFya2VyKGRyYWdTZWxlY3Rpb25NYXJrZXIpOwogICAgICAgIGRyYWdTZWxlY3Rpb25NYXJrZXIgPSBudWxsOwogICAgICAgIGVkaXRvci5zZWxlY3Rpb24uc2V0U2VsZWN0aW9uUmFuZ2UocmFuZ2UsIGlzQmFja3dhcmRzKTsKICAgICAgICByZXR1cm4gZXZlbnQucHJldmVudERlZmF1bHQoZSk7CiAgICB9KTsKICAgIAogICAgZXZlbnQuYWRkTGlzdGVuZXIobW91c2VUYXJnZXQsICJkcm9wIiwgZnVuY3Rpb24oZSkgewogICAgICAgIGlmIChlZGl0b3IuZ2V0UmVhZE9ubHkoKSkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIGNvdW50ZXIgPSAwOwogICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXJJZCk7CiAgICAgICAgZWRpdG9yLnNlc3Npb24ucmVtb3ZlTWFya2VyKGRyYWdTZWxlY3Rpb25NYXJrZXIpOwogICAgICAgIGRyYWdTZWxlY3Rpb25NYXJrZXIgPSBudWxsOwoKICAgICAgICByYW5nZS5lbmQgPSBlZGl0b3Iuc2Vzc2lvbi5pbnNlcnQoZHJhZ0N1cnNvciwgZS5kYXRhVHJhbnNmZXIuZ2V0RGF0YSgnVGV4dCcpKTsKICAgICAgICByYW5nZS5zdGFydCA9IGRyYWdDdXJzb3I7CiAgICAgICAgZWRpdG9yLmZvY3VzKCk7CiAgICAgICAgZWRpdG9yLnNlbGVjdGlvbi5zZXRTZWxlY3Rpb25SYW5nZShyYW5nZSk7CiAgICAgICAgcmV0dXJuIGV2ZW50LnByZXZlbnREZWZhdWx0KGUpOwogICAgfSk7Cgp9OwoKZXhwb3J0cy5EcmFnZHJvcEhhbmRsZXIgPSBEcmFnZHJvcEhhbmRsZXI7Cn0pOwoKYWNlLmRlZmluZSgnYWNlL21vdXNlL2ZvbGRfaGFuZGxlcicsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKZnVuY3Rpb24gRm9sZEhhbmRsZXIoZWRpdG9yKSB7CgogICAgZWRpdG9yLm9uKCJjbGljayIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICB2YXIgcG9zaXRpb24gPSBlLmdldERvY3VtZW50UG9zaXRpb24oKTsKICAgICAgICB2YXIgc2Vzc2lvbiA9IGVkaXRvci5zZXNzaW9uOwogICAgICAgIHZhciBmb2xkID0gc2Vzc2lvbi5nZXRGb2xkQXQocG9zaXRpb24ucm93LCBwb3NpdGlvbi5jb2x1bW4sIDEpOwogICAgICAgIGlmIChmb2xkKSB7CiAgICAgICAgICAgIGlmIChlLmdldEFjY2VsS2V5KCkpCiAgICAgICAgICAgICAgICBzZXNzaW9uLnJlbW92ZUZvbGQoZm9sZCk7CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHNlc3Npb24uZXhwYW5kRm9sZChmb2xkKTsKCiAgICAgICAgICAgIGUuc3RvcCgpOwogICAgICAgIH0KICAgIH0pOwoKICAgIGVkaXRvci5vbigiZ3V0dGVybW91c2Vkb3duIiwgZnVuY3Rpb24oZSkgewogICAgICAgIGlmICghZWRpdG9yLmlzRm9jdXNlZCgpKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdmFyIGd1dHRlclJlZ2lvbiA9IGVkaXRvci5yZW5kZXJlci4kZ3V0dGVyTGF5ZXIuZ2V0UmVnaW9uKGUpOwoKICAgICAgICBpZiAoZ3V0dGVyUmVnaW9uID09ICJmb2xkV2lkZ2V0cyIpIHsKICAgICAgICAgICAgdmFyIHJvdyA9IGUuZ2V0RG9jdW1lbnRQb3NpdGlvbigpLnJvdzsKICAgICAgICAgICAgdmFyIHNlc3Npb24gPSBlZGl0b3Iuc2Vzc2lvbjsKICAgICAgICAgICAgaWYgKHNlc3Npb24uZm9sZFdpZGdldHMgJiYgc2Vzc2lvbi5mb2xkV2lkZ2V0c1tyb3ddKQogICAgICAgICAgICAgICAgZWRpdG9yLnNlc3Npb24ub25Gb2xkV2lkZ2V0Q2xpY2socm93LCBlKTsKICAgICAgICAgICAgZS5zdG9wKCk7CiAgICAgICAgfQogICAgfSk7CgogICAgZWRpdG9yLm9uKCJndXR0ZXJkYmxjbGljayIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICB2YXIgZ3V0dGVyUmVnaW9uID0gZWRpdG9yLnJlbmRlcmVyLiRndXR0ZXJMYXllci5nZXRSZWdpb24oZSk7CgogICAgICAgIGlmIChndXR0ZXJSZWdpb24gPT0gImZvbGRXaWRnZXRzIikgewogICAgICAgICAgICB2YXIgcm93ID0gZS5nZXREb2N1bWVudFBvc2l0aW9uKCkucm93OwogICAgICAgICAgICB2YXIgc2Vzc2lvbiA9IGVkaXRvci5zZXNzaW9uOwogICAgICAgICAgICB2YXIgZncgPSBzZXNzaW9uLmZvbGRXaWRnZXRzOwogICAgICAgICAgICBpZiAoIWZ3IHx8IGZ3W3Jvd10pCiAgICAgICAgICAgICAgICByZXR1cm47CgogICAgICAgICAgICB2YXIgaSA9IHJvdyAtIDEsIGZpcnN0UmFuZ2U7CiAgICAgICAgICAgIHdoaWxlIChpID49IDApIHsKICAgICAgICAgICAgICAgIHZhciBjID0gZndbaV07CiAgICAgICAgICAgICAgICBpZiAoYyA9PSBudWxsKQogICAgICAgICAgICAgICAgICAgIGMgPSBmd1tpXSA9IHNlc3Npb24uZ2V0Rm9sZFdpZGdldCgpOwoKICAgICAgICAgICAgICAgIGlmIChjID09ICJzdGFydCIpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBzZXNzaW9uLmdldEZvbGRXaWRnZXRSYW5nZShpKTsKICAgICAgICAgICAgICAgICAgICBpZiAoIWZpcnN0UmFuZ2UpCiAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0UmFuZ2UgPSByYW5nZTsKICAgICAgICAgICAgICAgICAgICBpZiAocmFuZ2UgJiYgcmFuZ2UuZW5kLnJvdyA+PSByb3cpCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaS0tOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChpID09IC0xKQogICAgICAgICAgICAgICAgcmFuZ2UgPSBmaXJzdFJhbmdlOwoKICAgICAgICAgICAgaWYgKHJhbmdlKSB7CiAgICAgICAgICAgICAgICB2YXIgcm93ID0gcmFuZ2Uuc3RhcnQucm93OwogICAgICAgICAgICAgICAgdmFyIGZvbGQgPSBzZXNzaW9uLmdldEZvbGRBdChyb3csIHNlc3Npb24uZ2V0TGluZShyb3cpLmxlbmd0aCwgMSk7CgogICAgICAgICAgICAgICAgaWYgKGZvbGQpIHsKICAgICAgICAgICAgICAgICAgICBzZXNzaW9uLnJlbW92ZUZvbGQoZm9sZCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHNlc3Npb24uYWRkRm9sZCgiLi4uIiwgcmFuZ2UpOwogICAgICAgICAgICAgICAgICAgIGVkaXRvci5yZW5kZXJlci5zY3JvbGxDdXJzb3JJbnRvVmlldyh7cm93OiByYW5nZS5zdGFydC5yb3csIGNvbHVtbjogMH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGUuc3RvcCgpOwogICAgICAgIH0KICAgIH0pOwp9CgpleHBvcnRzLkZvbGRIYW5kbGVyID0gRm9sZEhhbmRsZXI7Cgp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9rZXlib2FyZC9rZXliaW5kaW5nJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL2tleXMnLCAnYWNlL2xpYi9ldmVudCddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIga2V5VXRpbCAgPSByZXF1aXJlKCIuLi9saWIva2V5cyIpOwp2YXIgZXZlbnQgPSByZXF1aXJlKCIuLi9saWIvZXZlbnQiKTsKCnZhciBLZXlCaW5kaW5nID0gZnVuY3Rpb24oZWRpdG9yKSB7CiAgICB0aGlzLiRlZGl0b3IgPSBlZGl0b3I7CiAgICB0aGlzLiRkYXRhID0geyB9OwogICAgdGhpcy4kaGFuZGxlcnMgPSBbXTsKICAgIHRoaXMuc2V0RGVmYXVsdEhhbmRsZXIoZWRpdG9yLmNvbW1hbmRzKTsKfTsKCihmdW5jdGlvbigpIHsKICAgIHRoaXMuc2V0RGVmYXVsdEhhbmRsZXIgPSBmdW5jdGlvbihrYikgewogICAgICAgIHRoaXMucmVtb3ZlS2V5Ym9hcmRIYW5kbGVyKHRoaXMuJGRlZmF1bHRIYW5kbGVyKTsKICAgICAgICB0aGlzLiRkZWZhdWx0SGFuZGxlciA9IGtiOwogICAgICAgIHRoaXMuYWRkS2V5Ym9hcmRIYW5kbGVyKGtiLCAwKTsKICAgICAgICB0aGlzLiRkYXRhID0ge2VkaXRvcjogdGhpcy4kZWRpdG9yfTsKICAgIH07CgogICAgdGhpcy5zZXRLZXlib2FyZEhhbmRsZXIgPSBmdW5jdGlvbihrYikgewogICAgICAgIGlmICh0aGlzLiRoYW5kbGVyc1t0aGlzLiRoYW5kbGVycy5sZW5ndGggLSAxXSA9PSBrYikKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB3aGlsZSAodGhpcy4kaGFuZGxlcnNbMV0pCiAgICAgICAgICAgIHRoaXMucmVtb3ZlS2V5Ym9hcmRIYW5kbGVyKHRoaXMuJGhhbmRsZXJzWzFdKTsKCiAgICAgICAgdGhpcy5hZGRLZXlib2FyZEhhbmRsZXIoa2IsIDEpOwogICAgfTsKCiAgICB0aGlzLmFkZEtleWJvYXJkSGFuZGxlciA9IGZ1bmN0aW9uKGtiLCBwb3MpIHsKICAgICAgICBpZiAoIWtiKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdmFyIGkgPSB0aGlzLiRoYW5kbGVycy5pbmRleE9mKGtiKTsKICAgICAgICBpZiAoaSAhPSAtMSkKICAgICAgICAgICAgdGhpcy4kaGFuZGxlcnMuc3BsaWNlKGksIDEpOwoKICAgICAgICBpZiAocG9zID09IHVuZGVmaW5lZCkKICAgICAgICAgICAgdGhpcy4kaGFuZGxlcnMucHVzaChrYik7CiAgICAgICAgZWxzZQogICAgICAgICAgICB0aGlzLiRoYW5kbGVycy5zcGxpY2UocG9zLCAwLCBrYik7CgogICAgICAgIGlmIChpID09IC0xICYmIGtiLmF0dGFjaCkKICAgICAgICAgICAga2IuYXR0YWNoKHRoaXMuJGVkaXRvcik7CiAgICB9OwoKICAgIHRoaXMucmVtb3ZlS2V5Ym9hcmRIYW5kbGVyID0gZnVuY3Rpb24oa2IpIHsKICAgICAgICB2YXIgaSA9IHRoaXMuJGhhbmRsZXJzLmluZGV4T2Yoa2IpOwogICAgICAgIGlmIChpID09IC0xKQogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgdGhpcy4kaGFuZGxlcnMuc3BsaWNlKGksIDEpOwogICAgICAgIGtiLmRldGFjaCAmJiBrYi5kZXRhY2godGhpcy4kZWRpdG9yKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH07CgogICAgdGhpcy5nZXRLZXlib2FyZEhhbmRsZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kaGFuZGxlcnNbdGhpcy4kaGFuZGxlcnMubGVuZ3RoIC0gMV07CiAgICB9OwoKICAgIHRoaXMuJGNhbGxLZXlib2FyZEhhbmRsZXJzID0gZnVuY3Rpb24gKGhhc2hJZCwga2V5U3RyaW5nLCBrZXlDb2RlLCBlKSB7CiAgICAgICAgdmFyIHRvRXhlY3V0ZTsKICAgICAgICB2YXIgc3VjY2VzcyA9IGZhbHNlOwogICAgICAgIHZhciBjb21tYW5kcyA9IHRoaXMuJGVkaXRvci5jb21tYW5kczsKCiAgICAgICAgZm9yICh2YXIgaSA9IHRoaXMuJGhhbmRsZXJzLmxlbmd0aDsgaS0tOykgewogICAgICAgICAgICB0b0V4ZWN1dGUgPSB0aGlzLiRoYW5kbGVyc1tpXS5oYW5kbGVLZXlib2FyZCgKICAgICAgICAgICAgICAgIHRoaXMuJGRhdGEsIGhhc2hJZCwga2V5U3RyaW5nLCBrZXlDb2RlLCBlCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIGlmICghdG9FeGVjdXRlIHx8ICF0b0V4ZWN1dGUuY29tbWFuZCkKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICBpZiAodG9FeGVjdXRlLmNvbW1hbmQgPT0gIm51bGwiKSB7CiAgICAgICAgICAgICAgICBzdWNjZXNzID0gdG9FeGVjdXRlLnBhc3NFdmVudCAhPSB0cnVlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgc3VjY2VzcyA9IGNvbW1hbmRzLmV4ZWModG9FeGVjdXRlLmNvbW1hbmQsIHRoaXMuJGVkaXRvciwgdG9FeGVjdXRlLmFyZ3MsIGUpOyAgICAgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoc3VjY2VzcyAmJiBlICYmIGhhc2hJZCAhPSAtMSkKICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BFdmVudChlKTsKICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHN1Y2Nlc3M7CiAgICB9OwoKICAgIHRoaXMub25Db21tYW5kS2V5ID0gZnVuY3Rpb24oZSwgaGFzaElkLCBrZXlDb2RlKSB7CiAgICAgICAgdmFyIGtleVN0cmluZyA9IGtleVV0aWwua2V5Q29kZVRvU3RyaW5nKGtleUNvZGUpOwogICAgICAgIHRoaXMuJGNhbGxLZXlib2FyZEhhbmRsZXJzKGhhc2hJZCwga2V5U3RyaW5nLCBrZXlDb2RlLCBlKTsKICAgIH07CgogICAgdGhpcy5vblRleHRJbnB1dCA9IGZ1bmN0aW9uKHRleHQpIHsKICAgICAgICB2YXIgc3VjY2VzcyA9IHRoaXMuJGNhbGxLZXlib2FyZEhhbmRsZXJzKC0xLCB0ZXh0KTsKICAgICAgICBpZiAoIXN1Y2Nlc3MpCiAgICAgICAgICAgIHRoaXMuJGVkaXRvci5jb21tYW5kcy5leGVjKCJpbnNlcnRzdHJpbmciLCB0aGlzLiRlZGl0b3IsIHRleHQpOwogICAgfTsKCn0pLmNhbGwoS2V5QmluZGluZy5wcm90b3R5cGUpOwoKZXhwb3J0cy5LZXlCaW5kaW5nID0gS2V5QmluZGluZzsKfSk7CgphY2UuZGVmaW5lKCdhY2UvZWRpdF9zZXNzaW9uJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvY29uZmlnJywgJ2FjZS9saWIvb29wJywgJ2FjZS9saWIvbGFuZycsICdhY2UvbGliL25ldCcsICdhY2UvbGliL2V2ZW50X2VtaXR0ZXInLCAnYWNlL3NlbGVjdGlvbicsICdhY2UvbW9kZS90ZXh0JywgJ2FjZS9yYW5nZScsICdhY2UvZG9jdW1lbnQnLCAnYWNlL2JhY2tncm91bmRfdG9rZW5pemVyJywgJ2FjZS9zZWFyY2hfaGlnaGxpZ2h0JywgJ2FjZS9lZGl0X3Nlc3Npb24vZm9sZGluZycsICdhY2UvZWRpdF9zZXNzaW9uL2JyYWNrZXRfbWF0Y2gnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIGNvbmZpZyA9IHJlcXVpcmUoIi4vY29uZmlnIik7CnZhciBvb3AgPSByZXF1aXJlKCIuL2xpYi9vb3AiKTsKdmFyIGxhbmcgPSByZXF1aXJlKCIuL2xpYi9sYW5nIik7CnZhciBuZXQgPSByZXF1aXJlKCIuL2xpYi9uZXQiKTsKdmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoIi4vbGliL2V2ZW50X2VtaXR0ZXIiKS5FdmVudEVtaXR0ZXI7CnZhciBTZWxlY3Rpb24gPSByZXF1aXJlKCIuL3NlbGVjdGlvbiIpLlNlbGVjdGlvbjsKdmFyIFRleHRNb2RlID0gcmVxdWlyZSgiLi9tb2RlL3RleHQiKS5Nb2RlOwp2YXIgUmFuZ2UgPSByZXF1aXJlKCIuL3JhbmdlIikuUmFuZ2U7CnZhciBEb2N1bWVudCA9IHJlcXVpcmUoIi4vZG9jdW1lbnQiKS5Eb2N1bWVudDsKdmFyIEJhY2tncm91bmRUb2tlbml6ZXIgPSByZXF1aXJlKCIuL2JhY2tncm91bmRfdG9rZW5pemVyIikuQmFja2dyb3VuZFRva2VuaXplcjsKdmFyIFNlYXJjaEhpZ2hsaWdodCA9IHJlcXVpcmUoIi4vc2VhcmNoX2hpZ2hsaWdodCIpLlNlYXJjaEhpZ2hsaWdodDsKCnZhciBFZGl0U2Vzc2lvbiA9IGZ1bmN0aW9uKHRleHQsIG1vZGUpIHsKICAgIHRoaXMuJGJyZWFrcG9pbnRzID0gW107CiAgICB0aGlzLiRkZWNvcmF0aW9ucyA9IFtdOwogICAgdGhpcy4kZnJvbnRNYXJrZXJzID0ge307CiAgICB0aGlzLiRiYWNrTWFya2VycyA9IHt9OwogICAgdGhpcy4kbWFya2VySWQgPSAxOwogICAgdGhpcy4kdW5kb1NlbGVjdCA9IHRydWU7CiAgICAKICAgIHRoaXMuJGZvbGREYXRhID0gW107CiAgICB0aGlzLiRmb2xkRGF0YS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBzdHIgPSAiIjsKICAgICAgICB0aGlzLmZvckVhY2goZnVuY3Rpb24oZm9sZExpbmUpIHsKICAgICAgICAgICAgc3RyICs9ICJcbiIgKyBmb2xkTGluZS50b1N0cmluZygpOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBzdHI7CiAgICB9CiAgICB0aGlzLm9uKCJjaGFuZ2VGb2xkIiwgdGhpcy5vbkNoYW5nZUZvbGQuYmluZCh0aGlzKSk7CiAgICB0aGlzLiRvbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTsKICAgIAogICAgaWYgKHR5cGVvZiB0ZXh0ICE9ICJvYmplY3QiIHx8ICF0ZXh0LmdldExpbmUpCiAgICAgICAgdGV4dCA9IG5ldyBEb2N1bWVudCh0ZXh0KTsKCiAgICB0aGlzLnNldERvY3VtZW50KHRleHQpOwoKICAgIHRoaXMuc2VsZWN0aW9uID0gbmV3IFNlbGVjdGlvbih0aGlzKTsKICAgIHRoaXMuc2V0TW9kZShtb2RlKTsKfTsKCgooZnVuY3Rpb24oKSB7CgogICAgb29wLmltcGxlbWVudCh0aGlzLCBFdmVudEVtaXR0ZXIpOwogICAgdGhpcy5zZXREb2N1bWVudCA9IGZ1bmN0aW9uKGRvYykgewogICAgICAgIGlmICh0aGlzLmRvYykKICAgICAgICAgICAgdGhpcy5kb2MucmVtb3ZlTGlzdGVuZXIoImNoYW5nZSIsIHRoaXMuJG9uQ2hhbmdlKTsKCiAgICAgICAgdGhpcy5kb2MgPSBkb2M7CiAgICAgICAgZG9jLm9uKCJjaGFuZ2UiLCB0aGlzLiRvbkNoYW5nZSk7CgogICAgICAgIGlmICh0aGlzLmJnVG9rZW5pemVyKQogICAgICAgICAgICB0aGlzLmJnVG9rZW5pemVyLnNldERvY3VtZW50KHRoaXMuZ2V0RG9jdW1lbnQoKSk7CgogICAgICAgIHRoaXMucmVzZXRDYWNoZXMoKTsKICAgIH07CiAgICB0aGlzLmdldERvY3VtZW50ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG9jOwogICAgfTsKICAgIHRoaXMuJHJlc2V0Um93Q2FjaGUgPSBmdW5jdGlvbihkb2NSb3cpIHsKICAgICAgICBpZiAoIWRvY1JvdykgewogICAgICAgICAgICB0aGlzLiRkb2NSb3dDYWNoZSA9IFtdOwogICAgICAgICAgICB0aGlzLiRzY3JlZW5Sb3dDYWNoZSA9IFtdOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB2YXIgaSA9IHRoaXMuJGdldFJvd0NhY2hlSW5kZXgodGhpcy4kZG9jUm93Q2FjaGUsIGRvY1JvdykgKyAxOwogICAgICAgIHZhciBsID0gdGhpcy4kZG9jUm93Q2FjaGUubGVuZ3RoOwogICAgICAgIHRoaXMuJGRvY1Jvd0NhY2hlLnNwbGljZShpLCBsKTsKICAgICAgICB0aGlzLiRzY3JlZW5Sb3dDYWNoZS5zcGxpY2UoaSwgbCk7CgogICAgfTsKCiAgICB0aGlzLiRnZXRSb3dDYWNoZUluZGV4ID0gZnVuY3Rpb24oY2FjaGVBcnJheSwgdmFsKSB7CiAgICAgICAgdmFyIGxvdyA9IDA7CiAgICAgICAgdmFyIGhpID0gY2FjaGVBcnJheS5sZW5ndGggLSAxOwoKICAgICAgICB3aGlsZSAobG93IDw9IGhpKSB7CiAgICAgICAgICAgIHZhciBtaWQgPSAobG93ICsgaGkpID4+IDE7CiAgICAgICAgICAgIHZhciBjID0gY2FjaGVBcnJheVttaWRdOwoKICAgICAgICAgICAgaWYgKHZhbCA+IGMpCiAgICAgICAgICAgICAgICBsb3cgPSBtaWQgKyAxOwogICAgICAgICAgICBlbHNlIGlmICh2YWwgPCBjKQogICAgICAgICAgICAgICAgaGkgPSBtaWQgLSAxOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICByZXR1cm4gbWlkOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGxvdyAtMTsKICAgIH07CgogICAgdGhpcy5yZXNldENhY2hlcyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJG1vZGlmaWVkID0gdHJ1ZTsKICAgICAgICB0aGlzLiR3cmFwRGF0YSA9IFtdOwogICAgICAgIHRoaXMuJHJvd0xlbmd0aENhY2hlID0gW107CiAgICAgICAgdGhpcy4kcmVzZXRSb3dDYWNoZSgwKTsKICAgICAgICBpZiAodGhpcy5iZ1Rva2VuaXplcikKICAgICAgICAgICAgdGhpcy5iZ1Rva2VuaXplci5zdGFydCgwKTsKICAgIH07CgogICAgdGhpcy5vbkNoYW5nZUZvbGQgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgdmFyIGZvbGQgPSBlLmRhdGE7CiAgICAgICAgdGhpcy4kcmVzZXRSb3dDYWNoZShmb2xkLnN0YXJ0LnJvdyk7CiAgICB9OwoKICAgIHRoaXMub25DaGFuZ2UgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgdmFyIGRlbHRhID0gZS5kYXRhOwogICAgICAgIHRoaXMuJG1vZGlmaWVkID0gdHJ1ZTsKCiAgICAgICAgdGhpcy4kcmVzZXRSb3dDYWNoZShkZWx0YS5yYW5nZS5zdGFydC5yb3cpOwoKICAgICAgICB2YXIgcmVtb3ZlZEZvbGRzID0gdGhpcy4kdXBkYXRlSW50ZXJuYWxEYXRhT25DaGFuZ2UoZSk7CiAgICAgICAgaWYgKCF0aGlzLiRmcm9tVW5kbyAmJiB0aGlzLiR1bmRvTWFuYWdlciAmJiAhZGVsdGEuaWdub3JlKSB7CiAgICAgICAgICAgIHRoaXMuJGRlbHRhc0RvYy5wdXNoKGRlbHRhKTsKICAgICAgICAgICAgaWYgKHJlbW92ZWRGb2xkcyAmJiByZW1vdmVkRm9sZHMubGVuZ3RoICE9IDApIHsKICAgICAgICAgICAgICAgIHRoaXMuJGRlbHRhc0ZvbGQucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAicmVtb3ZlRm9sZHMiLAogICAgICAgICAgICAgICAgICAgIGZvbGRzOiAgcmVtb3ZlZEZvbGRzCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy4kaW5mb3JtVW5kb01hbmFnZXIuc2NoZWR1bGUoKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuYmdUb2tlbml6ZXIuJHVwZGF0ZU9uQ2hhbmdlKGRlbHRhKTsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2UiLCBlKTsKICAgIH07CiAgICB0aGlzLnNldFZhbHVlID0gZnVuY3Rpb24odGV4dCkgewogICAgICAgIHRoaXMuZG9jLnNldFZhbHVlKHRleHQpOwogICAgICAgIHRoaXMuc2VsZWN0aW9uLm1vdmVDdXJzb3JUbygwLCAwKTsKICAgICAgICB0aGlzLnNlbGVjdGlvbi5jbGVhclNlbGVjdGlvbigpOwoKICAgICAgICB0aGlzLiRyZXNldFJvd0NhY2hlKDApOwogICAgICAgIHRoaXMuJGRlbHRhcyA9IFtdOwogICAgICAgIHRoaXMuJGRlbHRhc0RvYyA9IFtdOwogICAgICAgIHRoaXMuJGRlbHRhc0ZvbGQgPSBbXTsKICAgICAgICB0aGlzLmdldFVuZG9NYW5hZ2VyKCkucmVzZXQoKTsKICAgIH07CiAgICB0aGlzLmdldFZhbHVlID0KICAgIHRoaXMudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5kb2MuZ2V0VmFsdWUoKTsKICAgIH07CiAgICB0aGlzLmdldFNlbGVjdGlvbiA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbjsKICAgIH07CiAgICB0aGlzLmdldFN0YXRlID0gZnVuY3Rpb24ocm93KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYmdUb2tlbml6ZXIuZ2V0U3RhdGUocm93KTsKICAgIH07CiAgICB0aGlzLmdldFRva2VucyA9IGZ1bmN0aW9uKHJvdykgewogICAgICAgIHJldHVybiB0aGlzLmJnVG9rZW5pemVyLmdldFRva2Vucyhyb3cpOwogICAgfTsKICAgIHRoaXMuZ2V0VG9rZW5BdCA9IGZ1bmN0aW9uKHJvdywgY29sdW1uKSB7CiAgICAgICAgdmFyIHRva2VucyA9IHRoaXMuYmdUb2tlbml6ZXIuZ2V0VG9rZW5zKHJvdyk7CiAgICAgICAgdmFyIHRva2VuLCBjID0gMDsKICAgICAgICBpZiAoY29sdW1uID09IG51bGwpIHsKICAgICAgICAgICAgaSA9IHRva2Vucy5sZW5ndGggLSAxOwogICAgICAgICAgICBjID0gdGhpcy5nZXRMaW5lKHJvdykubGVuZ3RoOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICBjICs9IHRva2Vuc1tpXS52YWx1ZS5sZW5ndGg7CiAgICAgICAgICAgICAgICBpZiAoYyA+PSBjb2x1bW4pCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdG9rZW4gPSB0b2tlbnNbaV07CiAgICAgICAgaWYgKCF0b2tlbikKICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgdG9rZW4uaW5kZXggPSBpOwogICAgICAgIHRva2VuLnN0YXJ0ID0gYyAtIHRva2VuLnZhbHVlLmxlbmd0aDsKICAgICAgICByZXR1cm4gdG9rZW47CiAgICB9OwogICAgdGhpcy5zZXRVbmRvTWFuYWdlciA9IGZ1bmN0aW9uKHVuZG9NYW5hZ2VyKSB7CiAgICAgICAgdGhpcy4kdW5kb01hbmFnZXIgPSB1bmRvTWFuYWdlcjsKICAgICAgICB0aGlzLiRkZWx0YXMgPSBbXTsKICAgICAgICB0aGlzLiRkZWx0YXNEb2MgPSBbXTsKICAgICAgICB0aGlzLiRkZWx0YXNGb2xkID0gW107CgogICAgICAgIGlmICh0aGlzLiRpbmZvcm1VbmRvTWFuYWdlcikKICAgICAgICAgICAgdGhpcy4kaW5mb3JtVW5kb01hbmFnZXIuY2FuY2VsKCk7CgogICAgICAgIGlmICh1bmRvTWFuYWdlcikgewogICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7CgogICAgICAgICAgICB0aGlzLiRzeW5jSW5mb3JtVW5kb01hbmFnZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHNlbGYuJGluZm9ybVVuZG9NYW5hZ2VyLmNhbmNlbCgpOwoKICAgICAgICAgICAgICAgIGlmIChzZWxmLiRkZWx0YXNGb2xkLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIHNlbGYuJGRlbHRhcy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgZ3JvdXA6ICJmb2xkIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGVsdGFzOiBzZWxmLiRkZWx0YXNGb2xkCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgc2VsZi4kZGVsdGFzRm9sZCA9IFtdOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmIChzZWxmLiRkZWx0YXNEb2MubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgc2VsZi4kZGVsdGFzLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICBncm91cDogImRvYyIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRlbHRhczogc2VsZi4kZGVsdGFzRG9jCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgc2VsZi4kZGVsdGFzRG9jID0gW107CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKHNlbGYuJGRlbHRhcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgdW5kb01hbmFnZXIuZXhlY3V0ZSh7CiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogImFjZXVwZGF0ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3M6IFtzZWxmLiRkZWx0YXMsIHNlbGZdCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgc2VsZi4kZGVsdGFzID0gW107CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy4kaW5mb3JtVW5kb01hbmFnZXIgPQogICAgICAgICAgICAgICAgbGFuZy5kZWZlcnJlZENhbGwodGhpcy4kc3luY0luZm9ybVVuZG9NYW5hZ2VyKTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuJGRlZmF1bHRVbmRvTWFuYWdlciA9IHsKICAgICAgICB1bmRvOiBmdW5jdGlvbigpIHt9LAogICAgICAgIHJlZG86IGZ1bmN0aW9uKCkge30sCiAgICAgICAgcmVzZXQ6IGZ1bmN0aW9uKCkge30KICAgIH07CiAgICB0aGlzLmdldFVuZG9NYW5hZ2VyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHVuZG9NYW5hZ2VyIHx8IHRoaXMuJGRlZmF1bHRVbmRvTWFuYWdlcjsKICAgIH07CiAgICB0aGlzLmdldFRhYlN0cmluZyA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh0aGlzLmdldFVzZVNvZnRUYWJzKCkpIHsKICAgICAgICAgICAgcmV0dXJuIGxhbmcuc3RyaW5nUmVwZWF0KCIgIiwgdGhpcy5nZXRUYWJTaXplKCkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiXHQiOwogICAgICAgIH0KICAgIH07CgogICAgdGhpcy4kdXNlU29mdFRhYnMgPSB0cnVlOwogICAgdGhpcy5zZXRVc2VTb2Z0VGFicyA9IGZ1bmN0aW9uKHVzZVNvZnRUYWJzKSB7CiAgICAgICAgaWYgKHRoaXMuJHVzZVNvZnRUYWJzID09PSB1c2VTb2Z0VGFicykgcmV0dXJuOwoKICAgICAgICB0aGlzLiR1c2VTb2Z0VGFicyA9IHVzZVNvZnRUYWJzOwogICAgfTsKICAgIHRoaXMuZ2V0VXNlU29mdFRhYnMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdXNlU29mdFRhYnM7CiAgICB9OwoKICAgIHRoaXMuJHRhYlNpemUgPSA0OwogICAgdGhpcy5zZXRUYWJTaXplID0gZnVuY3Rpb24odGFiU2l6ZSkgewogICAgICAgIGlmIChpc05hTih0YWJTaXplKSB8fCB0aGlzLiR0YWJTaXplID09PSB0YWJTaXplKSByZXR1cm47CgogICAgICAgIHRoaXMuJG1vZGlmaWVkID0gdHJ1ZTsKICAgICAgICB0aGlzLiRyb3dMZW5ndGhDYWNoZSA9IFtdOwogICAgICAgIHRoaXMuJHRhYlNpemUgPSB0YWJTaXplOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZVRhYlNpemUiKTsKICAgIH07CiAgICB0aGlzLmdldFRhYlNpemUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdGFiU2l6ZTsKICAgIH07CiAgICB0aGlzLmlzVGFiU3RvcCA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHVzZVNvZnRUYWJzICYmIChwb3NpdGlvbi5jb2x1bW4gJSB0aGlzLiR0YWJTaXplID09IDApOwogICAgfTsKCiAgICB0aGlzLiRvdmVyd3JpdGUgPSBmYWxzZTsKICAgIHRoaXMuc2V0T3ZlcndyaXRlID0gZnVuY3Rpb24ob3ZlcndyaXRlKSB7CiAgICAgICAgaWYgKHRoaXMuJG92ZXJ3cml0ZSA9PSBvdmVyd3JpdGUpIHJldHVybjsKCiAgICAgICAgdGhpcy4kb3ZlcndyaXRlID0gb3ZlcndyaXRlOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZU92ZXJ3cml0ZSIpOwogICAgfTsKICAgIHRoaXMuZ2V0T3ZlcndyaXRlID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG92ZXJ3cml0ZTsKICAgIH07CiAgICB0aGlzLnRvZ2dsZU92ZXJ3cml0ZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuc2V0T3ZlcndyaXRlKCF0aGlzLiRvdmVyd3JpdGUpOwogICAgfTsKICAgIHRoaXMuYWRkR3V0dGVyRGVjb3JhdGlvbiA9IGZ1bmN0aW9uKHJvdywgY2xhc3NOYW1lKSB7CiAgICAgICAgaWYgKCF0aGlzLiRkZWNvcmF0aW9uc1tyb3ddKQogICAgICAgICAgICB0aGlzLiRkZWNvcmF0aW9uc1tyb3ddID0gIiI7CiAgICAgICAgdGhpcy4kZGVjb3JhdGlvbnNbcm93XSArPSAiICIgKyBjbGFzc05hbWU7CiAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlQnJlYWtwb2ludCIsIHt9KTsKICAgIH07CiAgICB0aGlzLnJlbW92ZUd1dHRlckRlY29yYXRpb24gPSBmdW5jdGlvbihyb3csIGNsYXNzTmFtZSkgewogICAgICAgIHRoaXMuJGRlY29yYXRpb25zW3Jvd10gPSAodGhpcy4kZGVjb3JhdGlvbnNbcm93XSB8fCAiIikucmVwbGFjZSgiICIgKyBjbGFzc05hbWUsICIiKTsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VCcmVha3BvaW50Iiwge30pOwogICAgfTsKICAgIHRoaXMuZ2V0QnJlYWtwb2ludHMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kYnJlYWtwb2ludHM7CiAgICB9OwogICAgdGhpcy5zZXRCcmVha3BvaW50cyA9IGZ1bmN0aW9uKHJvd3MpIHsKICAgICAgICB0aGlzLiRicmVha3BvaW50cyA9IFtdOwogICAgICAgIGZvciAodmFyIGk9MDsgaTxyb3dzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHRoaXMuJGJyZWFrcG9pbnRzW3Jvd3NbaV1dID0gImFjZV9icmVha3BvaW50IjsKICAgICAgICB9CiAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlQnJlYWtwb2ludCIsIHt9KTsKICAgIH07CiAgICB0aGlzLmNsZWFyQnJlYWtwb2ludHMgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRicmVha3BvaW50cyA9IFtdOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZUJyZWFrcG9pbnQiLCB7fSk7CiAgICB9OwogICAgdGhpcy5zZXRCcmVha3BvaW50ID0gZnVuY3Rpb24ocm93LCBjbGFzc05hbWUpIHsKICAgICAgICBpZiAoY2xhc3NOYW1lID09PSB1bmRlZmluZWQpCiAgICAgICAgICAgIGNsYXNzTmFtZSA9ICJhY2VfYnJlYWtwb2ludCI7CiAgICAgICAgaWYgKGNsYXNzTmFtZSkKICAgICAgICAgICAgdGhpcy4kYnJlYWtwb2ludHNbcm93XSA9IGNsYXNzTmFtZTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLiRicmVha3BvaW50c1tyb3ddOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZUJyZWFrcG9pbnQiLCB7fSk7CiAgICB9OwogICAgdGhpcy5jbGVhckJyZWFrcG9pbnQgPSBmdW5jdGlvbihyb3cpIHsKICAgICAgICBkZWxldGUgdGhpcy4kYnJlYWtwb2ludHNbcm93XTsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VCcmVha3BvaW50Iiwge30pOwogICAgfTsKICAgIHRoaXMuYWRkTWFya2VyID0gZnVuY3Rpb24ocmFuZ2UsIGNsYXp6LCB0eXBlLCBpbkZyb250KSB7CiAgICAgICAgdmFyIGlkID0gdGhpcy4kbWFya2VySWQrKzsKCiAgICAgICAgdmFyIG1hcmtlciA9IHsKICAgICAgICAgICAgcmFuZ2UgOiByYW5nZSwKICAgICAgICAgICAgdHlwZSA6IHR5cGUgfHwgImxpbmUiLAogICAgICAgICAgICByZW5kZXJlcjogdHlwZW9mIHR5cGUgPT0gImZ1bmN0aW9uIiA/IHR5cGUgOiBudWxsLAogICAgICAgICAgICBjbGF6eiA6IGNsYXp6LAogICAgICAgICAgICBpbkZyb250OiAhIWluRnJvbnQsCiAgICAgICAgICAgIGlkOiBpZAogICAgICAgIH0KCiAgICAgICAgaWYgKGluRnJvbnQpIHsKICAgICAgICAgICAgdGhpcy4kZnJvbnRNYXJrZXJzW2lkXSA9IG1hcmtlcjsKICAgICAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlRnJvbnRNYXJrZXIiKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuJGJhY2tNYXJrZXJzW2lkXSA9IG1hcmtlcjsKICAgICAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlQmFja01hcmtlciIpCiAgICAgICAgfQoKICAgICAgICByZXR1cm4gaWQ7CiAgICB9OwogICAgdGhpcy5hZGREeW5hbWljTWFya2VyID0gZnVuY3Rpb24obWFya2VyLCBpbkZyb250KSB7CiAgICAgICAgaWYgKCFtYXJrZXIudXBkYXRlKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdmFyIGlkID0gdGhpcy4kbWFya2VySWQrKzsKICAgICAgICBtYXJrZXIuaWQgPSBpZDsKICAgICAgICBtYXJrZXIuaW5Gcm9udCA9ICEhaW5Gcm9udDsKCiAgICAgICAgaWYgKGluRnJvbnQpIHsKICAgICAgICAgICAgdGhpcy4kZnJvbnRNYXJrZXJzW2lkXSA9IG1hcmtlcjsKICAgICAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlRnJvbnRNYXJrZXIiKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuJGJhY2tNYXJrZXJzW2lkXSA9IG1hcmtlcjsKICAgICAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlQmFja01hcmtlciIpCiAgICAgICAgfQoKICAgICAgICByZXR1cm4gbWFya2VyOwogICAgfTsKICAgIHRoaXMucmVtb3ZlTWFya2VyID0gZnVuY3Rpb24obWFya2VySWQpIHsKICAgICAgICB2YXIgbWFya2VyID0gdGhpcy4kZnJvbnRNYXJrZXJzW21hcmtlcklkXSB8fCB0aGlzLiRiYWNrTWFya2Vyc1ttYXJrZXJJZF07CiAgICAgICAgaWYgKCFtYXJrZXIpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdmFyIG1hcmtlcnMgPSBtYXJrZXIuaW5Gcm9udCA/IHRoaXMuJGZyb250TWFya2VycyA6IHRoaXMuJGJhY2tNYXJrZXJzOwogICAgICAgIGlmIChtYXJrZXIpIHsKICAgICAgICAgICAgZGVsZXRlIChtYXJrZXJzW21hcmtlcklkXSk7CiAgICAgICAgICAgIHRoaXMuX2VtaXQobWFya2VyLmluRnJvbnQgPyAiY2hhbmdlRnJvbnRNYXJrZXIiIDogImNoYW5nZUJhY2tNYXJrZXIiKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5nZXRNYXJrZXJzID0gZnVuY3Rpb24oaW5Gcm9udCkgewogICAgICAgIHJldHVybiBpbkZyb250ID8gdGhpcy4kZnJvbnRNYXJrZXJzIDogdGhpcy4kYmFja01hcmtlcnM7CiAgICB9OwoKICAgIHRoaXMuaGlnaGxpZ2h0ID0gZnVuY3Rpb24ocmUpIHsKICAgICAgICBpZiAoIXRoaXMuJHNlYXJjaEhpZ2hsaWdodCkgewogICAgICAgICAgICB2YXIgaGlnaGxpZ2h0ID0gbmV3IFNlYXJjaEhpZ2hsaWdodChudWxsLCAiYWNlX3NlbGVjdGVkLXdvcmQiLCAidGV4dCIpOwogICAgICAgICAgICB0aGlzLiRzZWFyY2hIaWdobGlnaHQgPSB0aGlzLmFkZER5bmFtaWNNYXJrZXIoaGlnaGxpZ2h0KTsKICAgICAgICB9CiAgICAgICAgdGhpcy4kc2VhcmNoSGlnaGxpZ2h0LnNldFJlZ2V4cChyZSk7CiAgICB9CiAgICB0aGlzLmhpZ2hsaWdodExpbmVzID0gZnVuY3Rpb24oc3RhcnRSb3csIGVuZFJvdywgY2xhenosIGluRnJvbnQpIHsKICAgICAgICBpZiAodHlwZW9mIGVuZFJvdyAhPSAibnVtYmVyIikgewogICAgICAgICAgICBjbGF6eiA9IGVuZFJvdzsKICAgICAgICAgICAgZW5kUm93ID0gc3RhcnRSb3c7CiAgICAgICAgfQogICAgICAgIGlmICghY2xhenopCiAgICAgICAgICAgIGNsYXp6ID0gImFjZV9zdGVwIjsKICAgICAgICAKICAgICAgICB2YXIgcmFuZ2UgPSBuZXcgUmFuZ2Uoc3RhcnRSb3csIDAsIGVuZFJvdywgSW5maW5pdHkpOwogICAgICAgIAogICAgICAgIHZhciBpZCA9IHRoaXMuYWRkTWFya2VyKHJhbmdlLCBjbGF6eiwgImZ1bGxMaW5lIiwgaW5Gcm9udCk7CiAgICAgICAgcmFuZ2UuaWQgPSBpZDsKICAgICAgICByZXR1cm4gcmFuZ2U7CiAgICB9OwogICAgdGhpcy5zZXRBbm5vdGF0aW9ucyA9IGZ1bmN0aW9uKGFubm90YXRpb25zKSB7CiAgICAgICAgdGhpcy4kYW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9uczsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VBbm5vdGF0aW9uIiwge30pOwogICAgfTsKICAgIHRoaXMuZ2V0QW5ub3RhdGlvbnMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kYW5ub3RhdGlvbnMgfHwgW107CiAgICB9OwogICAgdGhpcy5jbGVhckFubm90YXRpb25zID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kYW5ub3RhdGlvbnMgPSB7fTsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VBbm5vdGF0aW9uIiwge30pOwogICAgfTsKICAgIHRoaXMuJGRldGVjdE5ld0xpbmUgPSBmdW5jdGlvbih0ZXh0KSB7CiAgICAgICAgdmFyIG1hdGNoID0gdGV4dC5tYXRjaCgvXi4qPyhccj9cbikvbSk7CiAgICAgICAgaWYgKG1hdGNoKSB7CiAgICAgICAgICAgIHRoaXMuJGF1dG9OZXdMaW5lID0gbWF0Y2hbMV07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kYXV0b05ld0xpbmUgPSAiXG4iOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLmdldFdvcmRSYW5nZSA9IGZ1bmN0aW9uKHJvdywgY29sdW1uKSB7CiAgICAgICAgdmFyIGxpbmUgPSB0aGlzLmdldExpbmUocm93KTsKCiAgICAgICAgdmFyIGluVG9rZW4gPSBmYWxzZTsKICAgICAgICBpZiAoY29sdW1uID4gMCkKICAgICAgICAgICAgaW5Ub2tlbiA9ICEhbGluZS5jaGFyQXQoY29sdW1uIC0gMSkubWF0Y2godGhpcy50b2tlblJlKTsKCiAgICAgICAgaWYgKCFpblRva2VuKQogICAgICAgICAgICBpblRva2VuID0gISFsaW5lLmNoYXJBdChjb2x1bW4pLm1hdGNoKHRoaXMudG9rZW5SZSk7CiAgICAgICAgCiAgICAgICAgaWYgKGluVG9rZW4pCiAgICAgICAgICAgIHZhciByZSA9IHRoaXMudG9rZW5SZTsKICAgICAgICBlbHNlIGlmICgvXlxzKyQvLnRlc3QobGluZS5zbGljZShjb2x1bW4tMSwgY29sdW1uKzEpKSkKICAgICAgICAgICAgdmFyIHJlID0gL1xzLzsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHZhciByZSA9IHRoaXMubm9uVG9rZW5SZTsKCiAgICAgICAgdmFyIHN0YXJ0ID0gY29sdW1uOwogICAgICAgIGlmIChzdGFydCA+IDApIHsKICAgICAgICAgICAgZG8gewogICAgICAgICAgICAgICAgc3RhcnQtLTsKICAgICAgICAgICAgfQogICAgICAgICAgICB3aGlsZSAoc3RhcnQgPj0gMCAmJiBsaW5lLmNoYXJBdChzdGFydCkubWF0Y2gocmUpKTsKICAgICAgICAgICAgc3RhcnQrKzsKICAgICAgICB9CgogICAgICAgIHZhciBlbmQgPSBjb2x1bW47CiAgICAgICAgd2hpbGUgKGVuZCA8IGxpbmUubGVuZ3RoICYmIGxpbmUuY2hhckF0KGVuZCkubWF0Y2gocmUpKSB7CiAgICAgICAgICAgIGVuZCsrOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG5ldyBSYW5nZShyb3csIHN0YXJ0LCByb3csIGVuZCk7CiAgICB9OwogICAgdGhpcy5nZXRBV29yZFJhbmdlID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICB2YXIgd29yZFJhbmdlID0gdGhpcy5nZXRXb3JkUmFuZ2Uocm93LCBjb2x1bW4pOwogICAgICAgIHZhciBsaW5lID0gdGhpcy5nZXRMaW5lKHdvcmRSYW5nZS5lbmQucm93KTsKCiAgICAgICAgd2hpbGUgKGxpbmUuY2hhckF0KHdvcmRSYW5nZS5lbmQuY29sdW1uKS5tYXRjaCgvWyBcdF0vKSkgewogICAgICAgICAgICB3b3JkUmFuZ2UuZW5kLmNvbHVtbiArPSAxOwogICAgICAgIH0KICAgICAgICByZXR1cm4gd29yZFJhbmdlOwogICAgfTsKICAgIHRoaXMuc2V0TmV3TGluZU1vZGUgPSBmdW5jdGlvbihuZXdMaW5lTW9kZSkgewogICAgICAgIHRoaXMuZG9jLnNldE5ld0xpbmVNb2RlKG5ld0xpbmVNb2RlKTsKICAgIH07CiAgICB0aGlzLmdldE5ld0xpbmVNb2RlID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG9jLmdldE5ld0xpbmVNb2RlKCk7CiAgICB9OwoKICAgIHRoaXMuJHVzZVdvcmtlciA9IHRydWU7CiAgICB0aGlzLnNldFVzZVdvcmtlciA9IGZ1bmN0aW9uKHVzZVdvcmtlcikgewogICAgICAgIGlmICh0aGlzLiR1c2VXb3JrZXIgPT0gdXNlV29ya2VyKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIHRoaXMuJHVzZVdvcmtlciA9IHVzZVdvcmtlcjsKCiAgICAgICAgdGhpcy4kc3RvcFdvcmtlcigpOwogICAgICAgIGlmICh1c2VXb3JrZXIpCiAgICAgICAgICAgIHRoaXMuJHN0YXJ0V29ya2VyKCk7CiAgICB9OwogICAgdGhpcy5nZXRVc2VXb3JrZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdXNlV29ya2VyOwogICAgfTsKICAgIHRoaXMub25SZWxvYWRUb2tlbml6ZXIgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgdmFyIHJvd3MgPSBlLmRhdGE7CiAgICAgICAgdGhpcy5iZ1Rva2VuaXplci5zdGFydChyb3dzLmZpcnN0KTsKICAgICAgICB0aGlzLl9lbWl0KCJ0b2tlbml6ZXJVcGRhdGUiLCBlKTsKICAgIH07CgogICAgdGhpcy4kbW9kZXMgPSB7fTsKICAgIHRoaXMuJG1vZGUgPSBudWxsOwogICAgdGhpcy4kbW9kZUlkID0gbnVsbDsKICAgIHRoaXMuc2V0TW9kZSA9IGZ1bmN0aW9uKG1vZGUpIHsKICAgICAgICBpZiAobW9kZSAmJiB0eXBlb2YgbW9kZSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgaWYgKG1vZGUuZ2V0VG9rZW5pemVyKQogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJG9uQ2hhbmdlTW9kZShtb2RlKTsKICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSBtb2RlOwogICAgICAgICAgICB2YXIgcGF0aCA9IG9wdGlvbnMucGF0aDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwYXRoID0gbW9kZSB8fCAiYWNlL21vZGUvdGV4dCI7CiAgICAgICAgfQogICAgICAgIGlmICghdGhpcy4kbW9kZXNbImFjZS9tb2RlL3RleHQiXSkKICAgICAgICAgICAgdGhpcy4kbW9kZXNbImFjZS9tb2RlL3RleHQiXSA9IG5ldyBUZXh0TW9kZSgpOwoKICAgICAgICBpZiAodGhpcy4kbW9kZXNbcGF0aF0gJiYgIW9wdGlvbnMpCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRvbkNoYW5nZU1vZGUodGhpcy4kbW9kZXNbcGF0aF0pOwogICAgICAgIHRoaXMuJG1vZGVJZCA9IHBhdGg7CiAgICAgICAgY29uZmlnLmxvYWRNb2R1bGUoWyJtb2RlIiwgcGF0aF0sIGZ1bmN0aW9uKG0pIHsKICAgICAgICAgICAgaWYgKHRoaXMuJG1vZGVJZCAhPT0gcGF0aCkKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgaWYgKHRoaXMuJG1vZGVzW3BhdGhdICYmICFvcHRpb25zKQogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJG9uQ2hhbmdlTW9kZSh0aGlzLiRtb2Rlc1twYXRoXSk7CiAgICAgICAgICAgIGlmIChtICYmIG0uTW9kZSkgewogICAgICAgICAgICAgICAgbSA9IG5ldyBtLk1vZGUob3B0aW9ucyk7CiAgICAgICAgICAgICAgICBpZiAoIW9wdGlvbnMpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRtb2Rlc1twYXRoXSA9IG07CiAgICAgICAgICAgICAgICAgICAgbS4kaWQgPSBwYXRoOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy4kb25DaGFuZ2VNb2RlKG0pCiAgICAgICAgICAgIH0KICAgICAgICB9LmJpbmQodGhpcykpOwogICAgICAgIGlmICghdGhpcy4kbW9kZSkKICAgICAgICAgICAgdGhpcy4kb25DaGFuZ2VNb2RlKHRoaXMuJG1vZGVzWyJhY2UvbW9kZS90ZXh0Il0sIHRydWUpOwogICAgfTsKCiAgICB0aGlzLiRvbkNoYW5nZU1vZGUgPSBmdW5jdGlvbihtb2RlLCAkaXNQbGFjZWhvbGRlcikgewogICAgICAgIGlmICh0aGlzLiRtb2RlID09PSBtb2RlKSByZXR1cm47CiAgICAgICAgdGhpcy4kbW9kZSA9IG1vZGU7CgogICAgICAgIHRoaXMuJHN0b3BXb3JrZXIoKTsKCiAgICAgICAgaWYgKHRoaXMuJHVzZVdvcmtlcikKICAgICAgICAgICAgdGhpcy4kc3RhcnRXb3JrZXIoKTsKCiAgICAgICAgdmFyIHRva2VuaXplciA9IG1vZGUuZ2V0VG9rZW5pemVyKCk7CgogICAgICAgIGlmKHRva2VuaXplci5hZGRFdmVudExpc3RlbmVyICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgdmFyIG9uUmVsb2FkVG9rZW5pemVyID0gdGhpcy5vblJlbG9hZFRva2VuaXplci5iaW5kKHRoaXMpOwogICAgICAgICAgICB0b2tlbml6ZXIuYWRkRXZlbnRMaXN0ZW5lcigidXBkYXRlIiwgb25SZWxvYWRUb2tlbml6ZXIpOwogICAgICAgIH0KCiAgICAgICAgaWYgKCF0aGlzLmJnVG9rZW5pemVyKSB7CiAgICAgICAgICAgIHRoaXMuYmdUb2tlbml6ZXIgPSBuZXcgQmFja2dyb3VuZFRva2VuaXplcih0b2tlbml6ZXIpOwogICAgICAgICAgICB2YXIgX3NlbGYgPSB0aGlzOwogICAgICAgICAgICB0aGlzLmJnVG9rZW5pemVyLmFkZEV2ZW50TGlzdGVuZXIoInVwZGF0ZSIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgIF9zZWxmLl9lbWl0KCJ0b2tlbml6ZXJVcGRhdGUiLCBlKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5iZ1Rva2VuaXplci5zZXRUb2tlbml6ZXIodG9rZW5pemVyKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuYmdUb2tlbml6ZXIuc2V0RG9jdW1lbnQodGhpcy5nZXREb2N1bWVudCgpKTsKCiAgICAgICAgdGhpcy50b2tlblJlID0gbW9kZS50b2tlblJlOwogICAgICAgIHRoaXMubm9uVG9rZW5SZSA9IG1vZGUubm9uVG9rZW5SZTsKCgogICAgICAgIGlmICghJGlzUGxhY2Vob2xkZXIpIHsKICAgICAgICAgICAgdGhpcy4kbW9kZUlkID0gbW9kZS4kaWQ7CiAgICAgICAgICAgIHRoaXMuJHNldEZvbGRpbmcobW9kZS5mb2xkaW5nUnVsZXMpOwogICAgICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VNb2RlIik7CiAgICAgICAgICAgIHRoaXMuYmdUb2tlbml6ZXIuc3RhcnQoMCk7CiAgICAgICAgfQogICAgfTsKCgogICAgdGhpcy4kc3RvcFdvcmtlciA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh0aGlzLiR3b3JrZXIpCiAgICAgICAgICAgIHRoaXMuJHdvcmtlci50ZXJtaW5hdGUoKTsKCiAgICAgICAgdGhpcy4kd29ya2VyID0gbnVsbDsKICAgIH07CgoKICAgIHRoaXMuJHN0YXJ0V29ya2VyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKHR5cGVvZiBXb3JrZXIgIT09ICJ1bmRlZmluZWQiICYmICFyZXF1aXJlLm5vV29ya2VyKSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICB0aGlzLiR3b3JrZXIgPSB0aGlzLiRtb2RlLmNyZWF0ZVdvcmtlcih0aGlzKTsKICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkNvdWxkIG5vdCBsb2FkIHdvcmtlciIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgICAgICB0aGlzLiR3b3JrZXIgPSBudWxsOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICAgICAgdGhpcy4kd29ya2VyID0gbnVsbDsKICAgIH07CiAgICB0aGlzLmdldE1vZGUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbW9kZTsKICAgIH07CgogICAgdGhpcy4kc2Nyb2xsVG9wID0gMDsKICAgIHRoaXMuc2V0U2Nyb2xsVG9wID0gZnVuY3Rpb24oc2Nyb2xsVG9wKSB7CiAgICAgICAgc2Nyb2xsVG9wID0gTWF0aC5yb3VuZChNYXRoLm1heCgwLCBzY3JvbGxUb3ApKTsKICAgICAgICBpZiAodGhpcy4kc2Nyb2xsVG9wID09PSBzY3JvbGxUb3ApCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdGhpcy4kc2Nyb2xsVG9wID0gc2Nyb2xsVG9wOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZVNjcm9sbFRvcCIsIHNjcm9sbFRvcCk7CiAgICB9OwogICAgdGhpcy5nZXRTY3JvbGxUb3AgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc2Nyb2xsVG9wOwogICAgfTsKCiAgICB0aGlzLiRzY3JvbGxMZWZ0ID0gMDsKICAgIHRoaXMuc2V0U2Nyb2xsTGVmdCA9IGZ1bmN0aW9uKHNjcm9sbExlZnQpIHsKICAgICAgICBzY3JvbGxMZWZ0ID0gTWF0aC5yb3VuZChNYXRoLm1heCgwLCBzY3JvbGxMZWZ0KSk7CiAgICAgICAgaWYgKHRoaXMuJHNjcm9sbExlZnQgPT09IHNjcm9sbExlZnQpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdGhpcy4kc2Nyb2xsTGVmdCA9IHNjcm9sbExlZnQ7CiAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlU2Nyb2xsTGVmdCIsIHNjcm9sbExlZnQpOwogICAgfTsKICAgIHRoaXMuZ2V0U2Nyb2xsTGVmdCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzY3JvbGxMZWZ0OwogICAgfTsKICAgIHRoaXMuZ2V0U2NyZWVuV2lkdGggPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRjb21wdXRlV2lkdGgoKTsKICAgICAgICByZXR1cm4gdGhpcy5zY3JlZW5XaWR0aDsKICAgIH07CgogICAgdGhpcy4kY29tcHV0ZVdpZHRoID0gZnVuY3Rpb24oZm9yY2UpIHsKICAgICAgICBpZiAodGhpcy4kbW9kaWZpZWQgfHwgZm9yY2UpIHsKICAgICAgICAgICAgdGhpcy4kbW9kaWZpZWQgPSBmYWxzZTsKCiAgICAgICAgICAgIGlmICh0aGlzLiR1c2VXcmFwTW9kZSkKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNjcmVlbldpZHRoID0gdGhpcy4kd3JhcExpbWl0OwoKICAgICAgICAgICAgdmFyIGxpbmVzID0gdGhpcy5kb2MuZ2V0QWxsTGluZXMoKTsKICAgICAgICAgICAgdmFyIGNhY2hlID0gdGhpcy4kcm93TGVuZ3RoQ2FjaGU7CiAgICAgICAgICAgIHZhciBsb25nZXN0U2NyZWVuTGluZSA9IDA7CiAgICAgICAgICAgIHZhciBmb2xkSW5kZXggPSAwOwogICAgICAgICAgICB2YXIgZm9sZExpbmUgPSB0aGlzLiRmb2xkRGF0YVtmb2xkSW5kZXhdOwogICAgICAgICAgICB2YXIgZm9sZFN0YXJ0ID0gZm9sZExpbmUgPyBmb2xkTGluZS5zdGFydC5yb3cgOiBJbmZpbml0eTsKICAgICAgICAgICAgdmFyIGxlbiA9IGxpbmVzLmxlbmd0aDsKCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgICAgIGlmIChpID4gZm9sZFN0YXJ0KSB7CiAgICAgICAgICAgICAgICAgICAgaSA9IGZvbGRMaW5lLmVuZC5yb3cgKyAxOwogICAgICAgICAgICAgICAgICAgIGlmIChpID49IGxlbikKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgZm9sZExpbmUgPSB0aGlzLiRmb2xkRGF0YVtmb2xkSW5kZXgrK107CiAgICAgICAgICAgICAgICAgICAgZm9sZFN0YXJ0ID0gZm9sZExpbmUgPyBmb2xkTGluZS5zdGFydC5yb3cgOiBJbmZpbml0eTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoY2FjaGVbaV0gPT0gbnVsbCkKICAgICAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IHRoaXMuJGdldFN0cmluZ1NjcmVlbldpZHRoKGxpbmVzW2ldKVswXTsKCiAgICAgICAgICAgICAgICBpZiAoY2FjaGVbaV0gPiBsb25nZXN0U2NyZWVuTGluZSkKICAgICAgICAgICAgICAgICAgICBsb25nZXN0U2NyZWVuTGluZSA9IGNhY2hlW2ldOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuc2NyZWVuV2lkdGggPSBsb25nZXN0U2NyZWVuTGluZTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5nZXRMaW5lID0gZnVuY3Rpb24ocm93KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG9jLmdldExpbmUocm93KTsKICAgIH07CiAgICB0aGlzLmdldExpbmVzID0gZnVuY3Rpb24oZmlyc3RSb3csIGxhc3RSb3cpIHsKICAgICAgICByZXR1cm4gdGhpcy5kb2MuZ2V0TGluZXMoZmlyc3RSb3csIGxhc3RSb3cpOwogICAgfTsKICAgIHRoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG9jLmdldExlbmd0aCgpOwogICAgfTsKICAgIHRoaXMuZ2V0VGV4dFJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHsKICAgICAgICByZXR1cm4gdGhpcy5kb2MuZ2V0VGV4dFJhbmdlKHJhbmdlIHx8IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCkpOwogICAgfTsKICAgIHRoaXMuaW5zZXJ0ID0gZnVuY3Rpb24ocG9zaXRpb24sIHRleHQpIHsKICAgICAgICByZXR1cm4gdGhpcy5kb2MuaW5zZXJ0KHBvc2l0aW9uLCB0ZXh0KTsKICAgIH07CiAgICB0aGlzLnJlbW92ZSA9IGZ1bmN0aW9uKHJhbmdlKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG9jLnJlbW92ZShyYW5nZSk7CiAgICB9OwogICAgdGhpcy51bmRvQ2hhbmdlcyA9IGZ1bmN0aW9uKGRlbHRhcywgZG9udFNlbGVjdCkgewogICAgICAgIGlmICghZGVsdGFzLmxlbmd0aCkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB0aGlzLiRmcm9tVW5kbyA9IHRydWU7CiAgICAgICAgdmFyIGxhc3RVbmRvUmFuZ2UgPSBudWxsOwogICAgICAgIGZvciAodmFyIGkgPSBkZWx0YXMubGVuZ3RoIC0gMTsgaSAhPSAtMTsgaS0tKSB7CiAgICAgICAgICAgIHZhciBkZWx0YSA9IGRlbHRhc1tpXTsKICAgICAgICAgICAgaWYgKGRlbHRhLmdyb3VwID09ICJkb2MiKSB7CiAgICAgICAgICAgICAgICB0aGlzLmRvYy5yZXZlcnREZWx0YXMoZGVsdGEuZGVsdGFzKTsKICAgICAgICAgICAgICAgIGxhc3RVbmRvUmFuZ2UgPQogICAgICAgICAgICAgICAgICAgIHRoaXMuJGdldFVuZG9TZWxlY3Rpb24oZGVsdGEuZGVsdGFzLCB0cnVlLCBsYXN0VW5kb1JhbmdlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGRlbHRhLmRlbHRhcy5mb3JFYWNoKGZ1bmN0aW9uKGZvbGREZWx0YSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRm9sZHMoZm9sZERlbHRhLmZvbGRzKTsKICAgICAgICAgICAgICAgIH0sIHRoaXMpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuJGZyb21VbmRvID0gZmFsc2U7CiAgICAgICAgbGFzdFVuZG9SYW5nZSAmJgogICAgICAgICAgICB0aGlzLiR1bmRvU2VsZWN0ICYmCiAgICAgICAgICAgICFkb250U2VsZWN0ICYmCiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNldFNlbGVjdGlvblJhbmdlKGxhc3RVbmRvUmFuZ2UpOwogICAgICAgIHJldHVybiBsYXN0VW5kb1JhbmdlOwogICAgfTsKICAgIHRoaXMucmVkb0NoYW5nZXMgPSBmdW5jdGlvbihkZWx0YXMsIGRvbnRTZWxlY3QpIHsKICAgICAgICBpZiAoIWRlbHRhcy5sZW5ndGgpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdGhpcy4kZnJvbVVuZG8gPSB0cnVlOwogICAgICAgIHZhciBsYXN0VW5kb1JhbmdlID0gbnVsbDsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRlbHRhcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIgZGVsdGEgPSBkZWx0YXNbaV07CiAgICAgICAgICAgIGlmIChkZWx0YS5ncm91cCA9PSAiZG9jIikgewogICAgICAgICAgICAgICAgdGhpcy5kb2MuYXBwbHlEZWx0YXMoZGVsdGEuZGVsdGFzKTsKICAgICAgICAgICAgICAgIGxhc3RVbmRvUmFuZ2UgPQogICAgICAgICAgICAgICAgICAgIHRoaXMuJGdldFVuZG9TZWxlY3Rpb24oZGVsdGEuZGVsdGFzLCBmYWxzZSwgbGFzdFVuZG9SYW5nZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy4kZnJvbVVuZG8gPSBmYWxzZTsKICAgICAgICBsYXN0VW5kb1JhbmdlICYmCiAgICAgICAgICAgIHRoaXMuJHVuZG9TZWxlY3QgJiYKICAgICAgICAgICAgIWRvbnRTZWxlY3QgJiYKICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uc2V0U2VsZWN0aW9uUmFuZ2UobGFzdFVuZG9SYW5nZSk7CiAgICAgICAgcmV0dXJuIGxhc3RVbmRvUmFuZ2U7CiAgICB9OwogICAgdGhpcy5zZXRVbmRvU2VsZWN0ID0gZnVuY3Rpb24oZW5hYmxlKSB7CiAgICAgICAgdGhpcy4kdW5kb1NlbGVjdCA9IGVuYWJsZTsKICAgIH07CgogICAgdGhpcy4kZ2V0VW5kb1NlbGVjdGlvbiA9IGZ1bmN0aW9uKGRlbHRhcywgaXNVbmRvLCBsYXN0VW5kb1JhbmdlKSB7CiAgICAgICAgZnVuY3Rpb24gaXNJbnNlcnQoZGVsdGEpIHsKICAgICAgICAgICAgdmFyIGluc2VydCA9CiAgICAgICAgICAgICAgICBkZWx0YS5hY3Rpb24gPT0gImluc2VydFRleHQiIHx8IGRlbHRhLmFjdGlvbiA9PSAiaW5zZXJ0TGluZXMiOwogICAgICAgICAgICByZXR1cm4gaXNVbmRvID8gIWluc2VydCA6IGluc2VydDsKICAgICAgICB9CgogICAgICAgIHZhciBkZWx0YSA9IGRlbHRhc1swXTsKICAgICAgICB2YXIgcmFuZ2UsIHBvaW50OwogICAgICAgIHZhciBsYXN0RGVsdGFJc0luc2VydCA9IGZhbHNlOwogICAgICAgIGlmIChpc0luc2VydChkZWx0YSkpIHsKICAgICAgICAgICAgcmFuZ2UgPSBkZWx0YS5yYW5nZS5jbG9uZSgpOwogICAgICAgICAgICBsYXN0RGVsdGFJc0luc2VydCA9IHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmFuZ2UgPSBSYW5nZS5mcm9tUG9pbnRzKGRlbHRhLnJhbmdlLnN0YXJ0LCBkZWx0YS5yYW5nZS5zdGFydCk7CiAgICAgICAgICAgIGxhc3REZWx0YUlzSW5zZXJ0ID0gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGRlbHRhcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBkZWx0YSA9IGRlbHRhc1tpXTsKICAgICAgICAgICAgaWYgKGlzSW5zZXJ0KGRlbHRhKSkgewogICAgICAgICAgICAgICAgcG9pbnQgPSBkZWx0YS5yYW5nZS5zdGFydDsKICAgICAgICAgICAgICAgIGlmIChyYW5nZS5jb21wYXJlKHBvaW50LnJvdywgcG9pbnQuY29sdW1uKSA9PSAtMSkgewogICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KGRlbHRhLnJhbmdlLnN0YXJ0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHBvaW50ID0gZGVsdGEucmFuZ2UuZW5kOwogICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbXBhcmUocG9pbnQucm93LCBwb2ludC5jb2x1bW4pID09IDEpIHsKICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmQoZGVsdGEucmFuZ2UuZW5kKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGxhc3REZWx0YUlzSW5zZXJ0ID0gdHJ1ZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHBvaW50ID0gZGVsdGEucmFuZ2Uuc3RhcnQ7CiAgICAgICAgICAgICAgICBpZiAocmFuZ2UuY29tcGFyZShwb2ludC5yb3csIHBvaW50LmNvbHVtbikgPT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICByYW5nZSA9CiAgICAgICAgICAgICAgICAgICAgICAgIFJhbmdlLmZyb21Qb2ludHMoZGVsdGEucmFuZ2Uuc3RhcnQsIGRlbHRhLnJhbmdlLnN0YXJ0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGxhc3REZWx0YUlzSW5zZXJ0ID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGxhc3RVbmRvUmFuZ2UgIT0gbnVsbCkgewogICAgICAgICAgICB2YXIgY21wID0gbGFzdFVuZG9SYW5nZS5jb21wYXJlUmFuZ2UocmFuZ2UpOwogICAgICAgICAgICBpZiAoY21wID09IDEpIHsKICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KGxhc3RVbmRvUmFuZ2Uuc3RhcnQpOwogICAgICAgICAgICB9IGVsc2UgaWYgKGNtcCA9PSAtMSkgewogICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kKGxhc3RVbmRvUmFuZ2UuZW5kKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJhbmdlOwogICAgfTsKICAgIHRoaXMucmVwbGFjZSA9IGZ1bmN0aW9uKHJhbmdlLCB0ZXh0KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG9jLnJlcGxhY2UocmFuZ2UsIHRleHQpOwogICAgfTsKICAgIHRoaXMubW92ZVRleHQgPSBmdW5jdGlvbihmcm9tUmFuZ2UsIHRvUG9zaXRpb24pIHsKICAgICAgICB2YXIgdGV4dCA9IHRoaXMuZ2V0VGV4dFJhbmdlKGZyb21SYW5nZSk7CiAgICAgICAgdGhpcy5yZW1vdmUoZnJvbVJhbmdlKTsKCiAgICAgICAgdmFyIHRvUm93ID0gdG9Qb3NpdGlvbi5yb3c7CiAgICAgICAgdmFyIHRvQ29sdW1uID0gdG9Qb3NpdGlvbi5jb2x1bW47CiAgICAgICAgaWYgKCFmcm9tUmFuZ2UuaXNNdWx0aUxpbmUoKSAmJiBmcm9tUmFuZ2Uuc3RhcnQucm93ID09IHRvUm93ICYmCiAgICAgICAgICAgIGZyb21SYW5nZS5lbmQuY29sdW1uIDwgdG9Db2x1bW4pCiAgICAgICAgICAgIHRvQ29sdW1uIC09IHRleHQubGVuZ3RoOwoKICAgICAgICBpZiAoZnJvbVJhbmdlLmlzTXVsdGlMaW5lKCkgJiYgZnJvbVJhbmdlLmVuZC5yb3cgPCB0b1JvdykgewogICAgICAgICAgICB2YXIgbGluZXMgPSB0aGlzLmRvYy4kc3BsaXQodGV4dCk7CiAgICAgICAgICAgIHRvUm93IC09IGxpbmVzLmxlbmd0aCAtIDE7CiAgICAgICAgfQoKICAgICAgICB2YXIgZW5kUm93ID0gdG9Sb3cgKyBmcm9tUmFuZ2UuZW5kLnJvdyAtIGZyb21SYW5nZS5zdGFydC5yb3c7CiAgICAgICAgdmFyIGVuZENvbHVtbiA9IGZyb21SYW5nZS5pc011bHRpTGluZSgpID8KICAgICAgICAgICAgICAgICAgICAgICAgZnJvbVJhbmdlLmVuZC5jb2x1bW4gOgogICAgICAgICAgICAgICAgICAgICAgICB0b0NvbHVtbiArIGZyb21SYW5nZS5lbmQuY29sdW1uIC0gZnJvbVJhbmdlLnN0YXJ0LmNvbHVtbjsKCiAgICAgICAgdmFyIHRvUmFuZ2UgPSBuZXcgUmFuZ2UodG9Sb3csIHRvQ29sdW1uLCBlbmRSb3csIGVuZENvbHVtbik7CgogICAgICAgIHRoaXMuaW5zZXJ0KHRvUmFuZ2Uuc3RhcnQsIHRleHQpOwoKICAgICAgICByZXR1cm4gdG9SYW5nZTsKICAgIH07CiAgICB0aGlzLmluZGVudFJvd3MgPSBmdW5jdGlvbihzdGFydFJvdywgZW5kUm93LCBpbmRlbnRTdHJpbmcpIHsKICAgICAgICBpbmRlbnRTdHJpbmcgPSBpbmRlbnRTdHJpbmcucmVwbGFjZSgvXHQvZywgdGhpcy5nZXRUYWJTdHJpbmcoKSk7CiAgICAgICAgZm9yICh2YXIgcm93PXN0YXJ0Um93OyByb3c8PWVuZFJvdzsgcm93KyspCiAgICAgICAgICAgIHRoaXMuaW5zZXJ0KHtyb3c6IHJvdywgY29sdW1uOjB9LCBpbmRlbnRTdHJpbmcpOwogICAgfTsKICAgIHRoaXMub3V0ZGVudFJvd3MgPSBmdW5jdGlvbiAocmFuZ2UpIHsKICAgICAgICB2YXIgcm93UmFuZ2UgPSByYW5nZS5jb2xsYXBzZVJvd3MoKTsKICAgICAgICB2YXIgZGVsZXRlUmFuZ2UgPSBuZXcgUmFuZ2UoMCwgMCwgMCwgMCk7CiAgICAgICAgdmFyIHNpemUgPSB0aGlzLmdldFRhYlNpemUoKTsKCiAgICAgICAgZm9yICh2YXIgaSA9IHJvd1JhbmdlLnN0YXJ0LnJvdzsgaSA8PSByb3dSYW5nZS5lbmQucm93OyArK2kpIHsKICAgICAgICAgICAgdmFyIGxpbmUgPSB0aGlzLmdldExpbmUoaSk7CgogICAgICAgICAgICBkZWxldGVSYW5nZS5zdGFydC5yb3cgPSBpOwogICAgICAgICAgICBkZWxldGVSYW5nZS5lbmQucm93ID0gaTsKICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBzaXplOyArK2opCiAgICAgICAgICAgICAgICBpZiAobGluZS5jaGFyQXQoaikgIT0gJyAnKQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBpZiAoaiA8IHNpemUgJiYgbGluZS5jaGFyQXQoaikgPT0gJ1x0JykgewogICAgICAgICAgICAgICAgZGVsZXRlUmFuZ2Uuc3RhcnQuY29sdW1uID0gajsKICAgICAgICAgICAgICAgIGRlbGV0ZVJhbmdlLmVuZC5jb2x1bW4gPSBqICsgMTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGRlbGV0ZVJhbmdlLnN0YXJ0LmNvbHVtbiA9IDA7CiAgICAgICAgICAgICAgICBkZWxldGVSYW5nZS5lbmQuY29sdW1uID0gajsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLnJlbW92ZShkZWxldGVSYW5nZSk7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMubW92ZUxpbmVzVXAgPSBmdW5jdGlvbihmaXJzdFJvdywgbGFzdFJvdykgewogICAgICAgIGlmIChmaXJzdFJvdyA8PSAwKSByZXR1cm4gMDsKCiAgICAgICAgdmFyIHJlbW92ZWQgPSB0aGlzLmRvYy5yZW1vdmVMaW5lcyhmaXJzdFJvdywgbGFzdFJvdyk7CiAgICAgICAgdGhpcy5kb2MuaW5zZXJ0TGluZXMoZmlyc3RSb3cgLSAxLCByZW1vdmVkKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9OwogICAgdGhpcy5tb3ZlTGluZXNEb3duID0gZnVuY3Rpb24oZmlyc3RSb3csIGxhc3RSb3cpIHsKICAgICAgICBpZiAobGFzdFJvdyA+PSB0aGlzLmRvYy5nZXRMZW5ndGgoKS0xKSByZXR1cm4gMDsKCiAgICAgICAgdmFyIHJlbW92ZWQgPSB0aGlzLmRvYy5yZW1vdmVMaW5lcyhmaXJzdFJvdywgbGFzdFJvdyk7CiAgICAgICAgdGhpcy5kb2MuaW5zZXJ0TGluZXMoZmlyc3RSb3crMSwgcmVtb3ZlZCk7CiAgICAgICAgcmV0dXJuIDE7CiAgICB9OwogICAgdGhpcy5kdXBsaWNhdGVMaW5lcyA9IGZ1bmN0aW9uKGZpcnN0Um93LCBsYXN0Um93KSB7CiAgICAgICAgdmFyIGZpcnN0Um93ID0gdGhpcy4kY2xpcFJvd1RvRG9jdW1lbnQoZmlyc3RSb3cpOwogICAgICAgIHZhciBsYXN0Um93ID0gdGhpcy4kY2xpcFJvd1RvRG9jdW1lbnQobGFzdFJvdyk7CgogICAgICAgIHZhciBsaW5lcyA9IHRoaXMuZ2V0TGluZXMoZmlyc3RSb3csIGxhc3RSb3cpOwogICAgICAgIHRoaXMuZG9jLmluc2VydExpbmVzKGZpcnN0Um93LCBsaW5lcyk7CgogICAgICAgIHZhciBhZGRlZFJvd3MgPSBsYXN0Um93IC0gZmlyc3RSb3cgKyAxOwogICAgICAgIHJldHVybiBhZGRlZFJvd3M7CiAgICB9OwoKCiAgICB0aGlzLiRjbGlwUm93VG9Eb2N1bWVudCA9IGZ1bmN0aW9uKHJvdykgewogICAgICAgIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1pbihyb3csIHRoaXMuZG9jLmdldExlbmd0aCgpLTEpKTsKICAgIH07CgogICAgdGhpcy4kY2xpcENvbHVtblRvUm93ID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICBpZiAoY29sdW1uIDwgMCkKICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgcmV0dXJuIE1hdGgubWluKHRoaXMuZG9jLmdldExpbmUocm93KS5sZW5ndGgsIGNvbHVtbik7CiAgICB9OwoKCiAgICB0aGlzLiRjbGlwUG9zaXRpb25Ub0RvY3VtZW50ID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICBjb2x1bW4gPSBNYXRoLm1heCgwLCBjb2x1bW4pOwoKICAgICAgICBpZiAocm93IDwgMCkgewogICAgICAgICAgICByb3cgPSAwOwogICAgICAgICAgICBjb2x1bW4gPSAwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBsZW4gPSB0aGlzLmRvYy5nZXRMZW5ndGgoKTsKICAgICAgICAgICAgaWYgKHJvdyA+PSBsZW4pIHsKICAgICAgICAgICAgICAgIHJvdyA9IGxlbiAtIDE7CiAgICAgICAgICAgICAgICBjb2x1bW4gPSB0aGlzLmRvYy5nZXRMaW5lKGxlbi0xKS5sZW5ndGg7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb2x1bW4gPSBNYXRoLm1pbih0aGlzLmRvYy5nZXRMaW5lKHJvdykubGVuZ3RoLCBjb2x1bW4pOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gewogICAgICAgICAgICByb3c6IHJvdywKICAgICAgICAgICAgY29sdW1uOiBjb2x1bW4KICAgICAgICB9OwogICAgfTsKCiAgICB0aGlzLiRjbGlwUmFuZ2VUb0RvY3VtZW50ID0gZnVuY3Rpb24ocmFuZ2UpIHsKICAgICAgICBpZiAocmFuZ2Uuc3RhcnQucm93IDwgMCkgewogICAgICAgICAgICByYW5nZS5zdGFydC5yb3cgPSAwOwogICAgICAgICAgICByYW5nZS5zdGFydC5jb2x1bW4gPSAwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJhbmdlLnN0YXJ0LmNvbHVtbiA9IHRoaXMuJGNsaXBDb2x1bW5Ub1JvdygKICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0LnJvdywKICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0LmNvbHVtbgogICAgICAgICAgICApOwogICAgICAgIH0KCiAgICAgICAgdmFyIGxlbiA9IHRoaXMuZG9jLmdldExlbmd0aCgpIC0gMTsKICAgICAgICBpZiAocmFuZ2UuZW5kLnJvdyA+IGxlbikgewogICAgICAgICAgICByYW5nZS5lbmQucm93ID0gbGVuOwogICAgICAgICAgICByYW5nZS5lbmQuY29sdW1uID0gdGhpcy5kb2MuZ2V0TGluZShsZW4pLmxlbmd0aDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByYW5nZS5lbmQuY29sdW1uID0gdGhpcy4kY2xpcENvbHVtblRvUm93KAogICAgICAgICAgICAgICAgcmFuZ2UuZW5kLnJvdywKICAgICAgICAgICAgICAgIHJhbmdlLmVuZC5jb2x1bW4KICAgICAgICAgICAgKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJhbmdlOwogICAgfTsKICAgIHRoaXMuJHdyYXBMaW1pdCA9IDgwOwogICAgdGhpcy4kdXNlV3JhcE1vZGUgPSBmYWxzZTsKICAgIHRoaXMuJHdyYXBMaW1pdFJhbmdlID0gewogICAgICAgIG1pbiA6IG51bGwsCiAgICAgICAgbWF4IDogbnVsbAogICAgfTsKICAgIHRoaXMuc2V0VXNlV3JhcE1vZGUgPSBmdW5jdGlvbih1c2VXcmFwTW9kZSkgewogICAgICAgIGlmICh1c2VXcmFwTW9kZSAhPSB0aGlzLiR1c2VXcmFwTW9kZSkgewogICAgICAgICAgICB0aGlzLiR1c2VXcmFwTW9kZSA9IHVzZVdyYXBNb2RlOwogICAgICAgICAgICB0aGlzLiRtb2RpZmllZCA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuJHJlc2V0Um93Q2FjaGUoMCk7CiAgICAgICAgICAgIGlmICh1c2VXcmFwTW9kZSkgewogICAgICAgICAgICAgICAgdmFyIGxlbiA9IHRoaXMuZ2V0TGVuZ3RoKCk7CiAgICAgICAgICAgICAgICB0aGlzLiR3cmFwRGF0YSA9IFtdOwogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgICAgIHRoaXMuJHdyYXBEYXRhLnB1c2goW10pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy4kdXBkYXRlV3JhcERhdGEoMCwgbGVuIC0gMSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZVdyYXBNb2RlIik7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuZ2V0VXNlV3JhcE1vZGUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdXNlV3JhcE1vZGU7CiAgICB9OwogICAgdGhpcy5zZXRXcmFwTGltaXRSYW5nZSA9IGZ1bmN0aW9uKG1pbiwgbWF4KSB7CiAgICAgICAgaWYgKHRoaXMuJHdyYXBMaW1pdFJhbmdlLm1pbiAhPT0gbWluIHx8IHRoaXMuJHdyYXBMaW1pdFJhbmdlLm1heCAhPT0gbWF4KSB7CiAgICAgICAgICAgIHRoaXMuJHdyYXBMaW1pdFJhbmdlLm1pbiA9IG1pbjsKICAgICAgICAgICAgdGhpcy4kd3JhcExpbWl0UmFuZ2UubWF4ID0gbWF4OwogICAgICAgICAgICB0aGlzLiRtb2RpZmllZCA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZVdyYXBNb2RlIik7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuYWRqdXN0V3JhcExpbWl0ID0gZnVuY3Rpb24oZGVzaXJlZExpbWl0KSB7CiAgICAgICAgdmFyIHdyYXBMaW1pdCA9IHRoaXMuJGNvbnN0cmFpbldyYXBMaW1pdChkZXNpcmVkTGltaXQpOwogICAgICAgIGlmICh3cmFwTGltaXQgIT0gdGhpcy4kd3JhcExpbWl0ICYmIHdyYXBMaW1pdCA+IDApIHsKICAgICAgICAgICAgdGhpcy4kd3JhcExpbWl0ID0gd3JhcExpbWl0OwogICAgICAgICAgICB0aGlzLiRtb2RpZmllZCA9IHRydWU7CiAgICAgICAgICAgIGlmICh0aGlzLiR1c2VXcmFwTW9kZSkgewogICAgICAgICAgICAgICAgdGhpcy4kdXBkYXRlV3JhcERhdGEoMCwgdGhpcy5nZXRMZW5ndGgoKSAtIDEpOwogICAgICAgICAgICAgICAgdGhpcy4kcmVzZXRSb3dDYWNoZSgwKTsKICAgICAgICAgICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZVdyYXBMaW1pdCIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9OwoKICAgIHRoaXMuJGNvbnN0cmFpbldyYXBMaW1pdCA9IGZ1bmN0aW9uKHdyYXBMaW1pdCkgewogICAgICAgIHZhciBtaW4gPSB0aGlzLiR3cmFwTGltaXRSYW5nZS5taW47CiAgICAgICAgaWYgKG1pbikKICAgICAgICAgICAgd3JhcExpbWl0ID0gTWF0aC5tYXgobWluLCB3cmFwTGltaXQpOwoKICAgICAgICB2YXIgbWF4ID0gdGhpcy4kd3JhcExpbWl0UmFuZ2UubWF4OwogICAgICAgIGlmIChtYXgpCiAgICAgICAgICAgIHdyYXBMaW1pdCA9IE1hdGgubWluKG1heCwgd3JhcExpbWl0KTsKICAgICAgICByZXR1cm4gTWF0aC5tYXgoMSwgd3JhcExpbWl0KTsKICAgIH07CiAgICB0aGlzLmdldFdyYXBMaW1pdCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiR3cmFwTGltaXQ7CiAgICB9OwogICAgdGhpcy5nZXRXcmFwTGltaXRSYW5nZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIG1pbiA6IHRoaXMuJHdyYXBMaW1pdFJhbmdlLm1pbiwKICAgICAgICAgICAgbWF4IDogdGhpcy4kd3JhcExpbWl0UmFuZ2UubWF4CiAgICAgICAgfTsKICAgIH07CgogICAgdGhpcy4kdXBkYXRlSW50ZXJuYWxEYXRhT25DaGFuZ2UgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgdmFyIHVzZVdyYXBNb2RlID0gdGhpcy4kdXNlV3JhcE1vZGU7CiAgICAgICAgdmFyIGxlbjsKICAgICAgICB2YXIgYWN0aW9uID0gZS5kYXRhLmFjdGlvbjsKICAgICAgICB2YXIgZmlyc3RSb3cgPSBlLmRhdGEucmFuZ2Uuc3RhcnQucm93OwogICAgICAgIHZhciBsYXN0Um93ID0gZS5kYXRhLnJhbmdlLmVuZC5yb3c7CiAgICAgICAgdmFyIHN0YXJ0ID0gZS5kYXRhLnJhbmdlLnN0YXJ0OwogICAgICAgIHZhciBlbmQgPSBlLmRhdGEucmFuZ2UuZW5kOwogICAgICAgIHZhciByZW1vdmVkRm9sZHMgPSBudWxsOwoKICAgICAgICBpZiAoYWN0aW9uLmluZGV4T2YoIkxpbmVzIikgIT0gLTEpIHsKICAgICAgICAgICAgaWYgKGFjdGlvbiA9PSAiaW5zZXJ0TGluZXMiKSB7CiAgICAgICAgICAgICAgICBsYXN0Um93ID0gZmlyc3RSb3cgKyAoZS5kYXRhLmxpbmVzLmxlbmd0aCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBsYXN0Um93ID0gZmlyc3RSb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgbGVuID0gZS5kYXRhLmxpbmVzID8gZS5kYXRhLmxpbmVzLmxlbmd0aCA6IGxhc3RSb3cgLSBmaXJzdFJvdzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsZW4gPSBsYXN0Um93IC0gZmlyc3RSb3c7CiAgICAgICAgfQoKICAgICAgICBpZiAobGVuICE9IDApIHsKICAgICAgICAgICAgaWYgKGFjdGlvbi5pbmRleE9mKCJyZW1vdmUiKSAhPSAtMSkgewogICAgICAgICAgICAgICAgdGhpc1t1c2VXcmFwTW9kZSA/ICIkd3JhcERhdGEiIDogIiRyb3dMZW5ndGhDYWNoZSJdLnNwbGljZShmaXJzdFJvdywgbGVuKTsKCiAgICAgICAgICAgICAgICB2YXIgZm9sZExpbmVzID0gdGhpcy4kZm9sZERhdGE7CiAgICAgICAgICAgICAgICByZW1vdmVkRm9sZHMgPSB0aGlzLmdldEZvbGRzSW5SYW5nZShlLmRhdGEucmFuZ2UpOwogICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVGb2xkcyhyZW1vdmVkRm9sZHMpOwoKICAgICAgICAgICAgICAgIHZhciBmb2xkTGluZSA9IHRoaXMuZ2V0Rm9sZExpbmUoZW5kLnJvdyk7CiAgICAgICAgICAgICAgICB2YXIgaWR4ID0gMDsKICAgICAgICAgICAgICAgIGlmIChmb2xkTGluZSkgewogICAgICAgICAgICAgICAgICAgIGZvbGRMaW5lLmFkZFJlbW92ZUNoYXJzKGVuZC5yb3csIGVuZC5jb2x1bW4sIHN0YXJ0LmNvbHVtbiAtIGVuZC5jb2x1bW4pOwogICAgICAgICAgICAgICAgICAgIGZvbGRMaW5lLnNoaWZ0Um93KC1sZW4pOwoKICAgICAgICAgICAgICAgICAgICB2YXIgZm9sZExpbmVCZWZvcmUgPSB0aGlzLmdldEZvbGRMaW5lKGZpcnN0Um93KTsKICAgICAgICAgICAgICAgICAgICBpZiAoZm9sZExpbmVCZWZvcmUgJiYgZm9sZExpbmVCZWZvcmUgIT09IGZvbGRMaW5lKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvbGRMaW5lQmVmb3JlLm1lcmdlKGZvbGRMaW5lKTsKICAgICAgICAgICAgICAgICAgICAgICAgZm9sZExpbmUgPSBmb2xkTGluZUJlZm9yZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgaWR4ID0gZm9sZExpbmVzLmluZGV4T2YoZm9sZExpbmUpICsgMTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBmb3IgKGlkeDsgaWR4IDwgZm9sZExpbmVzLmxlbmd0aDsgaWR4KyspIHsKICAgICAgICAgICAgICAgICAgICB2YXIgZm9sZExpbmUgPSBmb2xkTGluZXNbaWR4XTsKICAgICAgICAgICAgICAgICAgICBpZiAoZm9sZExpbmUuc3RhcnQucm93ID49IGVuZC5yb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9sZExpbmUuc2hpZnRSb3coLWxlbik7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGxhc3RSb3cgPSBmaXJzdFJvdzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciBhcmdzOwogICAgICAgICAgICAgICAgaWYgKHVzZVdyYXBNb2RlKSB7CiAgICAgICAgICAgICAgICAgICAgYXJncyA9IFtmaXJzdFJvdywgMF07CiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgYXJncy5wdXNoKFtdKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLiR3cmFwRGF0YS5zcGxpY2UuYXBwbHkodGhpcy4kd3JhcERhdGEsIGFyZ3MpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBhcmdzID0gQXJyYXkobGVuKTsKICAgICAgICAgICAgICAgICAgICBhcmdzLnVuc2hpZnQoZmlyc3RSb3csIDApOwogICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvd0xlbmd0aENhY2hlLnNwbGljZS5hcHBseSh0aGlzLiRyb3dMZW5ndGhDYWNoZSwgYXJncyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB2YXIgZm9sZExpbmVzID0gdGhpcy4kZm9sZERhdGE7CiAgICAgICAgICAgICAgICB2YXIgZm9sZExpbmUgPSB0aGlzLmdldEZvbGRMaW5lKGZpcnN0Um93KTsKICAgICAgICAgICAgICAgIHZhciBpZHggPSAwOwogICAgICAgICAgICAgICAgaWYgKGZvbGRMaW5lKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGNtcCA9IGZvbGRMaW5lLnJhbmdlLmNvbXBhcmVJbnNpZGUoc3RhcnQucm93LCBzdGFydC5jb2x1bW4pCiAgICAgICAgICAgICAgICAgICAgaWYgKGNtcCA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvbGRMaW5lID0gZm9sZExpbmUuc3BsaXQoc3RhcnQucm93LCBzdGFydC5jb2x1bW4pOwogICAgICAgICAgICAgICAgICAgICAgICBmb2xkTGluZS5zaGlmdFJvdyhsZW4pOwogICAgICAgICAgICAgICAgICAgICAgICBmb2xkTGluZS5hZGRSZW1vdmVDaGFycygKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RSb3csIDAsIGVuZC5jb2x1bW4gLSBzdGFydC5jb2x1bW4pOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZQogICAgICAgICAgICAgICAgICAgIGlmIChjbXAgPT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9sZExpbmUuYWRkUmVtb3ZlQ2hhcnMoZmlyc3RSb3csIDAsIGVuZC5jb2x1bW4gLSBzdGFydC5jb2x1bW4pOwogICAgICAgICAgICAgICAgICAgICAgICBmb2xkTGluZS5zaGlmdFJvdyhsZW4pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZHggPSBmb2xkTGluZXMuaW5kZXhPZihmb2xkTGluZSkgKyAxOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGZvciAoaWR4OyBpZHggPCBmb2xkTGluZXMubGVuZ3RoOyBpZHgrKykgewogICAgICAgICAgICAgICAgICAgIHZhciBmb2xkTGluZSA9IGZvbGRMaW5lc1tpZHhdOwogICAgICAgICAgICAgICAgICAgIGlmIChmb2xkTGluZS5zdGFydC5yb3cgPj0gZmlyc3RSb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9sZExpbmUuc2hpZnRSb3cobGVuKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsZW4gPSBNYXRoLmFicyhlLmRhdGEucmFuZ2Uuc3RhcnQuY29sdW1uIC0gZS5kYXRhLnJhbmdlLmVuZC5jb2x1bW4pOwogICAgICAgICAgICBpZiAoYWN0aW9uLmluZGV4T2YoInJlbW92ZSIpICE9IC0xKSB7CiAgICAgICAgICAgICAgICByZW1vdmVkRm9sZHMgPSB0aGlzLmdldEZvbGRzSW5SYW5nZShlLmRhdGEucmFuZ2UpOwogICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVGb2xkcyhyZW1vdmVkRm9sZHMpOwoKICAgICAgICAgICAgICAgIGxlbiA9IC1sZW47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIGZvbGRMaW5lID0gdGhpcy5nZXRGb2xkTGluZShmaXJzdFJvdyk7CiAgICAgICAgICAgIGlmIChmb2xkTGluZSkgewogICAgICAgICAgICAgICAgZm9sZExpbmUuYWRkUmVtb3ZlQ2hhcnMoZmlyc3RSb3csIHN0YXJ0LmNvbHVtbiwgbGVuKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHVzZVdyYXBNb2RlICYmIHRoaXMuJHdyYXBEYXRhLmxlbmd0aCAhPSB0aGlzLmRvYy5nZXRMZW5ndGgoKSkgewogICAgICAgICAgICBjb25zb2xlLmVycm9yKCJkb2MuZ2V0TGVuZ3RoKCkgYW5kICR3cmFwRGF0YS5sZW5ndGggaGF2ZSB0byBiZSB0aGUgc2FtZSEiKTsKICAgICAgICB9CgogICAgICAgIGlmICh1c2VXcmFwTW9kZSkKICAgICAgICAgICAgdGhpcy4kdXBkYXRlV3JhcERhdGEoZmlyc3RSb3csIGxhc3RSb3cpOwogICAgICAgIGVsc2UKICAgICAgICAgICAgdGhpcy4kdXBkYXRlUm93TGVuZ3RoQ2FjaGUoZmlyc3RSb3csIGxhc3RSb3cpOwoKICAgICAgICByZXR1cm4gcmVtb3ZlZEZvbGRzOwogICAgfTsKCiAgICB0aGlzLiR1cGRhdGVSb3dMZW5ndGhDYWNoZSA9IGZ1bmN0aW9uKGZpcnN0Um93LCBsYXN0Um93LCBiKSB7CiAgICAgICAgdGhpcy4kcm93TGVuZ3RoQ2FjaGVbZmlyc3RSb3ddID0gbnVsbDsKICAgICAgICB0aGlzLiRyb3dMZW5ndGhDYWNoZVtsYXN0Um93XSA9IG51bGw7CiAgICB9OwoKICAgIHRoaXMuJHVwZGF0ZVdyYXBEYXRhID0gZnVuY3Rpb24oZmlyc3RSb3csIGxhc3RSb3cpIHsKICAgICAgICB2YXIgbGluZXMgPSB0aGlzLmRvYy5nZXRBbGxMaW5lcygpOwogICAgICAgIHZhciB0YWJTaXplID0gdGhpcy5nZXRUYWJTaXplKCk7CiAgICAgICAgdmFyIHdyYXBEYXRhID0gdGhpcy4kd3JhcERhdGE7CiAgICAgICAgdmFyIHdyYXBMaW1pdCA9IHRoaXMuJHdyYXBMaW1pdDsKICAgICAgICB2YXIgdG9rZW5zOwogICAgICAgIHZhciBmb2xkTGluZTsKCiAgICAgICAgdmFyIHJvdyA9IGZpcnN0Um93OwogICAgICAgIGxhc3RSb3cgPSBNYXRoLm1pbihsYXN0Um93LCBsaW5lcy5sZW5ndGggLSAxKTsKICAgICAgICB3aGlsZSAocm93IDw9IGxhc3RSb3cpIHsKICAgICAgICAgICAgZm9sZExpbmUgPSB0aGlzLmdldEZvbGRMaW5lKHJvdywgZm9sZExpbmUpOwogICAgICAgICAgICBpZiAoIWZvbGRMaW5lKSB7CiAgICAgICAgICAgICAgICB0b2tlbnMgPSB0aGlzLiRnZXREaXNwbGF5VG9rZW5zKGxhbmcuc3RyaW5nVHJpbVJpZ2h0KGxpbmVzW3Jvd10pKTsKICAgICAgICAgICAgICAgIHdyYXBEYXRhW3Jvd10gPSB0aGlzLiRjb21wdXRlV3JhcFNwbGl0cyh0b2tlbnMsIHdyYXBMaW1pdCwgdGFiU2l6ZSk7CiAgICAgICAgICAgICAgICByb3cgKys7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0b2tlbnMgPSBbXTsKICAgICAgICAgICAgICAgIGZvbGRMaW5lLndhbGsoZnVuY3Rpb24ocGxhY2Vob2xkZXIsIHJvdywgY29sdW1uLCBsYXN0Q29sdW1uKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB3YWxrVG9rZW5zOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAocGxhY2Vob2xkZXIgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2Fsa1Rva2VucyA9IHRoaXMuJGdldERpc3BsYXlUb2tlbnMoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXIsIHRva2Vucy5sZW5ndGgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2Fsa1Rva2Vuc1swXSA9IFBMQUNFSE9MREVSX1NUQVJUOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCB3YWxrVG9rZW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2Fsa1Rva2Vuc1tpXSA9IFBMQUNFSE9MREVSX0JPRFk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YWxrVG9rZW5zID0gdGhpcy4kZ2V0RGlzcGxheVRva2VucygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lc1tyb3ddLnN1YnN0cmluZyhsYXN0Q29sdW1uLCBjb2x1bW4pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2Vucy5sZW5ndGgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VucyA9IHRva2Vucy5jb25jYXQod2Fsa1Rva2Vucyk7CiAgICAgICAgICAgICAgICAgICAgfS5iaW5kKHRoaXMpLAogICAgICAgICAgICAgICAgICAgIGZvbGRMaW5lLmVuZC5yb3csCiAgICAgICAgICAgICAgICAgICAgbGluZXNbZm9sZExpbmUuZW5kLnJvd10ubGVuZ3RoICsgMQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIHdoaWxlICh0b2tlbnMubGVuZ3RoICE9IDAgJiYgdG9rZW5zW3Rva2Vucy5sZW5ndGggLSAxXSA+PSBTUEFDRSkKICAgICAgICAgICAgICAgICAgICB0b2tlbnMucG9wKCk7CgogICAgICAgICAgICAgICAgd3JhcERhdGFbZm9sZExpbmUuc3RhcnQucm93XQogICAgICAgICAgICAgICAgICAgID0gdGhpcy4kY29tcHV0ZVdyYXBTcGxpdHModG9rZW5zLCB3cmFwTGltaXQsIHRhYlNpemUpOwogICAgICAgICAgICAgICAgcm93ID0gZm9sZExpbmUuZW5kLnJvdyArIDE7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9OwogICAgdmFyIENIQVIgPSAxLAogICAgICAgIENIQVJfRVhUID0gMiwKICAgICAgICBQTEFDRUhPTERFUl9TVEFSVCA9IDMsCiAgICAgICAgUExBQ0VIT0xERVJfQk9EWSA9ICA0LAogICAgICAgIFBVTkNUVUFUSU9OID0gOSwKICAgICAgICBTUEFDRSA9IDEwLAogICAgICAgIFRBQiA9IDExLAogICAgICAgIFRBQl9TUEFDRSA9IDEyOwoKCiAgICB0aGlzLiRjb21wdXRlV3JhcFNwbGl0cyA9IGZ1bmN0aW9uKHRva2Vucywgd3JhcExpbWl0KSB7CiAgICAgICAgaWYgKHRva2Vucy5sZW5ndGggPT0gMCkgewogICAgICAgICAgICByZXR1cm4gW107CiAgICAgICAgfQoKICAgICAgICB2YXIgc3BsaXRzID0gW107CiAgICAgICAgdmFyIGRpc3BsYXlMZW5ndGggPSB0b2tlbnMubGVuZ3RoOwogICAgICAgIHZhciBsYXN0U3BsaXQgPSAwLCBsYXN0RG9jU3BsaXQgPSAwOwoKICAgICAgICBmdW5jdGlvbiBhZGRTcGxpdChzY3JlZW5Qb3MpIHsKICAgICAgICAgICAgdmFyIGRpc3BsYXllZCA9IHRva2Vucy5zbGljZShsYXN0U3BsaXQsIHNjcmVlblBvcyk7CiAgICAgICAgICAgIHZhciBsZW4gPSBkaXNwbGF5ZWQubGVuZ3RoOwogICAgICAgICAgICBkaXNwbGF5ZWQuam9pbigiIikuCiAgICAgICAgICAgICAgICByZXBsYWNlKC8xMi9nLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICBsZW4gLT0gMTsKICAgICAgICAgICAgICAgIH0pLgogICAgICAgICAgICAgICAgcmVwbGFjZSgvMi9nLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICBsZW4gLT0gMTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgbGFzdERvY1NwbGl0ICs9IGxlbjsKICAgICAgICAgICAgc3BsaXRzLnB1c2gobGFzdERvY1NwbGl0KTsKICAgICAgICAgICAgbGFzdFNwbGl0ID0gc2NyZWVuUG9zOwogICAgICAgIH0KCiAgICAgICAgd2hpbGUgKGRpc3BsYXlMZW5ndGggLSBsYXN0U3BsaXQgPiB3cmFwTGltaXQpIHsKICAgICAgICAgICAgdmFyIHNwbGl0ID0gbGFzdFNwbGl0ICsgd3JhcExpbWl0OwogICAgICAgICAgICBpZiAodG9rZW5zW3NwbGl0XSA+PSBTUEFDRSkgewogICAgICAgICAgICAgICAgd2hpbGUgKHRva2Vuc1tzcGxpdF0gPj0gU1BBQ0UpIHsKICAgICAgICAgICAgICAgICAgICBzcGxpdCArKzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGFkZFNwbGl0KHNwbGl0KTsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICh0b2tlbnNbc3BsaXRdID09IFBMQUNFSE9MREVSX1NUQVJUCiAgICAgICAgICAgICAgICB8fCB0b2tlbnNbc3BsaXRdID09IFBMQUNFSE9MREVSX0JPRFkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZvciAoc3BsaXQ7IHNwbGl0ICE9IGxhc3RTcGxpdCAtIDE7IHNwbGl0LS0pIHsKICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW5zW3NwbGl0XSA9PSBQTEFDRUhPTERFUl9TVEFSVCkgewogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoc3BsaXQgPiBsYXN0U3BsaXQpIHsKICAgICAgICAgICAgICAgICAgICBhZGRTcGxpdChzcGxpdCk7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBzcGxpdCA9IGxhc3RTcGxpdCArIHdyYXBMaW1pdDsKICAgICAgICAgICAgICAgIGZvciAoc3BsaXQ7IHNwbGl0IDwgdG9rZW5zLmxlbmd0aDsgc3BsaXQrKykgewogICAgICAgICAgICAgICAgICAgIGlmICh0b2tlbnNbc3BsaXRdICE9IFBMQUNFSE9MREVSX0JPRFkpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoc3BsaXQgPT0gdG9rZW5zLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIGJyZWFrOyAgLy8gQnJlYWtzIHRoZSB3aGlsZS1sb29wLgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYWRkU3BsaXQoc3BsaXQpOwogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIG1pblNwbGl0ID0gTWF0aC5tYXgoc3BsaXQgLSAxMCwgbGFzdFNwbGl0IC0gMSk7CiAgICAgICAgICAgIHdoaWxlIChzcGxpdCA+IG1pblNwbGl0ICYmIHRva2Vuc1tzcGxpdF0gPCBQTEFDRUhPTERFUl9TVEFSVCkgewogICAgICAgICAgICAgICAgc3BsaXQgLS07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgd2hpbGUgKHNwbGl0ID4gbWluU3BsaXQgJiYgdG9rZW5zW3NwbGl0XSA9PSBQVU5DVFVBVElPTikgewogICAgICAgICAgICAgICAgc3BsaXQgLS07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHNwbGl0ID4gbWluU3BsaXQpIHsKICAgICAgICAgICAgICAgIGFkZFNwbGl0KCsrc3BsaXQpOwogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgc3BsaXQgPSBsYXN0U3BsaXQgKyB3cmFwTGltaXQ7CiAgICAgICAgICAgIGFkZFNwbGl0KHNwbGl0KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHNwbGl0czsKICAgIH07CiAgICB0aGlzLiRnZXREaXNwbGF5VG9rZW5zID0gZnVuY3Rpb24oc3RyLCBvZmZzZXQpIHsKICAgICAgICB2YXIgYXJyID0gW107CiAgICAgICAgdmFyIHRhYlNpemU7CiAgICAgICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSk7CiAgICAgICAgICAgIGlmIChjID09IDkpIHsKICAgICAgICAgICAgICAgIHRhYlNpemUgPSB0aGlzLmdldFNjcmVlblRhYlNpemUoYXJyLmxlbmd0aCArIG9mZnNldCk7CiAgICAgICAgICAgICAgICBhcnIucHVzaChUQUIpOwogICAgICAgICAgICAgICAgZm9yICh2YXIgbiA9IDE7IG4gPCB0YWJTaXplOyBuKyspIHsKICAgICAgICAgICAgICAgICAgICBhcnIucHVzaChUQUJfU1BBQ0UpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgaWYgKGMgPT0gMzIpIHsKICAgICAgICAgICAgICAgIGFyci5wdXNoKFNQQUNFKTsKICAgICAgICAgICAgfSBlbHNlIGlmKChjID4gMzkgJiYgYyA8IDQ4KSB8fCAoYyA+IDU3ICYmIGMgPCA2NCkpIHsKICAgICAgICAgICAgICAgIGFyci5wdXNoKFBVTkNUVUFUSU9OKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChjID49IDB4MTEwMCAmJiBpc0Z1bGxXaWR0aChjKSkgewogICAgICAgICAgICAgICAgYXJyLnB1c2goQ0hBUiwgQ0hBUl9FWFQpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgYXJyLnB1c2goQ0hBUik7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIGFycjsKICAgIH07CiAgICB0aGlzLiRnZXRTdHJpbmdTY3JlZW5XaWR0aCA9IGZ1bmN0aW9uKHN0ciwgbWF4U2NyZWVuQ29sdW1uLCBzY3JlZW5Db2x1bW4pIHsKICAgICAgICBpZiAobWF4U2NyZWVuQ29sdW1uID09IDApCiAgICAgICAgICAgIHJldHVybiBbMCwgMF07CiAgICAgICAgaWYgKG1heFNjcmVlbkNvbHVtbiA9PSBudWxsKQogICAgICAgICAgICBtYXhTY3JlZW5Db2x1bW4gPSBJbmZpbml0eTsKICAgICAgICBzY3JlZW5Db2x1bW4gPSBzY3JlZW5Db2x1bW4gfHwgMDsKCiAgICAgICAgdmFyIGMsIGNvbHVtbjsKICAgICAgICBmb3IgKGNvbHVtbiA9IDA7IGNvbHVtbiA8IHN0ci5sZW5ndGg7IGNvbHVtbisrKSB7CiAgICAgICAgICAgIGMgPSBzdHIuY2hhckNvZGVBdChjb2x1bW4pOwogICAgICAgICAgICBpZiAoYyA9PSA5KSB7CiAgICAgICAgICAgICAgICBzY3JlZW5Db2x1bW4gKz0gdGhpcy5nZXRTY3JlZW5UYWJTaXplKHNjcmVlbkNvbHVtbik7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAoYyA+PSAweDExMDAgJiYgaXNGdWxsV2lkdGgoYykpIHsKICAgICAgICAgICAgICAgIHNjcmVlbkNvbHVtbiArPSAyOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgc2NyZWVuQ29sdW1uICs9IDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHNjcmVlbkNvbHVtbiA+IG1heFNjcmVlbkNvbHVtbikgewogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBbc2NyZWVuQ29sdW1uLCBjb2x1bW5dOwogICAgfTsKICAgIHRoaXMuZ2V0Um93TGVuZ3RoID0gZnVuY3Rpb24ocm93KSB7CiAgICAgICAgaWYgKCF0aGlzLiR1c2VXcmFwTW9kZSB8fCAhdGhpcy4kd3JhcERhdGFbcm93XSkgewogICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kd3JhcERhdGFbcm93XS5sZW5ndGggKyAxOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLmdldFNjcmVlbkxhc3RSb3dDb2x1bW4gPSBmdW5jdGlvbihzY3JlZW5Sb3cpIHsKICAgICAgICB2YXIgcG9zID0gdGhpcy5zY3JlZW5Ub0RvY3VtZW50UG9zaXRpb24oc2NyZWVuUm93LCBOdW1iZXIuTUFYX1ZBTFVFKTsKICAgICAgICByZXR1cm4gdGhpcy5kb2N1bWVudFRvU2NyZWVuQ29sdW1uKHBvcy5yb3csIHBvcy5jb2x1bW4pOwogICAgfTsKICAgIHRoaXMuZ2V0RG9jdW1lbnRMYXN0Um93Q29sdW1uID0gZnVuY3Rpb24oZG9jUm93LCBkb2NDb2x1bW4pIHsKICAgICAgICB2YXIgc2NyZWVuUm93ID0gdGhpcy5kb2N1bWVudFRvU2NyZWVuUm93KGRvY1JvdywgZG9jQ29sdW1uKTsKICAgICAgICByZXR1cm4gdGhpcy5nZXRTY3JlZW5MYXN0Um93Q29sdW1uKHNjcmVlblJvdyk7CiAgICB9OwogICAgdGhpcy5nZXREb2N1bWVudExhc3RSb3dDb2x1bW5Qb3NpdGlvbiA9IGZ1bmN0aW9uKGRvY1JvdywgZG9jQ29sdW1uKSB7CiAgICAgICAgdmFyIHNjcmVlblJvdyA9IHRoaXMuZG9jdW1lbnRUb1NjcmVlblJvdyhkb2NSb3csIGRvY0NvbHVtbik7CiAgICAgICAgcmV0dXJuIHRoaXMuc2NyZWVuVG9Eb2N1bWVudFBvc2l0aW9uKHNjcmVlblJvdywgTnVtYmVyLk1BWF9WQUxVRSAvIDEwKTsKICAgIH07CiAgICB0aGlzLmdldFJvd1NwbGl0RGF0YSA9IGZ1bmN0aW9uKHJvdykgewogICAgICAgIGlmICghdGhpcy4kdXNlV3JhcE1vZGUpIHsKICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kd3JhcERhdGFbcm93XTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5nZXRTY3JlZW5UYWJTaXplID0gZnVuY3Rpb24oc2NyZWVuQ29sdW1uKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHRhYlNpemUgLSBzY3JlZW5Db2x1bW4gJSB0aGlzLiR0YWJTaXplOwogICAgfTsKCgogICAgdGhpcy5zY3JlZW5Ub0RvY3VtZW50Um93ID0gZnVuY3Rpb24oc2NyZWVuUm93LCBzY3JlZW5Db2x1bW4pIHsKICAgICAgICByZXR1cm4gdGhpcy5zY3JlZW5Ub0RvY3VtZW50UG9zaXRpb24oc2NyZWVuUm93LCBzY3JlZW5Db2x1bW4pLnJvdzsKICAgIH07CgoKICAgIHRoaXMuc2NyZWVuVG9Eb2N1bWVudENvbHVtbiA9IGZ1bmN0aW9uKHNjcmVlblJvdywgc2NyZWVuQ29sdW1uKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc2NyZWVuVG9Eb2N1bWVudFBvc2l0aW9uKHNjcmVlblJvdywgc2NyZWVuQ29sdW1uKS5jb2x1bW47CiAgICB9OwogICAgdGhpcy5zY3JlZW5Ub0RvY3VtZW50UG9zaXRpb24gPSBmdW5jdGlvbihzY3JlZW5Sb3csIHNjcmVlbkNvbHVtbikgewogICAgICAgIGlmIChzY3JlZW5Sb3cgPCAwKQogICAgICAgICAgICByZXR1cm4ge3JvdzogMCwgY29sdW1uOiAwfTsKCiAgICAgICAgdmFyIGxpbmU7CiAgICAgICAgdmFyIGRvY1JvdyA9IDA7CiAgICAgICAgdmFyIGRvY0NvbHVtbiA9IDA7CiAgICAgICAgdmFyIGNvbHVtbjsKICAgICAgICB2YXIgcm93ID0gMDsKICAgICAgICB2YXIgcm93TGVuZ3RoID0gMDsKCiAgICAgICAgdmFyIHJvd0NhY2hlID0gdGhpcy4kc2NyZWVuUm93Q2FjaGU7CiAgICAgICAgdmFyIGkgPSB0aGlzLiRnZXRSb3dDYWNoZUluZGV4KHJvd0NhY2hlLCBzY3JlZW5Sb3cpOwogICAgICAgIHZhciBsID0gcm93Q2FjaGUubGVuZ3RoOwogICAgICAgIGlmIChsICYmIGkgPj0gMCkgewogICAgICAgICAgICB2YXIgcm93ID0gcm93Q2FjaGVbaV07CiAgICAgICAgICAgIHZhciBkb2NSb3cgPSB0aGlzLiRkb2NSb3dDYWNoZVtpXTsKICAgICAgICAgICAgdmFyIGRvQ2FjaGUgPSBzY3JlZW5Sb3cgPiByb3dDYWNoZVtsIC0gMV07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIGRvQ2FjaGUgPSAhbDsKICAgICAgICB9CgogICAgICAgIHZhciBtYXhSb3cgPSB0aGlzLmdldExlbmd0aCgpIC0gMTsKICAgICAgICB2YXIgZm9sZExpbmUgPSB0aGlzLmdldE5leHRGb2xkTGluZShkb2NSb3cpOwogICAgICAgIHZhciBmb2xkU3RhcnQgPSBmb2xkTGluZSA/IGZvbGRMaW5lLnN0YXJ0LnJvdyA6IEluZmluaXR5OwoKICAgICAgICB3aGlsZSAocm93IDw9IHNjcmVlblJvdykgewogICAgICAgICAgICByb3dMZW5ndGggPSB0aGlzLmdldFJvd0xlbmd0aChkb2NSb3cpOwogICAgICAgICAgICBpZiAocm93ICsgcm93TGVuZ3RoIC0gMSA+PSBzY3JlZW5Sb3cgfHwgZG9jUm93ID49IG1heFJvdykgewogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByb3cgKz0gcm93TGVuZ3RoOwogICAgICAgICAgICAgICAgZG9jUm93Kys7CiAgICAgICAgICAgICAgICBpZiAoZG9jUm93ID4gZm9sZFN0YXJ0KSB7CiAgICAgICAgICAgICAgICAgICAgZG9jUm93ID0gZm9sZExpbmUuZW5kLnJvdysxOwogICAgICAgICAgICAgICAgICAgIGZvbGRMaW5lID0gdGhpcy5nZXROZXh0Rm9sZExpbmUoZG9jUm93LCBmb2xkTGluZSk7CiAgICAgICAgICAgICAgICAgICAgZm9sZFN0YXJ0ID0gZm9sZExpbmUgPyBmb2xkTGluZS5zdGFydC5yb3cgOiBJbmZpbml0eTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKGRvQ2FjaGUpIHsKICAgICAgICAgICAgICAgIHRoaXMuJGRvY1Jvd0NhY2hlLnB1c2goZG9jUm93KTsKICAgICAgICAgICAgICAgIHRoaXMuJHNjcmVlblJvd0NhY2hlLnB1c2gocm93KTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKGZvbGRMaW5lICYmIGZvbGRMaW5lLnN0YXJ0LnJvdyA8PSBkb2NSb3cpIHsKICAgICAgICAgICAgbGluZSA9IHRoaXMuZ2V0Rm9sZERpc3BsYXlMaW5lKGZvbGRMaW5lKTsKICAgICAgICAgICAgZG9jUm93ID0gZm9sZExpbmUuc3RhcnQucm93OwogICAgICAgIH0gZWxzZSBpZiAocm93ICsgcm93TGVuZ3RoIDw9IHNjcmVlblJvdyB8fCBkb2NSb3cgPiBtYXhSb3cpIHsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIHJvdzogbWF4Um93LAogICAgICAgICAgICAgICAgY29sdW1uOiB0aGlzLmdldExpbmUobWF4Um93KS5sZW5ndGgKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGxpbmUgPSB0aGlzLmdldExpbmUoZG9jUm93KTsKICAgICAgICAgICAgZm9sZExpbmUgPSBudWxsOwogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMuJHVzZVdyYXBNb2RlKSB7CiAgICAgICAgICAgIHZhciBzcGxpdHMgPSB0aGlzLiR3cmFwRGF0YVtkb2NSb3ddOwogICAgICAgICAgICBpZiAoc3BsaXRzKSB7CiAgICAgICAgICAgICAgICBjb2x1bW4gPSBzcGxpdHNbc2NyZWVuUm93IC0gcm93XTsKICAgICAgICAgICAgICAgIGlmKHNjcmVlblJvdyA+IHJvdyAmJiBzcGxpdHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgZG9jQ29sdW1uID0gc3BsaXRzW3NjcmVlblJvdyAtIHJvdyAtIDFdIHx8IHNwbGl0c1tzcGxpdHMubGVuZ3RoIC0gMV07CiAgICAgICAgICAgICAgICAgICAgbGluZSA9IGxpbmUuc3Vic3RyaW5nKGRvY0NvbHVtbik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGRvY0NvbHVtbiArPSB0aGlzLiRnZXRTdHJpbmdTY3JlZW5XaWR0aChsaW5lLCBzY3JlZW5Db2x1bW4pWzFdOwogICAgICAgIGlmICh0aGlzLiR1c2VXcmFwTW9kZSAmJiBkb2NDb2x1bW4gPj0gY29sdW1uKQogICAgICAgICAgICBkb2NDb2x1bW4gPSBjb2x1bW4gLSAxOwoKICAgICAgICBpZiAoZm9sZExpbmUpCiAgICAgICAgICAgIHJldHVybiBmb2xkTGluZS5pZHhUb1Bvc2l0aW9uKGRvY0NvbHVtbik7CgogICAgICAgIHJldHVybiB7cm93OiBkb2NSb3csIGNvbHVtbjogZG9jQ29sdW1ufTsKICAgIH07CiAgICB0aGlzLmRvY3VtZW50VG9TY3JlZW5Qb3NpdGlvbiA9IGZ1bmN0aW9uKGRvY1JvdywgZG9jQ29sdW1uKSB7CiAgICAgICAgaWYgKHR5cGVvZiBkb2NDb2x1bW4gPT09ICJ1bmRlZmluZWQiKQogICAgICAgICAgICB2YXIgcG9zID0gdGhpcy4kY2xpcFBvc2l0aW9uVG9Eb2N1bWVudChkb2NSb3cucm93LCBkb2NSb3cuY29sdW1uKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHBvcyA9IHRoaXMuJGNsaXBQb3NpdGlvblRvRG9jdW1lbnQoZG9jUm93LCBkb2NDb2x1bW4pOwoKICAgICAgICBkb2NSb3cgPSBwb3Mucm93OwogICAgICAgIGRvY0NvbHVtbiA9IHBvcy5jb2x1bW47CgogICAgICAgIHZhciBzY3JlZW5Sb3cgPSAwOwogICAgICAgIHZhciBmb2xkU3RhcnRSb3cgPSBudWxsOwogICAgICAgIHZhciBmb2xkID0gbnVsbDsKICAgICAgICBmb2xkID0gdGhpcy5nZXRGb2xkQXQoZG9jUm93LCBkb2NDb2x1bW4sIDEpOwogICAgICAgIGlmIChmb2xkKSB7CiAgICAgICAgICAgIGRvY1JvdyA9IGZvbGQuc3RhcnQucm93OwogICAgICAgICAgICBkb2NDb2x1bW4gPSBmb2xkLnN0YXJ0LmNvbHVtbjsKICAgICAgICB9CgogICAgICAgIHZhciByb3dFbmQsIHJvdyA9IDA7CgoKICAgICAgICB2YXIgcm93Q2FjaGUgPSB0aGlzLiRkb2NSb3dDYWNoZTsKICAgICAgICB2YXIgaSA9IHRoaXMuJGdldFJvd0NhY2hlSW5kZXgocm93Q2FjaGUsIGRvY1Jvdyk7CiAgICAgICAgdmFyIGwgPSByb3dDYWNoZS5sZW5ndGg7CiAgICAgICAgaWYgKGwgJiYgaSA+PSAwKSB7CiAgICAgICAgICAgIHZhciByb3cgPSByb3dDYWNoZVtpXTsKICAgICAgICAgICAgdmFyIHNjcmVlblJvdyA9IHRoaXMuJHNjcmVlblJvd0NhY2hlW2ldOwogICAgICAgICAgICB2YXIgZG9DYWNoZSA9IGRvY1JvdyA+IHJvd0NhY2hlW2wgLSAxXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgZG9DYWNoZSA9ICFsOwogICAgICAgIH0KCiAgICAgICAgdmFyIGZvbGRMaW5lID0gdGhpcy5nZXROZXh0Rm9sZExpbmUocm93KTsKICAgICAgICB2YXIgZm9sZFN0YXJ0ID0gZm9sZExpbmUgP2ZvbGRMaW5lLnN0YXJ0LnJvdyA6SW5maW5pdHk7CgogICAgICAgIHdoaWxlIChyb3cgPCBkb2NSb3cpIHsKICAgICAgICAgICAgaWYgKHJvdyA+PSBmb2xkU3RhcnQpIHsKICAgICAgICAgICAgICAgIHJvd0VuZCA9IGZvbGRMaW5lLmVuZC5yb3cgKyAxOwogICAgICAgICAgICAgICAgaWYgKHJvd0VuZCA+IGRvY1JvdykKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGZvbGRMaW5lID0gdGhpcy5nZXROZXh0Rm9sZExpbmUocm93RW5kLCBmb2xkTGluZSk7CiAgICAgICAgICAgICAgICBmb2xkU3RhcnQgPSBmb2xkTGluZSA/Zm9sZExpbmUuc3RhcnQucm93IDpJbmZpbml0eTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHJvd0VuZCA9IHJvdyArIDE7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHNjcmVlblJvdyArPSB0aGlzLmdldFJvd0xlbmd0aChyb3cpOwogICAgICAgICAgICByb3cgPSByb3dFbmQ7CgogICAgICAgICAgICBpZiAoZG9DYWNoZSkgewogICAgICAgICAgICAgICAgdGhpcy4kZG9jUm93Q2FjaGUucHVzaChyb3cpOwogICAgICAgICAgICAgICAgdGhpcy4kc2NyZWVuUm93Q2FjaGUucHVzaChzY3JlZW5Sb3cpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHZhciB0ZXh0TGluZSA9ICIiOwogICAgICAgIGlmIChmb2xkTGluZSAmJiByb3cgPj0gZm9sZFN0YXJ0KSB7CiAgICAgICAgICAgIHRleHRMaW5lID0gdGhpcy5nZXRGb2xkRGlzcGxheUxpbmUoZm9sZExpbmUsIGRvY1JvdywgZG9jQ29sdW1uKTsKICAgICAgICAgICAgZm9sZFN0YXJ0Um93ID0gZm9sZExpbmUuc3RhcnQucm93OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRleHRMaW5lID0gdGhpcy5nZXRMaW5lKGRvY1Jvdykuc3Vic3RyaW5nKDAsIGRvY0NvbHVtbik7CiAgICAgICAgICAgIGZvbGRTdGFydFJvdyA9IGRvY1JvdzsKICAgICAgICB9CiAgICAgICAgaWYgKHRoaXMuJHVzZVdyYXBNb2RlKSB7CiAgICAgICAgICAgIHZhciB3cmFwUm93ID0gdGhpcy4kd3JhcERhdGFbZm9sZFN0YXJ0Um93XTsKICAgICAgICAgICAgdmFyIHNjcmVlblJvd09mZnNldCA9IDA7CiAgICAgICAgICAgIHdoaWxlICh0ZXh0TGluZS5sZW5ndGggPj0gd3JhcFJvd1tzY3JlZW5Sb3dPZmZzZXRdKSB7CiAgICAgICAgICAgICAgICBzY3JlZW5Sb3cgKys7CiAgICAgICAgICAgICAgICBzY3JlZW5Sb3dPZmZzZXQrKzsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZXh0TGluZSA9IHRleHRMaW5lLnN1YnN0cmluZygKICAgICAgICAgICAgICAgIHdyYXBSb3dbc2NyZWVuUm93T2Zmc2V0IC0gMV0gfHwgMCwgdGV4dExpbmUubGVuZ3RoCiAgICAgICAgICAgICk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gewogICAgICAgICAgICByb3c6IHNjcmVlblJvdywKICAgICAgICAgICAgY29sdW1uOiB0aGlzLiRnZXRTdHJpbmdTY3JlZW5XaWR0aCh0ZXh0TGluZSlbMF0KICAgICAgICB9OwogICAgfTsKICAgIHRoaXMuZG9jdW1lbnRUb1NjcmVlbkNvbHVtbiA9IGZ1bmN0aW9uKHJvdywgZG9jQ29sdW1uKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG9jdW1lbnRUb1NjcmVlblBvc2l0aW9uKHJvdywgZG9jQ29sdW1uKS5jb2x1bW47CiAgICB9OwogICAgdGhpcy5kb2N1bWVudFRvU2NyZWVuUm93ID0gZnVuY3Rpb24oZG9jUm93LCBkb2NDb2x1bW4pIHsKICAgICAgICByZXR1cm4gdGhpcy5kb2N1bWVudFRvU2NyZWVuUG9zaXRpb24oZG9jUm93LCBkb2NDb2x1bW4pLnJvdzsKICAgIH07CiAgICB0aGlzLmdldFNjcmVlbkxlbmd0aCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBzY3JlZW5Sb3dzID0gMDsKICAgICAgICB2YXIgZm9sZCA9IG51bGw7CiAgICAgICAgaWYgKCF0aGlzLiR1c2VXcmFwTW9kZSkgewogICAgICAgICAgICBzY3JlZW5Sb3dzID0gdGhpcy5nZXRMZW5ndGgoKTsKICAgICAgICAgICAgdmFyIGZvbGREYXRhID0gdGhpcy4kZm9sZERhdGE7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZm9sZERhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIGZvbGQgPSBmb2xkRGF0YVtpXTsKICAgICAgICAgICAgICAgIHNjcmVlblJvd3MgLT0gZm9sZC5lbmQucm93IC0gZm9sZC5zdGFydC5yb3c7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgbGFzdFJvdyA9IHRoaXMuJHdyYXBEYXRhLmxlbmd0aDsKICAgICAgICAgICAgdmFyIHJvdyA9IDAsIGkgPSAwOwogICAgICAgICAgICB2YXIgZm9sZCA9IHRoaXMuJGZvbGREYXRhW2krK107CiAgICAgICAgICAgIHZhciBmb2xkU3RhcnQgPSBmb2xkID8gZm9sZC5zdGFydC5yb3cgOkluZmluaXR5OwoKICAgICAgICAgICAgd2hpbGUgKHJvdyA8IGxhc3RSb3cpIHsKICAgICAgICAgICAgICAgIHNjcmVlblJvd3MgKz0gdGhpcy4kd3JhcERhdGFbcm93XS5sZW5ndGggKyAxOwogICAgICAgICAgICAgICAgcm93ICsrOwogICAgICAgICAgICAgICAgaWYgKHJvdyA+IGZvbGRTdGFydCkgewogICAgICAgICAgICAgICAgICAgIHJvdyA9IGZvbGQuZW5kLnJvdysxOwogICAgICAgICAgICAgICAgICAgIGZvbGQgPSB0aGlzLiRmb2xkRGF0YVtpKytdOwogICAgICAgICAgICAgICAgICAgIGZvbGRTdGFydCA9IGZvbGQgP2ZvbGQuc3RhcnQucm93IDpJbmZpbml0eTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHNjcmVlblJvd3M7CiAgICB9OwogICAgZnVuY3Rpb24gaXNGdWxsV2lkdGgoYykgewogICAgICAgIGlmIChjIDwgMHgxMTAwKQogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgcmV0dXJuIGMgPj0gMHgxMTAwICYmIGMgPD0gMHgxMTVGIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgxMUEzICYmIGMgPD0gMHgxMUE3IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgxMUZBICYmIGMgPD0gMHgxMUZGIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgyMzI5ICYmIGMgPD0gMHgyMzJBIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgyRTgwICYmIGMgPD0gMHgyRTk5IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgyRTlCICYmIGMgPD0gMHgyRUYzIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgyRjAwICYmIGMgPD0gMHgyRkQ1IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgyRkYwICYmIGMgPD0gMHgyRkZCIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMDAwICYmIGMgPD0gMHgzMDNFIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMDQxICYmIGMgPD0gMHgzMDk2IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMDk5ICYmIGMgPD0gMHgzMEZGIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMTA1ICYmIGMgPD0gMHgzMTJEIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMTMxICYmIGMgPD0gMHgzMThFIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMTkwICYmIGMgPD0gMHgzMUJBIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMUMwICYmIGMgPD0gMHgzMUUzIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMUYwICYmIGMgPD0gMHgzMjFFIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMjIwICYmIGMgPD0gMHgzMjQ3IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMjUwICYmIGMgPD0gMHgzMkZFIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHgzMzAwICYmIGMgPD0gMHg0REJGIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHg0RTAwICYmIGMgPD0gMHhBNDhDIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhBNDkwICYmIGMgPD0gMHhBNEM2IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhBOTYwICYmIGMgPD0gMHhBOTdDIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhBQzAwICYmIGMgPD0gMHhEN0EzIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhEN0IwICYmIGMgPD0gMHhEN0M2IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhEN0NCICYmIGMgPD0gMHhEN0ZCIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhGOTAwICYmIGMgPD0gMHhGQUZGIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhGRTEwICYmIGMgPD0gMHhGRTE5IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhGRTMwICYmIGMgPD0gMHhGRTUyIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhGRTU0ICYmIGMgPD0gMHhGRTY2IHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhGRTY4ICYmIGMgPD0gMHhGRTZCIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhGRjAxICYmIGMgPD0gMHhGRjYwIHx8CiAgICAgICAgICAgICAgIGMgPj0gMHhGRkUwICYmIGMgPD0gMHhGRkU2OwogICAgfTsKCn0pLmNhbGwoRWRpdFNlc3Npb24ucHJvdG90eXBlKTsKCnJlcXVpcmUoIi4vZWRpdF9zZXNzaW9uL2ZvbGRpbmciKS5Gb2xkaW5nLmNhbGwoRWRpdFNlc3Npb24ucHJvdG90eXBlKTsKcmVxdWlyZSgiLi9lZGl0X3Nlc3Npb24vYnJhY2tldF9tYXRjaCIpLkJyYWNrZXRNYXRjaC5jYWxsKEVkaXRTZXNzaW9uLnByb3RvdHlwZSk7CgpleHBvcnRzLkVkaXRTZXNzaW9uID0gRWRpdFNlc3Npb247Cn0pOwoKYWNlLmRlZmluZSgnYWNlL2NvbmZpZycsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9sYW5nJywgJ2FjZS9saWIvb29wJywgJ2FjZS9saWIvbmV0JywgJ2FjZS9saWIvZXZlbnRfZW1pdHRlciddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKIm5vIHVzZSBzdHJpY3QiOwoKdmFyIGxhbmcgPSByZXF1aXJlKCIuL2xpYi9sYW5nIik7CnZhciBvb3AgPSByZXF1aXJlKCIuL2xpYi9vb3AiKTsKdmFyIG5ldCA9IHJlcXVpcmUoIi4vbGliL25ldCIpOwp2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgiLi9saWIvZXZlbnRfZW1pdHRlciIpLkV2ZW50RW1pdHRlcjsKCnZhciBnbG9iYWwgPSAoZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gdGhpczsKfSkoKTsKCnZhciBvcHRpb25zID0gewogICAgcGFja2FnZWQ6IGZhbHNlLAogICAgd29ya2VyUGF0aDogbnVsbCwKICAgIG1vZGVQYXRoOiBudWxsLAogICAgdGhlbWVQYXRoOiBudWxsLAogICAgYmFzZVBhdGg6ICIiLAogICAgc3VmZml4OiAiLmpzIiwKICAgICRtb2R1bGVVcmxzOiB7fQp9OwoKZXhwb3J0cy5nZXQgPSBmdW5jdGlvbihrZXkpIHsKICAgIGlmICghb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKQogICAgICAgIHRocm93IG5ldyBFcnJvcigiVW5rbm93biBjb25maWcga2V5OiAiICsga2V5KTsKCiAgICByZXR1cm4gb3B0aW9uc1trZXldOwp9OwoKZXhwb3J0cy5zZXQgPSBmdW5jdGlvbihrZXksIHZhbHVlKSB7CiAgICBpZiAoIW9wdGlvbnMuaGFzT3duUHJvcGVydHkoa2V5KSkKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIlVua25vd24gY29uZmlnIGtleTogIiArIGtleSk7CgogICAgb3B0aW9uc1trZXldID0gdmFsdWU7Cn07CgpleHBvcnRzLmFsbCA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIGxhbmcuY29weU9iamVjdChvcHRpb25zKTsKfTsKb29wLmltcGxlbWVudChleHBvcnRzLCBFdmVudEVtaXR0ZXIpOwoKZXhwb3J0cy5tb2R1bGVVcmwgPSBmdW5jdGlvbihuYW1lLCBjb21wb25lbnQpIHsKICAgIGlmIChvcHRpb25zLiRtb2R1bGVVcmxzW25hbWVdKQogICAgICAgIHJldHVybiBvcHRpb25zLiRtb2R1bGVVcmxzW25hbWVdOwoKICAgIHZhciBwYXJ0cyA9IG5hbWUuc3BsaXQoIi8iKTsKICAgIGNvbXBvbmVudCA9IGNvbXBvbmVudCB8fCBwYXJ0c1twYXJ0cy5sZW5ndGggLSAyXSB8fCAiIjsKICAgIHZhciBiYXNlID0gcGFydHNbcGFydHMubGVuZ3RoIC0gMV0ucmVwbGFjZShjb21wb25lbnQsICIiKS5yZXBsYWNlKC8oXltcLV9dKXwoW1wtX10kKS8sICIiKTsKCiAgICBpZiAoIWJhc2UgJiYgcGFydHMubGVuZ3RoID4gMSkKICAgICAgICBiYXNlID0gcGFydHNbcGFydHMubGVuZ3RoIC0gMl07CiAgICB2YXIgcGF0aCA9IG9wdGlvbnNbY29tcG9uZW50ICsgIlBhdGgiXTsKICAgIGlmIChwYXRoID09IG51bGwpCiAgICAgICAgcGF0aCA9IG9wdGlvbnMuYmFzZVBhdGg7CiAgICBpZiAocGF0aCAmJiBwYXRoLnNsaWNlKC0xKSAhPSAiLyIpCiAgICAgICAgcGF0aCArPSAiLyI7CiAgICByZXR1cm4gcGF0aCArIGNvbXBvbmVudCArICItIiArIGJhc2UgKyB0aGlzLmdldCgic3VmZml4Iik7Cn07CgpleHBvcnRzLnNldE1vZHVsZVVybCA9IGZ1bmN0aW9uKG5hbWUsIHN1YnN0KSB7CiAgICByZXR1cm4gb3B0aW9ucy4kbW9kdWxlVXJsc1tuYW1lXSA9IHN1YnN0Owp9OwoKZXhwb3J0cy5sb2FkTW9kdWxlID0gZnVuY3Rpb24obW9kdWxlTmFtZSwgb25Mb2FkKSB7CiAgICB2YXIgbW9kdWxlLCBtb2R1bGVUeXBlOwogICAgaWYgKEFycmF5LmlzQXJyYXkobW9kdWxlTmFtZSkpIHsKICAgICAgICBtb2R1bGVUeXBlID0gbW9kdWxlTmFtZVswXTsKICAgICAgICBtb2R1bGVOYW1lID0gbW9kdWxlTmFtZVsxXTsKICAgIH0KICAgIHRyeSB7CiAgICAgICAgbW9kdWxlID0gcmVxdWlyZShtb2R1bGVOYW1lKTsKICAgIH0gY2F0Y2ggKGUpIHt9OwogICAgaWYgKG1vZHVsZSkKICAgICAgICByZXR1cm4gb25Mb2FkKG1vZHVsZSk7CgogICAgdmFyIGFmdGVyTG9hZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJlcXVpcmUoW21vZHVsZU5hbWVdLCBmdW5jdGlvbihtb2R1bGUpIHsKICAgICAgICAgICAgZXhwb3J0cy5fZW1pdCgibG9hZC5tb2R1bGUiLCB7bmFtZTogbW9kdWxlTmFtZSwgbW9kdWxlOiBtb2R1bGV9KTsKICAgICAgICAgICAgb25Mb2FkKG1vZHVsZSk7CiAgICAgICAgfSk7CiAgICB9OwoKICAgIGlmICghZXhwb3J0cy5nZXQoInBhY2thZ2VkIikpCiAgICAgICAgcmV0dXJuIGFmdGVyTG9hZCgpOwogICAgbmV0LmxvYWRTY3JpcHQoZXhwb3J0cy5tb2R1bGVVcmwobW9kdWxlTmFtZSwgbW9kdWxlVHlwZSksIGFmdGVyTG9hZCk7Cn07CmV4cG9ydHMuaW5pdCA9IGZ1bmN0aW9uKCkgewogICAgb3B0aW9ucy5wYWNrYWdlZCA9IHJlcXVpcmUucGFja2FnZWQgfHwgbW9kdWxlLnBhY2thZ2VkIHx8IChnbG9iYWwuZGVmaW5lICYmIGRlZmluZS5wYWNrYWdlZCk7CgogICAgaWYgKCFnbG9iYWwuZG9jdW1lbnQpCiAgICAgICAgcmV0dXJuICIiOwoKICAgIHZhciBzY3JpcHRPcHRpb25zID0ge307CiAgICB2YXIgc2NyaXB0VXJsID0gIiI7CgogICAgdmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0Iik7CiAgICBmb3IgKHZhciBpPTA7IGk8c2NyaXB0cy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBzY3JpcHQgPSBzY3JpcHRzW2ldOwoKICAgICAgICB2YXIgc3JjID0gc2NyaXB0LnNyYyB8fCBzY3JpcHQuZ2V0QXR0cmlidXRlKCJzcmMiKTsKICAgICAgICBpZiAoIXNyYykKICAgICAgICAgICAgY29udGludWU7CgogICAgICAgIHZhciBhdHRyaWJ1dGVzID0gc2NyaXB0LmF0dHJpYnV0ZXM7CiAgICAgICAgZm9yICh2YXIgaj0wLCBsPWF0dHJpYnV0ZXMubGVuZ3RoOyBqIDwgbDsgaisrKSB7CiAgICAgICAgICAgIHZhciBhdHRyID0gYXR0cmlidXRlc1tqXTsKICAgICAgICAgICAgaWYgKGF0dHIubmFtZS5pbmRleE9mKCJkYXRhLWFjZS0iKSA9PT0gMCkgewogICAgICAgICAgICAgICAgc2NyaXB0T3B0aW9uc1tkZUh5cGhlbmF0ZShhdHRyLm5hbWUucmVwbGFjZSgvXmRhdGEtYWNlLS8sICIiKSldID0gYXR0ci52YWx1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdmFyIG0gPSBzcmMubWF0Y2goL14oLiopXC9hY2UoXC1cdyspP1wuanMoXD98JCkvKTsKICAgICAgICBpZiAobSkKICAgICAgICAgICAgc2NyaXB0VXJsID0gbVsxXTsKICAgIH0KCiAgICBpZiAoc2NyaXB0VXJsKSB7CiAgICAgICAgc2NyaXB0T3B0aW9ucy5iYXNlID0gc2NyaXB0T3B0aW9ucy5iYXNlIHx8IHNjcmlwdFVybDsKICAgICAgICBzY3JpcHRPcHRpb25zLnBhY2thZ2VkID0gdHJ1ZTsKICAgIH0KCiAgICBzY3JpcHRPcHRpb25zLmJhc2VQYXRoID0gc2NyaXB0T3B0aW9ucy5iYXNlOwogICAgc2NyaXB0T3B0aW9ucy53b3JrZXJQYXRoID0gc2NyaXB0T3B0aW9ucy53b3JrZXJQYXRoIHx8IHNjcmlwdE9wdGlvbnMuYmFzZTsKICAgIHNjcmlwdE9wdGlvbnMubW9kZVBhdGggPSBzY3JpcHRPcHRpb25zLm1vZGVQYXRoIHx8IHNjcmlwdE9wdGlvbnMuYmFzZTsKICAgIHNjcmlwdE9wdGlvbnMudGhlbWVQYXRoID0gc2NyaXB0T3B0aW9ucy50aGVtZVBhdGggfHwgc2NyaXB0T3B0aW9ucy5iYXNlOwogICAgZGVsZXRlIHNjcmlwdE9wdGlvbnMuYmFzZTsKCiAgICBmb3IgKHZhciBrZXkgaW4gc2NyaXB0T3B0aW9ucykKICAgICAgICBpZiAodHlwZW9mIHNjcmlwdE9wdGlvbnNba2V5XSAhPT0gInVuZGVmaW5lZCIpCiAgICAgICAgICAgIGV4cG9ydHMuc2V0KGtleSwgc2NyaXB0T3B0aW9uc1trZXldKTsKfTsKCmZ1bmN0aW9uIGRlSHlwaGVuYXRlKHN0cikgewogICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8tKC4pL2csIGZ1bmN0aW9uKG0sIG0xKSB7IHJldHVybiBtMS50b1VwcGVyQ2FzZSgpOyB9KTsKfQoKfSk7CmFjZS5kZWZpbmUoJ2FjZS9saWIvbmV0JywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL3VzZXJhZ2VudCddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgdXNlcmFnZW50ID0gcmVxdWlyZSgiLi91c2VyYWdlbnQiKTsKCmV4cG9ydHMuZ2V0ID0gZnVuY3Rpb24gKHVybCwgY2FsbGJhY2spIHsKICAgIHZhciB4aHIgPSBleHBvcnRzLmNyZWF0ZVhocigpOwogICAgeGhyLm9wZW4oJ0dFVCcsIHVybCwgdHJ1ZSk7CiAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKGV2dCkgewogICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCkgewogICAgICAgICAgICBjYWxsYmFjayh4aHIucmVzcG9uc2VUZXh0KTsKICAgICAgICB9CiAgICB9OwogICAgeGhyLnNlbmQobnVsbCk7Cn07Cgp2YXIgcHJvZ0lkcyA9IFsnTXN4bWwyLlhNTEhUVFAnLCAnTWljcm9zb2Z0LlhNTEhUVFAnLCAnTXN4bWwyLlhNTEhUVFAuNC4wJ107CgpleHBvcnRzLmNyZWF0ZVhociA9IGZ1bmN0aW9uKCkgewogICAgdmFyIHhociwgaSwgcHJvZ0lkOwogICAgaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgICByZXR1cm4gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CiAgICB9IGVsc2UgewogICAgICAgIGZvciAoaSA9IDA7IGkgPCAzOyBpKyspIHsKICAgICAgICAgICAgcHJvZ0lkID0gcHJvZ0lkc1tpXTsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIHhociA9IG5ldyBBY3RpdmVYT2JqZWN0KHByb2dJZCk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgICAgICAgICBpZiAoeGhyKSB7CiAgICAgICAgICAgICAgICBwcm9nSWRzID0gW3Byb2dJZF07ICAvLyBzbyBmYXN0ZXIgbmV4dCB0aW1lCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBpZiAoIXhocikgewogICAgICAgIHRocm93IG5ldyBFcnJvcigiY3JlYXRlWGhyKCk6IFhNTEh0dHBSZXF1ZXN0IG5vdCBhdmFpbGFibGUiKTsKICAgIH0KCiAgICByZXR1cm4geGhyOwp9OwoKZXhwb3J0cy5sb2FkU2NyaXB0ID0gZnVuY3Rpb24ocGF0aCwgY2FsbGJhY2spIHsKICAgIHZhciBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgIHZhciBzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CgogICAgcy5zcmMgPSBwYXRoOwogICAgaGVhZC5hcHBlbmRDaGlsZChzKTsKCiAgICBpZiAodXNlcmFnZW50LmlzT2xkSUUpCiAgICAgICAgcy5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMucmVhZHlTdGF0ZSA9PSAnbG9hZGVkJyAmJiBjYWxsYmFjaygpOwogICAgICAgIH07CiAgICBlbHNlCiAgICAgICAgcy5vbmxvYWQgPSBjYWxsYmFjazsKfTsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL2xpYi9ldmVudF9lbWl0dGVyJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyBdLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgRXZlbnRFbWl0dGVyID0ge307CgpFdmVudEVtaXR0ZXIuX2VtaXQgPQpFdmVudEVtaXR0ZXIuX2Rpc3BhdGNoRXZlbnQgPSBmdW5jdGlvbihldmVudE5hbWUsIGUpIHsKICAgIHRoaXMuX2V2ZW50UmVnaXN0cnkgPSB0aGlzLl9ldmVudFJlZ2lzdHJ5IHx8IHt9OwogICAgdGhpcy5fZGVmYXVsdEhhbmRsZXJzID0gdGhpcy5fZGVmYXVsdEhhbmRsZXJzIHx8IHt9OwoKICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudFJlZ2lzdHJ5W2V2ZW50TmFtZV0gfHwgW107CiAgICB2YXIgZGVmYXVsdEhhbmRsZXIgPSB0aGlzLl9kZWZhdWx0SGFuZGxlcnNbZXZlbnROYW1lXTsKICAgIGlmICghbGlzdGVuZXJzLmxlbmd0aCAmJiAhZGVmYXVsdEhhbmRsZXIpCiAgICAgICAgcmV0dXJuOwoKICAgIGlmICh0eXBlb2YgZSAhPSAib2JqZWN0IiB8fCAhZSkKICAgICAgICBlID0ge307CgogICAgaWYgKCFlLnR5cGUpCiAgICAgICAgZS50eXBlID0gZXZlbnROYW1lOwogICAgCiAgICBpZiAoIWUuc3RvcFByb3BhZ2F0aW9uKSB7CiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24gPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdGhpcy5wcm9wYWdhdGlvblN0b3BwZWQgPSB0cnVlOwogICAgICAgIH07CiAgICB9CiAgICAKICAgIGlmICghZS5wcmV2ZW50RGVmYXVsdCkgewogICAgICAgIGUucHJldmVudERlZmF1bHQgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdGhpcy5kZWZhdWx0UHJldmVudGVkID0gdHJ1ZTsKICAgICAgICB9OwogICAgfQoKICAgIGZvciAodmFyIGk9MDsgaTxsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICBsaXN0ZW5lcnNbaV0oZSk7CiAgICAgICAgaWYgKGUucHJvcGFnYXRpb25TdG9wcGVkKQogICAgICAgICAgICBicmVhazsKICAgIH0KICAgIAogICAgaWYgKGRlZmF1bHRIYW5kbGVyICYmICFlLmRlZmF1bHRQcmV2ZW50ZWQpCiAgICAgICAgcmV0dXJuIGRlZmF1bHRIYW5kbGVyKGUpOwp9OwoKRXZlbnRFbWl0dGVyLnNldERlZmF1bHRIYW5kbGVyID0gZnVuY3Rpb24oZXZlbnROYW1lLCBjYWxsYmFjaykgewogICAgdGhpcy5fZGVmYXVsdEhhbmRsZXJzID0gdGhpcy5fZGVmYXVsdEhhbmRsZXJzIHx8IHt9OwogICAgCiAgICBpZiAodGhpcy5fZGVmYXVsdEhhbmRsZXJzW2V2ZW50TmFtZV0pCiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJUaGUgZGVmYXVsdCBoYW5kbGVyIGZvciAnIiArIGV2ZW50TmFtZSArICInIGlzIGFscmVhZHkgc2V0Iik7CiAgICAgICAgCiAgICB0aGlzLl9kZWZhdWx0SGFuZGxlcnNbZXZlbnROYW1lXSA9IGNhbGxiYWNrOwp9OwoKRXZlbnRFbWl0dGVyLm9uID0KRXZlbnRFbWl0dGVyLmFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudE5hbWUsIGNhbGxiYWNrKSB7CiAgICB0aGlzLl9ldmVudFJlZ2lzdHJ5ID0gdGhpcy5fZXZlbnRSZWdpc3RyeSB8fCB7fTsKCiAgICB2YXIgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRSZWdpc3RyeVtldmVudE5hbWVdOwogICAgaWYgKCFsaXN0ZW5lcnMpCiAgICAgICAgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRSZWdpc3RyeVtldmVudE5hbWVdID0gW107CgogICAgaWYgKGxpc3RlbmVycy5pbmRleE9mKGNhbGxiYWNrKSA9PSAtMSkKICAgICAgICBsaXN0ZW5lcnMucHVzaChjYWxsYmFjayk7Cn07CgpFdmVudEVtaXR0ZXIucmVtb3ZlTGlzdGVuZXIgPQpFdmVudEVtaXR0ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uKGV2ZW50TmFtZSwgY2FsbGJhY2spIHsKICAgIHRoaXMuX2V2ZW50UmVnaXN0cnkgPSB0aGlzLl9ldmVudFJlZ2lzdHJ5IHx8IHt9OwoKICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudFJlZ2lzdHJ5W2V2ZW50TmFtZV07CiAgICBpZiAoIWxpc3RlbmVycykKICAgICAgICByZXR1cm47CgogICAgdmFyIGluZGV4ID0gbGlzdGVuZXJzLmluZGV4T2YoY2FsbGJhY2spOwogICAgaWYgKGluZGV4ICE9PSAtMSkKICAgICAgICBsaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTsKfTsKCkV2ZW50RW1pdHRlci5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbihldmVudE5hbWUpIHsKICAgIGlmICh0aGlzLl9ldmVudFJlZ2lzdHJ5KSB0aGlzLl9ldmVudFJlZ2lzdHJ5W2V2ZW50TmFtZV0gPSBbXTsKfTsKCmV4cG9ydHMuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyOwoKfSk7CgphY2UuZGVmaW5lKCdhY2Uvc2VsZWN0aW9uJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL29vcCcsICdhY2UvbGliL2xhbmcnLCAnYWNlL2xpYi9ldmVudF9lbWl0dGVyJywgJ2FjZS9yYW5nZSddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgb29wID0gcmVxdWlyZSgiLi9saWIvb29wIik7CnZhciBsYW5nID0gcmVxdWlyZSgiLi9saWIvbGFuZyIpOwp2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgiLi9saWIvZXZlbnRfZW1pdHRlciIpLkV2ZW50RW1pdHRlcjsKdmFyIFJhbmdlID0gcmVxdWlyZSgiLi9yYW5nZSIpLlJhbmdlOwp2YXIgU2VsZWN0aW9uID0gZnVuY3Rpb24oc2Vzc2lvbikgewogICAgdGhpcy5zZXNzaW9uID0gc2Vzc2lvbjsKICAgIHRoaXMuZG9jID0gc2Vzc2lvbi5nZXREb2N1bWVudCgpOwoKICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKTsKICAgIHRoaXMubGVhZCA9IHRoaXMuc2VsZWN0aW9uTGVhZCA9IHRoaXMuZG9jLmNyZWF0ZUFuY2hvcigwLCAwKTsKICAgIHRoaXMuYW5jaG9yID0gdGhpcy5zZWxlY3Rpb25BbmNob3IgPSB0aGlzLmRvYy5jcmVhdGVBbmNob3IoMCwgMCk7CgogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgdGhpcy5sZWFkLm9uKCJjaGFuZ2UiLCBmdW5jdGlvbihlKSB7CiAgICAgICAgc2VsZi5fZW1pdCgiY2hhbmdlQ3Vyc29yIik7CiAgICAgICAgaWYgKCFzZWxmLiRpc0VtcHR5KQogICAgICAgICAgICBzZWxmLl9lbWl0KCJjaGFuZ2VTZWxlY3Rpb24iKTsKICAgICAgICBpZiAoIXNlbGYuJGtlZXBEZXNpcmVkQ29sdW1uT25DaGFuZ2UgJiYgZS5vbGQuY29sdW1uICE9IGUudmFsdWUuY29sdW1uKQogICAgICAgICAgICBzZWxmLiRkZXNpcmVkQ29sdW1uID0gbnVsbDsKICAgIH0pOwoKICAgIHRoaXMuc2VsZWN0aW9uQW5jaG9yLm9uKCJjaGFuZ2UiLCBmdW5jdGlvbigpIHsKICAgICAgICBpZiAoIXNlbGYuJGlzRW1wdHkpCiAgICAgICAgICAgIHNlbGYuX2VtaXQoImNoYW5nZVNlbGVjdGlvbiIpOwogICAgfSk7Cn07CgooZnVuY3Rpb24oKSB7CgogICAgb29wLmltcGxlbWVudCh0aGlzLCBFdmVudEVtaXR0ZXIpOwogICAgdGhpcy5pc0VtcHR5ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuICh0aGlzLiRpc0VtcHR5IHx8ICgKICAgICAgICAgICAgdGhpcy5hbmNob3Iucm93ID09IHRoaXMubGVhZC5yb3cgJiYKICAgICAgICAgICAgdGhpcy5hbmNob3IuY29sdW1uID09IHRoaXMubGVhZC5jb2x1bW4KICAgICAgICApKTsKICAgIH07CiAgICB0aGlzLmlzTXVsdGlMaW5lID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKHRoaXMuaXNFbXB0eSgpKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzLmdldFJhbmdlKCkuaXNNdWx0aUxpbmUoKTsKICAgIH07CiAgICB0aGlzLmdldEN1cnNvciA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLmxlYWQuZ2V0UG9zaXRpb24oKTsKICAgIH07CiAgICB0aGlzLnNldFNlbGVjdGlvbkFuY2hvciA9IGZ1bmN0aW9uKHJvdywgY29sdW1uKSB7CiAgICAgICAgdGhpcy5hbmNob3Iuc2V0UG9zaXRpb24ocm93LCBjb2x1bW4pOwoKICAgICAgICBpZiAodGhpcy4kaXNFbXB0eSkgewogICAgICAgICAgICB0aGlzLiRpc0VtcHR5ID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZVNlbGVjdGlvbiIpOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLmdldFNlbGVjdGlvbkFuY2hvciA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh0aGlzLiRpc0VtcHR5KQogICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRTZWxlY3Rpb25MZWFkKCkKICAgICAgICBlbHNlCiAgICAgICAgICAgIHJldHVybiB0aGlzLmFuY2hvci5nZXRQb3NpdGlvbigpOwogICAgfTsKICAgIHRoaXMuZ2V0U2VsZWN0aW9uTGVhZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLmxlYWQuZ2V0UG9zaXRpb24oKTsKICAgIH07CiAgICB0aGlzLnNoaWZ0U2VsZWN0aW9uID0gZnVuY3Rpb24oY29sdW1ucykgewogICAgICAgIGlmICh0aGlzLiRpc0VtcHR5KSB7CiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvclRvKHRoaXMubGVhZC5yb3csIHRoaXMubGVhZC5jb2x1bW4gKyBjb2x1bW5zKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH07CgogICAgICAgIHZhciBhbmNob3IgPSB0aGlzLmdldFNlbGVjdGlvbkFuY2hvcigpOwogICAgICAgIHZhciBsZWFkID0gdGhpcy5nZXRTZWxlY3Rpb25MZWFkKCk7CgogICAgICAgIHZhciBpc0JhY2t3YXJkcyA9IHRoaXMuaXNCYWNrd2FyZHMoKTsKCiAgICAgICAgaWYgKCFpc0JhY2t3YXJkcyB8fCBhbmNob3IuY29sdW1uICE9PSAwKQogICAgICAgICAgICB0aGlzLnNldFNlbGVjdGlvbkFuY2hvcihhbmNob3Iucm93LCBhbmNob3IuY29sdW1uICsgY29sdW1ucyk7CgogICAgICAgIGlmIChpc0JhY2t3YXJkcyB8fCBsZWFkLmNvbHVtbiAhPT0gMCkgewogICAgICAgICAgICB0aGlzLiRtb3ZlU2VsZWN0aW9uKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8obGVhZC5yb3csIGxlYWQuY29sdW1uICsgY29sdW1ucyk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLmlzQmFja3dhcmRzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGFuY2hvciA9IHRoaXMuYW5jaG9yOwogICAgICAgIHZhciBsZWFkID0gdGhpcy5sZWFkOwogICAgICAgIHJldHVybiAoYW5jaG9yLnJvdyA+IGxlYWQucm93IHx8IChhbmNob3Iucm93ID09IGxlYWQucm93ICYmIGFuY2hvci5jb2x1bW4gPiBsZWFkLmNvbHVtbikpOwogICAgfTsKICAgIHRoaXMuZ2V0UmFuZ2UgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgYW5jaG9yID0gdGhpcy5hbmNob3I7CiAgICAgICAgdmFyIGxlYWQgPSB0aGlzLmxlYWQ7CgogICAgICAgIGlmICh0aGlzLmlzRW1wdHkoKSkKICAgICAgICAgICAgcmV0dXJuIFJhbmdlLmZyb21Qb2ludHMobGVhZCwgbGVhZCk7CgogICAgICAgIGlmICh0aGlzLmlzQmFja3dhcmRzKCkpIHsKICAgICAgICAgICAgcmV0dXJuIFJhbmdlLmZyb21Qb2ludHMobGVhZCwgYW5jaG9yKTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBSYW5nZS5mcm9tUG9pbnRzKGFuY2hvciwgbGVhZCk7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24gPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAoIXRoaXMuJGlzRW1wdHkpIHsKICAgICAgICAgICAgdGhpcy4kaXNFbXB0eSA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZVNlbGVjdGlvbiIpOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLnNlbGVjdEFsbCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBsYXN0Um93ID0gdGhpcy5kb2MuZ2V0TGVuZ3RoKCkgLSAxOwogICAgICAgIHRoaXMuc2V0U2VsZWN0aW9uQW5jaG9yKDAsIDApOwogICAgICAgIHRoaXMubW92ZUN1cnNvclRvKGxhc3RSb3csIHRoaXMuZG9jLmdldExpbmUobGFzdFJvdykubGVuZ3RoKTsKICAgIH07CiAgICB0aGlzLnNldFJhbmdlID0KICAgIHRoaXMuc2V0U2VsZWN0aW9uUmFuZ2UgPSBmdW5jdGlvbihyYW5nZSwgcmV2ZXJzZSkgewogICAgICAgIGlmIChyZXZlcnNlKSB7CiAgICAgICAgICAgIHRoaXMuc2V0U2VsZWN0aW9uQW5jaG9yKHJhbmdlLmVuZC5yb3csIHJhbmdlLmVuZC5jb2x1bW4pOwogICAgICAgICAgICB0aGlzLnNlbGVjdFRvKHJhbmdlLnN0YXJ0LnJvdywgcmFuZ2Uuc3RhcnQuY29sdW1uKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnNldFNlbGVjdGlvbkFuY2hvcihyYW5nZS5zdGFydC5yb3csIHJhbmdlLnN0YXJ0LmNvbHVtbik7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0VG8ocmFuZ2UuZW5kLnJvdywgcmFuZ2UuZW5kLmNvbHVtbik7CiAgICAgICAgfQogICAgICAgIHRoaXMuJGRlc2lyZWRDb2x1bW4gPSBudWxsOwogICAgfTsKCiAgICB0aGlzLiRtb3ZlU2VsZWN0aW9uID0gZnVuY3Rpb24obW92ZXIpIHsKICAgICAgICB2YXIgbGVhZCA9IHRoaXMubGVhZDsKICAgICAgICBpZiAodGhpcy4kaXNFbXB0eSkKICAgICAgICAgICAgdGhpcy5zZXRTZWxlY3Rpb25BbmNob3IobGVhZC5yb3csIGxlYWQuY29sdW1uKTsKCiAgICAgICAgbW92ZXIuY2FsbCh0aGlzKTsKICAgIH07CiAgICB0aGlzLnNlbGVjdFRvID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICB0aGlzLiRtb3ZlU2VsZWN0aW9uKGZ1bmN0aW9uKCkgewogICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JUbyhyb3csIGNvbHVtbik7CiAgICAgICAgfSk7CiAgICB9OwogICAgdGhpcy5zZWxlY3RUb1Bvc2l0aW9uID0gZnVuY3Rpb24ocG9zKSB7CiAgICAgICAgdGhpcy4kbW92ZVNlbGVjdGlvbihmdW5jdGlvbigpIHsKICAgICAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG9Qb3NpdGlvbihwb3MpOwogICAgICAgIH0pOwogICAgfTsKICAgIHRoaXMuc2VsZWN0VXAgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtb3ZlU2VsZWN0aW9uKHRoaXMubW92ZUN1cnNvclVwKTsKICAgIH07CiAgICB0aGlzLnNlbGVjdERvd24gPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtb3ZlU2VsZWN0aW9uKHRoaXMubW92ZUN1cnNvckRvd24pOwogICAgfTsKICAgIHRoaXMuc2VsZWN0UmlnaHQgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtb3ZlU2VsZWN0aW9uKHRoaXMubW92ZUN1cnNvclJpZ2h0KTsKICAgIH07CiAgICB0aGlzLnNlbGVjdExlZnQgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtb3ZlU2VsZWN0aW9uKHRoaXMubW92ZUN1cnNvckxlZnQpOwogICAgfTsKICAgIHRoaXMuc2VsZWN0TGluZVN0YXJ0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kbW92ZVNlbGVjdGlvbih0aGlzLm1vdmVDdXJzb3JMaW5lU3RhcnQpOwogICAgfTsKICAgIHRoaXMuc2VsZWN0TGluZUVuZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJG1vdmVTZWxlY3Rpb24odGhpcy5tb3ZlQ3Vyc29yTGluZUVuZCk7CiAgICB9OwogICAgdGhpcy5zZWxlY3RGaWxlRW5kID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kbW92ZVNlbGVjdGlvbih0aGlzLm1vdmVDdXJzb3JGaWxlRW5kKTsKICAgIH07CiAgICB0aGlzLnNlbGVjdEZpbGVTdGFydCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJG1vdmVTZWxlY3Rpb24odGhpcy5tb3ZlQ3Vyc29yRmlsZVN0YXJ0KTsKICAgIH07CiAgICB0aGlzLnNlbGVjdFdvcmRSaWdodCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJG1vdmVTZWxlY3Rpb24odGhpcy5tb3ZlQ3Vyc29yV29yZFJpZ2h0KTsKICAgIH07CiAgICB0aGlzLnNlbGVjdFdvcmRMZWZ0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kbW92ZVNlbGVjdGlvbih0aGlzLm1vdmVDdXJzb3JXb3JkTGVmdCk7CiAgICB9OwogICAgdGhpcy5nZXRXb3JkUmFuZ2UgPSBmdW5jdGlvbihyb3csIGNvbHVtbikgewogICAgICAgIGlmICh0eXBlb2YgY29sdW1uID09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgIHZhciBjdXJzb3IgPSByb3cgfHwgdGhpcy5sZWFkOwogICAgICAgICAgICByb3cgPSBjdXJzb3Iucm93OwogICAgICAgICAgICBjb2x1bW4gPSBjdXJzb3IuY29sdW1uOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5zZXNzaW9uLmdldFdvcmRSYW5nZShyb3csIGNvbHVtbik7CiAgICB9OwogICAgdGhpcy5zZWxlY3RXb3JkID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5zZXRTZWxlY3Rpb25SYW5nZSh0aGlzLmdldFdvcmRSYW5nZSgpKTsKICAgIH07CiAgICB0aGlzLnNlbGVjdEFXb3JkID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGN1cnNvciA9IHRoaXMuZ2V0Q3Vyc29yKCk7CiAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5zZXNzaW9uLmdldEFXb3JkUmFuZ2UoY3Vyc29yLnJvdywgY3Vyc29yLmNvbHVtbik7CiAgICAgICAgdGhpcy5zZXRTZWxlY3Rpb25SYW5nZShyYW5nZSk7CiAgICB9OwoKICAgIHRoaXMuZ2V0TGluZVJhbmdlID0gZnVuY3Rpb24ocm93LCBleGNsdWRlTGFzdENoYXIpIHsKICAgICAgICB2YXIgcm93U3RhcnQgPSB0eXBlb2Ygcm93ID09ICJudW1iZXIiID8gcm93IDogdGhpcy5sZWFkLnJvdzsKICAgICAgICB2YXIgcm93RW5kOwoKICAgICAgICB2YXIgZm9sZExpbmUgPSB0aGlzLnNlc3Npb24uZ2V0Rm9sZExpbmUocm93U3RhcnQpOwogICAgICAgIGlmIChmb2xkTGluZSkgewogICAgICAgICAgICByb3dTdGFydCA9IGZvbGRMaW5lLnN0YXJ0LnJvdzsKICAgICAgICAgICAgcm93RW5kID0gZm9sZExpbmUuZW5kLnJvdzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByb3dFbmQgPSByb3dTdGFydDsKICAgICAgICB9CiAgICAgICAgaWYgKGV4Y2x1ZGVMYXN0Q2hhcikKICAgICAgICAgICAgcmV0dXJuIG5ldyBSYW5nZShyb3dTdGFydCwgMCwgcm93RW5kLCB0aGlzLnNlc3Npb24uZ2V0TGluZShyb3dFbmQpLmxlbmd0aCk7CiAgICAgICAgZWxzZQogICAgICAgICAgICByZXR1cm4gbmV3IFJhbmdlKHJvd1N0YXJ0LCAwLCByb3dFbmQgKyAxLCAwKTsKICAgIH07CiAgICB0aGlzLnNlbGVjdExpbmUgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnNldFNlbGVjdGlvblJhbmdlKHRoaXMuZ2V0TGluZVJhbmdlKCkpOwogICAgfTsKICAgIHRoaXMubW92ZUN1cnNvclVwID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yQnkoLTEsIDApOwogICAgfTsKICAgIHRoaXMubW92ZUN1cnNvckRvd24gPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLm1vdmVDdXJzb3JCeSgxLCAwKTsKICAgIH07CiAgICB0aGlzLm1vdmVDdXJzb3JMZWZ0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGN1cnNvciA9IHRoaXMubGVhZC5nZXRQb3NpdGlvbigpLAogICAgICAgICAgICBmb2xkOwoKICAgICAgICBpZiAoZm9sZCA9IHRoaXMuc2Vzc2lvbi5nZXRGb2xkQXQoY3Vyc29yLnJvdywgY3Vyc29yLmNvbHVtbiwgLTEpKSB7CiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvclRvKGZvbGQuc3RhcnQucm93LCBmb2xkLnN0YXJ0LmNvbHVtbik7CiAgICAgICAgfSBlbHNlIGlmIChjdXJzb3IuY29sdW1uID09IDApIHsKICAgICAgICAgICAgaWYgKGN1cnNvci5yb3cgPiAwKSB7CiAgICAgICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JUbyhjdXJzb3Iucm93IC0gMSwgdGhpcy5kb2MuZ2V0TGluZShjdXJzb3Iucm93IC0gMSkubGVuZ3RoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgdmFyIHRhYlNpemUgPSB0aGlzLnNlc3Npb24uZ2V0VGFiU2l6ZSgpOwogICAgICAgICAgICBpZiAodGhpcy5zZXNzaW9uLmlzVGFiU3RvcChjdXJzb3IpICYmIHRoaXMuZG9jLmdldExpbmUoY3Vyc29yLnJvdykuc2xpY2UoY3Vyc29yLmNvbHVtbi10YWJTaXplLCBjdXJzb3IuY29sdW1uKS5zcGxpdCgiICIpLmxlbmd0aC0xID09IHRhYlNpemUpCiAgICAgICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JCeSgwLCAtdGFiU2l6ZSk7CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvckJ5KDAsIC0xKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5tb3ZlQ3Vyc29yUmlnaHQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgY3Vyc29yID0gdGhpcy5sZWFkLmdldFBvc2l0aW9uKCksCiAgICAgICAgICAgIGZvbGQ7CiAgICAgICAgaWYgKGZvbGQgPSB0aGlzLnNlc3Npb24uZ2V0Rm9sZEF0KGN1cnNvci5yb3csIGN1cnNvci5jb2x1bW4sIDEpKSB7CiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvclRvKGZvbGQuZW5kLnJvdywgZm9sZC5lbmQuY29sdW1uKTsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAodGhpcy5sZWFkLmNvbHVtbiA9PSB0aGlzLmRvYy5nZXRMaW5lKHRoaXMubGVhZC5yb3cpLmxlbmd0aCkgewogICAgICAgICAgICBpZiAodGhpcy5sZWFkLnJvdyA8IHRoaXMuZG9jLmdldExlbmd0aCgpIC0gMSkgewogICAgICAgICAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8odGhpcy5sZWFkLnJvdyArIDEsIDApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICB2YXIgdGFiU2l6ZSA9IHRoaXMuc2Vzc2lvbi5nZXRUYWJTaXplKCk7CiAgICAgICAgICAgIHZhciBjdXJzb3IgPSB0aGlzLmxlYWQ7CiAgICAgICAgICAgIGlmICh0aGlzLnNlc3Npb24uaXNUYWJTdG9wKGN1cnNvcikgJiYgdGhpcy5kb2MuZ2V0TGluZShjdXJzb3Iucm93KS5zbGljZShjdXJzb3IuY29sdW1uLCBjdXJzb3IuY29sdW1uK3RhYlNpemUpLnNwbGl0KCIgIikubGVuZ3RoLTEgPT0gdGFiU2l6ZSkKICAgICAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvckJ5KDAsIHRhYlNpemUpOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JCeSgwLCAxKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5tb3ZlQ3Vyc29yTGluZVN0YXJ0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHJvdyA9IHRoaXMubGVhZC5yb3c7CiAgICAgICAgdmFyIGNvbHVtbiA9IHRoaXMubGVhZC5jb2x1bW47CiAgICAgICAgdmFyIHNjcmVlblJvdyA9IHRoaXMuc2Vzc2lvbi5kb2N1bWVudFRvU2NyZWVuUm93KHJvdywgY29sdW1uKTsKICAgICAgICB2YXIgZmlyc3RDb2x1bW5Qb3NpdGlvbiA9IHRoaXMuc2Vzc2lvbi5zY3JlZW5Ub0RvY3VtZW50UG9zaXRpb24oc2NyZWVuUm93LCAwKTsKICAgICAgICB2YXIgYmVmb3JlQ3Vyc29yID0gdGhpcy5zZXNzaW9uLmdldERpc3BsYXlMaW5lKAogICAgICAgICAgICByb3csIG51bGwsIGZpcnN0Q29sdW1uUG9zaXRpb24ucm93LAogICAgICAgICAgICBmaXJzdENvbHVtblBvc2l0aW9uLmNvbHVtbgogICAgICAgICk7CgogICAgICAgIHZhciBsZWFkaW5nU3BhY2UgPSBiZWZvcmVDdXJzb3IubWF0Y2goL15ccyovKTsKICAgICAgICBpZiAobGVhZGluZ1NwYWNlWzBdLmxlbmd0aCAhPSBjb2x1bW4gJiYgIXRoaXMuc2Vzc2lvbi4kdXNlRW1hY3NTdHlsZUxpbmVTdGFydCkKICAgICAgICAgICAgZmlyc3RDb2x1bW5Qb3NpdGlvbi5jb2x1bW4gKz0gbGVhZGluZ1NwYWNlWzBdLmxlbmd0aDsKICAgICAgICB0aGlzLm1vdmVDdXJzb3JUb1Bvc2l0aW9uKGZpcnN0Q29sdW1uUG9zaXRpb24pOwogICAgfTsKICAgIHRoaXMubW92ZUN1cnNvckxpbmVFbmQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgbGVhZCA9IHRoaXMubGVhZDsKICAgICAgICB2YXIgbGluZUVuZCA9IHRoaXMuc2Vzc2lvbi5nZXREb2N1bWVudExhc3RSb3dDb2x1bW5Qb3NpdGlvbihsZWFkLnJvdywgbGVhZC5jb2x1bW4pOwogICAgICAgIGlmICh0aGlzLmxlYWQuY29sdW1uID09IGxpbmVFbmQuY29sdW1uKSB7CiAgICAgICAgICAgIHZhciBsaW5lID0gdGhpcy5zZXNzaW9uLmdldExpbmUobGluZUVuZC5yb3cpOwogICAgICAgICAgICBpZiAobGluZUVuZC5jb2x1bW4gPT0gbGluZS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHZhciB0ZXh0RW5kID0gbGluZS5zZWFyY2goL1xzKyQvKTsKICAgICAgICAgICAgICAgIGlmICh0ZXh0RW5kID4gMCkKICAgICAgICAgICAgICAgICAgICBsaW5lRW5kLmNvbHVtbiA9IHRleHRFbmQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMubW92ZUN1cnNvclRvKGxpbmVFbmQucm93LCBsaW5lRW5kLmNvbHVtbik7CiAgICB9OwogICAgdGhpcy5tb3ZlQ3Vyc29yRmlsZUVuZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciByb3cgPSB0aGlzLmRvYy5nZXRMZW5ndGgoKSAtIDE7CiAgICAgICAgdmFyIGNvbHVtbiA9IHRoaXMuZG9jLmdldExpbmUocm93KS5sZW5ndGg7CiAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8ocm93LCBjb2x1bW4pOwogICAgfTsKICAgIHRoaXMubW92ZUN1cnNvckZpbGVTdGFydCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMubW92ZUN1cnNvclRvKDAsIDApOwogICAgfTsKICAgIHRoaXMubW92ZUN1cnNvckxvbmdXb3JkUmlnaHQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgcm93ID0gdGhpcy5sZWFkLnJvdzsKICAgICAgICB2YXIgY29sdW1uID0gdGhpcy5sZWFkLmNvbHVtbjsKICAgICAgICB2YXIgbGluZSA9IHRoaXMuZG9jLmdldExpbmUocm93KTsKICAgICAgICB2YXIgcmlnaHRPZkN1cnNvciA9IGxpbmUuc3Vic3RyaW5nKGNvbHVtbik7CgogICAgICAgIHZhciBtYXRjaDsKICAgICAgICB0aGlzLnNlc3Npb24ubm9uVG9rZW5SZS5sYXN0SW5kZXggPSAwOwogICAgICAgIHRoaXMuc2Vzc2lvbi50b2tlblJlLmxhc3RJbmRleCA9IDA7CiAgICAgICAgdmFyIGZvbGQgPSB0aGlzLnNlc3Npb24uZ2V0Rm9sZEF0KHJvdywgY29sdW1uLCAxKTsKICAgICAgICBpZiAoZm9sZCkgewogICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JUbyhmb2xkLmVuZC5yb3csIGZvbGQuZW5kLmNvbHVtbik7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgaWYgKG1hdGNoID0gdGhpcy5zZXNzaW9uLm5vblRva2VuUmUuZXhlYyhyaWdodE9mQ3Vyc29yKSkgewogICAgICAgICAgICBjb2x1bW4gKz0gdGhpcy5zZXNzaW9uLm5vblRva2VuUmUubGFzdEluZGV4OwogICAgICAgICAgICB0aGlzLnNlc3Npb24ubm9uVG9rZW5SZS5sYXN0SW5kZXggPSAwOwogICAgICAgICAgICByaWdodE9mQ3Vyc29yID0gbGluZS5zdWJzdHJpbmcoY29sdW1uKTsKICAgICAgICB9CiAgICAgICAgaWYgKGNvbHVtbiA+PSBsaW5lLmxlbmd0aCkgewogICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JUbyhyb3csIGxpbmUubGVuZ3RoKTsKICAgICAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yUmlnaHQoKTsKICAgICAgICAgICAgaWYgKHJvdyA8IHRoaXMuZG9jLmdldExlbmd0aCgpIC0gMSkKICAgICAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvcldvcmRSaWdodCgpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGlmIChtYXRjaCA9IHRoaXMuc2Vzc2lvbi50b2tlblJlLmV4ZWMocmlnaHRPZkN1cnNvcikpIHsKICAgICAgICAgICAgY29sdW1uICs9IHRoaXMuc2Vzc2lvbi50b2tlblJlLmxhc3RJbmRleDsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnRva2VuUmUubGFzdEluZGV4ID0gMDsKICAgICAgICB9CgogICAgICAgIHRoaXMubW92ZUN1cnNvclRvKHJvdywgY29sdW1uKTsKICAgIH07CiAgICB0aGlzLm1vdmVDdXJzb3JMb25nV29yZExlZnQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgcm93ID0gdGhpcy5sZWFkLnJvdzsKICAgICAgICB2YXIgY29sdW1uID0gdGhpcy5sZWFkLmNvbHVtbjsKICAgICAgICB2YXIgZm9sZDsKICAgICAgICBpZiAoZm9sZCA9IHRoaXMuc2Vzc2lvbi5nZXRGb2xkQXQocm93LCBjb2x1bW4sIC0xKSkgewogICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JUbyhmb2xkLnN0YXJ0LnJvdywgZm9sZC5zdGFydC5jb2x1bW4pOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB2YXIgc3RyID0gdGhpcy5zZXNzaW9uLmdldEZvbGRTdHJpbmdBdChyb3csIGNvbHVtbiwgLTEpOwogICAgICAgIGlmIChzdHIgPT0gbnVsbCkgewogICAgICAgICAgICBzdHIgPSB0aGlzLmRvYy5nZXRMaW5lKHJvdykuc3Vic3RyaW5nKDAsIGNvbHVtbikKICAgICAgICB9CgogICAgICAgIHZhciBsZWZ0T2ZDdXJzb3IgPSBsYW5nLnN0cmluZ1JldmVyc2Uoc3RyKTsKICAgICAgICB2YXIgbWF0Y2g7CiAgICAgICAgdGhpcy5zZXNzaW9uLm5vblRva2VuUmUubGFzdEluZGV4ID0gMDsKICAgICAgICB0aGlzLnNlc3Npb24udG9rZW5SZS5sYXN0SW5kZXggPSAwOwogICAgICAgIGlmIChtYXRjaCA9IHRoaXMuc2Vzc2lvbi5ub25Ub2tlblJlLmV4ZWMobGVmdE9mQ3Vyc29yKSkgewogICAgICAgICAgICBjb2x1bW4gLT0gdGhpcy5zZXNzaW9uLm5vblRva2VuUmUubGFzdEluZGV4OwogICAgICAgICAgICBsZWZ0T2ZDdXJzb3IgPSBsZWZ0T2ZDdXJzb3Iuc2xpY2UodGhpcy5zZXNzaW9uLm5vblRva2VuUmUubGFzdEluZGV4KTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLm5vblRva2VuUmUubGFzdEluZGV4ID0gMDsKICAgICAgICB9CiAgICAgICAgaWYgKGNvbHVtbiA8PSAwKSB7CiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvclRvKHJvdywgMCk7CiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvckxlZnQoKTsKICAgICAgICAgICAgaWYgKHJvdyA+IDApCiAgICAgICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JXb3JkTGVmdCgpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGlmIChtYXRjaCA9IHRoaXMuc2Vzc2lvbi50b2tlblJlLmV4ZWMobGVmdE9mQ3Vyc29yKSkgewogICAgICAgICAgICBjb2x1bW4gLT0gdGhpcy5zZXNzaW9uLnRva2VuUmUubGFzdEluZGV4OwogICAgICAgICAgICB0aGlzLnNlc3Npb24udG9rZW5SZS5sYXN0SW5kZXggPSAwOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8ocm93LCBjb2x1bW4pOwogICAgfTsKCiAgICB0aGlzLiRzaG9ydFdvcmRFbmRJbmRleCA9IGZ1bmN0aW9uKHJpZ2h0T2ZDdXJzb3IpIHsKICAgICAgICB2YXIgbWF0Y2gsIGluZGV4ID0gMCwgY2g7CiAgICAgICAgdmFyIHdoaXRlc3BhY2VSZSA9IC9ccy87CiAgICAgICAgdmFyIHRva2VuUmUgPSB0aGlzLnNlc3Npb24udG9rZW5SZTsKCiAgICAgICAgdG9rZW5SZS5sYXN0SW5kZXggPSAwOwogICAgICAgIGlmIChtYXRjaCA9IHRoaXMuc2Vzc2lvbi50b2tlblJlLmV4ZWMocmlnaHRPZkN1cnNvcikpIHsKICAgICAgICAgICAgaW5kZXggPSB0aGlzLnNlc3Npb24udG9rZW5SZS5sYXN0SW5kZXg7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgd2hpbGUgKChjaCA9IHJpZ2h0T2ZDdXJzb3JbaW5kZXhdKSAmJiB3aGl0ZXNwYWNlUmUudGVzdChjaCkpCiAgICAgICAgICAgICAgICBpbmRleCArKzsKCiAgICAgICAgICAgIGlmIChpbmRleCA8PSAxKSB7CiAgICAgICAgICAgICAgICB0b2tlblJlLmxhc3RJbmRleCA9IDA7CiAgICAgICAgICAgICAgICAgd2hpbGUgKChjaCA9IHJpZ2h0T2ZDdXJzb3JbaW5kZXhdKSAmJiAhdG9rZW5SZS50ZXN0KGNoKSkgewogICAgICAgICAgICAgICAgICAgIHRva2VuUmUubGFzdEluZGV4ID0gMDsKICAgICAgICAgICAgICAgICAgICBpbmRleCArKzsKICAgICAgICAgICAgICAgICAgICBpZiAod2hpdGVzcGFjZVJlLnRlc3QoY2gpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA+IDIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4LS0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKChjaCA9IHJpZ2h0T2ZDdXJzb3JbaW5kZXhdKSAmJiB3aGl0ZXNwYWNlUmUudGVzdChjaCkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggKys7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPiAyKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdG9rZW5SZS5sYXN0SW5kZXggPSAwOwoKICAgICAgICByZXR1cm4gaW5kZXg7CiAgICB9OwoKICAgIHRoaXMubW92ZUN1cnNvclNob3J0V29yZFJpZ2h0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHJvdyA9IHRoaXMubGVhZC5yb3c7CiAgICAgICAgdmFyIGNvbHVtbiA9IHRoaXMubGVhZC5jb2x1bW47CiAgICAgICAgdmFyIGxpbmUgPSB0aGlzLmRvYy5nZXRMaW5lKHJvdyk7CiAgICAgICAgdmFyIHJpZ2h0T2ZDdXJzb3IgPSBsaW5lLnN1YnN0cmluZyhjb2x1bW4pOwoKICAgICAgICB2YXIgZm9sZCA9IHRoaXMuc2Vzc2lvbi5nZXRGb2xkQXQocm93LCBjb2x1bW4sIDEpOwogICAgICAgIGlmIChmb2xkKQogICAgICAgICAgICByZXR1cm4gdGhpcy5tb3ZlQ3Vyc29yVG8oZm9sZC5lbmQucm93LCBmb2xkLmVuZC5jb2x1bW4pOwoKICAgICAgICBpZiAoY29sdW1uID09IGxpbmUubGVuZ3RoKSB7CiAgICAgICAgICAgIHZhciBsID0gdGhpcy5kb2MuZ2V0TGVuZ3RoKCk7CiAgICAgICAgICAgIGRvIHsgICAgCiAgICAgICAgICAgICAgICByb3crKzsKICAgICAgICAgICAgICAgIHJpZ2h0T2ZDdXJzb3IgPSB0aGlzLmRvYy5nZXRMaW5lKHJvdykKICAgICAgICAgICAgfSB3aGlsZSAocm93IDwgbCAmJiAvXlxzKiQvLnRlc3QocmlnaHRPZkN1cnNvcikpCiAgICAgICAgICAgIAogICAgICAgICAgICBpZiAoIS9eXHMrLy50ZXN0KHJpZ2h0T2ZDdXJzb3IpKQogICAgICAgICAgICAgICAgcmlnaHRPZkN1cnNvciA9ICIiCiAgICAgICAgICAgIGNvbHVtbiA9IDA7CiAgICAgICAgfQoKICAgICAgICB2YXIgaW5kZXggPSB0aGlzLiRzaG9ydFdvcmRFbmRJbmRleChyaWdodE9mQ3Vyc29yKTsKCiAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8ocm93LCBjb2x1bW4gKyBpbmRleCk7CiAgICB9OwoKICAgIHRoaXMubW92ZUN1cnNvclNob3J0V29yZExlZnQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgcm93ID0gdGhpcy5sZWFkLnJvdzsKICAgICAgICB2YXIgY29sdW1uID0gdGhpcy5sZWFkLmNvbHVtbjsKCiAgICAgICAgdmFyIGZvbGQ7CiAgICAgICAgaWYgKGZvbGQgPSB0aGlzLnNlc3Npb24uZ2V0Rm9sZEF0KHJvdywgY29sdW1uLCAtMSkpCiAgICAgICAgICAgIHJldHVybiB0aGlzLm1vdmVDdXJzb3JUbyhmb2xkLnN0YXJ0LnJvdywgZm9sZC5zdGFydC5jb2x1bW4pOwoKICAgICAgICB2YXIgbGluZSA9IHRoaXMuc2Vzc2lvbi5nZXRMaW5lKHJvdykuc3Vic3RyaW5nKDAsIGNvbHVtbik7CiAgICAgICAgaWYgKGNvbHVtbiA9PSAwKSB7CiAgICAgICAgICAgIGRvIHsgICAgCiAgICAgICAgICAgICAgICByb3ctLTsKICAgICAgICAgICAgICAgIGxpbmUgPSB0aGlzLmRvYy5nZXRMaW5lKHJvdyk7CiAgICAgICAgICAgIH0gd2hpbGUgKHJvdyA+IDAgJiYgL15ccyokLy50ZXN0KGxpbmUpKQogICAgICAgICAgICAKICAgICAgICAgICAgY29sdW1uID0gbGluZS5sZW5ndGg7CiAgICAgICAgICAgIGlmICghL1xzKyQvLnRlc3QobGluZSkpCiAgICAgICAgICAgICAgICBsaW5lID0gIiIKICAgICAgICB9CgogICAgICAgIHZhciBsZWZ0T2ZDdXJzb3IgPSBsYW5nLnN0cmluZ1JldmVyc2UobGluZSk7CiAgICAgICAgdmFyIGluZGV4ID0gdGhpcy4kc2hvcnRXb3JkRW5kSW5kZXgobGVmdE9mQ3Vyc29yKTsKCiAgICAgICAgcmV0dXJuIHRoaXMubW92ZUN1cnNvclRvKHJvdywgY29sdW1uIC0gaW5kZXgpOwogICAgfTsKCiAgICB0aGlzLm1vdmVDdXJzb3JXb3JkUmlnaHQgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodGhpcy5zZXNzaW9uLiRzZWxlY3RMb25nV29yZHMpCiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvckxvbmdXb3JkUmlnaHQoKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvclNob3J0V29yZFJpZ2h0KCk7CiAgICB9OwoKICAgIHRoaXMubW92ZUN1cnNvcldvcmRMZWZ0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKHRoaXMuc2Vzc2lvbi4kc2VsZWN0TG9uZ1dvcmRzKQogICAgICAgICAgICB0aGlzLm1vdmVDdXJzb3JMb25nV29yZExlZnQoKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHRoaXMubW92ZUN1cnNvclNob3J0V29yZExlZnQoKTsKICAgIH07CiAgICB0aGlzLm1vdmVDdXJzb3JCeSA9IGZ1bmN0aW9uKHJvd3MsIGNoYXJzKSB7CiAgICAgICAgdmFyIHNjcmVlblBvcyA9IHRoaXMuc2Vzc2lvbi5kb2N1bWVudFRvU2NyZWVuUG9zaXRpb24oCiAgICAgICAgICAgIHRoaXMubGVhZC5yb3csCiAgICAgICAgICAgIHRoaXMubGVhZC5jb2x1bW4KICAgICAgICApOwoKICAgICAgICBpZiAoY2hhcnMgPT09IDApIHsKICAgICAgICAgICAgaWYgKHRoaXMuJGRlc2lyZWRDb2x1bW4pCiAgICAgICAgICAgICAgICBzY3JlZW5Qb3MuY29sdW1uID0gdGhpcy4kZGVzaXJlZENvbHVtbjsKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgdGhpcy4kZGVzaXJlZENvbHVtbiA9IHNjcmVlblBvcy5jb2x1bW47CiAgICAgICAgfQoKICAgICAgICB2YXIgZG9jUG9zID0gdGhpcy5zZXNzaW9uLnNjcmVlblRvRG9jdW1lbnRQb3NpdGlvbihzY3JlZW5Qb3Mucm93ICsgcm93cywgc2NyZWVuUG9zLmNvbHVtbik7CiAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8oZG9jUG9zLnJvdywgZG9jUG9zLmNvbHVtbiArIGNoYXJzLCBjaGFycyA9PT0gMCk7CiAgICB9OwogICAgdGhpcy5tb3ZlQ3Vyc29yVG9Qb3NpdGlvbiA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7CiAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8ocG9zaXRpb24ucm93LCBwb3NpdGlvbi5jb2x1bW4pOwogICAgfTsKICAgIHRoaXMubW92ZUN1cnNvclRvID0gZnVuY3Rpb24ocm93LCBjb2x1bW4sIGtlZXBEZXNpcmVkQ29sdW1uKSB7CiAgICAgICAgdmFyIGZvbGQgPSB0aGlzLnNlc3Npb24uZ2V0Rm9sZEF0KHJvdywgY29sdW1uLCAxKTsKICAgICAgICBpZiAoZm9sZCkgewogICAgICAgICAgICByb3cgPSBmb2xkLnN0YXJ0LnJvdzsKICAgICAgICAgICAgY29sdW1uID0gZm9sZC5zdGFydC5jb2x1bW47CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRrZWVwRGVzaXJlZENvbHVtbk9uQ2hhbmdlID0gdHJ1ZTsKICAgICAgICB0aGlzLmxlYWQuc2V0UG9zaXRpb24ocm93LCBjb2x1bW4pOwogICAgICAgIHRoaXMuJGtlZXBEZXNpcmVkQ29sdW1uT25DaGFuZ2UgPSBmYWxzZTsKCiAgICAgICAgaWYgKCFrZWVwRGVzaXJlZENvbHVtbikKICAgICAgICAgICAgdGhpcy4kZGVzaXJlZENvbHVtbiA9IG51bGw7CiAgICB9OwogICAgdGhpcy5tb3ZlQ3Vyc29yVG9TY3JlZW4gPSBmdW5jdGlvbihyb3csIGNvbHVtbiwga2VlcERlc2lyZWRDb2x1bW4pIHsKICAgICAgICB2YXIgcG9zID0gdGhpcy5zZXNzaW9uLnNjcmVlblRvRG9jdW1lbnRQb3NpdGlvbihyb3csIGNvbHVtbik7CiAgICAgICAgdGhpcy5tb3ZlQ3Vyc29yVG8ocG9zLnJvdywgcG9zLmNvbHVtbiwga2VlcERlc2lyZWRDb2x1bW4pOwogICAgfTsKICAgIHRoaXMuZGV0YWNoID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5sZWFkLmRldGFjaCgpOwogICAgICAgIHRoaXMuYW5jaG9yLmRldGFjaCgpOwogICAgICAgIHRoaXMuc2Vzc2lvbiA9IHRoaXMuZG9jID0gbnVsbDsKICAgIH0KCiAgICB0aGlzLmZyb21PcmllbnRlZFJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHsKICAgICAgICB0aGlzLnNldFNlbGVjdGlvblJhbmdlKHJhbmdlLCByYW5nZS5jdXJzb3IgPT0gcmFuZ2Uuc3RhcnQpOwogICAgICAgIHRoaXMuJGRlc2lyZWRDb2x1bW4gPSByYW5nZS5kZXNpcmVkQ29sdW1uIHx8IHRoaXMuJGRlc2lyZWRDb2x1bW47CiAgICB9CgogICAgdGhpcy50b09yaWVudGVkUmFuZ2UgPSBmdW5jdGlvbihyYW5nZSkgewogICAgICAgIHZhciByID0gdGhpcy5nZXRSYW5nZSgpOwogICAgICAgIGlmIChyYW5nZSkgewogICAgICAgICAgICByYW5nZS5zdGFydC5jb2x1bW4gPSByLnN0YXJ0LmNvbHVtbjsKICAgICAgICAgICAgcmFuZ2Uuc3RhcnQucm93ID0gci5zdGFydC5yb3c7CiAgICAgICAgICAgIHJhbmdlLmVuZC5jb2x1bW4gPSByLmVuZC5jb2x1bW47CiAgICAgICAgICAgIHJhbmdlLmVuZC5yb3cgPSByLmVuZC5yb3c7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmFuZ2UgPSByOwogICAgICAgIH0KCiAgICAgICAgcmFuZ2UuY3Vyc29yID0gdGhpcy5pc0JhY2t3YXJkcygpID8gcmFuZ2Uuc3RhcnQgOiByYW5nZS5lbmQ7CiAgICAgICAgcmFuZ2UuZGVzaXJlZENvbHVtbiA9IHRoaXMuJGRlc2lyZWRDb2x1bW47CiAgICAgICAgcmV0dXJuIHJhbmdlOwogICAgfQoKfSkuY2FsbChTZWxlY3Rpb24ucHJvdG90eXBlKTsKCmV4cG9ydHMuU2VsZWN0aW9uID0gU2VsZWN0aW9uOwp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9yYW5nZScsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CnZhciBSYW5nZSA9IGZ1bmN0aW9uKHN0YXJ0Um93LCBzdGFydENvbHVtbiwgZW5kUm93LCBlbmRDb2x1bW4pIHsKICAgIHRoaXMuc3RhcnQgPSB7CiAgICAgICAgcm93OiBzdGFydFJvdywKICAgICAgICBjb2x1bW46IHN0YXJ0Q29sdW1uCiAgICB9OwoKICAgIHRoaXMuZW5kID0gewogICAgICAgIHJvdzogZW5kUm93LAogICAgICAgIGNvbHVtbjogZW5kQ29sdW1uCiAgICB9Owp9OwoKKGZ1bmN0aW9uKCkgeyAKICAgIHRoaXMuaXNFcXVhbCA9IGZ1bmN0aW9uKHJhbmdlKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnQucm93ID09IHJhbmdlLnN0YXJ0LnJvdyAmJgogICAgICAgICAgICB0aGlzLmVuZC5yb3cgPT0gcmFuZ2UuZW5kLnJvdyAmJgogICAgICAgICAgICB0aGlzLnN0YXJ0LmNvbHVtbiA9PSByYW5nZS5zdGFydC5jb2x1bW4gJiYKICAgICAgICAgICAgdGhpcy5lbmQuY29sdW1uID09IHJhbmdlLmVuZC5jb2x1bW4KICAgIH07IAogICAgdGhpcy50b1N0cmluZyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiAoIlJhbmdlOiBbIiArIHRoaXMuc3RhcnQucm93ICsgIi8iICsgdGhpcy5zdGFydC5jb2x1bW4gKwogICAgICAgICAgICAiXSAtPiBbIiArIHRoaXMuZW5kLnJvdyArICIvIiArIHRoaXMuZW5kLmNvbHVtbiArICJdIik7CiAgICB9OyAKCiAgICB0aGlzLmNvbnRhaW5zID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlKHJvdywgY29sdW1uKSA9PSAwOwogICAgfTsgCiAgICB0aGlzLmNvbXBhcmVSYW5nZSA9IGZ1bmN0aW9uKHJhbmdlKSB7CiAgICAgICAgdmFyIGNtcCwKICAgICAgICAgICAgZW5kID0gcmFuZ2UuZW5kLAogICAgICAgICAgICBzdGFydCA9IHJhbmdlLnN0YXJ0OwoKICAgICAgICBjbXAgPSB0aGlzLmNvbXBhcmUoZW5kLnJvdywgZW5kLmNvbHVtbik7CiAgICAgICAgaWYgKGNtcCA9PSAxKSB7CiAgICAgICAgICAgIGNtcCA9IHRoaXMuY29tcGFyZShzdGFydC5yb3csIHN0YXJ0LmNvbHVtbik7CiAgICAgICAgICAgIGlmIChjbXAgPT0gMSkgewogICAgICAgICAgICAgICAgcmV0dXJuIDI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoY21wID09IDApIHsKICAgICAgICAgICAgICAgIHJldHVybiAxOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKGNtcCA9PSAtMSkgewogICAgICAgICAgICByZXR1cm4gLTI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY21wID0gdGhpcy5jb21wYXJlKHN0YXJ0LnJvdywgc3RhcnQuY29sdW1uKTsKICAgICAgICAgICAgaWYgKGNtcCA9PSAtMSkgewogICAgICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICAgICB9IGVsc2UgaWYgKGNtcCA9PSAxKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gNDI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH07IAogICAgdGhpcy5jb21wYXJlUG9pbnQgPSBmdW5jdGlvbihwKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGFyZShwLnJvdywgcC5jb2x1bW4pOwogICAgfTsgCiAgICB0aGlzLmNvbnRhaW5zUmFuZ2UgPSBmdW5jdGlvbihyYW5nZSkgewogICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmVQb2ludChyYW5nZS5zdGFydCkgPT0gMCAmJiB0aGlzLmNvbXBhcmVQb2ludChyYW5nZS5lbmQpID09IDA7CiAgICB9OwogICAgdGhpcy5pbnRlcnNlY3RzID0gZnVuY3Rpb24ocmFuZ2UpIHsKICAgICAgICB2YXIgY21wID0gdGhpcy5jb21wYXJlUmFuZ2UocmFuZ2UpOwogICAgICAgIHJldHVybiAoY21wID09IC0xIHx8IGNtcCA9PSAwIHx8IGNtcCA9PSAxKTsKICAgIH07CiAgICB0aGlzLmlzRW5kID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICByZXR1cm4gdGhpcy5lbmQucm93ID09IHJvdyAmJiB0aGlzLmVuZC5jb2x1bW4gPT0gY29sdW1uOwogICAgfTsgCiAgICB0aGlzLmlzU3RhcnQgPSBmdW5jdGlvbihyb3csIGNvbHVtbikgewogICAgICAgIHJldHVybiB0aGlzLnN0YXJ0LnJvdyA9PSByb3cgJiYgdGhpcy5zdGFydC5jb2x1bW4gPT0gY29sdW1uOwogICAgfTsgCiAgICB0aGlzLnNldFN0YXJ0ID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICBpZiAodHlwZW9mIHJvdyA9PSAib2JqZWN0IikgewogICAgICAgICAgICB0aGlzLnN0YXJ0LmNvbHVtbiA9IHJvdy5jb2x1bW47CiAgICAgICAgICAgIHRoaXMuc3RhcnQucm93ID0gcm93LnJvdzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnN0YXJ0LnJvdyA9IHJvdzsKICAgICAgICAgICAgdGhpcy5zdGFydC5jb2x1bW4gPSBjb2x1bW47CiAgICAgICAgfQogICAgfTsgCiAgICB0aGlzLnNldEVuZCA9IGZ1bmN0aW9uKHJvdywgY29sdW1uKSB7CiAgICAgICAgaWYgKHR5cGVvZiByb3cgPT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgdGhpcy5lbmQuY29sdW1uID0gcm93LmNvbHVtbjsKICAgICAgICAgICAgdGhpcy5lbmQucm93ID0gcm93LnJvdzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLmVuZC5yb3cgPSByb3c7CiAgICAgICAgICAgIHRoaXMuZW5kLmNvbHVtbiA9IGNvbHVtbjsKICAgICAgICB9CiAgICB9OyAKICAgIHRoaXMuaW5zaWRlID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICBpZiAodGhpcy5jb21wYXJlKHJvdywgY29sdW1uKSA9PSAwKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmlzRW5kKHJvdywgY29sdW1uKSB8fCB0aGlzLmlzU3RhcnQocm93LCBjb2x1bW4pKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9OyAKICAgIHRoaXMuaW5zaWRlU3RhcnQgPSBmdW5jdGlvbihyb3csIGNvbHVtbikgewogICAgICAgIGlmICh0aGlzLmNvbXBhcmUocm93LCBjb2x1bW4pID09IDApIHsKICAgICAgICAgICAgaWYgKHRoaXMuaXNFbmQocm93LCBjb2x1bW4pKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9OyAKICAgIHRoaXMuaW5zaWRlRW5kID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICBpZiAodGhpcy5jb21wYXJlKHJvdywgY29sdW1uKSA9PSAwKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmlzU3RhcnQocm93LCBjb2x1bW4pKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9OwogICAgdGhpcy5jb21wYXJlID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICBpZiAoIXRoaXMuaXNNdWx0aUxpbmUoKSkgewogICAgICAgICAgICBpZiAocm93ID09PSB0aGlzLnN0YXJ0LnJvdykgewogICAgICAgICAgICAgICAgcmV0dXJuIGNvbHVtbiA8IHRoaXMuc3RhcnQuY29sdW1uID8gLTEgOiAoY29sdW1uID4gdGhpcy5lbmQuY29sdW1uID8gMSA6IDApOwogICAgICAgICAgICB9OwogICAgICAgIH0KCiAgICAgICAgaWYgKHJvdyA8IHRoaXMuc3RhcnQucm93KQogICAgICAgICAgICByZXR1cm4gLTE7CgogICAgICAgIGlmIChyb3cgPiB0aGlzLmVuZC5yb3cpCiAgICAgICAgICAgIHJldHVybiAxOwoKICAgICAgICBpZiAodGhpcy5zdGFydC5yb3cgPT09IHJvdykKICAgICAgICAgICAgcmV0dXJuIGNvbHVtbiA+PSB0aGlzLnN0YXJ0LmNvbHVtbiA/IDAgOiAtMTsKCiAgICAgICAgaWYgKHRoaXMuZW5kLnJvdyA9PT0gcm93KQogICAgICAgICAgICByZXR1cm4gY29sdW1uIDw9IHRoaXMuZW5kLmNvbHVtbiA/IDAgOiAxOwoKICAgICAgICByZXR1cm4gMDsKICAgIH07CiAgICB0aGlzLmNvbXBhcmVTdGFydCA9IGZ1bmN0aW9uKHJvdywgY29sdW1uKSB7CiAgICAgICAgaWYgKHRoaXMuc3RhcnQucm93ID09IHJvdyAmJiB0aGlzLnN0YXJ0LmNvbHVtbiA9PSBjb2x1bW4pIHsKICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmUocm93LCBjb2x1bW4pOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLmNvbXBhcmVFbmQgPSBmdW5jdGlvbihyb3csIGNvbHVtbikgewogICAgICAgIGlmICh0aGlzLmVuZC5yb3cgPT0gcm93ICYmIHRoaXMuZW5kLmNvbHVtbiA9PSBjb2x1bW4pIHsKICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29tcGFyZShyb3csIGNvbHVtbik7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuY29tcGFyZUluc2lkZSA9IGZ1bmN0aW9uKHJvdywgY29sdW1uKSB7CiAgICAgICAgaWYgKHRoaXMuZW5kLnJvdyA9PSByb3cgJiYgdGhpcy5lbmQuY29sdW1uID09IGNvbHVtbikgewogICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc3RhcnQucm93ID09IHJvdyAmJiB0aGlzLnN0YXJ0LmNvbHVtbiA9PSBjb2x1bW4pIHsKICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmUocm93LCBjb2x1bW4pOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLmNsaXBSb3dzID0gZnVuY3Rpb24oZmlyc3RSb3csIGxhc3RSb3cpIHsKICAgICAgICBpZiAodGhpcy5lbmQucm93ID4gbGFzdFJvdykgewogICAgICAgICAgICB2YXIgZW5kID0gewogICAgICAgICAgICAgICAgcm93OiBsYXN0Um93KzEsCiAgICAgICAgICAgICAgICBjb2x1bW46IDAKICAgICAgICAgICAgfTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLnN0YXJ0LnJvdyA+IGxhc3RSb3cpIHsKICAgICAgICAgICAgdmFyIHN0YXJ0ID0gewogICAgICAgICAgICAgICAgcm93OiBsYXN0Um93KzEsCiAgICAgICAgICAgICAgICBjb2x1bW46IDAKICAgICAgICAgICAgfTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLnN0YXJ0LnJvdyA8IGZpcnN0Um93KSB7CiAgICAgICAgICAgIHZhciBzdGFydCA9IHsKICAgICAgICAgICAgICAgIHJvdzogZmlyc3RSb3csCiAgICAgICAgICAgICAgICBjb2x1bW46IDAKICAgICAgICAgICAgfTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLmVuZC5yb3cgPCBmaXJzdFJvdykgewogICAgICAgICAgICB2YXIgZW5kID0gewogICAgICAgICAgICAgICAgcm93OiBmaXJzdFJvdywKICAgICAgICAgICAgICAgIGNvbHVtbjogMAogICAgICAgICAgICB9OwogICAgICAgIH0KICAgICAgICByZXR1cm4gUmFuZ2UuZnJvbVBvaW50cyhzdGFydCB8fCB0aGlzLnN0YXJ0LCBlbmQgfHwgdGhpcy5lbmQpOwogICAgfTsKICAgIHRoaXMuZXh0ZW5kID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICB2YXIgY21wID0gdGhpcy5jb21wYXJlKHJvdywgY29sdW1uKTsKCiAgICAgICAgaWYgKGNtcCA9PSAwKQogICAgICAgICAgICByZXR1cm4gdGhpczsKICAgICAgICBlbHNlIGlmIChjbXAgPT0gLTEpCiAgICAgICAgICAgIHZhciBzdGFydCA9IHtyb3c6IHJvdywgY29sdW1uOiBjb2x1bW59OwogICAgICAgIGVsc2UKICAgICAgICAgICAgdmFyIGVuZCA9IHtyb3c6IHJvdywgY29sdW1uOiBjb2x1bW59OwoKICAgICAgICByZXR1cm4gUmFuZ2UuZnJvbVBvaW50cyhzdGFydCB8fCB0aGlzLnN0YXJ0LCBlbmQgfHwgdGhpcy5lbmQpOwogICAgfTsKCiAgICB0aGlzLmlzRW1wdHkgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gKHRoaXMuc3RhcnQucm93ID09IHRoaXMuZW5kLnJvdyAmJiB0aGlzLnN0YXJ0LmNvbHVtbiA9PSB0aGlzLmVuZC5jb2x1bW4pOwogICAgfTsKICAgIHRoaXMuaXNNdWx0aUxpbmUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gKHRoaXMuc3RhcnQucm93ICE9PSB0aGlzLmVuZC5yb3cpOwogICAgfTsKICAgIHRoaXMuY2xvbmUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gUmFuZ2UuZnJvbVBvaW50cyh0aGlzLnN0YXJ0LCB0aGlzLmVuZCk7CiAgICB9OwogICAgdGhpcy5jb2xsYXBzZVJvd3MgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodGhpcy5lbmQuY29sdW1uID09IDApCiAgICAgICAgICAgIHJldHVybiBuZXcgUmFuZ2UodGhpcy5zdGFydC5yb3csIDAsIE1hdGgubWF4KHRoaXMuc3RhcnQucm93LCB0aGlzLmVuZC5yb3ctMSksIDApCiAgICAgICAgZWxzZQogICAgICAgICAgICByZXR1cm4gbmV3IFJhbmdlKHRoaXMuc3RhcnQucm93LCAwLCB0aGlzLmVuZC5yb3csIDApCiAgICB9OwogICAgdGhpcy50b1NjcmVlblJhbmdlID0gZnVuY3Rpb24oc2Vzc2lvbikgewogICAgICAgIHZhciBzY3JlZW5Qb3NTdGFydCA9CiAgICAgICAgICAgIHNlc3Npb24uZG9jdW1lbnRUb1NjcmVlblBvc2l0aW9uKHRoaXMuc3RhcnQpOwogICAgICAgIHZhciBzY3JlZW5Qb3NFbmQgPQogICAgICAgICAgICBzZXNzaW9uLmRvY3VtZW50VG9TY3JlZW5Qb3NpdGlvbih0aGlzLmVuZCk7CgogICAgICAgIHJldHVybiBuZXcgUmFuZ2UoCiAgICAgICAgICAgIHNjcmVlblBvc1N0YXJ0LnJvdywgc2NyZWVuUG9zU3RhcnQuY29sdW1uLAogICAgICAgICAgICBzY3JlZW5Qb3NFbmQucm93LCBzY3JlZW5Qb3NFbmQuY29sdW1uCiAgICAgICAgKTsKICAgIH07Cgp9KS5jYWxsKFJhbmdlLnByb3RvdHlwZSk7ClJhbmdlLmZyb21Qb2ludHMgPSBmdW5jdGlvbihzdGFydCwgZW5kKSB7CiAgICByZXR1cm4gbmV3IFJhbmdlKHN0YXJ0LnJvdywgc3RhcnQuY29sdW1uLCBlbmQucm93LCBlbmQuY29sdW1uKTsKfTsKCmV4cG9ydHMuUmFuZ2UgPSBSYW5nZTsKfSk7CgphY2UuZGVmaW5lKCdhY2UvbW9kZS90ZXh0JywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvdG9rZW5pemVyJywgJ2FjZS9tb2RlL3RleHRfaGlnaGxpZ2h0X3J1bGVzJywgJ2FjZS9tb2RlL2JlaGF2aW91cicsICdhY2UvdW5pY29kZSddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgVG9rZW5pemVyID0gcmVxdWlyZSgiLi4vdG9rZW5pemVyIikuVG9rZW5pemVyOwp2YXIgVGV4dEhpZ2hsaWdodFJ1bGVzID0gcmVxdWlyZSgiLi90ZXh0X2hpZ2hsaWdodF9ydWxlcyIpLlRleHRIaWdobGlnaHRSdWxlczsKdmFyIEJlaGF2aW91ciA9IHJlcXVpcmUoIi4vYmVoYXZpb3VyIikuQmVoYXZpb3VyOwp2YXIgdW5pY29kZSA9IHJlcXVpcmUoIi4uL3VuaWNvZGUiKTsKCnZhciBNb2RlID0gZnVuY3Rpb24oKSB7CiAgICB0aGlzLiR0b2tlbml6ZXIgPSBuZXcgVG9rZW5pemVyKG5ldyBUZXh0SGlnaGxpZ2h0UnVsZXMoKS5nZXRSdWxlcygpKTsKICAgIHRoaXMuJGJlaGF2aW91ciA9IG5ldyBCZWhhdmlvdXIoKTsKfTsKCihmdW5jdGlvbigpIHsKCiAgICB0aGlzLnRva2VuUmUgPSBuZXcgUmVnRXhwKCJeWyIKICAgICAgICArIHVuaWNvZGUucGFja2FnZXMuTAogICAgICAgICsgdW5pY29kZS5wYWNrYWdlcy5NbiArIHVuaWNvZGUucGFja2FnZXMuTWMKICAgICAgICArIHVuaWNvZGUucGFja2FnZXMuTmQKICAgICAgICArIHVuaWNvZGUucGFja2FnZXMuUGMgKyAiXFwkX10rIiwgImciCiAgICApOwogICAgCiAgICB0aGlzLm5vblRva2VuUmUgPSBuZXcgUmVnRXhwKCJeKD86W14iCiAgICAgICAgKyB1bmljb2RlLnBhY2thZ2VzLkwKICAgICAgICArIHVuaWNvZGUucGFja2FnZXMuTW4gKyB1bmljb2RlLnBhY2thZ2VzLk1jCiAgICAgICAgKyB1bmljb2RlLnBhY2thZ2VzLk5kCiAgICAgICAgKyB1bmljb2RlLnBhY2thZ2VzLlBjICsgIlxcJF9dfFxzXSkrIiwgImciCiAgICApOwoKICAgIHRoaXMuZ2V0VG9rZW5pemVyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHRva2VuaXplcjsKICAgIH07CgogICAgdGhpcy50b2dnbGVDb21tZW50TGluZXMgPSBmdW5jdGlvbihzdGF0ZSwgZG9jLCBzdGFydFJvdywgZW5kUm93KSB7CiAgICB9OwoKICAgIHRoaXMuZ2V0TmV4dExpbmVJbmRlbnQgPSBmdW5jdGlvbihzdGF0ZSwgbGluZSwgdGFiKSB7CiAgICAgICAgcmV0dXJuICIiOwogICAgfTsKCiAgICB0aGlzLmNoZWNrT3V0ZGVudCA9IGZ1bmN0aW9uKHN0YXRlLCBsaW5lLCBpbnB1dCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH07CgogICAgdGhpcy5hdXRvT3V0ZGVudCA9IGZ1bmN0aW9uKHN0YXRlLCBkb2MsIHJvdykgewogICAgfTsKCiAgICB0aGlzLiRnZXRJbmRlbnQgPSBmdW5jdGlvbihsaW5lKSB7CiAgICAgICAgdmFyIG1hdGNoID0gbGluZS5tYXRjaCgvXihccyspLyk7CiAgICAgICAgaWYgKG1hdGNoKSB7CiAgICAgICAgICAgIHJldHVybiBtYXRjaFsxXTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAiIjsKICAgIH07CiAgICAKICAgIHRoaXMuY3JlYXRlV29ya2VyID0gZnVuY3Rpb24oc2Vzc2lvbikgewogICAgICAgIHJldHVybiBudWxsOwogICAgfTsKCiAgICB0aGlzLmNyZWF0ZU1vZGVEZWxlZ2F0ZXMgPSBmdW5jdGlvbiAobWFwcGluZykgewogICAgICAgIGlmICghdGhpcy4kZW1iZWRzKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgdGhpcy4kbW9kZXMgPSB7fTsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuJGVtYmVkcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAobWFwcGluZ1t0aGlzLiRlbWJlZHNbaV1dKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtb2Rlc1t0aGlzLiRlbWJlZHNbaV1dID0gbmV3IG1hcHBpbmdbdGhpcy4kZW1iZWRzW2ldXSgpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHZhciBkZWxlZ2F0aW9ucyA9IFsndG9nZ2xlQ29tbWVudExpbmVzJywgJ2dldE5leHRMaW5lSW5kZW50JywgJ2NoZWNrT3V0ZGVudCcsICdhdXRvT3V0ZGVudCcsICd0cmFuc2Zvcm1BY3Rpb24nXTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkZWxlZ2F0aW9ucy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAoZnVuY3Rpb24oc2NvcGUpIHsKICAgICAgICAgICAgICB2YXIgZnVuY3Rpb25OYW1lID0gZGVsZWdhdGlvbnNbaV07CiAgICAgICAgICAgICAgdmFyIGRlZmF1bHRIYW5kbGVyID0gc2NvcGVbZnVuY3Rpb25OYW1lXTsKICAgICAgICAgICAgICBzY29wZVtkZWxlZ2F0aW9uc1tpXV0gPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGRlbGVnYXRvcihmdW5jdGlvbk5hbWUsIGFyZ3VtZW50cywgZGVmYXVsdEhhbmRsZXIpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSAodGhpcykpOwogICAgICAgIH0KICAgIH0KICAgIAogICAgdGhpcy4kZGVsZWdhdG9yID0gZnVuY3Rpb24obWV0aG9kLCBhcmdzLCBkZWZhdWx0SGFuZGxlcikgewogICAgICAgIHZhciBzdGF0ZSA9IGFyZ3NbMF07CiAgICAgICAgCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLiRlbWJlZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKCF0aGlzLiRtb2Rlc1t0aGlzLiRlbWJlZHNbaV1dKSBjb250aW51ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIHZhciBzcGxpdCA9IHN0YXRlLnNwbGl0KHRoaXMuJGVtYmVkc1tpXSk7CiAgICAgICAgICAgIGlmICghc3BsaXRbMF0gJiYgc3BsaXRbMV0pIHsKICAgICAgICAgICAgICAgIGFyZ3NbMF0gPSBzcGxpdFsxXTsKICAgICAgICAgICAgICAgIHZhciBtb2RlID0gdGhpcy4kbW9kZXNbdGhpcy4kZW1iZWRzW2ldXTsKICAgICAgICAgICAgICAgIHJldHVybiBtb2RlW21ldGhvZF0uYXBwbHkobW9kZSwgYXJncyk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdmFyIHJldCA9IGRlZmF1bHRIYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3MpOwogICAgICAgIHJldHVybiBkZWZhdWx0SGFuZGxlciA/IHJldCA6IHVuZGVmaW5lZDsKICAgIH07CiAgICAKICAgIHRoaXMudHJhbnNmb3JtQWN0aW9uID0gZnVuY3Rpb24oc3RhdGUsIGFjdGlvbiwgZWRpdG9yLCBzZXNzaW9uLCBwYXJhbSkgewogICAgICAgIGlmICh0aGlzLiRiZWhhdmlvdXIpIHsKICAgICAgICAgICAgdmFyIGJlaGF2aW91cnMgPSB0aGlzLiRiZWhhdmlvdXIuZ2V0QmVoYXZpb3VycygpOwogICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gYmVoYXZpb3VycykgewogICAgICAgICAgICAgICAgaWYgKGJlaGF2aW91cnNba2V5XVthY3Rpb25dKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHJldCA9IGJlaGF2aW91cnNba2V5XVthY3Rpb25dLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJldCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmV0OwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIAp9KS5jYWxsKE1vZGUucHJvdG90eXBlKTsKCmV4cG9ydHMuTW9kZSA9IE1vZGU7Cn0pOwoKYWNlLmRlZmluZSgnYWNlL3Rva2VuaXplcicsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CnZhciBUb2tlbml6ZXIgPSBmdW5jdGlvbihydWxlcywgZmxhZykgewogICAgZmxhZyA9IGZsYWcgPyAiZyIgKyBmbGFnIDogImciOwogICAgdGhpcy5zdGF0ZXMgPSBydWxlczsKCiAgICB0aGlzLnJlZ0V4cHMgPSB7fTsKICAgIHRoaXMubWF0Y2hNYXBwaW5ncyA9IHt9OwogICAgZm9yICh2YXIga2V5IGluIHRoaXMuc3RhdGVzKSB7CiAgICAgICAgdmFyIHN0YXRlID0gdGhpcy5zdGF0ZXNba2V5XTsKICAgICAgICB2YXIgcnVsZVJlZ0V4cHMgPSBbXTsKICAgICAgICB2YXIgbWF0Y2hUb3RhbCA9IDA7CiAgICAgICAgdmFyIG1hcHBpbmcgPSB0aGlzLm1hdGNoTWFwcGluZ3Nba2V5XSA9IHtkZWZhdWx0VG9rZW46ICJ0ZXh0In07CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RhdGUubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIHJ1bGUgPSBzdGF0ZVtpXTsKICAgICAgICAgICAgaWYgKHJ1bGUuZGVmYXVsdFRva2VuKSB7CiAgICAgICAgICAgICAgICBtYXBwaW5nLmRlZmF1bHRUb2tlbiA9IHJ1bGUuZGVmYXVsdFRva2VuOwogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHJ1bGUucmVnZXggaW5zdGFuY2VvZiBSZWdFeHApCiAgICAgICAgICAgICAgICBydWxlLnJlZ2V4ID0gcnVsZS5yZWdleC50b1N0cmluZygpLnNsaWNlKDEsIC0xKTsKICAgICAgICAgICAgdmFyIGFkanVzdGVkcmVnZXggPSBydWxlLnJlZ2V4OwogICAgICAgICAgICB2YXIgbWF0Y2hjb3VudCA9IG5ldyBSZWdFeHAoIig/OigiICsgYWRqdXN0ZWRyZWdleCArICIpfCguKSkiKS5leGVjKCJhIikubGVuZ3RoIC0gMjsKICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocnVsZS50b2tlbikpIHsKICAgICAgICAgICAgICAgIGlmIChydWxlLnRva2VuLmxlbmd0aCA9PSAxKSB7CiAgICAgICAgICAgICAgICAgICAgcnVsZS50b2tlbiA9IHJ1bGUudG9rZW5bMF07CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHJ1bGUudG9rZW5BcnJheSA9IHJ1bGUudG9rZW47CiAgICAgICAgICAgICAgICAgICAgcnVsZS50b2tlbiA9IHRoaXMuJGFycmF5VG9rZW5zOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAobWF0Y2hjb3VudCA+IDEpIHsKICAgICAgICAgICAgICAgIGlmICgvXFxcZC8udGVzdChydWxlLnJlZ2V4KSkgewogICAgICAgICAgICAgICAgICAgIGFkanVzdGVkcmVnZXggPSBydWxlLnJlZ2V4LnJlcGxhY2UoL1xcKFswLTldKykvZywgZnVuY3Rpb24gKG1hdGNoLCBkaWdpdCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gIlxcIiArIChwYXJzZUludChkaWdpdCwgMTApICsgbWF0Y2hUb3RhbCArIDEpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBtYXRjaGNvdW50ID0gMTsKICAgICAgICAgICAgICAgICAgICBhZGp1c3RlZHJlZ2V4ID0gdGhpcy5yZW1vdmVDYXB0dXJpbmdHcm91cHMocnVsZS5yZWdleCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoIXJ1bGUuc3BsaXRSZWdleCkKICAgICAgICAgICAgICAgICAgICBydWxlLnNwbGl0UmVnZXggPSB0aGlzLmNyZWF0ZVNwbGl0dGVyUmVnZXhwKHJ1bGUucmVnZXgsIGZsYWcpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBtYXBwaW5nW21hdGNoVG90YWxdID0gaTsKICAgICAgICAgICAgbWF0Y2hUb3RhbCArPSBtYXRjaGNvdW50OwoKICAgICAgICAgICAgcnVsZVJlZ0V4cHMucHVzaChhZGp1c3RlZHJlZ2V4KTsKICAgICAgICB9CgogICAgICAgIHRoaXMucmVnRXhwc1trZXldID0gbmV3IFJlZ0V4cCgiKCIgKyBydWxlUmVnRXhwcy5qb2luKCIpfCgiKSArICIpfCgkKSIsIGZsYWcpOwogICAgfQp9OwoKKGZ1bmN0aW9uKCkgewogICAgdGhpcy4kYXJyYXlUb2tlbnMgPSBmdW5jdGlvbihzdHIpIHsKICAgICAgICBpZiAoIXN0cikKICAgICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgIHZhciB2YWx1ZXMgPSBzdHIuc3BsaXQodGhpcy5zcGxpdFJlZ2V4KQogICAgICAgIHZhciB0b2tlbnMgPSBbXTsKICAgICAgICB2YXIgdHlwZXMgPSB0aGlzLnRva2VuQXJyYXk7CiAgICAgICAgaWYgKHR5cGVzLmxlbmd0aCAhPSB2YWx1ZXMubGVuZ3RoIC0gMikgewogICAgICAgICAgICBpZiAod2luZG93LmNvbnNvbGUpCiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKHR5cGVzLmxlbmd0aCAsIHZhbHVlcy5sZW5ndGggLSAyLCBzdHIsIHRoaXMuc3BsaXRSZWdleCk7CiAgICAgICAgICAgIHJldHVybiBbe3R5cGU6ICJlcnJvci5pbnZhbGlkIiwgdmFsdWU6IHN0cn1dOwogICAgICAgIH0KICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHR5cGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGlmICh2YWx1ZXNbaSArIDFdKSB7CiAgICAgICAgICAgICAgICB0b2tlbnNbdG9rZW5zLmxlbmd0aF0gPSB7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZXNbaV0sCiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlc1tpICsgMV0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRva2VuczsKICAgIH07CiAgICAKICAgIHRoaXMucmVtb3ZlQ2FwdHVyaW5nR3JvdXBzID0gZnVuY3Rpb24oc3JjKSB7CiAgICAgICAgdmFyIHIgPSBzcmMucmVwbGFjZSgKICAgICAgICAgICAgL1xbKD86XFwufFteXF1dKSo/XF18XFwufFwoXD9bOj0hXXwoXCgpL2csCiAgICAgICAgICAgIGZ1bmN0aW9uKHgsIHkpIHtyZXR1cm4geSA/ICIoPzoiIDogeDt9CiAgICAgICAgKTsKICAgICAgICByZXR1cm4gcjsKICAgIH07CiAgICAKICAgIHRoaXMuY3JlYXRlU3BsaXR0ZXJSZWdleHAgPSBmdW5jdGlvbihzcmMsIGZsYWcpIHsKICAgICAgICBzcmMgPSBzcmMucmVwbGFjZSgvXChcPz0oW14oKV18XFwuKSo/XCkkLywgIiIpOwogICAgICAgIHJldHVybiBuZXcgUmVnRXhwKHNyYywgZmxhZyk7CiAgICB9OwogICAgdGhpcy5nZXRMaW5lVG9rZW5zID0gZnVuY3Rpb24obGluZSwgc3RhcnRTdGF0ZSkgewogICAgICAgIGlmIChzdGFydFN0YXRlICYmIHR5cGVvZiBzdGFydFN0YXRlICE9ICJzdHJpbmciKSB7CiAgICAgICAgICAgIHZhciBzdGFjayA9IHN0YXJ0U3RhdGUuc2xpY2UoMCk7CiAgICAgICAgICAgIHN0YXJ0U3RhdGUgPSBzdGFja1swXTsKICAgICAgICB9IGVsc2UKICAgICAgICAgICAgdmFyIHN0YWNrID0gW107CgogICAgICAgIHZhciBjdXJyZW50U3RhdGUgPSBzdGFydFN0YXRlIHx8ICJzdGFydCI7CiAgICAgICAgdmFyIHN0YXRlID0gdGhpcy5zdGF0ZXNbY3VycmVudFN0YXRlXTsKICAgICAgICB2YXIgbWFwcGluZyA9IHRoaXMubWF0Y2hNYXBwaW5nc1tjdXJyZW50U3RhdGVdOwogICAgICAgIHZhciByZSA9IHRoaXMucmVnRXhwc1tjdXJyZW50U3RhdGVdOwogICAgICAgIHJlLmxhc3RJbmRleCA9IDA7CgogICAgICAgIHZhciBtYXRjaCwgdG9rZW5zID0gW107CiAgICAgICAgdmFyIGxhc3RJbmRleCA9IDA7CgogICAgICAgIHZhciB0b2tlbiA9IHt0eXBlOiBudWxsLCB2YWx1ZTogIiJ9OwoKICAgICAgICB3aGlsZSAobWF0Y2ggPSByZS5leGVjKGxpbmUpKSB7CiAgICAgICAgICAgIHZhciB0eXBlID0gbWFwcGluZy5kZWZhdWx0VG9rZW47CiAgICAgICAgICAgIHZhciBydWxlID0gbnVsbDsKICAgICAgICAgICAgdmFyIHZhbHVlID0gbWF0Y2hbMF07CiAgICAgICAgICAgIHZhciBpbmRleCA9IHJlLmxhc3RJbmRleDsKCiAgICAgICAgICAgIGlmIChpbmRleCAtIHZhbHVlLmxlbmd0aCA+IGxhc3RJbmRleCkgewogICAgICAgICAgICAgICAgdmFyIHNraXBwZWQgPSBsaW5lLnN1YnN0cmluZyhsYXN0SW5kZXgsIGluZGV4IC0gdmFsdWUubGVuZ3RoKTsKICAgICAgICAgICAgICAgIGlmICh0b2tlbi50eXBlID09IHR5cGUpIHsKICAgICAgICAgICAgICAgICAgICB0b2tlbi52YWx1ZSArPSBza2lwcGVkOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW4udHlwZSkKICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5zLnB1c2godG9rZW4pOwogICAgICAgICAgICAgICAgICAgIHRva2VuID0ge3R5cGU6IHR5cGUsIHZhbHVlOiBza2lwcGVkfTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtYXRjaC5sZW5ndGgtMjsgaSsrKSB7CiAgICAgICAgICAgICAgICBpZiAobWF0Y2hbaSArIDFdID09PSB1bmRlZmluZWQpCiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CgogICAgICAgICAgICAgICAgcnVsZSA9IHN0YXRlW21hcHBpbmdbaV1dOwogICAgICAgICAgICAgICAgdHlwZSA9IHR5cGVvZiBydWxlLnRva2VuID09ICJmdW5jdGlvbiIKICAgICAgICAgICAgICAgICAgICA/IHJ1bGUudG9rZW4odmFsdWUsIGN1cnJlbnRTdGF0ZSwgc3RhY2spCiAgICAgICAgICAgICAgICAgICAgOiBydWxlLnRva2VuOwoKICAgICAgICAgICAgICAgIGlmIChydWxlLm5leHQpIHsKICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3RhdGUgPSBydWxlLm5leHQ7CiAgICAgICAgICAgICAgICAgICAgc3RhdGUgPSB0aGlzLnN0YXRlc1tjdXJyZW50U3RhdGVdOwogICAgICAgICAgICAgICAgICAgIGlmICghc3RhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUgJiYgY29uc29sZS5lcnJvciAmJiBjb25zb2xlLmVycm9yKGN1cnJlbnRTdGF0ZSwgImRvZXNuJ3QgZXhpc3QiKTsKICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFN0YXRlID0gInN0YXJ0IjsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUgPSB0aGlzLnN0YXRlc1tjdXJyZW50U3RhdGVdOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBtYXBwaW5nID0gdGhpcy5tYXRjaE1hcHBpbmdzW2N1cnJlbnRTdGF0ZV07CiAgICAgICAgICAgICAgICAgICAgbGFzdEluZGV4ID0gaW5kZXg7CiAgICAgICAgICAgICAgICAgICAgcmUgPSB0aGlzLnJlZ0V4cHNbY3VycmVudFN0YXRlXTsKICAgICAgICAgICAgICAgICAgICByZS5sYXN0SW5kZXggPSBpbmRleDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodmFsdWUpIHsKICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdHlwZSA9PSAic3RyaW5nIikgewogICAgICAgICAgICAgICAgICAgIGlmICgoIXJ1bGUgfHwgcnVsZS5tZXJnZSAhPT0gZmFsc2UpICYmIHRva2VuLnR5cGUgPT09IHR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW4udmFsdWUgKz0gdmFsdWU7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRva2VuLnR5cGUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlbnMucHVzaCh0b2tlbik7CiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuID0ge3R5cGU6IHR5cGUsIHZhbHVlOiB2YWx1ZX07CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW4udHlwZSkKICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5zLnB1c2godG9rZW4pOwogICAgICAgICAgICAgICAgICAgIHRva2VuID0ge3R5cGU6IG51bGwsIHZhbHVlOiAiIn07CiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0eXBlLmxlbmd0aDsgaSsrKQogICAgICAgICAgICAgICAgICAgICAgICB0b2tlbnMucHVzaCh0eXBlW2ldKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKGxhc3RJbmRleCA9PSBsaW5lLmxlbmd0aCkKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgbGFzdEluZGV4ID0gaW5kZXg7CiAgICAgICAgfQoKICAgICAgICBpZiAodG9rZW4udHlwZSkKICAgICAgICAgICAgdG9rZW5zLnB1c2godG9rZW4pOwoKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0b2tlbnMgOiB0b2tlbnMsCiAgICAgICAgICAgIHN0YXRlIDogc3RhY2subGVuZ3RoID8gc3RhY2sgOiBjdXJyZW50U3RhdGUKICAgICAgICB9OwogICAgfTsKCn0pLmNhbGwoVG9rZW5pemVyLnByb3RvdHlwZSk7CgpleHBvcnRzLlRva2VuaXplciA9IFRva2VuaXplcjsKfSk7CgphY2UuZGVmaW5lKCdhY2UvbW9kZS90ZXh0X2hpZ2hsaWdodF9ydWxlcycsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9sYW5nJ10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBsYW5nID0gcmVxdWlyZSgiLi4vbGliL2xhbmciKTsKCnZhciBUZXh0SGlnaGxpZ2h0UnVsZXMgPSBmdW5jdGlvbigpIHsKCiAgICB0aGlzLiRydWxlcyA9IHsKICAgICAgICAic3RhcnQiIDogW3sKICAgICAgICAgICAgdG9rZW4gOiAiZW1wdHlfbGluZSIsCiAgICAgICAgICAgIHJlZ2V4IDogJ14kJwogICAgICAgIH0sIHsKICAgICAgICAgICAgdG9rZW4gOiAidGV4dCIsCiAgICAgICAgICAgIHJlZ2V4IDogIi4rIgogICAgICAgIH1dCiAgICB9Owp9OwoKKGZ1bmN0aW9uKCkgewoKICAgIHRoaXMuYWRkUnVsZXMgPSBmdW5jdGlvbihydWxlcywgcHJlZml4KSB7CiAgICAgICAgZm9yICh2YXIga2V5IGluIHJ1bGVzKSB7CiAgICAgICAgICAgIHZhciBzdGF0ZSA9IHJ1bGVzW2tleV07CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RhdGUubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIHZhciBydWxlID0gc3RhdGVbaV07CiAgICAgICAgICAgICAgICBpZiAocnVsZS5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgcnVsZS5uZXh0ID0gcHJlZml4ICsgcnVsZS5uZXh0OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuJHJ1bGVzW3ByZWZpeCArIGtleV0gPSBzdGF0ZTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuZ2V0UnVsZXMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kcnVsZXM7CiAgICB9OwoKICAgIHRoaXMuZW1iZWRSdWxlcyA9IGZ1bmN0aW9uIChIaWdobGlnaHRSdWxlcywgcHJlZml4LCBlc2NhcGVSdWxlcywgc3RhdGVzLCBhcHBlbmQpIHsKICAgICAgICB2YXIgZW1iZWRSdWxlcyA9IG5ldyBIaWdobGlnaHRSdWxlcygpLmdldFJ1bGVzKCk7CiAgICAgICAgaWYgKHN0YXRlcykgewogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0YXRlcy5sZW5ndGg7IGkrKykKICAgICAgICAgICAgICAgIHN0YXRlc1tpXSA9IHByZWZpeCArIHN0YXRlc1tpXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzdGF0ZXMgPSBbXTsKICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGVtYmVkUnVsZXMpCiAgICAgICAgICAgICAgICBzdGF0ZXMucHVzaChwcmVmaXggKyBrZXkpOwogICAgICAgIH0KICAgICAgICAKICAgICAgICB0aGlzLmFkZFJ1bGVzKGVtYmVkUnVsZXMsIHByZWZpeCk7CgogICAgICAgIGlmIChlc2NhcGVSdWxlcykgewogICAgICAgICAgICB2YXIgYWRkUnVsZXMgPSBBcnJheS5wcm90b3R5cGVbYXBwZW5kID8gInB1c2giIDogInVuc2hpZnQiXTsKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGF0ZXMubGVuZ3RoOyBpKyspCiAgICAgICAgICAgICAgICBhZGRSdWxlcy5hcHBseSh0aGlzLiRydWxlc1tzdGF0ZXNbaV1dLCBsYW5nLmRlZXBDb3B5KGVzY2FwZVJ1bGVzKSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoIXRoaXMuJGVtYmVkcykKICAgICAgICAgICAgdGhpcy4kZW1iZWRzID0gW107CiAgICAgICAgdGhpcy4kZW1iZWRzLnB1c2gocHJlZml4KTsKICAgIH0KCiAgICB0aGlzLmdldEVtYmVkcyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRlbWJlZHM7CiAgICB9OwogICAgCiAgICB0aGlzLm5vcm1hbGl6ZVJ1bGVzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGlkID0gMDsKICAgICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy4kcnVsZXMpIHsKICAgICAgICAgICAgdmFyIHN0YXRlID0gdGhpcy4kcnVsZXNba2V5XTsKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGF0ZS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgdmFyIHJ1bGUgPSBzdGF0ZVtpXTsKICAgICAgICAgICAgICAgIGlmIChydWxlLm5leHQgJiYgQXJyYXkuaXNBcnJheShydWxlLm5leHQpKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXRlTmFtZSA9IHJ1bGUuc3RhdGVOYW1lIHx8ICgic3RhdGUiICsgaWQrKyk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcnVsZXNbc3RhdGVOYW1lXSA9IHJ1bGUubmV4dDsKICAgICAgICAgICAgICAgICAgICBydWxlLm5leHQgPSBzdGF0ZU5hbWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAocnVsZS5ydWxlcykgewogICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciByIGluIHJ1bGUucnVsZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuJHJ1bGVzW3JdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy4kcnVsZXNbcl0ucHVzaCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRydWxlc1tyXS5wdXNoLmFwcGx5KHRoaXMuJHJ1bGVzW3JdLCBydWxlLnJ1bGVzW3JdKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHJ1bGVzW3JdID0gcnVsZS5ydWxlc1tyXTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChydWxlLmluY2x1ZGUgfHwgdHlwZW9mIHJ1bGUgPT0gInN0cmluZyIpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYXJncyA9IFtpLCAxXS5jb25jYXQodGhpcy4kcnVsZXNbcnVsZS5pbmNsdWRlIHx8IHJ1bGVdKTsKICAgICAgICAgICAgICAgICAgICBpZiAocnVsZS5ub0VzY2FwZSkKICAgICAgICAgICAgICAgICAgICAgICAgYXJncyA9IGFyZ3MuZmlsdGVyKGZ1bmN0aW9uKHgpIHtyZXR1cm4gIXgubmV4dDt9KTsKICAgICAgICAgICAgICAgICAgICBzdGF0ZS5zcGxpY2UuYXBwbHkoc3RhdGUsIGFyZ3MpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLmNyZWF0ZUtleXdvcmRNYXBwZXIgPSBmdW5jdGlvbihtYXAsIGRlZmF1bHRUb2tlbiwgaWdub3JlQ2FzZSwgc3BsaXRDaGFyKSB7CiAgICAgICAgdmFyIGtleXdvcmRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTsKICAgICAgICBPYmplY3Qua2V5cyhtYXApLmZvckVhY2goZnVuY3Rpb24oY2xhc3NOYW1lKSB7CiAgICAgICAgICAgIHZhciBhID0gbWFwW2NsYXNzTmFtZV07CiAgICAgICAgICAgIGlmIChpZ25vcmVDYXNlKQogICAgICAgICAgICAgICAgYSA9IGEudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgdmFyIGxpc3QgPSBhLnNwbGl0KHNwbGl0Q2hhciB8fCAifCIpOwogICAgICAgICAgICBmb3IgKHZhciBpID0gbGlzdC5sZW5ndGg7IGktLTsgKQogICAgICAgICAgICAgICAga2V5d29yZHNbbGlzdFtpXV0gPSBjbGFzc05hbWU7CiAgICAgICAgfSk7CiAgICAgICAgbWFwID0gbnVsbDsKICAgICAgICByZXR1cm4gaWdub3JlQ2FzZQogICAgICAgICAgICA/IGZ1bmN0aW9uKHZhbHVlKSB7cmV0dXJuIGtleXdvcmRzW3ZhbHVlLnRvTG93ZXJDYXNlKCldIHx8IGRlZmF1bHRUb2tlbiB9CiAgICAgICAgICAgIDogZnVuY3Rpb24odmFsdWUpIHtyZXR1cm4ga2V5d29yZHNbdmFsdWVdIHx8IGRlZmF1bHRUb2tlbiB9OwogICAgfQoKICAgIHRoaXMuZ2V0S2V5d29yZHMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4ka2V5d29yZHM7CiAgICB9OwoKfSkuY2FsbChUZXh0SGlnaGxpZ2h0UnVsZXMucHJvdG90eXBlKTsKCmV4cG9ydHMuVGV4dEhpZ2hsaWdodFJ1bGVzID0gVGV4dEhpZ2hsaWdodFJ1bGVzOwp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9tb2RlL2JlaGF2aW91cicsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIEJlaGF2aW91ciA9IGZ1bmN0aW9uKCkgewogICB0aGlzLiRiZWhhdmlvdXJzID0ge307Cn07CgooZnVuY3Rpb24gKCkgewoKICAgIHRoaXMuYWRkID0gZnVuY3Rpb24gKG5hbWUsIGFjdGlvbiwgY2FsbGJhY2spIHsKICAgICAgICBzd2l0Y2ggKHVuZGVmaW5lZCkgewogICAgICAgICAgY2FzZSB0aGlzLiRiZWhhdmlvdXJzOgogICAgICAgICAgICAgIHRoaXMuJGJlaGF2aW91cnMgPSB7fTsKICAgICAgICAgIGNhc2UgdGhpcy4kYmVoYXZpb3Vyc1tuYW1lXToKICAgICAgICAgICAgICB0aGlzLiRiZWhhdmlvdXJzW25hbWVdID0ge307CiAgICAgICAgfQogICAgICAgIHRoaXMuJGJlaGF2aW91cnNbbmFtZV1bYWN0aW9uXSA9IGNhbGxiYWNrOwogICAgfQogICAgCiAgICB0aGlzLmFkZEJlaGF2aW91cnMgPSBmdW5jdGlvbiAoYmVoYXZpb3VycykgewogICAgICAgIGZvciAodmFyIGtleSBpbiBiZWhhdmlvdXJzKSB7CiAgICAgICAgICAgIGZvciAodmFyIGFjdGlvbiBpbiBiZWhhdmlvdXJzW2tleV0pIHsKICAgICAgICAgICAgICAgIHRoaXMuYWRkKGtleSwgYWN0aW9uLCBiZWhhdmlvdXJzW2tleV1bYWN0aW9uXSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICAKICAgIHRoaXMucmVtb3ZlID0gZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgICBpZiAodGhpcy4kYmVoYXZpb3VycyAmJiB0aGlzLiRiZWhhdmlvdXJzW25hbWVdKSB7CiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLiRiZWhhdmlvdXJzW25hbWVdOwogICAgICAgIH0KICAgIH0KICAgIAogICAgdGhpcy5pbmhlcml0ID0gZnVuY3Rpb24gKG1vZGUsIGZpbHRlcikgewogICAgICAgIGlmICh0eXBlb2YgbW9kZSA9PT0gImZ1bmN0aW9uIikgewogICAgICAgICAgICB2YXIgYmVoYXZpb3VycyA9IG5ldyBtb2RlKCkuZ2V0QmVoYXZpb3VycyhmaWx0ZXIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBiZWhhdmlvdXJzID0gbW9kZS5nZXRCZWhhdmlvdXJzKGZpbHRlcik7CiAgICAgICAgfQogICAgICAgIHRoaXMuYWRkQmVoYXZpb3VycyhiZWhhdmlvdXJzKTsKICAgIH0KICAgIAogICAgdGhpcy5nZXRCZWhhdmlvdXJzID0gZnVuY3Rpb24gKGZpbHRlcikgewogICAgICAgIGlmICghZmlsdGVyKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRiZWhhdmlvdXJzOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciByZXQgPSB7fQogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZpbHRlci5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuJGJlaGF2aW91cnNbZmlsdGVyW2ldXSkgewogICAgICAgICAgICAgICAgICAgIHJldFtmaWx0ZXJbaV1dID0gdGhpcy4kYmVoYXZpb3Vyc1tmaWx0ZXJbaV1dOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByZXQ7CiAgICAgICAgfQogICAgfQoKfSkuY2FsbChCZWhhdmlvdXIucHJvdG90eXBlKTsKCmV4cG9ydHMuQmVoYXZpb3VyID0gQmVoYXZpb3VyOwp9KTsKYWNlLmRlZmluZSgnYWNlL3VuaWNvZGUnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnIF0sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewpleHBvcnRzLnBhY2thZ2VzID0ge307CgphZGRVbmljb2RlUGFja2FnZSh7CiAgICBMOiAgIjAwNDEtMDA1QTAwNjEtMDA3QTAwQUEwMEI1MDBCQTAwQzAtMDBENjAwRDgtMDBGNjAwRjgtMDJDMTAyQzYtMDJEMTAyRTAtMDJFNDAyRUMwMkVFMDM3MC0wMzc0MDM3NjAzNzcwMzdBLTAzN0QwMzg2MDM4OC0wMzhBMDM4QzAzOEUtMDNBMTAzQTMtMDNGNTAzRjctMDQ4MTA0OEEtMDUyNTA1MzEtMDU1NjA1NTkwNTYxLTA1ODcwNUQwLTA1RUEwNUYwLTA1RjIwNjIxLTA2NEEwNjZFMDY2RjA2NzEtMDZEMzA2RDUwNkU1MDZFNjA2RUUwNkVGMDZGQS0wNkZDMDZGRjA3MTAwNzEyLTA3MkYwNzRELTA3QTUwN0IxMDdDQS0wN0VBMDdGNDA3RjUwN0ZBMDgwMC0wODE1MDgxQTA4MjQwODI4MDkwNC0wOTM5MDkzRDA5NTAwOTU4LTA5NjEwOTcxMDk3MjA5NzktMDk3RjA5ODUtMDk4QzA5OEYwOTkwMDk5My0wOUE4MDlBQS0wOUIwMDlCMjA5QjYtMDlCOTA5QkQwOUNFMDlEQzA5REQwOURGLTA5RTEwOUYwMDlGMTBBMDUtMEEwQTBBMEYwQTEwMEExMy0wQTI4MEEyQS0wQTMwMEEzMjBBMzMwQTM1MEEzNjBBMzgwQTM5MEE1OS0wQTVDMEE1RTBBNzItMEE3NDBBODUtMEE4RDBBOEYtMEE5MTBBOTMtMEFBODBBQUEtMEFCMDBBQjIwQUIzMEFCNS0wQUI5MEFCRDBBRDAwQUUwMEFFMTBCMDUtMEIwQzBCMEYwQjEwMEIxMy0wQjI4MEIyQS0wQjMwMEIzMjBCMzMwQjM1LTBCMzkwQjNEMEI1QzBCNUQwQjVGLTBCNjEwQjcxMEI4MzBCODUtMEI4QTBCOEUtMEI5MDBCOTItMEI5NTBCOTkwQjlBMEI5QzBCOUUwQjlGMEJBMzBCQTQwQkE4LTBCQUEwQkFFLTBCQjkwQkQwMEMwNS0wQzBDMEMwRS0wQzEwMEMxMi0wQzI4MEMyQS0wQzMzMEMzNS0wQzM5MEMzRDBDNTgwQzU5MEM2MDBDNjEwQzg1LTBDOEMwQzhFLTBDOTAwQzkyLTBDQTgwQ0FBLTBDQjMwQ0I1LTBDQjkwQ0JEMENERTBDRTAwQ0UxMEQwNS0wRDBDMEQwRS0wRDEwMEQxMi0wRDI4MEQyQS0wRDM5MEQzRDBENjAwRDYxMEQ3QS0wRDdGMEQ4NS0wRDk2MEQ5QS0wREIxMERCMy0wREJCMERCRDBEQzAtMERDNjBFMDEtMEUzMDBFMzIwRTMzMEU0MC0wRTQ2MEU4MTBFODIwRTg0MEU4NzBFODgwRThBMEU4RDBFOTQtMEU5NzBFOTktMEU5RjBFQTEtMEVBMzBFQTUwRUE3MEVBQTBFQUIwRUFELTBFQjAwRUIyMEVCMzBFQkQwRUMwLTBFQzQwRUM2MEVEQzBFREQwRjAwMEY0MC0wRjQ3MEY0OS0wRjZDMEY4OC0wRjhCMTAwMC0xMDJBMTAzRjEwNTAtMTA1NTEwNUEtMTA1RDEwNjExMDY1MTA2NjEwNkUtMTA3MDEwNzUtMTA4MTEwOEUxMEEwLTEwQzUxMEQwLTEwRkExMEZDMTEwMC0xMjQ4MTI0QS0xMjREMTI1MC0xMjU2MTI1ODEyNUEtMTI1RDEyNjAtMTI4ODEyOEEtMTI4RDEyOTAtMTJCMDEyQjItMTJCNTEyQjgtMTJCRTEyQzAxMkMyLTEyQzUxMkM4LTEyRDYxMkQ4LTEzMTAxMzEyLTEzMTUxMzE4LTEzNUExMzgwLTEzOEYxM0EwLTEzRjQxNDAxLTE2NkMxNjZGLTE2N0YxNjgxLTE2OUExNkEwLTE2RUExNzAwLTE3MEMxNzBFLTE3MTExNzIwLTE3MzExNzQwLTE3NTExNzYwLTE3NkMxNzZFLTE3NzAxNzgwLTE3QjMxN0Q3MTdEQzE4MjAtMTg3NzE4ODAtMThBODE4QUExOEIwLTE4RjUxOTAwLTE5MUMxOTUwLTE5NkQxOTcwLTE5NzQxOTgwLTE5QUIxOUMxLTE5QzcxQTAwLTFBMTYxQTIwLTFBNTQxQUE3MUIwNS0xQjMzMUI0NS0xQjRCMUI4My0xQkEwMUJBRTFCQUYxQzAwLTFDMjMxQzRELTFDNEYxQzVBLTFDN0QxQ0U5LTFDRUMxQ0VFLTFDRjExRDAwLTFEQkYxRTAwLTFGMTUxRjE4LTFGMUQxRjIwLTFGNDUxRjQ4LTFGNEQxRjUwLTFGNTcxRjU5MUY1QjFGNUQxRjVGLTFGN0QxRjgwLTFGQjQxRkI2LTFGQkMxRkJFMUZDMi0xRkM0MUZDNi0xRkNDMUZEMC0xRkQzMUZENi0xRkRCMUZFMC0xRkVDMUZGMi0xRkY0MUZGNi0xRkZDMjA3MTIwN0YyMDkwLTIwOTQyMTAyMjEwNzIxMEEtMjExMzIxMTUyMTE5LTIxMUQyMTI0MjEyNjIxMjgyMTJBLTIxMkQyMTJGLTIxMzkyMTNDLTIxM0YyMTQ1LTIxNDkyMTRFMjE4MzIxODQyQzAwLTJDMkUyQzMwLTJDNUUyQzYwLTJDRTQyQ0VCLTJDRUUyRDAwLTJEMjUyRDMwLTJENjUyRDZGMkQ4MC0yRDk2MkRBMC0yREE2MkRBOC0yREFFMkRCMC0yREI2MkRCOC0yREJFMkRDMC0yREM2MkRDOC0yRENFMkREMC0yREQ2MkREOC0yRERFMkUyRjMwMDUzMDA2MzAzMS0zMDM1MzAzQjMwM0MzMDQxLTMwOTYzMDlELTMwOUYzMEExLTMwRkEzMEZDLTMwRkYzMTA1LTMxMkQzMTMxLTMxOEUzMUEwLTMxQjczMUYwLTMxRkYzNDAwLTREQjU0RTAwLTlGQ0JBMDAwLUE0OENBNEQwLUE0RkRBNTAwLUE2MENBNjEwLUE2MUZBNjJBQTYyQkE2NDAtQTY1RkE2NjItQTY2RUE2N0YtQTY5N0E2QTAtQTZFNUE3MTctQTcxRkE3MjItQTc4OEE3OEJBNzhDQTdGQi1BODAxQTgwMy1BODA1QTgwNy1BODBBQTgwQy1BODIyQTg0MC1BODczQTg4Mi1BOEIzQThGMi1BOEY3QThGQkE5MEEtQTkyNUE5MzAtQTk0NkE5NjAtQTk3Q0E5ODQtQTlCMkE5Q0ZBQTAwLUFBMjhBQTQwLUFBNDJBQTQ0LUFBNEJBQTYwLUFBNzZBQTdBQUE4MC1BQUFGQUFCMUFBQjVBQUI2QUFCOS1BQUJEQUFDMEFBQzJBQURCLUFBRERBQkMwLUFCRTJBQzAwLUQ3QTNEN0IwLUQ3QzZEN0NCLUQ3RkJGOTAwLUZBMkRGQTMwLUZBNkRGQTcwLUZBRDlGQjAwLUZCMDZGQjEzLUZCMTdGQjFERkIxRi1GQjI4RkIyQS1GQjM2RkIzOC1GQjNDRkIzRUZCNDBGQjQxRkI0M0ZCNDRGQjQ2LUZCQjFGQkQzLUZEM0RGRDUwLUZEOEZGRDkyLUZEQzdGREYwLUZERkJGRTcwLUZFNzRGRTc2LUZFRkNGRjIxLUZGM0FGRjQxLUZGNUFGRjY2LUZGQkVGRkMyLUZGQzdGRkNBLUZGQ0ZGRkQyLUZGRDdGRkRBLUZGREMiLAogICAgTGw6ICIwMDYxLTAwN0EwMEFBMDBCNTAwQkEwMERGLTAwRjYwMEY4LTAwRkYwMTAxMDEwMzAxMDUwMTA3MDEwOTAxMEIwMTBEMDEwRjAxMTEwMTEzMDExNTAxMTcwMTE5MDExQjAxMUQwMTFGMDEyMTAxMjMwMTI1MDEyNzAxMjkwMTJCMDEyRDAxMkYwMTMxMDEzMzAxMzUwMTM3MDEzODAxM0EwMTNDMDEzRTAxNDAwMTQyMDE0NDAxNDYwMTQ4MDE0OTAxNEIwMTREMDE0RjAxNTEwMTUzMDE1NTAxNTcwMTU5MDE1QjAxNUQwMTVGMDE2MTAxNjMwMTY1MDE2NzAxNjkwMTZCMDE2RDAxNkYwMTcxMDE3MzAxNzUwMTc3MDE3QTAxN0MwMTdFLTAxODAwMTgzMDE4NTAxODgwMThDMDE4RDAxOTIwMTk1MDE5OS0wMTlCMDE5RTAxQTEwMUEzMDFBNTAxQTgwMUFBMDFBQjAxQUQwMUIwMDFCNDAxQjYwMUI5MDFCQTAxQkQtMDFCRjAxQzYwMUM5MDFDQzAxQ0UwMUQwMDFEMjAxRDQwMUQ2MDFEODAxREEwMURDMDFERDAxREYwMUUxMDFFMzAxRTUwMUU3MDFFOTAxRUIwMUVEMDFFRjAxRjAwMUYzMDFGNTAxRjkwMUZCMDFGRDAxRkYwMjAxMDIwMzAyMDUwMjA3MDIwOTAyMEIwMjBEMDIwRjAyMTEwMjEzMDIxNTAyMTcwMjE5MDIxQjAyMUQwMjFGMDIyMTAyMjMwMjI1MDIyNzAyMjkwMjJCMDIyRDAyMkYwMjMxMDIzMy0wMjM5MDIzQzAyM0YwMjQwMDI0MjAyNDcwMjQ5MDI0QjAyNEQwMjRGLTAyOTMwMjk1LTAyQUYwMzcxMDM3MzAzNzcwMzdCLTAzN0QwMzkwMDNBQy0wM0NFMDNEMDAzRDEwM0Q1LTAzRDcwM0Q5MDNEQjAzREQwM0RGMDNFMTAzRTMwM0U1MDNFNzAzRTkwM0VCMDNFRDAzRUYtMDNGMzAzRjUwM0Y4MDNGQjAzRkMwNDMwLTA0NUYwNDYxMDQ2MzA0NjUwNDY3MDQ2OTA0NkIwNDZEMDQ2RjA0NzEwNDczMDQ3NTA0NzcwNDc5MDQ3QjA0N0QwNDdGMDQ4MTA0OEIwNDhEMDQ4RjA0OTEwNDkzMDQ5NTA0OTcwNDk5MDQ5QjA0OUQwNDlGMDRBMTA0QTMwNEE1MDRBNzA0QTkwNEFCMDRBRDA0QUYwNEIxMDRCMzA0QjUwNEI3MDRCOTA0QkIwNEJEMDRCRjA0QzIwNEM0MDRDNjA0QzgwNENBMDRDQzA0Q0UwNENGMDREMTA0RDMwNEQ1MDRENzA0RDkwNERCMDRERDA0REYwNEUxMDRFMzA0RTUwNEU3MDRFOTA0RUIwNEVEMDRFRjA0RjEwNEYzMDRGNTA0RjcwNEY5MDRGQjA0RkQwNEZGMDUwMTA1MDMwNTA1MDUwNzA1MDkwNTBCMDUwRDA1MEYwNTExMDUxMzA1MTUwNTE3MDUxOTA1MUIwNTFEMDUxRjA1MjEwNTIzMDUyNTA1NjEtMDU4NzFEMDAtMUQyQjFENjItMUQ3NzFENzktMUQ5QTFFMDExRTAzMUUwNTFFMDcxRTA5MUUwQjFFMEQxRTBGMUUxMTFFMTMxRTE1MUUxNzFFMTkxRTFCMUUxRDFFMUYxRTIxMUUyMzFFMjUxRTI3MUUyOTFFMkIxRTJEMUUyRjFFMzExRTMzMUUzNTFFMzcxRTM5MUUzQjFFM0QxRTNGMUU0MTFFNDMxRTQ1MUU0NzFFNDkxRTRCMUU0RDFFNEYxRTUxMUU1MzFFNTUxRTU3MUU1OTFFNUIxRTVEMUU1RjFFNjExRTYzMUU2NTFFNjcxRTY5MUU2QjFFNkQxRTZGMUU3MTFFNzMxRTc1MUU3NzFFNzkxRTdCMUU3RDFFN0YxRTgxMUU4MzFFODUxRTg3MUU4OTFFOEIxRThEMUU4RjFFOTExRTkzMUU5NS0xRTlEMUU5RjFFQTExRUEzMUVBNTFFQTcxRUE5MUVBQjFFQUQxRUFGMUVCMTFFQjMxRUI1MUVCNzFFQjkxRUJCMUVCRDFFQkYxRUMxMUVDMzFFQzUxRUM3MUVDOTFFQ0IxRUNEMUVDRjFFRDExRUQzMUVENTFFRDcxRUQ5MUVEQjFFREQxRURGMUVFMTFFRTMxRUU1MUVFNzFFRTkxRUVCMUVFRDFFRUYxRUYxMUVGMzFFRjUxRUY3MUVGOTFFRkIxRUZEMUVGRi0xRjA3MUYxMC0xRjE1MUYyMC0xRjI3MUYzMC0xRjM3MUY0MC0xRjQ1MUY1MC0xRjU3MUY2MC0xRjY3MUY3MC0xRjdEMUY4MC0xRjg3MUY5MC0xRjk3MUZBMC0xRkE3MUZCMC0xRkI0MUZCNjFGQjcxRkJFMUZDMi0xRkM0MUZDNjFGQzcxRkQwLTFGRDMxRkQ2MUZENzFGRTAtMUZFNzFGRjItMUZGNDFGRjYxRkY3MjEwQTIxMEUyMTBGMjExMzIxMkYyMTM0MjEzOTIxM0MyMTNEMjE0Ni0yMTQ5MjE0RTIxODQyQzMwLTJDNUUyQzYxMkM2NTJDNjYyQzY4MkM2QTJDNkMyQzcxMkM3MzJDNzQyQzc2LTJDN0MyQzgxMkM4MzJDODUyQzg3MkM4OTJDOEIyQzhEMkM4RjJDOTEyQzkzMkM5NTJDOTcyQzk5MkM5QjJDOUQyQzlGMkNBMTJDQTMyQ0E1MkNBNzJDQTkyQ0FCMkNBRDJDQUYyQ0IxMkNCMzJDQjUyQ0I3MkNCOTJDQkIyQ0JEMkNCRjJDQzEyQ0MzMkNDNTJDQzcyQ0M5MkNDQjJDQ0QyQ0NGMkNEMTJDRDMyQ0Q1MkNENzJDRDkyQ0RCMkNERDJDREYyQ0UxMkNFMzJDRTQyQ0VDMkNFRTJEMDAtMkQyNUE2NDFBNjQzQTY0NUE2NDdBNjQ5QTY0QkE2NERBNjRGQTY1MUE2NTNBNjU1QTY1N0E2NTlBNjVCQTY1REE2NUZBNjYzQTY2NUE2NjdBNjY5QTY2QkE2NkRBNjgxQTY4M0E2ODVBNjg3QTY4OUE2OEJBNjhEQTY4RkE2OTFBNjkzQTY5NUE2OTdBNzIzQTcyNUE3MjdBNzI5QTcyQkE3MkRBNzJGLUE3MzFBNzMzQTczNUE3MzdBNzM5QTczQkE3M0RBNzNGQTc0MUE3NDNBNzQ1QTc0N0E3NDlBNzRCQTc0REE3NEZBNzUxQTc1M0E3NTVBNzU3QTc1OUE3NUJBNzVEQTc1RkE3NjFBNzYzQTc2NUE3NjdBNzY5QTc2QkE3NkRBNzZGQTc3MS1BNzc4QTc3QUE3N0NBNzdGQTc4MUE3ODNBNzg1QTc4N0E3OENGQjAwLUZCMDZGQjEzLUZCMTdGRjQxLUZGNUEiLAogICAgTHU6ICIwMDQxLTAwNUEwMEMwLTAwRDYwMEQ4LTAwREUwMTAwMDEwMjAxMDQwMTA2MDEwODAxMEEwMTBDMDEwRTAxMTAwMTEyMDExNDAxMTYwMTE4MDExQTAxMUMwMTFFMDEyMDAxMjIwMTI0MDEyNjAxMjgwMTJBMDEyQzAxMkUwMTMwMDEzMjAxMzQwMTM2MDEzOTAxM0IwMTNEMDEzRjAxNDEwMTQzMDE0NTAxNDcwMTRBMDE0QzAxNEUwMTUwMDE1MjAxNTQwMTU2MDE1ODAxNUEwMTVDMDE1RTAxNjAwMTYyMDE2NDAxNjYwMTY4MDE2QTAxNkMwMTZFMDE3MDAxNzIwMTc0MDE3NjAxNzgwMTc5MDE3QjAxN0QwMTgxMDE4MjAxODQwMTg2MDE4NzAxODktMDE4QjAxOEUtMDE5MTAxOTMwMTk0MDE5Ni0wMTk4MDE5QzAxOUQwMTlGMDFBMDAxQTIwMUE0MDFBNjAxQTcwMUE5MDFBQzAxQUUwMUFGMDFCMS0wMUIzMDFCNTAxQjcwMUI4MDFCQzAxQzQwMUM3MDFDQTAxQ0QwMUNGMDFEMTAxRDMwMUQ1MDFENzAxRDkwMURCMDFERTAxRTAwMUUyMDFFNDAxRTYwMUU4MDFFQTAxRUMwMUVFMDFGMTAxRjQwMUY2LTAxRjgwMUZBMDFGQzAxRkUwMjAwMDIwMjAyMDQwMjA2MDIwODAyMEEwMjBDMDIwRTAyMTAwMjEyMDIxNDAyMTYwMjE4MDIxQTAyMUMwMjFFMDIyMDAyMjIwMjI0MDIyNjAyMjgwMjJBMDIyQzAyMkUwMjMwMDIzMjAyM0EwMjNCMDIzRDAyM0UwMjQxMDI0My0wMjQ2MDI0ODAyNEEwMjRDMDI0RTAzNzAwMzcyMDM3NjAzODYwMzg4LTAzOEEwMzhDMDM4RTAzOEYwMzkxLTAzQTEwM0EzLTAzQUIwM0NGMDNEMi0wM0Q0MDNEODAzREEwM0RDMDNERTAzRTAwM0UyMDNFNDAzRTYwM0U4MDNFQTAzRUMwM0VFMDNGNDAzRjcwM0Y5MDNGQTAzRkQtMDQyRjA0NjAwNDYyMDQ2NDA0NjYwNDY4MDQ2QTA0NkMwNDZFMDQ3MDA0NzIwNDc0MDQ3NjA0NzgwNDdBMDQ3QzA0N0UwNDgwMDQ4QTA0OEMwNDhFMDQ5MDA0OTIwNDk0MDQ5NjA0OTgwNDlBMDQ5QzA0OUUwNEEwMDRBMjA0QTQwNEE2MDRBODA0QUEwNEFDMDRBRTA0QjAwNEIyMDRCNDA0QjYwNEI4MDRCQTA0QkMwNEJFMDRDMDA0QzEwNEMzMDRDNTA0QzcwNEM5MDRDQjA0Q0QwNEQwMDREMjA0RDQwNEQ2MDREODA0REEwNERDMDRERTA0RTAwNEUyMDRFNDA0RTYwNEU4MDRFQTA0RUMwNEVFMDRGMDA0RjIwNEY0MDRGNjA0RjgwNEZBMDRGQzA0RkUwNTAwMDUwMjA1MDQwNTA2MDUwODA1MEEwNTBDMDUwRTA1MTAwNTEyMDUxNDA1MTYwNTE4MDUxQTA1MUMwNTFFMDUyMDA1MjIwNTI0MDUzMS0wNTU2MTBBMC0xMEM1MUUwMDFFMDIxRTA0MUUwNjFFMDgxRTBBMUUwQzFFMEUxRTEwMUUxMjFFMTQxRTE2MUUxODFFMUExRTFDMUUxRTFFMjAxRTIyMUUyNDFFMjYxRTI4MUUyQTFFMkMxRTJFMUUzMDFFMzIxRTM0MUUzNjFFMzgxRTNBMUUzQzFFM0UxRTQwMUU0MjFFNDQxRTQ2MUU0ODFFNEExRTRDMUU0RTFFNTAxRTUyMUU1NDFFNTYxRTU4MUU1QTFFNUMxRTVFMUU2MDFFNjIxRTY0MUU2NjFFNjgxRTZBMUU2QzFFNkUxRTcwMUU3MjFFNzQxRTc2MUU3ODFFN0ExRTdDMUU3RTFFODAxRTgyMUU4NDFFODYxRTg4MUU4QTFFOEMxRThFMUU5MDFFOTIxRTk0MUU5RTFFQTAxRUEyMUVBNDFFQTYxRUE4MUVBQTFFQUMxRUFFMUVCMDFFQjIxRUI0MUVCNjFFQjgxRUJBMUVCQzFFQkUxRUMwMUVDMjFFQzQxRUM2MUVDODFFQ0ExRUNDMUVDRTFFRDAxRUQyMUVENDFFRDYxRUQ4MUVEQTFFREMxRURFMUVFMDFFRTIxRUU0MUVFNjFFRTgxRUVBMUVFQzFFRUUxRUYwMUVGMjFFRjQxRUY2MUVGODFFRkExRUZDMUVGRTFGMDgtMUYwRjFGMTgtMUYxRDFGMjgtMUYyRjFGMzgtMUYzRjFGNDgtMUY0RDFGNTkxRjVCMUY1RDFGNUYxRjY4LTFGNkYxRkI4LTFGQkIxRkM4LTFGQ0IxRkQ4LTFGREIxRkU4LTFGRUMxRkY4LTFGRkIyMTAyMjEwNzIxMEItMjEwRDIxMTAtMjExMjIxMTUyMTE5LTIxMUQyMTI0MjEyNjIxMjgyMTJBLTIxMkQyMTMwLTIxMzMyMTNFMjEzRjIxNDUyMTgzMkMwMC0yQzJFMkM2MDJDNjItMkM2NDJDNjcyQzY5MkM2QjJDNkQtMkM3MDJDNzIyQzc1MkM3RS0yQzgwMkM4MjJDODQyQzg2MkM4ODJDOEEyQzhDMkM4RTJDOTAyQzkyMkM5NDJDOTYyQzk4MkM5QTJDOUMyQzlFMkNBMDJDQTIyQ0E0MkNBNjJDQTgyQ0FBMkNBQzJDQUUyQ0IwMkNCMjJDQjQyQ0I2MkNCODJDQkEyQ0JDMkNCRTJDQzAyQ0MyMkNDNDJDQzYyQ0M4MkNDQTJDQ0MyQ0NFMkNEMDJDRDIyQ0Q0MkNENjJDRDgyQ0RBMkNEQzJDREUyQ0UwMkNFMjJDRUIyQ0VEQTY0MEE2NDJBNjQ0QTY0NkE2NDhBNjRBQTY0Q0E2NEVBNjUwQTY1MkE2NTRBNjU2QTY1OEE2NUFBNjVDQTY1RUE2NjJBNjY0QTY2NkE2NjhBNjZBQTY2Q0E2ODBBNjgyQTY4NEE2ODZBNjg4QTY4QUE2OENBNjhFQTY5MEE2OTJBNjk0QTY5NkE3MjJBNzI0QTcyNkE3MjhBNzJBQTcyQ0E3MkVBNzMyQTczNEE3MzZBNzM4QTczQUE3M0NBNzNFQTc0MEE3NDJBNzQ0QTc0NkE3NDhBNzRBQTc0Q0E3NEVBNzUwQTc1MkE3NTRBNzU2QTc1OEE3NUFBNzVDQTc1RUE3NjBBNzYyQTc2NEE3NjZBNzY4QTc2QUE3NkNBNzZFQTc3OUE3N0JBNzdEQTc3RUE3ODBBNzgyQTc4NEE3ODZBNzhCRkYyMS1GRjNBIiwKICAgIEx0OiAiMDFDNTAxQzgwMUNCMDFGMjFGODgtMUY4RjFGOTgtMUY5RjFGQTgtMUZBRjFGQkMxRkNDMUZGQyIsCiAgICBMbTogIjAyQjAtMDJDMTAyQzYtMDJEMTAyRTAtMDJFNDAyRUMwMkVFMDM3NDAzN0EwNTU5MDY0MDA2RTUwNkU2MDdGNDA3RjUwN0ZBMDgxQTA4MjQwODI4MDk3MTBFNDYwRUM2MTBGQzE3RDcxODQzMUFBNzFDNzgtMUM3RDFEMkMtMUQ2MTFENzgxRDlCLTFEQkYyMDcxMjA3RjIwOTAtMjA5NDJDN0QyRDZGMkUyRjMwMDUzMDMxLTMwMzUzMDNCMzA5RDMwOUUzMEZDLTMwRkVBMDE1QTRGOC1BNEZEQTYwQ0E2N0ZBNzE3LUE3MUZBNzcwQTc4OEE5Q0ZBQTcwQUFEREZGNzBGRjlFRkY5RiIsCiAgICBMbzogIjAxQkIwMUMwLTAxQzMwMjk0MDVEMC0wNUVBMDVGMC0wNUYyMDYyMS0wNjNGMDY0MS0wNjRBMDY2RTA2NkYwNjcxLTA2RDMwNkQ1MDZFRTA2RUYwNkZBLTA2RkMwNkZGMDcxMDA3MTItMDcyRjA3NEQtMDdBNTA3QjEwN0NBLTA3RUEwODAwLTA4MTUwOTA0LTA5MzkwOTNEMDk1MDA5NTgtMDk2MTA5NzIwOTc5LTA5N0YwOTg1LTA5OEMwOThGMDk5MDA5OTMtMDlBODA5QUEtMDlCMDA5QjIwOUI2LTA5QjkwOUJEMDlDRTA5REMwOUREMDlERi0wOUUxMDlGMDA5RjEwQTA1LTBBMEEwQTBGMEExMDBBMTMtMEEyODBBMkEtMEEzMDBBMzIwQTMzMEEzNTBBMzYwQTM4MEEzOTBBNTktMEE1QzBBNUUwQTcyLTBBNzQwQTg1LTBBOEQwQThGLTBBOTEwQTkzLTBBQTgwQUFBLTBBQjAwQUIyMEFCMzBBQjUtMEFCOTBBQkQwQUQwMEFFMDBBRTEwQjA1LTBCMEMwQjBGMEIxMDBCMTMtMEIyODBCMkEtMEIzMDBCMzIwQjMzMEIzNS0wQjM5MEIzRDBCNUMwQjVEMEI1Ri0wQjYxMEI3MTBCODMwQjg1LTBCOEEwQjhFLTBCOTAwQjkyLTBCOTUwQjk5MEI5QTBCOUMwQjlFMEI5RjBCQTMwQkE0MEJBOC0wQkFBMEJBRS0wQkI5MEJEMDBDMDUtMEMwQzBDMEUtMEMxMDBDMTItMEMyODBDMkEtMEMzMzBDMzUtMEMzOTBDM0QwQzU4MEM1OTBDNjAwQzYxMEM4NS0wQzhDMEM4RS0wQzkwMEM5Mi0wQ0E4MENBQS0wQ0IzMENCNS0wQ0I5MENCRDBDREUwQ0UwMENFMTBEMDUtMEQwQzBEMEUtMEQxMDBEMTItMEQyODBEMkEtMEQzOTBEM0QwRDYwMEQ2MTBEN0EtMEQ3RjBEODUtMEQ5NjBEOUEtMERCMTBEQjMtMERCQjBEQkQwREMwLTBEQzYwRTAxLTBFMzAwRTMyMEUzMzBFNDAtMEU0NTBFODEwRTgyMEU4NDBFODcwRTg4MEU4QTBFOEQwRTk0LTBFOTcwRTk5LTBFOUYwRUExLTBFQTMwRUE1MEVBNzBFQUEwRUFCMEVBRC0wRUIwMEVCMjBFQjMwRUJEMEVDMC0wRUM0MEVEQzBFREQwRjAwMEY0MC0wRjQ3MEY0OS0wRjZDMEY4OC0wRjhCMTAwMC0xMDJBMTAzRjEwNTAtMTA1NTEwNUEtMTA1RDEwNjExMDY1MTA2NjEwNkUtMTA3MDEwNzUtMTA4MTEwOEUxMEQwLTEwRkExMTAwLTEyNDgxMjRBLTEyNEQxMjUwLTEyNTYxMjU4MTI1QS0xMjVEMTI2MC0xMjg4MTI4QS0xMjhEMTI5MC0xMkIwMTJCMi0xMkI1MTJCOC0xMkJFMTJDMDEyQzItMTJDNTEyQzgtMTJENjEyRDgtMTMxMDEzMTItMTMxNTEzMTgtMTM1QTEzODAtMTM4RjEzQTAtMTNGNDE0MDEtMTY2QzE2NkYtMTY3RjE2ODEtMTY5QTE2QTAtMTZFQTE3MDAtMTcwQzE3MEUtMTcxMTE3MjAtMTczMTE3NDAtMTc1MTE3NjAtMTc2QzE3NkUtMTc3MDE3ODAtMTdCMzE3REMxODIwLTE4NDIxODQ0LTE4NzcxODgwLTE4QTgxOEFBMThCMC0xOEY1MTkwMC0xOTFDMTk1MC0xOTZEMTk3MC0xOTc0MTk4MC0xOUFCMTlDMS0xOUM3MUEwMC0xQTE2MUEyMC0xQTU0MUIwNS0xQjMzMUI0NS0xQjRCMUI4My0xQkEwMUJBRTFCQUYxQzAwLTFDMjMxQzRELTFDNEYxQzVBLTFDNzcxQ0U5LTFDRUMxQ0VFLTFDRjEyMTM1LTIxMzgyRDMwLTJENjUyRDgwLTJEOTYyREEwLTJEQTYyREE4LTJEQUUyREIwLTJEQjYyREI4LTJEQkUyREMwLTJEQzYyREM4LTJEQ0UyREQwLTJERDYyREQ4LTJEREUzMDA2MzAzQzMwNDEtMzA5NjMwOUYzMEExLTMwRkEzMEZGMzEwNS0zMTJEMzEzMS0zMThFMzFBMC0zMUI3MzFGMC0zMUZGMzQwMC00REI1NEUwMC05RkNCQTAwMC1BMDE0QTAxNi1BNDhDQTREMC1BNEY3QTUwMC1BNjBCQTYxMC1BNjFGQTYyQUE2MkJBNjZFQTZBMC1BNkU1QTdGQi1BODAxQTgwMy1BODA1QTgwNy1BODBBQTgwQy1BODIyQTg0MC1BODczQTg4Mi1BOEIzQThGMi1BOEY3QThGQkE5MEEtQTkyNUE5MzAtQTk0NkE5NjAtQTk3Q0E5ODQtQTlCMkFBMDAtQUEyOEFBNDAtQUE0MkFBNDQtQUE0QkFBNjAtQUE2RkFBNzEtQUE3NkFBN0FBQTgwLUFBQUZBQUIxQUFCNUFBQjZBQUI5LUFBQkRBQUMwQUFDMkFBREJBQURDQUJDMC1BQkUyQUMwMC1EN0EzRDdCMC1EN0M2RDdDQi1EN0ZCRjkwMC1GQTJERkEzMC1GQTZERkE3MC1GQUQ5RkIxREZCMUYtRkIyOEZCMkEtRkIzNkZCMzgtRkIzQ0ZCM0VGQjQwRkI0MUZCNDNGQjQ0RkI0Ni1GQkIxRkJEMy1GRDNERkQ1MC1GRDhGRkQ5Mi1GREM3RkRGMC1GREZCRkU3MC1GRTc0RkU3Ni1GRUZDRkY2Ni1GRjZGRkY3MS1GRjlERkZBMC1GRkJFRkZDMi1GRkM3RkZDQS1GRkNGRkZEMi1GRkQ3RkZEQS1GRkRDIiwKICAgIE06ICAiMDMwMC0wMzZGMDQ4My0wNDg5MDU5MS0wNUJEMDVCRjA1QzEwNUMyMDVDNDA1QzUwNUM3MDYxMC0wNjFBMDY0Qi0wNjVFMDY3MDA2RDYtMDZEQzA2REUtMDZFNDA2RTcwNkU4MDZFQS0wNkVEMDcxMTA3MzAtMDc0QTA3QTYtMDdCMDA3RUItMDdGMzA4MTYtMDgxOTA4MUItMDgyMzA4MjUtMDgyNzA4MjktMDgyRDA5MDAtMDkwMzA5M0MwOTNFLTA5NEUwOTUxLTA5NTUwOTYyMDk2MzA5ODEtMDk4MzA5QkMwOUJFLTA5QzQwOUM3MDlDODA5Q0ItMDlDRDA5RDcwOUUyMDlFMzBBMDEtMEEwMzBBM0MwQTNFLTBBNDIwQTQ3MEE0ODBBNEItMEE0RDBBNTEwQTcwMEE3MTBBNzUwQTgxLTBBODMwQUJDMEFCRS0wQUM1MEFDNy0wQUM5MEFDQi0wQUNEMEFFMjBBRTMwQjAxLTBCMDMwQjNDMEIzRS0wQjQ0MEI0NzBCNDgwQjRCLTBCNEQwQjU2MEI1NzBCNjIwQjYzMEI4MjBCQkUtMEJDMjBCQzYtMEJDODBCQ0EtMEJDRDBCRDcwQzAxLTBDMDMwQzNFLTBDNDQwQzQ2LTBDNDgwQzRBLTBDNEQwQzU1MEM1NjBDNjIwQzYzMEM4MjBDODMwQ0JDMENCRS0wQ0M0MENDNi0wQ0M4MENDQS0wQ0NEMENENTBDRDYwQ0UyMENFMzBEMDIwRDAzMEQzRS0wRDQ0MEQ0Ni0wRDQ4MEQ0QS0wRDREMEQ1NzBENjIwRDYzMEQ4MjBEODMwRENBMERDRi0wREQ0MERENjBERDgtMERERjBERjIwREYzMEUzMTBFMzQtMEUzQTBFNDctMEU0RTBFQjEwRUI0LTBFQjkwRUJCMEVCQzBFQzgtMEVDRDBGMTgwRjE5MEYzNTBGMzcwRjM5MEYzRTBGM0YwRjcxLTBGODQwRjg2MEY4NzBGOTAtMEY5NzBGOTktMEZCQzBGQzYxMDJCLTEwM0UxMDU2LTEwNTkxMDVFLTEwNjAxMDYyLTEwNjQxMDY3LTEwNkQxMDcxLTEwNzQxMDgyLTEwOEQxMDhGMTA5QS0xMDlEMTM1RjE3MTItMTcxNDE3MzItMTczNDE3NTIxNzUzMTc3MjE3NzMxN0I2LTE3RDMxN0REMTgwQi0xODBEMThBOTE5MjAtMTkyQjE5MzAtMTkzQjE5QjAtMTlDMDE5QzgxOUM5MUExNy0xQTFCMUE1NS0xQTVFMUE2MC0xQTdDMUE3RjFCMDAtMUIwNDFCMzQtMUI0NDFCNkItMUI3MzFCODAtMUI4MjFCQTEtMUJBQTFDMjQtMUMzNzFDRDAtMUNEMjFDRDQtMUNFODFDRUQxQ0YyMURDMC0xREU2MURGRC0xREZGMjBEMC0yMEYwMkNFRi0yQ0YxMkRFMC0yREZGMzAyQS0zMDJGMzA5OTMwOUFBNjZGLUE2NzJBNjdDQTY3REE2RjBBNkYxQTgwMkE4MDZBODBCQTgyMy1BODI3QTg4MEE4ODFBOEI0LUE4QzRBOEUwLUE4RjFBOTI2LUE5MkRBOTQ3LUE5NTNBOTgwLUE5ODNBOUIzLUE5QzBBQTI5LUFBMzZBQTQzQUE0Q0FBNERBQTdCQUFCMEFBQjItQUFCNEFBQjdBQUI4QUFCRUFBQkZBQUMxQUJFMy1BQkVBQUJFQ0FCRURGQjFFRkUwMC1GRTBGRkUyMC1GRTI2IiwKICAgIE1uOiAiMDMwMC0wMzZGMDQ4My0wNDg3MDU5MS0wNUJEMDVCRjA1QzEwNUMyMDVDNDA1QzUwNUM3MDYxMC0wNjFBMDY0Qi0wNjVFMDY3MDA2RDYtMDZEQzA2REYtMDZFNDA2RTcwNkU4MDZFQS0wNkVEMDcxMTA3MzAtMDc0QTA3QTYtMDdCMDA3RUItMDdGMzA4MTYtMDgxOTA4MUItMDgyMzA4MjUtMDgyNzA4MjktMDgyRDA5MDAtMDkwMjA5M0MwOTQxLTA5NDgwOTREMDk1MS0wOTU1MDk2MjA5NjMwOTgxMDlCQzA5QzEtMDlDNDA5Q0QwOUUyMDlFMzBBMDEwQTAyMEEzQzBBNDEwQTQyMEE0NzBBNDgwQTRCLTBBNEQwQTUxMEE3MDBBNzEwQTc1MEE4MTBBODIwQUJDMEFDMS0wQUM1MEFDNzBBQzgwQUNEMEFFMjBBRTMwQjAxMEIzQzBCM0YwQjQxLTBCNDQwQjREMEI1NjBCNjIwQjYzMEI4MjBCQzAwQkNEMEMzRS0wQzQwMEM0Ni0wQzQ4MEM0QS0wQzREMEM1NTBDNTYwQzYyMEM2MzBDQkMwQ0JGMENDNjBDQ0MwQ0NEMENFMjBDRTMwRDQxLTBENDQwRDREMEQ2MjBENjMwRENBMEREMi0wREQ0MERENjBFMzEwRTM0LTBFM0EwRTQ3LTBFNEUwRUIxMEVCNC0wRUI5MEVCQjBFQkMwRUM4LTBFQ0QwRjE4MEYxOTBGMzUwRjM3MEYzOTBGNzEtMEY3RTBGODAtMEY4NDBGODYwRjg3MEY5MC0wRjk3MEY5OS0wRkJDMEZDNjEwMkQtMTAzMDEwMzItMTAzNzEwMzkxMDNBMTAzRDEwM0UxMDU4MTA1OTEwNUUtMTA2MDEwNzEtMTA3NDEwODIxMDg1MTA4NjEwOEQxMDlEMTM1RjE3MTItMTcxNDE3MzItMTczNDE3NTIxNzUzMTc3MjE3NzMxN0I3LTE3QkQxN0M2MTdDOS0xN0QzMTdERDE4MEItMTgwRDE4QTkxOTIwLTE5MjIxOTI3MTkyODE5MzIxOTM5LTE5M0IxQTE3MUExODFBNTYxQTU4LTFBNUUxQTYwMUE2MjFBNjUtMUE2QzFBNzMtMUE3QzFBN0YxQjAwLTFCMDMxQjM0MUIzNi0xQjNBMUIzQzFCNDIxQjZCLTFCNzMxQjgwMUI4MTFCQTItMUJBNTFCQTgxQkE5MUMyQy0xQzMzMUMzNjFDMzcxQ0QwLTFDRDIxQ0Q0LTFDRTAxQ0UyLTFDRTgxQ0VEMURDMC0xREU2MURGRC0xREZGMjBEMC0yMERDMjBFMTIwRTUtMjBGMDJDRUYtMkNGMTJERTAtMkRGRjMwMkEtMzAyRjMwOTkzMDlBQTY2RkE2N0NBNjdEQTZGMEE2RjFBODAyQTgwNkE4MEJBODI1QTgyNkE4QzRBOEUwLUE4RjFBOTI2LUE5MkRBOTQ3LUE5NTFBOTgwLUE5ODJBOUIzQTlCNi1BOUI5QTlCQ0FBMjktQUEyRUFBMzFBQTMyQUEzNUFBMzZBQTQzQUE0Q0FBQjBBQUIyLUFBQjRBQUI3QUFCOEFBQkVBQUJGQUFDMUFCRTVBQkU4QUJFREZCMUVGRTAwLUZFMEZGRTIwLUZFMjYiLAogICAgTWM6ICIwOTAzMDkzRS0wOTQwMDk0OS0wOTRDMDk0RTA5ODIwOTgzMDlCRS0wOUMwMDlDNzA5QzgwOUNCMDlDQzA5RDcwQTAzMEEzRS0wQTQwMEE4MzBBQkUtMEFDMDBBQzkwQUNCMEFDQzBCMDIwQjAzMEIzRTBCNDAwQjQ3MEI0ODBCNEIwQjRDMEI1NzBCQkUwQkJGMEJDMTBCQzIwQkM2LTBCQzgwQkNBLTBCQ0MwQkQ3MEMwMS0wQzAzMEM0MS0wQzQ0MEM4MjBDODMwQ0JFMENDMC0wQ0M0MENDNzBDQzgwQ0NBMENDQjBDRDUwQ0Q2MEQwMjBEMDMwRDNFLTBENDAwRDQ2LTBENDgwRDRBLTBENEMwRDU3MEQ4MjBEODMwRENGLTBERDEwREQ4LTBEREYwREYyMERGMzBGM0UwRjNGMEY3RjEwMkIxMDJDMTAzMTEwMzgxMDNCMTAzQzEwNTYxMDU3MTA2Mi0xMDY0MTA2Ny0xMDZEMTA4MzEwODQxMDg3LTEwOEMxMDhGMTA5QS0xMDlDMTdCNjE3QkUtMTdDNTE3QzcxN0M4MTkyMy0xOTI2MTkyOS0xOTJCMTkzMDE5MzExOTMzLTE5MzgxOUIwLTE5QzAxOUM4MTlDOTFBMTktMUExQjFBNTUxQTU3MUE2MTFBNjMxQTY0MUE2RC0xQTcyMUIwNDFCMzUxQjNCMUIzRC0xQjQxMUI0MzFCNDQxQjgyMUJBMTFCQTYxQkE3MUJBQTFDMjQtMUMyQjFDMzQxQzM1MUNFMTFDRjJBODIzQTgyNEE4MjdBODgwQTg4MUE4QjQtQThDM0E5NTJBOTUzQTk4M0E5QjRBOUI1QTlCQUE5QkJBOUJELUE5QzBBQTJGQUEzMEFBMzNBQTM0QUE0REFBN0JBQkUzQUJFNEFCRTZBQkU3QUJFOUFCRUFBQkVDIiwKICAgIE1lOiAiMDQ4ODA0ODkwNkRFMjBERC0yMEUwMjBFMi0yMEU0QTY3MC1BNjcyIiwKICAgIE46ICAiMDAzMC0wMDM5MDBCMjAwQjMwMEI5MDBCQy0wMEJFMDY2MC0wNjY5MDZGMC0wNkY5MDdDMC0wN0M5MDk2Ni0wOTZGMDlFNi0wOUVGMDlGNC0wOUY5MEE2Ni0wQTZGMEFFNi0wQUVGMEI2Ni0wQjZGMEJFNi0wQkYyMEM2Ni0wQzZGMEM3OC0wQzdFMENFNi0wQ0VGMEQ2Ni0wRDc1MEU1MC0wRTU5MEVEMC0wRUQ5MEYyMC0wRjMzMTA0MC0xMDQ5MTA5MC0xMDk5MTM2OS0xMzdDMTZFRS0xNkYwMTdFMC0xN0U5MTdGMC0xN0Y5MTgxMC0xODE5MTk0Ni0xOTRGMTlEMC0xOURBMUE4MC0xQTg5MUE5MC0xQTk5MUI1MC0xQjU5MUJCMC0xQkI5MUM0MC0xQzQ5MUM1MC0xQzU5MjA3MDIwNzQtMjA3OTIwODAtMjA4OTIxNTAtMjE4MjIxODUtMjE4OTI0NjAtMjQ5QjI0RUEtMjRGRjI3NzYtMjc5MzJDRkQzMDA3MzAyMS0zMDI5MzAzOC0zMDNBMzE5Mi0zMTk1MzIyMC0zMjI5MzI1MS0zMjVGMzI4MC0zMjg5MzJCMS0zMkJGQTYyMC1BNjI5QTZFNi1BNkVGQTgzMC1BODM1QThEMC1BOEQ5QTkwMC1BOTA5QTlEMC1BOUQ5QUE1MC1BQTU5QUJGMC1BQkY5RkYxMC1GRjE5IiwKICAgIE5kOiAiMDAzMC0wMDM5MDY2MC0wNjY5MDZGMC0wNkY5MDdDMC0wN0M5MDk2Ni0wOTZGMDlFNi0wOUVGMEE2Ni0wQTZGMEFFNi0wQUVGMEI2Ni0wQjZGMEJFNi0wQkVGMEM2Ni0wQzZGMENFNi0wQ0VGMEQ2Ni0wRDZGMEU1MC0wRTU5MEVEMC0wRUQ5MEYyMC0wRjI5MTA0MC0xMDQ5MTA5MC0xMDk5MTdFMC0xN0U5MTgxMC0xODE5MTk0Ni0xOTRGMTlEMC0xOURBMUE4MC0xQTg5MUE5MC0xQTk5MUI1MC0xQjU5MUJCMC0xQkI5MUM0MC0xQzQ5MUM1MC0xQzU5QTYyMC1BNjI5QThEMC1BOEQ5QTkwMC1BOTA5QTlEMC1BOUQ5QUE1MC1BQTU5QUJGMC1BQkY5RkYxMC1GRjE5IiwKICAgIE5sOiAiMTZFRS0xNkYwMjE2MC0yMTgyMjE4NS0yMTg4MzAwNzMwMjEtMzAyOTMwMzgtMzAzQUE2RTYtQTZFRiIsCiAgICBObzogIjAwQjIwMEIzMDBCOTAwQkMtMDBCRTA5RjQtMDlGOTBCRjAtMEJGMjBDNzgtMEM3RTBENzAtMEQ3NTBGMkEtMEYzMzEzNjktMTM3QzE3RjAtMTdGOTIwNzAyMDc0LTIwNzkyMDgwLTIwODkyMTUwLTIxNUYyMTg5MjQ2MC0yNDlCMjRFQS0yNEZGMjc3Ni0yNzkzMkNGRDMxOTItMzE5NTMyMjAtMzIyOTMyNTEtMzI1RjMyODAtMzI4OTMyQjEtMzJCRkE4MzAtQTgzNSIsCiAgICBQOiAgIjAwMjEtMDAyMzAwMjUtMDAyQTAwMkMtMDAyRjAwM0EwMDNCMDAzRjAwNDAwMDVCLTAwNUQwMDVGMDA3QjAwN0QwMEExMDBBQjAwQjcwMEJCMDBCRjAzN0UwMzg3MDU1QS0wNTVGMDU4OTA1OEEwNUJFMDVDMDA1QzMwNUM2MDVGMzA1RjQwNjA5MDYwQTA2MEMwNjBEMDYxQjA2MUUwNjFGMDY2QS0wNjZEMDZENDA3MDAtMDcwRDA3RjctMDdGOTA4MzAtMDgzRTA5NjQwOTY1MDk3MDBERjQwRTRGMEU1QTBFNUIwRjA0LTBGMTIwRjNBLTBGM0QwRjg1MEZEMC0wRkQ0MTA0QS0xMDRGMTBGQjEzNjEtMTM2ODE0MDAxNjZEMTY2RTE2OUIxNjlDMTZFQi0xNkVEMTczNTE3MzYxN0Q0LTE3RDYxN0Q4LTE3REExODAwLTE4MEExOTQ0MTk0NTE5REUxOURGMUExRTFBMUYxQUEwLTFBQTYxQUE4LTFBQUQxQjVBLTFCNjAxQzNCLTFDM0YxQzdFMUM3RjFDRDMyMDEwLTIwMjcyMDMwLTIwNDMyMDQ1LTIwNTEyMDUzLTIwNUUyMDdEMjA3RTIwOEQyMDhFMjMyOTIzMkEyNzY4LTI3NzUyN0M1MjdDNjI3RTYtMjdFRjI5ODMtMjk5ODI5RDgtMjlEQjI5RkMyOUZEMkNGOS0yQ0ZDMkNGRTJDRkYyRTAwLTJFMkUyRTMwMkUzMTMwMDEtMzAwMzMwMDgtMzAxMTMwMTQtMzAxRjMwMzAzMDNEMzBBMDMwRkJBNEZFQTRGRkE2MEQtQTYwRkE2NzNBNjdFQTZGMi1BNkY3QTg3NC1BODc3QThDRUE4Q0ZBOEY4LUE4RkFBOTJFQTkyRkE5NUZBOUMxLUE5Q0RBOURFQTlERkFBNUMtQUE1RkFBREVBQURGQUJFQkZEM0VGRDNGRkUxMC1GRTE5RkUzMC1GRTUyRkU1NC1GRTYxRkU2M0ZFNjhGRTZBRkU2QkZGMDEtRkYwM0ZGMDUtRkYwQUZGMEMtRkYwRkZGMUFGRjFCRkYxRkZGMjBGRjNCLUZGM0RGRjNGRkY1QkZGNURGRjVGLUZGNjUiLAogICAgUGQ6ICIwMDJEMDU4QTA1QkUxNDAwMTgwNjIwMTAtMjAxNTJFMTcyRTFBMzAxQzMwMzAzMEEwRkUzMUZFMzJGRTU4RkU2M0ZGMEQiLAogICAgUHM6ICIwMDI4MDA1QjAwN0IwRjNBMEYzQzE2OUIyMDFBMjAxRTIwNDUyMDdEMjA4RDIzMjkyNzY4Mjc2QTI3NkMyNzZFMjc3MDI3NzIyNzc0MjdDNTI3RTYyN0U4MjdFQTI3RUMyN0VFMjk4MzI5ODUyOTg3Mjk4OTI5OEIyOThEMjk4RjI5OTEyOTkzMjk5NTI5OTcyOUQ4MjlEQTI5RkMyRTIyMkUyNDJFMjYyRTI4MzAwODMwMEEzMDBDMzAwRTMwMTAzMDE0MzAxNjMwMTgzMDFBMzAxREZEM0VGRTE3RkUzNUZFMzdGRTM5RkUzQkZFM0RGRTNGRkU0MUZFNDNGRTQ3RkU1OUZFNUJGRTVERkYwOEZGM0JGRjVCRkY1RkZGNjIiLAogICAgUGU6ICIwMDI5MDA1RDAwN0QwRjNCMEYzRDE2OUMyMDQ2MjA3RTIwOEUyMzJBMjc2OTI3NkIyNzZEMjc2RjI3NzEyNzczMjc3NTI3QzYyN0U3MjdFOTI3RUIyN0VEMjdFRjI5ODQyOTg2Mjk4ODI5OEEyOThDMjk4RTI5OTAyOTkyMjk5NDI5OTYyOTk4MjlEOTI5REIyOUZEMkUyMzJFMjUyRTI3MkUyOTMwMDkzMDBCMzAwRDMwMEYzMDExMzAxNTMwMTczMDE5MzAxQjMwMUUzMDFGRkQzRkZFMThGRTM2RkUzOEZFM0FGRTNDRkUzRUZFNDBGRTQyRkU0NEZFNDhGRTVBRkU1Q0ZFNUVGRjA5RkYzREZGNURGRjYwRkY2MyIsCiAgICBQaTogIjAwQUIyMDE4MjAxQjIwMUMyMDFGMjAzOTJFMDIyRTA0MkUwOTJFMEMyRTFDMkUyMCIsCiAgICBQZjogIjAwQkIyMDE5MjAxRDIwM0EyRTAzMkUwNTJFMEEyRTBEMkUxRDJFMjEiLAogICAgUGM6ICIwMDVGMjAzRjIwNDAyMDU0RkUzM0ZFMzRGRTRELUZFNEZGRjNGIiwKICAgIFBvOiAiMDAyMS0wMDIzMDAyNS0wMDI3MDAyQTAwMkMwMDJFMDAyRjAwM0EwMDNCMDAzRjAwNDAwMDVDMDBBMTAwQjcwMEJGMDM3RTAzODcwNTVBLTA1NUYwNTg5MDVDMDA1QzMwNUM2MDVGMzA1RjQwNjA5MDYwQTA2MEMwNjBEMDYxQjA2MUUwNjFGMDY2QS0wNjZEMDZENDA3MDAtMDcwRDA3RjctMDdGOTA4MzAtMDgzRTA5NjQwOTY1MDk3MDBERjQwRTRGMEU1QTBFNUIwRjA0LTBGMTIwRjg1MEZEMC0wRkQ0MTA0QS0xMDRGMTBGQjEzNjEtMTM2ODE2NkQxNjZFMTZFQi0xNkVEMTczNTE3MzYxN0Q0LTE3RDYxN0Q4LTE3REExODAwLTE4MDUxODA3LTE4MEExOTQ0MTk0NTE5REUxOURGMUExRTFBMUYxQUEwLTFBQTYxQUE4LTFBQUQxQjVBLTFCNjAxQzNCLTFDM0YxQzdFMUM3RjFDRDMyMDE2MjAxNzIwMjAtMjAyNzIwMzAtMjAzODIwM0ItMjAzRTIwNDEtMjA0MzIwNDctMjA1MTIwNTMyMDU1LTIwNUUyQ0Y5LTJDRkMyQ0ZFMkNGRjJFMDAyRTAxMkUwNi0yRTA4MkUwQjJFMEUtMkUxNjJFMTgyRTE5MkUxQjJFMUUyRTFGMkUyQS0yRTJFMkUzMDJFMzEzMDAxLTMwMDMzMDNEMzBGQkE0RkVBNEZGQTYwRC1BNjBGQTY3M0E2N0VBNkYyLUE2RjdBODc0LUE4NzdBOENFQThDRkE4RjgtQThGQUE5MkVBOTJGQTk1RkE5QzEtQTlDREE5REVBOURGQUE1Qy1BQTVGQUFERUFBREZBQkVCRkUxMC1GRTE2RkUxOUZFMzBGRTQ1RkU0NkZFNDktRkU0Q0ZFNTAtRkU1MkZFNTQtRkU1N0ZFNUYtRkU2MUZFNjhGRTZBRkU2QkZGMDEtRkYwM0ZGMDUtRkYwN0ZGMEFGRjBDRkYwRUZGMEZGRjFBRkYxQkZGMUZGRjIwRkYzQ0ZGNjFGRjY0RkY2NSIsCiAgICBTOiAgIjAwMjQwMDJCMDAzQy0wMDNFMDA1RTAwNjAwMDdDMDA3RTAwQTItMDBBOTAwQUMwMEFFLTAwQjEwMEI0MDBCNjAwQjgwMEQ3MDBGNzAyQzItMDJDNTAyRDItMDJERjAyRTUtMDJFQjAyRUQwMkVGLTAyRkYwMzc1MDM4NDAzODUwM0Y2MDQ4MjA2MDYtMDYwODA2MEIwNjBFMDYwRjA2RTkwNkZEMDZGRTA3RjYwOUYyMDlGMzA5RkEwOUZCMEFGMTBCNzAwQkYzLTBCRkEwQzdGMENGMTBDRjIwRDc5MEUzRjBGMDEtMEYwMzBGMTMtMEYxNzBGMUEtMEYxRjBGMzQwRjM2MEYzODBGQkUtMEZDNTBGQzctMEZDQzBGQ0UwRkNGMEZENS0wRkQ4MTA5RTEwOUYxMzYwMTM5MC0xMzk5MTdEQjE5NDAxOUUwLTE5RkYxQjYxLTFCNkExQjc0LTFCN0MxRkJEMUZCRi0xRkMxMUZDRC0xRkNGMUZERC0xRkRGMUZFRC0xRkVGMUZGRDFGRkUyMDQ0MjA1MjIwN0EtMjA3QzIwOEEtMjA4QzIwQTAtMjBCODIxMDAyMTAxMjEwMy0yMTA2MjEwODIxMDkyMTE0MjExNi0yMTE4MjExRS0yMTIzMjEyNTIxMjcyMTI5MjEyRTIxM0EyMTNCMjE0MC0yMTQ0MjE0QS0yMTREMjE0RjIxOTAtMjMyODIzMkItMjNFODI0MDAtMjQyNjI0NDAtMjQ0QTI0OUMtMjRFOTI1MDAtMjZDRDI2Q0YtMjZFMTI2RTMyNkU4LTI2RkYyNzAxLTI3MDQyNzA2LTI3MDkyNzBDLTI3MjcyNzI5LTI3NEIyNzREMjc0Ri0yNzUyMjc1Ni0yNzVFMjc2MS0yNzY3Mjc5NDI3OTgtMjdBRjI3QjEtMjdCRTI3QzAtMjdDNDI3QzctMjdDQTI3Q0MyN0QwLTI3RTUyN0YwLTI5ODIyOTk5LTI5RDcyOURDLTI5RkIyOUZFLTJCNEMyQjUwLTJCNTkyQ0U1LTJDRUEyRTgwLTJFOTkyRTlCLTJFRjMyRjAwLTJGRDUyRkYwLTJGRkIzMDA0MzAxMjMwMTMzMDIwMzAzNjMwMzczMDNFMzAzRjMwOUIzMDlDMzE5MDMxOTEzMTk2LTMxOUYzMUMwLTMxRTMzMjAwLTMyMUUzMjJBLTMyNTAzMjYwLTMyN0YzMjhBLTMyQjAzMkMwLTMyRkUzMzAwLTMzRkY0REMwLTRERkZBNDkwLUE0QzZBNzAwLUE3MTZBNzIwQTcyMUE3ODlBNzhBQTgyOC1BODJCQTgzNi1BODM5QUE3Ny1BQTc5RkIyOUZERkNGREZERkU2MkZFNjQtRkU2NkZFNjlGRjA0RkYwQkZGMUMtRkYxRUZGM0VGRjQwRkY1Q0ZGNUVGRkUwLUZGRTZGRkU4LUZGRUVGRkZDRkZGRCIsCiAgICBTbTogIjAwMkIwMDNDLTAwM0UwMDdDMDA3RTAwQUMwMEIxMDBENzAwRjcwM0Y2MDYwNi0wNjA4MjA0NDIwNTIyMDdBLTIwN0MyMDhBLTIwOEMyMTQwLTIxNDQyMTRCMjE5MC0yMTk0MjE5QTIxOUIyMUEwMjFBMzIxQTYyMUFFMjFDRTIxQ0YyMUQyMjFENDIxRjQtMjJGRjIzMDgtMjMwQjIzMjAyMzIxMjM3QzIzOUItMjNCMzIzREMtMjNFMTI1QjcyNUMxMjVGOC0yNUZGMjY2RjI3QzAtMjdDNDI3QzctMjdDQTI3Q0MyN0QwLTI3RTUyN0YwLTI3RkYyOTAwLTI5ODIyOTk5LTI5RDcyOURDLTI5RkIyOUZFLTJBRkYyQjMwLTJCNDQyQjQ3LTJCNENGQjI5RkU2MkZFNjQtRkU2NkZGMEJGRjFDLUZGMUVGRjVDRkY1RUZGRTJGRkU5LUZGRUMiLAogICAgU2M6ICIwMDI0MDBBMi0wMEE1MDYwQjA5RjIwOUYzMDlGQjBBRjEwQkY5MEUzRjE3REIyMEEwLTIwQjhBODM4RkRGQ0ZFNjlGRjA0RkZFMEZGRTFGRkU1RkZFNiIsCiAgICBTazogIjAwNUUwMDYwMDBBODAwQUYwMEI0MDBCODAyQzItMDJDNTAyRDItMDJERjAyRTUtMDJFQjAyRUQwMkVGLTAyRkYwMzc1MDM4NDAzODUxRkJEMUZCRi0xRkMxMUZDRC0xRkNGMUZERC0xRkRGMUZFRC0xRkVGMUZGRDFGRkUzMDlCMzA5Q0E3MDAtQTcxNkE3MjBBNzIxQTc4OUE3OEFGRjNFRkY0MEZGRTMiLAogICAgU286ICIwMEE2MDBBNzAwQTkwMEFFMDBCMDAwQjYwNDgyMDYwRTA2MEYwNkU5MDZGRDA2RkUwN0Y2MDlGQTBCNzAwQkYzLTBCRjgwQkZBMEM3RjBDRjEwQ0YyMEQ3OTBGMDEtMEYwMzBGMTMtMEYxNzBGMUEtMEYxRjBGMzQwRjM2MEYzODBGQkUtMEZDNTBGQzctMEZDQzBGQ0UwRkNGMEZENS0wRkQ4MTA5RTEwOUYxMzYwMTM5MC0xMzk5MTk0MDE5RTAtMTlGRjFCNjEtMUI2QTFCNzQtMUI3QzIxMDAyMTAxMjEwMy0yMTA2MjEwODIxMDkyMTE0MjExNi0yMTE4MjExRS0yMTIzMjEyNTIxMjcyMTI5MjEyRTIxM0EyMTNCMjE0QTIxNEMyMTREMjE0RjIxOTUtMjE5OTIxOUMtMjE5RjIxQTEyMUEyMjFBNDIxQTUyMUE3LTIxQUQyMUFGLTIxQ0QyMUQwMjFEMTIxRDMyMUQ1LTIxRjMyMzAwLTIzMDcyMzBDLTIzMUYyMzIyLTIzMjgyMzJCLTIzN0IyMzdELTIzOUEyM0I0LTIzREIyM0UyLTIzRTgyNDAwLTI0MjYyNDQwLTI0NEEyNDlDLTI0RTkyNTAwLTI1QjYyNUI4LTI1QzAyNUMyLTI1RjcyNjAwLTI2NkUyNjcwLTI2Q0QyNkNGLTI2RTEyNkUzMjZFOC0yNkZGMjcwMS0yNzA0MjcwNi0yNzA5MjcwQy0yNzI3MjcyOS0yNzRCMjc0RDI3NEYtMjc1MjI3NTYtMjc1RTI3NjEtMjc2NzI3OTQyNzk4LTI3QUYyN0IxLTI3QkUyODAwLTI4RkYyQjAwLTJCMkYyQjQ1MkI0NjJCNTAtMkI1OTJDRTUtMkNFQTJFODAtMkU5OTJFOUItMkVGMzJGMDAtMkZENTJGRjAtMkZGQjMwMDQzMDEyMzAxMzMwMjAzMDM2MzAzNzMwM0UzMDNGMzE5MDMxOTEzMTk2LTMxOUYzMUMwLTMxRTMzMjAwLTMyMUUzMjJBLTMyNTAzMjYwLTMyN0YzMjhBLTMyQjAzMkMwLTMyRkUzMzAwLTMzRkY0REMwLTRERkZBNDkwLUE0QzZBODI4LUE4MkJBODM2QTgzN0E4MzlBQTc3LUFBNzlGREZERkZFNEZGRThGRkVERkZFRUZGRkNGRkZEIiwKICAgIFo6ICAiMDAyMDAwQTAxNjgwMTgwRTIwMDAtMjAwQTIwMjgyMDI5MjAyRjIwNUYzMDAwIiwKICAgIFpzOiAiMDAyMDAwQTAxNjgwMTgwRTIwMDAtMjAwQTIwMkYyMDVGMzAwMCIsCiAgICBabDogIjIwMjgiLAogICAgWnA6ICIyMDI5IiwKICAgIEM6ICAiMDAwMC0wMDFGMDA3Ri0wMDlGMDBBRDAzNzgwMzc5MDM3Ri0wMzgzMDM4QjAzOEQwM0EyMDUyNi0wNTMwMDU1NzA1NTgwNTYwMDU4ODA1OEItMDU5MDA1QzgtMDVDRjA1RUItMDVFRjA1RjUtMDYwNTA2MUMwNjFEMDYyMDA2NUYwNkREMDcwRTA3MEYwNzRCMDc0QzA3QjItMDdCRjA3RkItMDdGRjA4MkUwODJGMDgzRi0wOEZGMDkzQTA5M0IwOTRGMDk1NjA5NTcwOTczLTA5NzgwOTgwMDk4NDA5OEQwOThFMDk5MTA5OTIwOUE5MDlCMTA5QjMtMDlCNTA5QkEwOUJCMDlDNTA5QzYwOUM5MDlDQTA5Q0YtMDlENjA5RDgtMDlEQjA5REUwOUU0MDlFNTA5RkMtMEEwMDBBMDQwQTBCLTBBMEUwQTExMEExMjBBMjkwQTMxMEEzNDBBMzcwQTNBMEEzQjBBM0QwQTQzLTBBNDYwQTQ5MEE0QTBBNEUtMEE1MDBBNTItMEE1ODBBNUQwQTVGLTBBNjUwQTc2LTBBODAwQTg0MEE4RTBBOTIwQUE5MEFCMTBBQjQwQUJBMEFCQjBBQzYwQUNBMEFDRTBBQ0YwQUQxLTBBREYwQUU0MEFFNTBBRjAwQUYyLTBCMDAwQjA0MEIwRDBCMEUwQjExMEIxMjBCMjkwQjMxMEIzNDBCM0EwQjNCMEI0NTBCNDYwQjQ5MEI0QTBCNEUtMEI1NTBCNTgtMEI1QjBCNUUwQjY0MEI2NTBCNzItMEI4MTBCODQwQjhCLTBCOEQwQjkxMEI5Ni0wQjk4MEI5QjBCOUQwQkEwLTBCQTIwQkE1LTBCQTcwQkFCLTBCQUQwQkJBLTBCQkQwQkMzLTBCQzUwQkM5MEJDRTBCQ0YwQkQxLTBCRDYwQkQ4LTBCRTUwQkZCLTBDMDAwQzA0MEMwRDBDMTEwQzI5MEMzNDBDM0EtMEMzQzBDNDUwQzQ5MEM0RS0wQzU0MEM1NzBDNUEtMEM1RjBDNjQwQzY1MEM3MC0wQzc3MEM4MDBDODEwQzg0MEM4RDBDOTEwQ0E5MENCNDBDQkEwQ0JCMENDNTBDQzkwQ0NFLTBDRDQwQ0Q3LTBDREQwQ0RGMENFNDBDRTUwQ0YwMENGMy0wRDAxMEQwNDBEMEQwRDExMEQyOTBEM0EtMEQzQzBENDUwRDQ5MEQ0RS0wRDU2MEQ1OC0wRDVGMEQ2NDBENjUwRDc2LTBENzgwRDgwMEQ4MTBEODQwRDk3LTBEOTkwREIyMERCQzBEQkUwREJGMERDNy0wREM5MERDQi0wRENFMERENTBERDcwREUwLTBERjEwREY1LTBFMDAwRTNCLTBFM0UwRTVDLTBFODAwRTgzMEU4NTBFODYwRTg5MEU4QjBFOEMwRThFLTBFOTMwRTk4MEVBMDBFQTQwRUE2MEVBODBFQTkwRUFDMEVCQTBFQkUwRUJGMEVDNTBFQzcwRUNFMEVDRjBFREEwRURCMEVERS0wRUZGMEY0ODBGNkQtMEY3MDBGOEMtMEY4RjBGOTgwRkJEMEZDRDBGRDktMEZGRjEwQzYtMTBDRjEwRkQtMTBGRjEyNDkxMjRFMTI0RjEyNTcxMjU5MTI1RTEyNUYxMjg5MTI4RTEyOEYxMkIxMTJCNjEyQjcxMkJGMTJDMTEyQzYxMkM3MTJENzEzMTExMzE2MTMxNzEzNUItMTM1RTEzN0QtMTM3RjEzOUEtMTM5RjEzRjUtMTNGRjE2OUQtMTY5RjE2RjEtMTZGRjE3MEQxNzE1LTE3MUYxNzM3LTE3M0YxNzU0LTE3NUYxNzZEMTc3MTE3NzQtMTc3RjE3QjQxN0I1MTdERTE3REYxN0VBLTE3RUYxN0ZBLTE3RkYxODBGMTgxQS0xODFGMTg3OC0xODdGMThBQi0xOEFGMThGNi0xOEZGMTkxRC0xOTFGMTkyQy0xOTJGMTkzQy0xOTNGMTk0MS0xOTQzMTk2RTE5NkYxOTc1LTE5N0YxOUFDLTE5QUYxOUNBLTE5Q0YxOURCLTE5REQxQTFDMUExRDFBNUYxQTdEMUE3RTFBOEEtMUE4RjFBOUEtMUE5RjFBQUUtMUFGRjFCNEMtMUI0RjFCN0QtMUI3RjFCQUItMUJBRDFCQkEtMUJGRjFDMzgtMUMzQTFDNEEtMUM0QzFDODAtMUNDRjFDRjMtMUNGRjFERTctMURGQzFGMTYxRjE3MUYxRTFGMUYxRjQ2MUY0NzFGNEUxRjRGMUY1ODFGNUExRjVDMUY1RTFGN0UxRjdGMUZCNTFGQzUxRkQ0MUZENTFGREMxRkYwMUZGMTFGRjUxRkZGMjAwQi0yMDBGMjAyQS0yMDJFMjA2MC0yMDZGMjA3MjIwNzMyMDhGMjA5NS0yMDlGMjBCOS0yMENGMjBGMS0yMEZGMjE4QS0yMThGMjNFOS0yM0ZGMjQyNy0yNDNGMjQ0Qi0yNDVGMjZDRTI2RTIyNkU0LTI2RTcyNzAwMjcwNTI3MEEyNzBCMjcyODI3NEMyNzRFMjc1My0yNzU1Mjc1RjI3NjAyNzk1LTI3OTcyN0IwMjdCRjI3Q0IyN0NELTI3Q0YyQjRELTJCNEYyQjVBLTJCRkYyQzJGMkM1RjJDRjItMkNGODJEMjYtMkQyRjJENjYtMkQ2RTJENzAtMkQ3RjJEOTctMkQ5RjJEQTcyREFGMkRCNzJEQkYyREM3MkRDRjJERDcyRERGMkUzMi0yRTdGMkU5QTJFRjQtMkVGRjJGRDYtMkZFRjJGRkMtMkZGRjMwNDAzMDk3MzA5ODMxMDAtMzEwNDMxMkUtMzEzMDMxOEYzMUI4LTMxQkYzMUU0LTMxRUYzMjFGMzJGRjREQjYtNERCRjlGQ0MtOUZGRkE0OEQtQTQ4RkE0QzctQTRDRkE2MkMtQTYzRkE2NjBBNjYxQTY3NC1BNjdCQTY5OC1BNjlGQTZGOC1BNkZGQTc4RC1BN0ZBQTgyQy1BODJGQTgzQS1BODNGQTg3OC1BODdGQThDNS1BOENEQThEQS1BOERGQThGQy1BOEZGQTk1NC1BOTVFQTk3RC1BOTdGQTlDRUE5REEtQTlEREE5RTAtQTlGRkFBMzctQUEzRkFBNEVBQTRGQUE1QUFBNUJBQTdDLUFBN0ZBQUMzLUFBREFBQUUwLUFCQkZBQkVFQUJFRkFCRkEtQUJGRkQ3QTQtRDdBRkQ3QzctRDdDQUQ3RkMtRjhGRkZBMkVGQTJGRkE2RUZBNkZGQURBLUZBRkZGQjA3LUZCMTJGQjE4LUZCMUNGQjM3RkIzREZCM0ZGQjQyRkI0NUZCQjItRkJEMkZENDAtRkQ0RkZEOTBGRDkxRkRDOC1GREVGRkRGRUZERkZGRTFBLUZFMUZGRTI3LUZFMkZGRTUzRkU2N0ZFNkMtRkU2RkZFNzVGRUZELUZGMDBGRkJGLUZGQzFGRkM4RkZDOUZGRDBGRkQxRkZEOEZGRDlGRkRELUZGREZGRkU3RkZFRi1GRkZCRkZGRUZGRkYiLAogICAgQ2M6ICIwMDAwLTAwMUYwMDdGLTAwOUYiLAogICAgQ2Y6ICIwMEFEMDYwMC0wNjAzMDZERDA3MEYxN0I0MTdCNTIwMEItMjAwRjIwMkEtMjAyRTIwNjAtMjA2NDIwNkEtMjA2RkZFRkZGRkY5LUZGRkIiLAogICAgQ286ICJFMDAwLUY4RkYiLAogICAgQ3M6ICJEODAwLURGRkYiLAogICAgQ246ICIwMzc4MDM3OTAzN0YtMDM4MzAzOEIwMzhEMDNBMjA1MjYtMDUzMDA1NTcwNTU4MDU2MDA1ODgwNThCLTA1OTAwNUM4LTA1Q0YwNUVCLTA1RUYwNUY1LTA1RkYwNjA0MDYwNTA2MUMwNjFEMDYyMDA2NUYwNzBFMDc0QjA3NEMwN0IyLTA3QkYwN0ZCLTA3RkYwODJFMDgyRjA4M0YtMDhGRjA5M0EwOTNCMDk0RjA5NTYwOTU3MDk3My0wOTc4MDk4MDA5ODQwOThEMDk4RTA5OTEwOTkyMDlBOTA5QjEwOUIzLTA5QjUwOUJBMDlCQjA5QzUwOUM2MDlDOTA5Q0EwOUNGLTA5RDYwOUQ4LTA5REIwOURFMDlFNDA5RTUwOUZDLTBBMDAwQTA0MEEwQi0wQTBFMEExMTBBMTIwQTI5MEEzMTBBMzQwQTM3MEEzQTBBM0IwQTNEMEE0My0wQTQ2MEE0OTBBNEEwQTRFLTBBNTAwQTUyLTBBNTgwQTVEMEE1Ri0wQTY1MEE3Ni0wQTgwMEE4NDBBOEUwQTkyMEFBOTBBQjEwQUI0MEFCQTBBQkIwQUM2MEFDQTBBQ0UwQUNGMEFEMS0wQURGMEFFNDBBRTUwQUYwMEFGMi0wQjAwMEIwNDBCMEQwQjBFMEIxMTBCMTIwQjI5MEIzMTBCMzQwQjNBMEIzQjBCNDUwQjQ2MEI0OTBCNEEwQjRFLTBCNTUwQjU4LTBCNUIwQjVFMEI2NDBCNjUwQjcyLTBCODEwQjg0MEI4Qi0wQjhEMEI5MTBCOTYtMEI5ODBCOUIwQjlEMEJBMC0wQkEyMEJBNS0wQkE3MEJBQi0wQkFEMEJCQS0wQkJEMEJDMy0wQkM1MEJDOTBCQ0UwQkNGMEJEMS0wQkQ2MEJEOC0wQkU1MEJGQi0wQzAwMEMwNDBDMEQwQzExMEMyOTBDMzQwQzNBLTBDM0MwQzQ1MEM0OTBDNEUtMEM1NDBDNTcwQzVBLTBDNUYwQzY0MEM2NTBDNzAtMEM3NzBDODAwQzgxMEM4NDBDOEQwQzkxMENBOTBDQjQwQ0JBMENCQjBDQzUwQ0M5MENDRS0wQ0Q0MENENy0wQ0REMENERjBDRTQwQ0U1MENGMDBDRjMtMEQwMTBEMDQwRDBEMEQxMTBEMjkwRDNBLTBEM0MwRDQ1MEQ0OTBENEUtMEQ1NjBENTgtMEQ1RjBENjQwRDY1MEQ3Ni0wRDc4MEQ4MDBEODEwRDg0MEQ5Ny0wRDk5MERCMjBEQkMwREJFMERCRjBEQzctMERDOTBEQ0ItMERDRTBERDUwREQ3MERFMC0wREYxMERGNS0wRTAwMEUzQi0wRTNFMEU1Qy0wRTgwMEU4MzBFODUwRTg2MEU4OTBFOEIwRThDMEU4RS0wRTkzMEU5ODBFQTAwRUE0MEVBNjBFQTgwRUE5MEVBQzBFQkEwRUJFMEVCRjBFQzUwRUM3MEVDRTBFQ0YwRURBMEVEQjBFREUtMEVGRjBGNDgwRjZELTBGNzAwRjhDLTBGOEYwRjk4MEZCRDBGQ0QwRkQ5LTBGRkYxMEM2LTEwQ0YxMEZELTEwRkYxMjQ5MTI0RTEyNEYxMjU3MTI1OTEyNUUxMjVGMTI4OTEyOEUxMjhGMTJCMTEyQjYxMkI3MTJCRjEyQzExMkM2MTJDNzEyRDcxMzExMTMxNjEzMTcxMzVCLTEzNUUxMzdELTEzN0YxMzlBLTEzOUYxM0Y1LTEzRkYxNjlELTE2OUYxNkYxLTE2RkYxNzBEMTcxNS0xNzFGMTczNy0xNzNGMTc1NC0xNzVGMTc2RDE3NzExNzc0LTE3N0YxN0RFMTdERjE3RUEtMTdFRjE3RkEtMTdGRjE4MEYxODFBLTE4MUYxODc4LTE4N0YxOEFCLTE4QUYxOEY2LTE4RkYxOTFELTE5MUYxOTJDLTE5MkYxOTNDLTE5M0YxOTQxLTE5NDMxOTZFMTk2RjE5NzUtMTk3RjE5QUMtMTlBRjE5Q0EtMTlDRjE5REItMTlERDFBMUMxQTFEMUE1RjFBN0QxQTdFMUE4QS0xQThGMUE5QS0xQTlGMUFBRS0xQUZGMUI0Qy0xQjRGMUI3RC0xQjdGMUJBQi0xQkFEMUJCQS0xQkZGMUMzOC0xQzNBMUM0QS0xQzRDMUM4MC0xQ0NGMUNGMy0xQ0ZGMURFNy0xREZDMUYxNjFGMTcxRjFFMUYxRjFGNDYxRjQ3MUY0RTFGNEYxRjU4MUY1QTFGNUMxRjVFMUY3RTFGN0YxRkI1MUZDNTFGRDQxRkQ1MUZEQzFGRjAxRkYxMUZGNTFGRkYyMDY1LTIwNjkyMDcyMjA3MzIwOEYyMDk1LTIwOUYyMEI5LTIwQ0YyMEYxLTIwRkYyMThBLTIxOEYyM0U5LTIzRkYyNDI3LTI0M0YyNDRCLTI0NUYyNkNFMjZFMjI2RTQtMjZFNzI3MDAyNzA1MjcwQTI3MEIyNzI4Mjc0QzI3NEUyNzUzLTI3NTUyNzVGMjc2MDI3OTUtMjc5NzI3QjAyN0JGMjdDQjI3Q0QtMjdDRjJCNEQtMkI0RjJCNUEtMkJGRjJDMkYyQzVGMkNGMi0yQ0Y4MkQyNi0yRDJGMkQ2Ni0yRDZFMkQ3MC0yRDdGMkQ5Ny0yRDlGMkRBNzJEQUYyREI3MkRCRjJEQzcyRENGMkRENzJEREYyRTMyLTJFN0YyRTlBMkVGNC0yRUZGMkZENi0yRkVGMkZGQy0yRkZGMzA0MDMwOTczMDk4MzEwMC0zMTA0MzEyRS0zMTMwMzE4RjMxQjgtMzFCRjMxRTQtMzFFRjMyMUYzMkZGNERCNi00REJGOUZDQy05RkZGQTQ4RC1BNDhGQTRDNy1BNENGQTYyQy1BNjNGQTY2MEE2NjFBNjc0LUE2N0JBNjk4LUE2OUZBNkY4LUE2RkZBNzhELUE3RkFBODJDLUE4MkZBODNBLUE4M0ZBODc4LUE4N0ZBOEM1LUE4Q0RBOERBLUE4REZBOEZDLUE4RkZBOTU0LUE5NUVBOTdELUE5N0ZBOUNFQTlEQS1BOUREQTlFMC1BOUZGQUEzNy1BQTNGQUE0RUFBNEZBQTVBQUE1QkFBN0MtQUE3RkFBQzMtQUFEQUFBRTAtQUJCRkFCRUVBQkVGQUJGQS1BQkZGRDdBNC1EN0FGRDdDNy1EN0NBRDdGQy1EN0ZGRkEyRUZBMkZGQTZFRkE2RkZBREEtRkFGRkZCMDctRkIxMkZCMTgtRkIxQ0ZCMzdGQjNERkIzRkZCNDJGQjQ1RkJCMi1GQkQyRkQ0MC1GRDRGRkQ5MEZEOTFGREM4LUZERUZGREZFRkRGRkZFMUEtRkUxRkZFMjctRkUyRkZFNTNGRTY3RkU2Qy1GRTZGRkU3NUZFRkRGRUZFRkYwMEZGQkYtRkZDMUZGQzhGRkM5RkZEMEZGRDFGRkQ4RkZEOUZGREQtRkZERkZGRTdGRkVGLUZGRjhGRkZFRkZGRiIKfSk7CgpmdW5jdGlvbiBhZGRVbmljb2RlUGFja2FnZSAocGFjaykgewogICAgdmFyIGNvZGVQb2ludCA9IC9cd3s0fS9nOwogICAgZm9yICh2YXIgbmFtZSBpbiBwYWNrKQogICAgICAgIGV4cG9ydHMucGFja2FnZXNbbmFtZV0gPSBwYWNrW25hbWVdLnJlcGxhY2UoY29kZVBvaW50LCAiXFx1JCYiKTsKfTsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL2RvY3VtZW50JywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL29vcCcsICdhY2UvbGliL2V2ZW50X2VtaXR0ZXInLCAnYWNlL3JhbmdlJywgJ2FjZS9hbmNob3InXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIG9vcCA9IHJlcXVpcmUoIi4vbGliL29vcCIpOwp2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgiLi9saWIvZXZlbnRfZW1pdHRlciIpLkV2ZW50RW1pdHRlcjsKdmFyIFJhbmdlID0gcmVxdWlyZSgiLi9yYW5nZSIpLlJhbmdlOwp2YXIgQW5jaG9yID0gcmVxdWlyZSgiLi9hbmNob3IiKS5BbmNob3I7Cgp2YXIgRG9jdW1lbnQgPSBmdW5jdGlvbih0ZXh0KSB7CiAgICB0aGlzLiRsaW5lcyA9IFtdOwogICAgaWYgKHRleHQubGVuZ3RoID09IDApIHsKICAgICAgICB0aGlzLiRsaW5lcyA9IFsiIl07CiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodGV4dCkpIHsKICAgICAgICB0aGlzLmluc2VydExpbmVzKDAsIHRleHQpOwogICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmluc2VydCh7cm93OiAwLCBjb2x1bW46MH0sIHRleHQpOwogICAgfQp9OwoKKGZ1bmN0aW9uKCkgewoKICAgIG9vcC5pbXBsZW1lbnQodGhpcywgRXZlbnRFbWl0dGVyKTsKICAgIHRoaXMuc2V0VmFsdWUgPSBmdW5jdGlvbih0ZXh0KSB7CiAgICAgICAgdmFyIGxlbiA9IHRoaXMuZ2V0TGVuZ3RoKCk7CiAgICAgICAgdGhpcy5yZW1vdmUobmV3IFJhbmdlKDAsIDAsIGxlbiwgdGhpcy5nZXRMaW5lKGxlbi0xKS5sZW5ndGgpKTsKICAgICAgICB0aGlzLmluc2VydCh7cm93OiAwLCBjb2x1bW46MH0sIHRleHQpOwogICAgfTsKICAgIHRoaXMuZ2V0VmFsdWUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5nZXRBbGxMaW5lcygpLmpvaW4odGhpcy5nZXROZXdMaW5lQ2hhcmFjdGVyKCkpOwogICAgfTsKICAgIHRoaXMuY3JlYXRlQW5jaG9yID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICByZXR1cm4gbmV3IEFuY2hvcih0aGlzLCByb3csIGNvbHVtbik7CiAgICB9OwogICAgaWYgKCJhYWEiLnNwbGl0KC9hLykubGVuZ3RoID09IDApCiAgICAgICAgdGhpcy4kc3BsaXQgPSBmdW5jdGlvbih0ZXh0KSB7CiAgICAgICAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoL1xyXG58XHIvZywgIlxuIikuc3BsaXQoIlxuIik7CiAgICAgICAgfQogICAgZWxzZQogICAgICAgIHRoaXMuJHNwbGl0ID0gZnVuY3Rpb24odGV4dCkgewogICAgICAgICAgICByZXR1cm4gdGV4dC5zcGxpdCgvXHJcbnxccnxcbi8pOwogICAgICAgIH07CgoKIAogICAgdGhpcy4kZGV0ZWN0TmV3TGluZSA9IGZ1bmN0aW9uKHRleHQpIHsKICAgICAgICB2YXIgbWF0Y2ggPSB0ZXh0Lm1hdGNoKC9eLio/KFxyXG58XHJ8XG4pL20pOwogICAgICAgIGlmIChtYXRjaCkgewogICAgICAgICAgICB0aGlzLiRhdXRvTmV3TGluZSA9IG1hdGNoWzFdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuJGF1dG9OZXdMaW5lID0gIlxuIjsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5nZXROZXdMaW5lQ2hhcmFjdGVyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgc3dpdGNoICh0aGlzLiRuZXdMaW5lTW9kZSkgewogICAgICAgICAgY2FzZSAid2luZG93cyI6CiAgICAgICAgICAgIHJldHVybiAiXHJcbiI7CgogICAgICAgICAgY2FzZSAidW5peCI6CiAgICAgICAgICAgIHJldHVybiAiXG4iOwoKICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRhdXRvTmV3TGluZTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuJGF1dG9OZXdMaW5lID0gIlxuIjsKICAgIHRoaXMuJG5ld0xpbmVNb2RlID0gImF1dG8iOwogICAgdGhpcy5zZXROZXdMaW5lTW9kZSA9IGZ1bmN0aW9uKG5ld0xpbmVNb2RlKSB7CiAgICAgICAgaWYgKHRoaXMuJG5ld0xpbmVNb2RlID09PSBuZXdMaW5lTW9kZSkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB0aGlzLiRuZXdMaW5lTW9kZSA9IG5ld0xpbmVNb2RlOwogICAgfTsKICAgIHRoaXMuZ2V0TmV3TGluZU1vZGUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbmV3TGluZU1vZGU7CiAgICB9OwogICAgdGhpcy5pc05ld0xpbmUgPSBmdW5jdGlvbih0ZXh0KSB7CiAgICAgICAgcmV0dXJuICh0ZXh0ID09ICJcclxuIiB8fCB0ZXh0ID09ICJcciIgfHwgdGV4dCA9PSAiXG4iKTsKICAgIH07CiAgICB0aGlzLmdldExpbmUgPSBmdW5jdGlvbihyb3cpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbGluZXNbcm93XSB8fCAiIjsKICAgIH07CiAgICB0aGlzLmdldExpbmVzID0gZnVuY3Rpb24oZmlyc3RSb3csIGxhc3RSb3cpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbGluZXMuc2xpY2UoZmlyc3RSb3csIGxhc3RSb3cgKyAxKTsKICAgIH07CiAgICB0aGlzLmdldEFsbExpbmVzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TGluZXMoMCwgdGhpcy5nZXRMZW5ndGgoKSk7CiAgICB9OwogICAgdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbGluZXMubGVuZ3RoOwogICAgfTsKICAgIHRoaXMuZ2V0VGV4dFJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHsKICAgICAgICBpZiAocmFuZ2Uuc3RhcnQucm93ID09IHJhbmdlLmVuZC5yb3cpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGxpbmVzW3JhbmdlLnN0YXJ0LnJvd10uc3Vic3RyaW5nKHJhbmdlLnN0YXJ0LmNvbHVtbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuZW5kLmNvbHVtbik7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICB2YXIgbGluZXMgPSB0aGlzLmdldExpbmVzKHJhbmdlLnN0YXJ0LnJvdysxLCByYW5nZS5lbmQucm93LTEpOwogICAgICAgICAgICBsaW5lcy51bnNoaWZ0KCh0aGlzLiRsaW5lc1tyYW5nZS5zdGFydC5yb3ddIHx8ICIiKS5zdWJzdHJpbmcocmFuZ2Uuc3RhcnQuY29sdW1uKSk7CiAgICAgICAgICAgIGxpbmVzLnB1c2goKHRoaXMuJGxpbmVzW3JhbmdlLmVuZC5yb3ddIHx8ICIiKS5zdWJzdHJpbmcoMCwgcmFuZ2UuZW5kLmNvbHVtbikpOwogICAgICAgICAgICByZXR1cm4gbGluZXMuam9pbih0aGlzLmdldE5ld0xpbmVDaGFyYWN0ZXIoKSk7CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLiRjbGlwUG9zaXRpb24gPSBmdW5jdGlvbihwb3NpdGlvbikgewogICAgICAgIHZhciBsZW5ndGggPSB0aGlzLmdldExlbmd0aCgpOwogICAgICAgIGlmIChwb3NpdGlvbi5yb3cgPj0gbGVuZ3RoKSB7CiAgICAgICAgICAgIHBvc2l0aW9uLnJvdyA9IE1hdGgubWF4KDAsIGxlbmd0aCAtIDEpOwogICAgICAgICAgICBwb3NpdGlvbi5jb2x1bW4gPSB0aGlzLmdldExpbmUobGVuZ3RoLTEpLmxlbmd0aDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHBvc2l0aW9uOwogICAgfTsKICAgIHRoaXMuaW5zZXJ0ID0gZnVuY3Rpb24ocG9zaXRpb24sIHRleHQpIHsKICAgICAgICBpZiAoIXRleHQgfHwgdGV4dC5sZW5ndGggPT09IDApCiAgICAgICAgICAgIHJldHVybiBwb3NpdGlvbjsKCiAgICAgICAgcG9zaXRpb24gPSB0aGlzLiRjbGlwUG9zaXRpb24ocG9zaXRpb24pOwogICAgICAgIGlmICh0aGlzLmdldExlbmd0aCgpIDw9IDEpCiAgICAgICAgICAgIHRoaXMuJGRldGVjdE5ld0xpbmUodGV4dCk7CgogICAgICAgIHZhciBsaW5lcyA9IHRoaXMuJHNwbGl0KHRleHQpOwogICAgICAgIHZhciBmaXJzdExpbmUgPSBsaW5lcy5zcGxpY2UoMCwgMSlbMF07CiAgICAgICAgdmFyIGxhc3RMaW5lID0gbGluZXMubGVuZ3RoID09IDAgPyBudWxsIDogbGluZXMuc3BsaWNlKGxpbmVzLmxlbmd0aCAtIDEsIDEpWzBdOwoKICAgICAgICBwb3NpdGlvbiA9IHRoaXMuaW5zZXJ0SW5MaW5lKHBvc2l0aW9uLCBmaXJzdExpbmUpOwogICAgICAgIGlmIChsYXN0TGluZSAhPT0gbnVsbCkgewogICAgICAgICAgICBwb3NpdGlvbiA9IHRoaXMuaW5zZXJ0TmV3TGluZShwb3NpdGlvbik7IC8vIHRlcm1pbmF0ZSBmaXJzdCBsaW5lCiAgICAgICAgICAgIHBvc2l0aW9uID0gdGhpcy5pbnNlcnRMaW5lcyhwb3NpdGlvbi5yb3csIGxpbmVzKTsKICAgICAgICAgICAgcG9zaXRpb24gPSB0aGlzLmluc2VydEluTGluZShwb3NpdGlvbiwgbGFzdExpbmUgfHwgIiIpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcG9zaXRpb247CiAgICB9OwogICAgdGhpcy5pbnNlcnRMaW5lcyA9IGZ1bmN0aW9uKHJvdywgbGluZXMpIHsKICAgICAgICBpZiAobGluZXMubGVuZ3RoID09IDApCiAgICAgICAgICAgIHJldHVybiB7cm93OiByb3csIGNvbHVtbjogMH07CiAgICAgICAgaWYgKGxpbmVzLmxlbmd0aCA+IDB4RkZGRikgewogICAgICAgICAgICB2YXIgZW5kID0gdGhpcy5pbnNlcnRMaW5lcyhyb3csIGxpbmVzLnNsaWNlKDB4RkZGRikpOwogICAgICAgICAgICBsaW5lcyA9IGxpbmVzLnNsaWNlKDAsIDB4RkZGRik7CiAgICAgICAgfQoKICAgICAgICB2YXIgYXJncyA9IFtyb3csIDBdOwogICAgICAgIGFyZ3MucHVzaC5hcHBseShhcmdzLCBsaW5lcyk7CiAgICAgICAgdGhpcy4kbGluZXMuc3BsaWNlLmFwcGx5KHRoaXMuJGxpbmVzLCBhcmdzKTsKCiAgICAgICAgdmFyIHJhbmdlID0gbmV3IFJhbmdlKHJvdywgMCwgcm93ICsgbGluZXMubGVuZ3RoLCAwKTsKICAgICAgICB2YXIgZGVsdGEgPSB7CiAgICAgICAgICAgIGFjdGlvbjogImluc2VydExpbmVzIiwKICAgICAgICAgICAgcmFuZ2U6IHJhbmdlLAogICAgICAgICAgICBsaW5lczogbGluZXMKICAgICAgICB9OwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZSIsIHsgZGF0YTogZGVsdGEgfSk7CiAgICAgICAgcmV0dXJuIGVuZCB8fCByYW5nZS5lbmQ7CiAgICB9OwogICAgdGhpcy5pbnNlcnROZXdMaW5lID0gZnVuY3Rpb24ocG9zaXRpb24pIHsKICAgICAgICBwb3NpdGlvbiA9IHRoaXMuJGNsaXBQb3NpdGlvbihwb3NpdGlvbik7CiAgICAgICAgdmFyIGxpbmUgPSB0aGlzLiRsaW5lc1twb3NpdGlvbi5yb3ddIHx8ICIiOwoKICAgICAgICB0aGlzLiRsaW5lc1twb3NpdGlvbi5yb3ddID0gbGluZS5zdWJzdHJpbmcoMCwgcG9zaXRpb24uY29sdW1uKTsKICAgICAgICB0aGlzLiRsaW5lcy5zcGxpY2UocG9zaXRpb24ucm93ICsgMSwgMCwgbGluZS5zdWJzdHJpbmcocG9zaXRpb24uY29sdW1uLCBsaW5lLmxlbmd0aCkpOwoKICAgICAgICB2YXIgZW5kID0gewogICAgICAgICAgICByb3cgOiBwb3NpdGlvbi5yb3cgKyAxLAogICAgICAgICAgICBjb2x1bW4gOiAwCiAgICAgICAgfTsKCiAgICAgICAgdmFyIGRlbHRhID0gewogICAgICAgICAgICBhY3Rpb246ICJpbnNlcnRUZXh0IiwKICAgICAgICAgICAgcmFuZ2U6IFJhbmdlLmZyb21Qb2ludHMocG9zaXRpb24sIGVuZCksCiAgICAgICAgICAgIHRleHQ6IHRoaXMuZ2V0TmV3TGluZUNoYXJhY3RlcigpCiAgICAgICAgfTsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2UiLCB7IGRhdGE6IGRlbHRhIH0pOwoKICAgICAgICByZXR1cm4gZW5kOwogICAgfTsKICAgIHRoaXMuaW5zZXJ0SW5MaW5lID0gZnVuY3Rpb24ocG9zaXRpb24sIHRleHQpIHsKICAgICAgICBpZiAodGV4dC5sZW5ndGggPT0gMCkKICAgICAgICAgICAgcmV0dXJuIHBvc2l0aW9uOwoKICAgICAgICB2YXIgbGluZSA9IHRoaXMuJGxpbmVzW3Bvc2l0aW9uLnJvd10gfHwgIiI7CgogICAgICAgIHRoaXMuJGxpbmVzW3Bvc2l0aW9uLnJvd10gPSBsaW5lLnN1YnN0cmluZygwLCBwb3NpdGlvbi5jb2x1bW4pICsgdGV4dAogICAgICAgICAgICAgICAgKyBsaW5lLnN1YnN0cmluZyhwb3NpdGlvbi5jb2x1bW4pOwoKICAgICAgICB2YXIgZW5kID0gewogICAgICAgICAgICByb3cgOiBwb3NpdGlvbi5yb3csCiAgICAgICAgICAgIGNvbHVtbiA6IHBvc2l0aW9uLmNvbHVtbiArIHRleHQubGVuZ3RoCiAgICAgICAgfTsKCiAgICAgICAgdmFyIGRlbHRhID0gewogICAgICAgICAgICBhY3Rpb246ICJpbnNlcnRUZXh0IiwKICAgICAgICAgICAgcmFuZ2U6IFJhbmdlLmZyb21Qb2ludHMocG9zaXRpb24sIGVuZCksCiAgICAgICAgICAgIHRleHQ6IHRleHQKICAgICAgICB9OwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZSIsIHsgZGF0YTogZGVsdGEgfSk7CgogICAgICAgIHJldHVybiBlbmQ7CiAgICB9OwogICAgdGhpcy5yZW1vdmUgPSBmdW5jdGlvbihyYW5nZSkgewogICAgICAgIHJhbmdlLnN0YXJ0ID0gdGhpcy4kY2xpcFBvc2l0aW9uKHJhbmdlLnN0YXJ0KTsKICAgICAgICByYW5nZS5lbmQgPSB0aGlzLiRjbGlwUG9zaXRpb24ocmFuZ2UuZW5kKTsKCiAgICAgICAgaWYgKHJhbmdlLmlzRW1wdHkoKSkKICAgICAgICAgICAgcmV0dXJuIHJhbmdlLnN0YXJ0OwoKICAgICAgICB2YXIgZmlyc3RSb3cgPSByYW5nZS5zdGFydC5yb3c7CiAgICAgICAgdmFyIGxhc3RSb3cgPSByYW5nZS5lbmQucm93OwoKICAgICAgICBpZiAocmFuZ2UuaXNNdWx0aUxpbmUoKSkgewogICAgICAgICAgICB2YXIgZmlyc3RGdWxsUm93ID0gcmFuZ2Uuc3RhcnQuY29sdW1uID09IDAgPyBmaXJzdFJvdyA6IGZpcnN0Um93ICsgMTsKICAgICAgICAgICAgdmFyIGxhc3RGdWxsUm93ID0gbGFzdFJvdyAtIDE7CgogICAgICAgICAgICBpZiAocmFuZ2UuZW5kLmNvbHVtbiA+IDApCiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUluTGluZShsYXN0Um93LCAwLCByYW5nZS5lbmQuY29sdW1uKTsKCiAgICAgICAgICAgIGlmIChsYXN0RnVsbFJvdyA+PSBmaXJzdEZ1bGxSb3cpCiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUxpbmVzKGZpcnN0RnVsbFJvdywgbGFzdEZ1bGxSb3cpOwoKICAgICAgICAgICAgaWYgKGZpcnN0RnVsbFJvdyAhPSBmaXJzdFJvdykgewogICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVJbkxpbmUoZmlyc3RSb3csIHJhbmdlLnN0YXJ0LmNvbHVtbiwgdGhpcy5nZXRMaW5lKGZpcnN0Um93KS5sZW5ndGgpOwogICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVOZXdMaW5lKHJhbmdlLnN0YXJ0LnJvdyk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHRoaXMucmVtb3ZlSW5MaW5lKGZpcnN0Um93LCByYW5nZS5zdGFydC5jb2x1bW4sIHJhbmdlLmVuZC5jb2x1bW4pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmFuZ2Uuc3RhcnQ7CiAgICB9OwogICAgdGhpcy5yZW1vdmVJbkxpbmUgPSBmdW5jdGlvbihyb3csIHN0YXJ0Q29sdW1uLCBlbmRDb2x1bW4pIHsKICAgICAgICBpZiAoc3RhcnRDb2x1bW4gPT0gZW5kQ29sdW1uKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIHZhciByYW5nZSA9IG5ldyBSYW5nZShyb3csIHN0YXJ0Q29sdW1uLCByb3csIGVuZENvbHVtbik7CiAgICAgICAgdmFyIGxpbmUgPSB0aGlzLmdldExpbmUocm93KTsKICAgICAgICB2YXIgcmVtb3ZlZCA9IGxpbmUuc3Vic3RyaW5nKHN0YXJ0Q29sdW1uLCBlbmRDb2x1bW4pOwogICAgICAgIHZhciBuZXdMaW5lID0gbGluZS5zdWJzdHJpbmcoMCwgc3RhcnRDb2x1bW4pICsgbGluZS5zdWJzdHJpbmcoZW5kQ29sdW1uLCBsaW5lLmxlbmd0aCk7CiAgICAgICAgdGhpcy4kbGluZXMuc3BsaWNlKHJvdywgMSwgbmV3TGluZSk7CgogICAgICAgIHZhciBkZWx0YSA9IHsKICAgICAgICAgICAgYWN0aW9uOiAicmVtb3ZlVGV4dCIsCiAgICAgICAgICAgIHJhbmdlOiByYW5nZSwKICAgICAgICAgICAgdGV4dDogcmVtb3ZlZAogICAgICAgIH07CiAgICAgICAgdGhpcy5fZW1pdCgiY2hhbmdlIiwgeyBkYXRhOiBkZWx0YSB9KTsKICAgICAgICByZXR1cm4gcmFuZ2Uuc3RhcnQ7CiAgICB9OwogICAgdGhpcy5yZW1vdmVMaW5lcyA9IGZ1bmN0aW9uKGZpcnN0Um93LCBsYXN0Um93KSB7CiAgICAgICAgdmFyIHJhbmdlID0gbmV3IFJhbmdlKGZpcnN0Um93LCAwLCBsYXN0Um93ICsgMSwgMCk7CiAgICAgICAgdmFyIHJlbW92ZWQgPSB0aGlzLiRsaW5lcy5zcGxpY2UoZmlyc3RSb3csIGxhc3RSb3cgLSBmaXJzdFJvdyArIDEpOwoKICAgICAgICB2YXIgZGVsdGEgPSB7CiAgICAgICAgICAgIGFjdGlvbjogInJlbW92ZUxpbmVzIiwKICAgICAgICAgICAgcmFuZ2U6IHJhbmdlLAogICAgICAgICAgICBubDogdGhpcy5nZXROZXdMaW5lQ2hhcmFjdGVyKCksCiAgICAgICAgICAgIGxpbmVzOiByZW1vdmVkCiAgICAgICAgfTsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2UiLCB7IGRhdGE6IGRlbHRhIH0pOwogICAgICAgIHJldHVybiByZW1vdmVkOwogICAgfTsKICAgIHRoaXMucmVtb3ZlTmV3TGluZSA9IGZ1bmN0aW9uKHJvdykgewogICAgICAgIHZhciBmaXJzdExpbmUgPSB0aGlzLmdldExpbmUocm93KTsKICAgICAgICB2YXIgc2Vjb25kTGluZSA9IHRoaXMuZ2V0TGluZShyb3crMSk7CgogICAgICAgIHZhciByYW5nZSA9IG5ldyBSYW5nZShyb3csIGZpcnN0TGluZS5sZW5ndGgsIHJvdysxLCAwKTsKICAgICAgICB2YXIgbGluZSA9IGZpcnN0TGluZSArIHNlY29uZExpbmU7CgogICAgICAgIHRoaXMuJGxpbmVzLnNwbGljZShyb3csIDIsIGxpbmUpOwoKICAgICAgICB2YXIgZGVsdGEgPSB7CiAgICAgICAgICAgIGFjdGlvbjogInJlbW92ZVRleHQiLAogICAgICAgICAgICByYW5nZTogcmFuZ2UsCiAgICAgICAgICAgIHRleHQ6IHRoaXMuZ2V0TmV3TGluZUNoYXJhY3RlcigpCiAgICAgICAgfTsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2UiLCB7IGRhdGE6IGRlbHRhIH0pOwogICAgfTsKICAgIHRoaXMucmVwbGFjZSA9IGZ1bmN0aW9uKHJhbmdlLCB0ZXh0KSB7CiAgICAgICAgaWYgKHRleHQubGVuZ3RoID09IDAgJiYgcmFuZ2UuaXNFbXB0eSgpKQogICAgICAgICAgICByZXR1cm4gcmFuZ2Uuc3RhcnQ7CiAgICAgICAgaWYgKHRleHQgPT0gdGhpcy5nZXRUZXh0UmFuZ2UocmFuZ2UpKQogICAgICAgICAgICByZXR1cm4gcmFuZ2UuZW5kOwoKICAgICAgICB0aGlzLnJlbW92ZShyYW5nZSk7CiAgICAgICAgaWYgKHRleHQpIHsKICAgICAgICAgICAgdmFyIGVuZCA9IHRoaXMuaW5zZXJ0KHJhbmdlLnN0YXJ0LCB0ZXh0KTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIGVuZCA9IHJhbmdlLnN0YXJ0OwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGVuZDsKICAgIH07CiAgICB0aGlzLmFwcGx5RGVsdGFzID0gZnVuY3Rpb24oZGVsdGFzKSB7CiAgICAgICAgZm9yICh2YXIgaT0wOyBpPGRlbHRhcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIgZGVsdGEgPSBkZWx0YXNbaV07CiAgICAgICAgICAgIHZhciByYW5nZSA9IFJhbmdlLmZyb21Qb2ludHMoZGVsdGEucmFuZ2Uuc3RhcnQsIGRlbHRhLnJhbmdlLmVuZCk7CgogICAgICAgICAgICBpZiAoZGVsdGEuYWN0aW9uID09ICJpbnNlcnRMaW5lcyIpCiAgICAgICAgICAgICAgICB0aGlzLmluc2VydExpbmVzKHJhbmdlLnN0YXJ0LnJvdywgZGVsdGEubGluZXMpOwogICAgICAgICAgICBlbHNlIGlmIChkZWx0YS5hY3Rpb24gPT0gImluc2VydFRleHQiKQogICAgICAgICAgICAgICAgdGhpcy5pbnNlcnQocmFuZ2Uuc3RhcnQsIGRlbHRhLnRleHQpOwogICAgICAgICAgICBlbHNlIGlmIChkZWx0YS5hY3Rpb24gPT0gInJlbW92ZUxpbmVzIikKICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlTGluZXMocmFuZ2Uuc3RhcnQucm93LCByYW5nZS5lbmQucm93IC0gMSk7CiAgICAgICAgICAgIGVsc2UgaWYgKGRlbHRhLmFjdGlvbiA9PSAicmVtb3ZlVGV4dCIpCiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZShyYW5nZSk7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMucmV2ZXJ0RGVsdGFzID0gZnVuY3Rpb24oZGVsdGFzKSB7CiAgICAgICAgZm9yICh2YXIgaT1kZWx0YXMubGVuZ3RoLTE7IGk+PTA7IGktLSkgewogICAgICAgICAgICB2YXIgZGVsdGEgPSBkZWx0YXNbaV07CgogICAgICAgICAgICB2YXIgcmFuZ2UgPSBSYW5nZS5mcm9tUG9pbnRzKGRlbHRhLnJhbmdlLnN0YXJ0LCBkZWx0YS5yYW5nZS5lbmQpOwoKICAgICAgICAgICAgaWYgKGRlbHRhLmFjdGlvbiA9PSAiaW5zZXJ0TGluZXMiKQogICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVMaW5lcyhyYW5nZS5zdGFydC5yb3csIHJhbmdlLmVuZC5yb3cgLSAxKTsKICAgICAgICAgICAgZWxzZSBpZiAoZGVsdGEuYWN0aW9uID09ICJpbnNlcnRUZXh0IikKICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlKHJhbmdlKTsKICAgICAgICAgICAgZWxzZSBpZiAoZGVsdGEuYWN0aW9uID09ICJyZW1vdmVMaW5lcyIpCiAgICAgICAgICAgICAgICB0aGlzLmluc2VydExpbmVzKHJhbmdlLnN0YXJ0LnJvdywgZGVsdGEubGluZXMpOwogICAgICAgICAgICBlbHNlIGlmIChkZWx0YS5hY3Rpb24gPT0gInJlbW92ZVRleHQiKQogICAgICAgICAgICAgICAgdGhpcy5pbnNlcnQocmFuZ2Uuc3RhcnQsIGRlbHRhLnRleHQpOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLmluZGV4VG9Qb3NpdGlvbiA9IGZ1bmN0aW9uKGluZGV4LCBzdGFydFJvdykgewogICAgICAgIHZhciBsaW5lcyA9IHRoaXMuJGxpbmVzIHx8IHRoaXMuZ2V0QWxsTGluZXMoKTsKICAgICAgICB2YXIgbmV3bGluZUxlbmd0aCA9IHRoaXMuZ2V0TmV3TGluZUNoYXJhY3RlcigpLmxlbmd0aDsKICAgICAgICBmb3IgKHZhciBpID0gc3RhcnRSb3cgfHwgMCwgbCA9IGxpbmVzLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICAgICBpbmRleCAtPSBsaW5lc1tpXS5sZW5ndGggKyBuZXdsaW5lTGVuZ3RoOwogICAgICAgICAgICBpZiAoaW5kZXggPCAwKQogICAgICAgICAgICAgICAgcmV0dXJuIHtyb3c6IGksIGNvbHVtbjogaW5kZXggKyBsaW5lc1tpXS5sZW5ndGggKyBuZXdsaW5lTGVuZ3RofTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHtyb3c6IGwtMSwgY29sdW1uOiBsaW5lc1tsLTFdLmxlbmd0aH07CiAgICB9OwogICAgdGhpcy5wb3NpdGlvblRvSW5kZXggPSBmdW5jdGlvbihwb3MsIHN0YXJ0Um93KSB7CiAgICAgICAgdmFyIGxpbmVzID0gdGhpcy4kbGluZXMgfHwgdGhpcy5nZXRBbGxMaW5lcygpOwogICAgICAgIHZhciBuZXdsaW5lTGVuZ3RoID0gdGhpcy5nZXROZXdMaW5lQ2hhcmFjdGVyKCkubGVuZ3RoOwogICAgICAgIHZhciBpbmRleCA9IDA7CiAgICAgICAgdmFyIHJvdyA9IE1hdGgubWluKHBvcy5yb3csIGxpbmVzLmxlbmd0aCk7CiAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0Um93IHx8IDA7IGkgPCByb3c7ICsraSkKICAgICAgICAgICAgaW5kZXggKz0gbGluZXNbaV0ubGVuZ3RoOwoKICAgICAgICByZXR1cm4gaW5kZXggKyBuZXdsaW5lTGVuZ3RoICogaSArIHBvcy5jb2x1bW47CiAgICB9OwoKfSkuY2FsbChEb2N1bWVudC5wcm90b3R5cGUpOwoKZXhwb3J0cy5Eb2N1bWVudCA9IERvY3VtZW50Owp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9hbmNob3InLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvb29wJywgJ2FjZS9saWIvZXZlbnRfZW1pdHRlciddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgb29wID0gcmVxdWlyZSgiLi9saWIvb29wIik7CnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCIuL2xpYi9ldmVudF9lbWl0dGVyIikuRXZlbnRFbWl0dGVyOwoKdmFyIEFuY2hvciA9IGV4cG9ydHMuQW5jaG9yID0gZnVuY3Rpb24oZG9jLCByb3csIGNvbHVtbikgewogICAgdGhpcy5kb2N1bWVudCA9IGRvYzsKICAgIAogICAgaWYgKHR5cGVvZiBjb2x1bW4gPT0gInVuZGVmaW5lZCIpCiAgICAgICAgdGhpcy5zZXRQb3NpdGlvbihyb3cucm93LCByb3cuY29sdW1uKTsKICAgIGVsc2UKICAgICAgICB0aGlzLnNldFBvc2l0aW9uKHJvdywgY29sdW1uKTsKCiAgICB0aGlzLiRvbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTsKICAgIGRvYy5vbigiY2hhbmdlIiwgdGhpcy4kb25DaGFuZ2UpOwp9OwoKKGZ1bmN0aW9uKCkgewoKICAgIG9vcC5pbXBsZW1lbnQodGhpcywgRXZlbnRFbWl0dGVyKTsKCiAgICB0aGlzLmdldFBvc2l0aW9uID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJGNsaXBQb3NpdGlvblRvRG9jdW1lbnQodGhpcy5yb3csIHRoaXMuY29sdW1uKTsKICAgIH07CiAgICAgICAgCiAgICB0aGlzLmdldERvY3VtZW50ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG9jdW1lbnQ7CiAgICB9OwoKICAgIHRoaXMub25DaGFuZ2UgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgdmFyIGRlbHRhID0gZS5kYXRhOwogICAgICAgIHZhciByYW5nZSA9IGRlbHRhLnJhbmdlOwogICAgICAgICAgICAKICAgICAgICBpZiAocmFuZ2Uuc3RhcnQucm93ID09IHJhbmdlLmVuZC5yb3cgJiYgcmFuZ2Uuc3RhcnQucm93ICE9IHRoaXMucm93KQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIAogICAgICAgIGlmIChyYW5nZS5zdGFydC5yb3cgPiB0aGlzLnJvdykKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAKICAgICAgICBpZiAocmFuZ2Uuc3RhcnQucm93ID09IHRoaXMucm93ICYmIHJhbmdlLnN0YXJ0LmNvbHVtbiA+IHRoaXMuY29sdW1uKQogICAgICAgICAgICByZXR1cm47CiAgICAKICAgICAgICB2YXIgcm93ID0gdGhpcy5yb3c7CiAgICAgICAgdmFyIGNvbHVtbiA9IHRoaXMuY29sdW1uOwogICAgICAgIAogICAgICAgIGlmIChkZWx0YS5hY3Rpb24gPT09ICJpbnNlcnRUZXh0IikgewogICAgICAgICAgICBpZiAocmFuZ2Uuc3RhcnQucm93ID09PSByb3cgJiYgcmFuZ2Uuc3RhcnQuY29sdW1uIDw9IGNvbHVtbikgewogICAgICAgICAgICAgICAgaWYgKHJhbmdlLnN0YXJ0LnJvdyA9PT0gcmFuZ2UuZW5kLnJvdykgewogICAgICAgICAgICAgICAgICAgIGNvbHVtbiArPSByYW5nZS5lbmQuY29sdW1uIC0gcmFuZ2Uuc3RhcnQuY29sdW1uOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29sdW1uIC09IHJhbmdlLnN0YXJ0LmNvbHVtbjsKICAgICAgICAgICAgICAgICAgICByb3cgKz0gcmFuZ2UuZW5kLnJvdyAtIHJhbmdlLnN0YXJ0LnJvdzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChyYW5nZS5zdGFydC5yb3cgIT09IHJhbmdlLmVuZC5yb3cgJiYgcmFuZ2Uuc3RhcnQucm93IDwgcm93KSB7CiAgICAgICAgICAgICAgICByb3cgKz0gcmFuZ2UuZW5kLnJvdyAtIHJhbmdlLnN0YXJ0LnJvdzsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoZGVsdGEuYWN0aW9uID09PSAiaW5zZXJ0TGluZXMiKSB7CiAgICAgICAgICAgIGlmIChyYW5nZS5zdGFydC5yb3cgPD0gcm93KSB7CiAgICAgICAgICAgICAgICByb3cgKz0gcmFuZ2UuZW5kLnJvdyAtIHJhbmdlLnN0YXJ0LnJvdzsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChkZWx0YS5hY3Rpb24gPT0gInJlbW92ZVRleHQiKSB7CiAgICAgICAgICAgIGlmIChyYW5nZS5zdGFydC5yb3cgPT0gcm93ICYmIHJhbmdlLnN0YXJ0LmNvbHVtbiA8IGNvbHVtbikgewogICAgICAgICAgICAgICAgaWYgKHJhbmdlLmVuZC5jb2x1bW4gPj0gY29sdW1uKQogICAgICAgICAgICAgICAgICAgIGNvbHVtbiA9IHJhbmdlLnN0YXJ0LmNvbHVtbjsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICBjb2x1bW4gPSBNYXRoLm1heCgwLCBjb2x1bW4gLSAocmFuZ2UuZW5kLmNvbHVtbiAtIHJhbmdlLnN0YXJ0LmNvbHVtbikpOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0gZWxzZSBpZiAocmFuZ2Uuc3RhcnQucm93ICE9PSByYW5nZS5lbmQucm93ICYmIHJhbmdlLnN0YXJ0LnJvdyA8IHJvdykgewogICAgICAgICAgICAgICAgaWYgKHJhbmdlLmVuZC5yb3cgPT0gcm93KSB7CiAgICAgICAgICAgICAgICAgICAgY29sdW1uID0gTWF0aC5tYXgoMCwgY29sdW1uIC0gcmFuZ2UuZW5kLmNvbHVtbikgKyByYW5nZS5zdGFydC5jb2x1bW47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByb3cgLT0gKHJhbmdlLmVuZC5yb3cgLSByYW5nZS5zdGFydC5yb3cpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgaWYgKHJhbmdlLmVuZC5yb3cgPT0gcm93KSB7CiAgICAgICAgICAgICAgICByb3cgLT0gcmFuZ2UuZW5kLnJvdyAtIHJhbmdlLnN0YXJ0LnJvdzsKICAgICAgICAgICAgICAgIGNvbHVtbiA9IE1hdGgubWF4KDAsIGNvbHVtbiAtIHJhbmdlLmVuZC5jb2x1bW4pICsgcmFuZ2Uuc3RhcnQuY29sdW1uOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmIChkZWx0YS5hY3Rpb24gPT0gInJlbW92ZUxpbmVzIikgewogICAgICAgICAgICBpZiAocmFuZ2Uuc3RhcnQucm93IDw9IHJvdykgewogICAgICAgICAgICAgICAgaWYgKHJhbmdlLmVuZC5yb3cgPD0gcm93KQogICAgICAgICAgICAgICAgICAgIHJvdyAtPSByYW5nZS5lbmQucm93IC0gcmFuZ2Uuc3RhcnQucm93OwogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcm93ID0gcmFuZ2Uuc3RhcnQucm93OwogICAgICAgICAgICAgICAgICAgIGNvbHVtbiA9IDA7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMuc2V0UG9zaXRpb24ocm93LCBjb2x1bW4sIHRydWUpOwogICAgfTsKCiAgICB0aGlzLnNldFBvc2l0aW9uID0gZnVuY3Rpb24ocm93LCBjb2x1bW4sIG5vQ2xpcCkgewogICAgICAgIHZhciBwb3M7CiAgICAgICAgaWYgKG5vQ2xpcCkgewogICAgICAgICAgICBwb3MgPSB7CiAgICAgICAgICAgICAgICByb3c6IHJvdywKICAgICAgICAgICAgICAgIGNvbHVtbjogY29sdW1uCiAgICAgICAgICAgIH07CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICBwb3MgPSB0aGlzLiRjbGlwUG9zaXRpb25Ub0RvY3VtZW50KHJvdywgY29sdW1uKTsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgaWYgKHRoaXMucm93ID09IHBvcy5yb3cgJiYgdGhpcy5jb2x1bW4gPT0gcG9zLmNvbHVtbikKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAKICAgICAgICB2YXIgb2xkID0gewogICAgICAgICAgICByb3c6IHRoaXMucm93LAogICAgICAgICAgICBjb2x1bW46IHRoaXMuY29sdW1uCiAgICAgICAgfTsKICAgICAgICAKICAgICAgICB0aGlzLnJvdyA9IHBvcy5yb3c7CiAgICAgICAgdGhpcy5jb2x1bW4gPSBwb3MuY29sdW1uOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZSIsIHsKICAgICAgICAgICAgb2xkOiBvbGQsCiAgICAgICAgICAgIHZhbHVlOiBwb3MKICAgICAgICB9KTsKICAgIH07CgogICAgdGhpcy5kZXRhY2ggPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLmRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIHRoaXMuJG9uQ2hhbmdlKTsKICAgIH07CiAgICB0aGlzLiRjbGlwUG9zaXRpb25Ub0RvY3VtZW50ID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICB2YXIgcG9zID0ge307CiAgICAKICAgICAgICBpZiAocm93ID49IHRoaXMuZG9jdW1lbnQuZ2V0TGVuZ3RoKCkpIHsKICAgICAgICAgICAgcG9zLnJvdyA9IE1hdGgubWF4KDAsIHRoaXMuZG9jdW1lbnQuZ2V0TGVuZ3RoKCkgLSAxKTsKICAgICAgICAgICAgcG9zLmNvbHVtbiA9IHRoaXMuZG9jdW1lbnQuZ2V0TGluZShwb3Mucm93KS5sZW5ndGg7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKHJvdyA8IDApIHsKICAgICAgICAgICAgcG9zLnJvdyA9IDA7CiAgICAgICAgICAgIHBvcy5jb2x1bW4gPSAwOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgcG9zLnJvdyA9IHJvdzsKICAgICAgICAgICAgcG9zLmNvbHVtbiA9IE1hdGgubWluKHRoaXMuZG9jdW1lbnQuZ2V0TGluZShwb3Mucm93KS5sZW5ndGgsIE1hdGgubWF4KDAsIGNvbHVtbikpOwogICAgICAgIH0KICAgICAgICAKICAgICAgICBpZiAoY29sdW1uIDwgMCkKICAgICAgICAgICAgcG9zLmNvbHVtbiA9IDA7CiAgICAgICAgICAgIAogICAgICAgIHJldHVybiBwb3M7CiAgICB9OwogICAgCn0pLmNhbGwoQW5jaG9yLnByb3RvdHlwZSk7Cgp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9iYWNrZ3JvdW5kX3Rva2VuaXplcicsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9vb3AnLCAnYWNlL2xpYi9ldmVudF9lbWl0dGVyJ10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBvb3AgPSByZXF1aXJlKCIuL2xpYi9vb3AiKTsKdmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoIi4vbGliL2V2ZW50X2VtaXR0ZXIiKS5FdmVudEVtaXR0ZXI7CnZhciBNQVhfTElORV9MRU5HVEggPSA1MDAwOwoKdmFyIEJhY2tncm91bmRUb2tlbml6ZXIgPSBmdW5jdGlvbih0b2tlbml6ZXIsIGVkaXRvcikgewogICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7CiAgICB0aGlzLmxpbmVzID0gW107CiAgICB0aGlzLnN0YXRlcyA9IFtdOwogICAgdGhpcy5jdXJyZW50TGluZSA9IDA7CiAgICB0aGlzLnRva2VuaXplciA9IHRva2VuaXplcjsKCiAgICB2YXIgc2VsZiA9IHRoaXM7CgogICAgdGhpcy4kd29ya2VyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKCFzZWxmLnJ1bm5pbmcpIHsgcmV0dXJuOyB9CgogICAgICAgIHZhciB3b3JrZXJTdGFydCA9IG5ldyBEYXRlKCk7CiAgICAgICAgdmFyIHN0YXJ0TGluZSA9IHNlbGYuY3VycmVudExpbmU7CiAgICAgICAgdmFyIGRvYyA9IHNlbGYuZG9jOwoKICAgICAgICB2YXIgcHJvY2Vzc2VkTGluZXMgPSAwOwoKICAgICAgICB2YXIgbGVuID0gZG9jLmdldExlbmd0aCgpOwogICAgICAgIHdoaWxlIChzZWxmLmN1cnJlbnRMaW5lIDwgbGVuKSB7CiAgICAgICAgICAgIHNlbGYuJHRva2VuaXplUm93KHNlbGYuY3VycmVudExpbmUpOwogICAgICAgICAgICB3aGlsZSAoc2VsZi5saW5lc1tzZWxmLmN1cnJlbnRMaW5lXSkKICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudExpbmUrKzsKICAgICAgICAgICAgcHJvY2Vzc2VkTGluZXMgKys7CiAgICAgICAgICAgIGlmICgocHJvY2Vzc2VkTGluZXMgJSA1ID09IDApICYmIChuZXcgRGF0ZSgpIC0gd29ya2VyU3RhcnQpID4gMjApIHsKICAgICAgICAgICAgICAgIHNlbGYuZmlyZVVwZGF0ZUV2ZW50KHN0YXJ0TGluZSwgc2VsZi5jdXJyZW50TGluZS0xKTsKICAgICAgICAgICAgICAgIHNlbGYucnVubmluZyA9IHNldFRpbWVvdXQoc2VsZi4kd29ya2VyLCAyMCk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHNlbGYucnVubmluZyA9IGZhbHNlOwoKICAgICAgICBzZWxmLmZpcmVVcGRhdGVFdmVudChzdGFydExpbmUsIGxlbiAtIDEpOwogICAgfTsKfTsKCihmdW5jdGlvbigpewoKICAgIG9vcC5pbXBsZW1lbnQodGhpcywgRXZlbnRFbWl0dGVyKTsKICAgIHRoaXMuc2V0VG9rZW5pemVyID0gZnVuY3Rpb24odG9rZW5pemVyKSB7CiAgICAgICAgdGhpcy50b2tlbml6ZXIgPSB0b2tlbml6ZXI7CiAgICAgICAgdGhpcy5saW5lcyA9IFtdOwogICAgICAgIHRoaXMuc3RhdGVzID0gW107CgogICAgICAgIHRoaXMuc3RhcnQoMCk7CiAgICB9OwogICAgdGhpcy5zZXREb2N1bWVudCA9IGZ1bmN0aW9uKGRvYykgewogICAgICAgIHRoaXMuZG9jID0gZG9jOwogICAgICAgIHRoaXMubGluZXMgPSBbXTsKICAgICAgICB0aGlzLnN0YXRlcyA9IFtdOwoKICAgICAgICB0aGlzLnN0b3AoKTsKICAgIH07CiAgICB0aGlzLmZpcmVVcGRhdGVFdmVudCA9IGZ1bmN0aW9uKGZpcnN0Um93LCBsYXN0Um93KSB7CiAgICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgICAgIGZpcnN0OiBmaXJzdFJvdywKICAgICAgICAgICAgbGFzdDogbGFzdFJvdwogICAgICAgIH07CiAgICAgICAgdGhpcy5fZW1pdCgidXBkYXRlIiwge2RhdGE6IGRhdGF9KTsKICAgIH07CiAgICB0aGlzLnN0YXJ0ID0gZnVuY3Rpb24oc3RhcnRSb3cpIHsKICAgICAgICB0aGlzLmN1cnJlbnRMaW5lID0gTWF0aC5taW4oc3RhcnRSb3cgfHwgMCwgdGhpcy5jdXJyZW50TGluZSwgdGhpcy5kb2MuZ2V0TGVuZ3RoKCkpOwogICAgICAgIHRoaXMubGluZXMuc3BsaWNlKHRoaXMuY3VycmVudExpbmUsIHRoaXMubGluZXMubGVuZ3RoKTsKICAgICAgICB0aGlzLnN0YXRlcy5zcGxpY2UodGhpcy5jdXJyZW50TGluZSwgdGhpcy5zdGF0ZXMubGVuZ3RoKTsKCiAgICAgICAgdGhpcy5zdG9wKCk7CiAgICAgICAgdGhpcy5ydW5uaW5nID0gc2V0VGltZW91dCh0aGlzLiR3b3JrZXIsIDcwMCk7CiAgICB9OwoKICAgIHRoaXMuJHVwZGF0ZU9uQ2hhbmdlID0gZnVuY3Rpb24oZGVsdGEpIHsKICAgICAgICB2YXIgcmFuZ2UgPSBkZWx0YS5yYW5nZTsKICAgICAgICB2YXIgc3RhcnRSb3cgPSByYW5nZS5zdGFydC5yb3c7CiAgICAgICAgdmFyIGxlbiA9IHJhbmdlLmVuZC5yb3cgLSBzdGFydFJvdzsKCiAgICAgICAgaWYgKGxlbiA9PT0gMCkgewogICAgICAgICAgICB0aGlzLmxpbmVzW3N0YXJ0Um93XSA9IG51bGw7CiAgICAgICAgfSBlbHNlIGlmIChkZWx0YS5hY3Rpb24gPT0gInJlbW92ZVRleHQiIHx8IGRlbHRhLmFjdGlvbiA9PSAicmVtb3ZlTGluZXMiKSB7CiAgICAgICAgICAgIHRoaXMubGluZXMuc3BsaWNlKHN0YXJ0Um93LCBsZW4gKyAxLCBudWxsKTsKICAgICAgICAgICAgdGhpcy5zdGF0ZXMuc3BsaWNlKHN0YXJ0Um93LCBsZW4gKyAxLCBudWxsKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgYXJncyA9IEFycmF5KGxlbiArIDEpOwogICAgICAgICAgICBhcmdzLnVuc2hpZnQoc3RhcnRSb3csIDEpOwogICAgICAgICAgICB0aGlzLmxpbmVzLnNwbGljZS5hcHBseSh0aGlzLmxpbmVzLCBhcmdzKTsKICAgICAgICAgICAgdGhpcy5zdGF0ZXMuc3BsaWNlLmFwcGx5KHRoaXMuc3RhdGVzLCBhcmdzKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuY3VycmVudExpbmUgPSBNYXRoLm1pbihzdGFydFJvdywgdGhpcy5jdXJyZW50TGluZSwgdGhpcy5kb2MuZ2V0TGVuZ3RoKCkpOwoKICAgICAgICB0aGlzLnN0b3AoKTsKICAgICAgICB0aGlzLnJ1bm5pbmcgPSBzZXRUaW1lb3V0KHRoaXMuJHdvcmtlciwgNzAwKTsKICAgIH07CiAgICB0aGlzLnN0b3AgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodGhpcy5ydW5uaW5nKQogICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5ydW5uaW5nKTsKICAgICAgICB0aGlzLnJ1bm5pbmcgPSBmYWxzZTsKICAgIH07CiAgICB0aGlzLmdldFRva2VucyA9IGZ1bmN0aW9uKHJvdykgewogICAgICAgIHJldHVybiB0aGlzLmxpbmVzW3Jvd10gfHwgdGhpcy4kdG9rZW5pemVSb3cocm93KTsKICAgIH07CiAgICB0aGlzLmdldFN0YXRlID0gZnVuY3Rpb24ocm93KSB7CiAgICAgICAgaWYgKHRoaXMuY3VycmVudExpbmUgPT0gcm93KQogICAgICAgICAgICB0aGlzLiR0b2tlbml6ZVJvdyhyb3cpOwogICAgICAgIHJldHVybiB0aGlzLnN0YXRlc1tyb3ddIHx8ICJzdGFydCI7CiAgICB9OwoKICAgIHRoaXMuJHRva2VuaXplUm93ID0gZnVuY3Rpb24ocm93KSB7CiAgICAgICAgdmFyIGxpbmUgPSB0aGlzLmRvYy5nZXRMaW5lKHJvdyk7CiAgICAgICAgdmFyIHN0YXRlID0gdGhpcy5zdGF0ZXNbcm93IC0gMV07CgogICAgICAgIGlmIChsaW5lLmxlbmd0aCA+IE1BWF9MSU5FX0xFTkdUSCkgewogICAgICAgICAgICB2YXIgb3ZlcmZsb3cgPSB7dmFsdWU6IGxpbmUuc3Vic3RyKE1BWF9MSU5FX0xFTkdUSCksIHR5cGU6ICJ0ZXh0In07CiAgICAgICAgICAgIGxpbmUgPSBsaW5lLnNsaWNlKDAsIE1BWF9MSU5FX0xFTkdUSCk7CiAgICAgICAgfQogICAgICAgIHZhciBkYXRhID0gdGhpcy50b2tlbml6ZXIuZ2V0TGluZVRva2VucyhsaW5lLCBzdGF0ZSk7CiAgICAgICAgaWYgKG92ZXJmbG93KSB7CiAgICAgICAgICAgIGRhdGEudG9rZW5zLnB1c2gob3ZlcmZsb3cpOwogICAgICAgICAgICBkYXRhLnN0YXRlID0gInN0YXJ0IjsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLnN0YXRlc1tyb3ddICsgIiIgIT09IGRhdGEuc3RhdGUgKyAiIikgewogICAgICAgICAgICB0aGlzLnN0YXRlc1tyb3ddID0gZGF0YS5zdGF0ZTsKICAgICAgICAgICAgdGhpcy5saW5lc1tyb3cgKyAxXSA9IG51bGw7CiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRMaW5lID4gcm93ICsgMSkKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudExpbmUgPSByb3cgKyAxOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50TGluZSA9PSByb3cpIHsKICAgICAgICAgICAgdGhpcy5jdXJyZW50TGluZSA9IHJvdyArIDE7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdGhpcy5saW5lc1tyb3ddID0gZGF0YS50b2tlbnM7CiAgICB9OwoKfSkuY2FsbChCYWNrZ3JvdW5kVG9rZW5pemVyLnByb3RvdHlwZSk7CgpleHBvcnRzLkJhY2tncm91bmRUb2tlbml6ZXIgPSBCYWNrZ3JvdW5kVG9rZW5pemVyOwp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9zZWFyY2hfaGlnaGxpZ2h0JywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL2xhbmcnLCAnYWNlL2xpYi9vb3AnLCAnYWNlL3JhbmdlJ10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBsYW5nID0gcmVxdWlyZSgiLi9saWIvbGFuZyIpOwp2YXIgb29wID0gcmVxdWlyZSgiLi9saWIvb29wIik7CnZhciBSYW5nZSA9IHJlcXVpcmUoIi4vcmFuZ2UiKS5SYW5nZTsKCnZhciBTZWFyY2hIaWdobGlnaHQgPSBmdW5jdGlvbihyZWdFeHAsIGNsYXp6LCB0eXBlKSB7CiAgICB0aGlzLnNldFJlZ2V4cChyZWdFeHApOwogICAgdGhpcy5jbGF6eiA9IGNsYXp6OwogICAgdGhpcy50eXBlID0gdHlwZSB8fCAidGV4dCI7Cn07CgooZnVuY3Rpb24oKSB7CiAgICB0aGlzLk1BWF9SQU5HRVMgPSA1MDA7CiAgICAKICAgIHRoaXMuc2V0UmVnZXhwID0gZnVuY3Rpb24ocmVnRXhwKSB7CiAgICAgICAgaWYgKHRoaXMucmVnRXhwKyIiID09IHJlZ0V4cCsiIikKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIHRoaXMucmVnRXhwID0gcmVnRXhwOwogICAgICAgIHRoaXMuY2FjaGUgPSBbXTsKICAgIH07CgogICAgdGhpcy51cGRhdGUgPSBmdW5jdGlvbihodG1sLCBtYXJrZXJMYXllciwgc2Vzc2lvbiwgY29uZmlnKSB7CiAgICAgICAgaWYgKCF0aGlzLnJlZ0V4cCkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIHZhciBzdGFydCA9IGNvbmZpZy5maXJzdFJvdywgZW5kID0gY29uZmlnLmxhc3RSb3c7CgogICAgICAgIGZvciAodmFyIGkgPSBzdGFydDsgaSA8PSBlbmQ7IGkrKykgewogICAgICAgICAgICB2YXIgcmFuZ2VzID0gdGhpcy5jYWNoZVtpXTsKICAgICAgICAgICAgaWYgKHJhbmdlcyA9PSBudWxsKSB7CiAgICAgICAgICAgICAgICByYW5nZXMgPSBsYW5nLmdldE1hdGNoT2Zmc2V0cyhzZXNzaW9uLmdldExpbmUoaSksIHRoaXMucmVnRXhwKTsKICAgICAgICAgICAgICAgIGlmIChyYW5nZXMubGVuZ3RoID4gdGhpcy5NQVhfUkFOR0VTKQogICAgICAgICAgICAgICAgICAgIHJhbmdlcyA9IHJhbmdlcy5zbGljZSgwLCB0aGlzLk1BWF9SQU5HRVMpOwogICAgICAgICAgICAgICAgcmFuZ2VzID0gcmFuZ2VzLm1hcChmdW5jdGlvbihtYXRjaCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmFuZ2UoaSwgbWF0Y2gub2Zmc2V0LCBpLCBtYXRjaC5vZmZzZXQgKyBtYXRjaC5sZW5ndGgpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB0aGlzLmNhY2hlW2ldID0gcmFuZ2VzLmxlbmd0aCA/IHJhbmdlcyA6ICIiOwogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3IgKHZhciBqID0gcmFuZ2VzLmxlbmd0aDsgaiAtLTsgKSB7CiAgICAgICAgICAgICAgICBtYXJrZXJMYXllci5kcmF3U2luZ2xlTGluZU1hcmtlcigKICAgICAgICAgICAgICAgICAgICBodG1sLCByYW5nZXNbal0udG9TY3JlZW5SYW5nZShzZXNzaW9uKSwgdGhpcy5jbGF6eiwgY29uZmlnLAogICAgICAgICAgICAgICAgICAgIG51bGwsIHRoaXMudHlwZQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH07Cgp9KS5jYWxsKFNlYXJjaEhpZ2hsaWdodC5wcm90b3R5cGUpOwoKZXhwb3J0cy5TZWFyY2hIaWdobGlnaHQgPSBTZWFyY2hIaWdobGlnaHQ7Cn0pOwoKYWNlLmRlZmluZSgnYWNlL2VkaXRfc2Vzc2lvbi9mb2xkaW5nJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvcmFuZ2UnLCAnYWNlL2VkaXRfc2Vzc2lvbi9mb2xkX2xpbmUnLCAnYWNlL2VkaXRfc2Vzc2lvbi9mb2xkJywgJ2FjZS90b2tlbl9pdGVyYXRvciddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgUmFuZ2UgPSByZXF1aXJlKCIuLi9yYW5nZSIpLlJhbmdlOwp2YXIgRm9sZExpbmUgPSByZXF1aXJlKCIuL2ZvbGRfbGluZSIpLkZvbGRMaW5lOwp2YXIgRm9sZCA9IHJlcXVpcmUoIi4vZm9sZCIpLkZvbGQ7CnZhciBUb2tlbkl0ZXJhdG9yID0gcmVxdWlyZSgiLi4vdG9rZW5faXRlcmF0b3IiKS5Ub2tlbkl0ZXJhdG9yOwoKZnVuY3Rpb24gRm9sZGluZygpIHsKICAgIHRoaXMuZ2V0Rm9sZEF0ID0gZnVuY3Rpb24ocm93LCBjb2x1bW4sIHNpZGUpIHsKICAgICAgICB2YXIgZm9sZExpbmUgPSB0aGlzLmdldEZvbGRMaW5lKHJvdyk7CiAgICAgICAgaWYgKCFmb2xkTGluZSkKICAgICAgICAgICAgcmV0dXJuIG51bGw7CgogICAgICAgIHZhciBmb2xkcyA9IGZvbGRMaW5lLmZvbGRzOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZm9sZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIGZvbGQgPSBmb2xkc1tpXTsKICAgICAgICAgICAgaWYgKGZvbGQucmFuZ2UuY29udGFpbnMocm93LCBjb2x1bW4pKSB7CiAgICAgICAgICAgICAgICBpZiAoc2lkZSA9PSAxICYmIGZvbGQucmFuZ2UuaXNFbmQocm93LCBjb2x1bW4pKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNpZGUgPT0gLTEgJiYgZm9sZC5yYW5nZS5pc1N0YXJ0KHJvdywgY29sdW1uKSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIGZvbGQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9OwogICAgdGhpcy5nZXRGb2xkc0luUmFuZ2UgPSBmdW5jdGlvbihyYW5nZSkgewogICAgICAgIHJhbmdlID0gcmFuZ2UuY2xvbmUoKTsKICAgICAgICB2YXIgc3RhcnQgPSByYW5nZS5zdGFydDsKICAgICAgICB2YXIgZW5kID0gcmFuZ2UuZW5kOwogICAgICAgIHZhciBmb2xkTGluZXMgPSB0aGlzLiRmb2xkRGF0YTsKICAgICAgICB2YXIgZm91bmRGb2xkcyA9IFtdOwoKICAgICAgICBzdGFydC5jb2x1bW4gKz0gMTsKICAgICAgICBlbmQuY29sdW1uIC09IDE7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZm9sZExpbmVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBjbXAgPSBmb2xkTGluZXNbaV0ucmFuZ2UuY29tcGFyZVJhbmdlKHJhbmdlKTsKICAgICAgICAgICAgaWYgKGNtcCA9PSAyKSB7CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChjbXAgPT0gLTIpIHsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICB2YXIgZm9sZHMgPSBmb2xkTGluZXNbaV0uZm9sZHM7CiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZm9sZHMubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgIHZhciBmb2xkID0gZm9sZHNbal07CiAgICAgICAgICAgICAgICBjbXAgPSBmb2xkLnJhbmdlLmNvbXBhcmVSYW5nZShyYW5nZSk7CiAgICAgICAgICAgICAgICBpZiAoY21wID09IC0yKSB7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNtcCA9PSAyKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9IGVsc2UKICAgICAgICAgICAgICAgIGlmIChjbXAgPT0gNDIpIHsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvdW5kRm9sZHMucHVzaChmb2xkKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gZm91bmRGb2xkczsKICAgIH07CiAgICB0aGlzLmdldEFsbEZvbGRzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGZvbGRzID0gW107CiAgICAgICAgdmFyIGZvbGRMaW5lcyA9IHRoaXMuJGZvbGREYXRhOwogICAgICAgIAogICAgICAgIGZ1bmN0aW9uIGFkZEZvbGQoZm9sZCkgewogICAgICAgICAgICBmb2xkcy5wdXNoKGZvbGQpOwogICAgICAgICAgICBpZiAoIWZvbGQuc3ViRm9sZHMpCiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmb2xkLnN1YkZvbGRzLmxlbmd0aDsgaSsrKQogICAgICAgICAgICAgICAgYWRkRm9sZChmb2xkLnN1YkZvbGRzW2ldKTsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmb2xkTGluZXMubGVuZ3RoOyBpKyspCiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZm9sZExpbmVzW2ldLmZvbGRzLmxlbmd0aDsgaisrKQogICAgICAgICAgICAgICAgYWRkRm9sZChmb2xkTGluZXNbaV0uZm9sZHNbal0pOwoKICAgICAgICByZXR1cm4gZm9sZHM7CiAgICB9OwogICAgdGhpcy5nZXRGb2xkU3RyaW5nQXQgPSBmdW5jdGlvbihyb3csIGNvbHVtbiwgdHJpbSwgZm9sZExpbmUpIHsKICAgICAgICBmb2xkTGluZSA9IGZvbGRMaW5lIHx8IHRoaXMuZ2V0Rm9sZExpbmUocm93KTsKICAgICAgICBpZiAoIWZvbGRMaW5lKQogICAgICAgICAgICByZXR1cm4gbnVsbDsKCiAgICAgICAgdmFyIGxhc3RGb2xkID0gewogICAgICAgICAgICBlbmQ6IHsgY29sdW1uOiAwIH0KICAgICAgICB9OwogICAgICAgIHZhciBzdHIsIGZvbGQ7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmb2xkTGluZS5mb2xkcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBmb2xkID0gZm9sZExpbmUuZm9sZHNbaV07CiAgICAgICAgICAgIHZhciBjbXAgPSBmb2xkLnJhbmdlLmNvbXBhcmVFbmQocm93LCBjb2x1bW4pOwogICAgICAgICAgICBpZiAoY21wID09IC0xKSB7CiAgICAgICAgICAgICAgICBzdHIgPSB0aGlzCiAgICAgICAgICAgICAgICAgICAgLmdldExpbmUoZm9sZC5zdGFydC5yb3cpCiAgICAgICAgICAgICAgICAgICAgLnN1YnN0cmluZyhsYXN0Rm9sZC5lbmQuY29sdW1uLCBmb2xkLnN0YXJ0LmNvbHVtbik7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChjbXAgPT09IDApIHsKICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGxhc3RGb2xkID0gZm9sZDsKICAgICAgICB9CiAgICAgICAgaWYgKCFzdHIpCiAgICAgICAgICAgIHN0ciA9IHRoaXMuZ2V0TGluZShmb2xkLnN0YXJ0LnJvdykuc3Vic3RyaW5nKGxhc3RGb2xkLmVuZC5jb2x1bW4pOwoKICAgICAgICBpZiAodHJpbSA9PSAtMSkKICAgICAgICAgICAgcmV0dXJuIHN0ci5zdWJzdHJpbmcoMCwgY29sdW1uIC0gbGFzdEZvbGQuZW5kLmNvbHVtbik7CiAgICAgICAgZWxzZSBpZiAodHJpbSA9PSAxKQogICAgICAgICAgICByZXR1cm4gc3RyLnN1YnN0cmluZyhjb2x1bW4gLSBsYXN0Rm9sZC5lbmQuY29sdW1uKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHJldHVybiBzdHI7CiAgICB9OwoKICAgIHRoaXMuZ2V0Rm9sZExpbmUgPSBmdW5jdGlvbihkb2NSb3csIHN0YXJ0Rm9sZExpbmUpIHsKICAgICAgICB2YXIgZm9sZERhdGEgPSB0aGlzLiRmb2xkRGF0YTsKICAgICAgICB2YXIgaSA9IDA7CiAgICAgICAgaWYgKHN0YXJ0Rm9sZExpbmUpCiAgICAgICAgICAgIGkgPSBmb2xkRGF0YS5pbmRleE9mKHN0YXJ0Rm9sZExpbmUpOwogICAgICAgIGlmIChpID09IC0xKQogICAgICAgICAgICBpID0gMDsKICAgICAgICBmb3IgKGk7IGkgPCBmb2xkRGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIgZm9sZExpbmUgPSBmb2xkRGF0YVtpXTsKICAgICAgICAgICAgaWYgKGZvbGRMaW5lLnN0YXJ0LnJvdyA8PSBkb2NSb3cgJiYgZm9sZExpbmUuZW5kLnJvdyA+PSBkb2NSb3cpIHsKICAgICAgICAgICAgICAgIHJldHVybiBmb2xkTGluZTsKICAgICAgICAgICAgfSBlbHNlIGlmIChmb2xkTGluZS5lbmQucm93ID4gZG9jUm93KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gbnVsbDsKICAgIH07CiAgICB0aGlzLmdldE5leHRGb2xkTGluZSA9IGZ1bmN0aW9uKGRvY1Jvdywgc3RhcnRGb2xkTGluZSkgewogICAgICAgIHZhciBmb2xkRGF0YSA9IHRoaXMuJGZvbGREYXRhOwogICAgICAgIHZhciBpID0gMDsKICAgICAgICBpZiAoc3RhcnRGb2xkTGluZSkKICAgICAgICAgICAgaSA9IGZvbGREYXRhLmluZGV4T2Yoc3RhcnRGb2xkTGluZSk7CiAgICAgICAgaWYgKGkgPT0gLTEpCiAgICAgICAgICAgIGkgPSAwOwogICAgICAgIGZvciAoaTsgaSA8IGZvbGREYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBmb2xkTGluZSA9IGZvbGREYXRhW2ldOwogICAgICAgICAgICBpZiAoZm9sZExpbmUuZW5kLnJvdyA+PSBkb2NSb3cpIHsKICAgICAgICAgICAgICAgIHJldHVybiBmb2xkTGluZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gbnVsbDsKICAgIH07CgogICAgdGhpcy5nZXRGb2xkZWRSb3dDb3VudCA9IGZ1bmN0aW9uKGZpcnN0LCBsYXN0KSB7CiAgICAgICAgdmFyIGZvbGREYXRhID0gdGhpcy4kZm9sZERhdGEsIHJvd0NvdW50ID0gbGFzdC1maXJzdCsxOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZm9sZERhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIGZvbGRMaW5lID0gZm9sZERhdGFbaV0sCiAgICAgICAgICAgICAgICBlbmQgPSBmb2xkTGluZS5lbmQucm93LAogICAgICAgICAgICAgICAgc3RhcnQgPSBmb2xkTGluZS5zdGFydC5yb3c7CiAgICAgICAgICAgIGlmIChlbmQgPj0gbGFzdCkgewogICAgICAgICAgICAgICAgaWYoc3RhcnQgPCBsYXN0KSB7CiAgICAgICAgICAgICAgICAgICAgaWYoc3RhcnQgPj0gZmlyc3QpCiAgICAgICAgICAgICAgICAgICAgICAgIHJvd0NvdW50IC09IGxhc3Qtc3RhcnQ7CiAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICByb3dDb3VudCA9IDA7Ly9pbiBvbmUgZm9sZAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0gZWxzZSBpZihlbmQgPj0gZmlyc3QpewogICAgICAgICAgICAgICAgaWYgKHN0YXJ0ID49IGZpcnN0KSAvL2ZvbGQgaW5zaWRlIHJhbmdlCiAgICAgICAgICAgICAgICAgICAgcm93Q291bnQgLT0gIGVuZC1zdGFydDsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICByb3dDb3VudCAtPSAgZW5kLWZpcnN0KzE7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJvd0NvdW50OwogICAgfTsKCiAgICB0aGlzLiRhZGRGb2xkTGluZSA9IGZ1bmN0aW9uKGZvbGRMaW5lKSB7CiAgICAgICAgdGhpcy4kZm9sZERhdGEucHVzaChmb2xkTGluZSk7CiAgICAgICAgdGhpcy4kZm9sZERhdGEuc29ydChmdW5jdGlvbihhLCBiKSB7CiAgICAgICAgICAgIHJldHVybiBhLnN0YXJ0LnJvdyAtIGIuc3RhcnQucm93OwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBmb2xkTGluZTsKICAgIH07CiAgICB0aGlzLmFkZEZvbGQgPSBmdW5jdGlvbihwbGFjZWhvbGRlciwgcmFuZ2UpIHsKICAgICAgICB2YXIgZm9sZERhdGEgPSB0aGlzLiRmb2xkRGF0YTsKICAgICAgICB2YXIgYWRkZWQgPSBmYWxzZTsKICAgICAgICB2YXIgZm9sZDsKICAgICAgICAKICAgICAgICBpZiAocGxhY2Vob2xkZXIgaW5zdGFuY2VvZiBGb2xkKQogICAgICAgICAgICBmb2xkID0gcGxhY2Vob2xkZXI7CiAgICAgICAgZWxzZQogICAgICAgICAgICBmb2xkID0gbmV3IEZvbGQocmFuZ2UsIHBsYWNlaG9sZGVyKTsKCiAgICAgICAgdGhpcy4kY2xpcFJhbmdlVG9Eb2N1bWVudChmb2xkLnJhbmdlKTsKCiAgICAgICAgdmFyIHN0YXJ0Um93ID0gZm9sZC5zdGFydC5yb3c7CiAgICAgICAgdmFyIHN0YXJ0Q29sdW1uID0gZm9sZC5zdGFydC5jb2x1bW47CiAgICAgICAgdmFyIGVuZFJvdyA9IGZvbGQuZW5kLnJvdzsKICAgICAgICB2YXIgZW5kQ29sdW1uID0gZm9sZC5lbmQuY29sdW1uOwogICAgICAgIGlmIChzdGFydFJvdyA9PSBlbmRSb3cgJiYgZW5kQ29sdW1uIC0gc3RhcnRDb2x1bW4gPCAyKQogICAgICAgICAgICB0aHJvdyAiVGhlIHJhbmdlIGhhcyB0byBiZSBhdCBsZWFzdCAyIGNoYXJhY3RlcnMgd2lkdGgiOwoKICAgICAgICB2YXIgc3RhcnRGb2xkID0gdGhpcy5nZXRGb2xkQXQoc3RhcnRSb3csIHN0YXJ0Q29sdW1uLCAxKTsKICAgICAgICB2YXIgZW5kRm9sZCA9IHRoaXMuZ2V0Rm9sZEF0KGVuZFJvdywgZW5kQ29sdW1uLCAtMSk7CiAgICAgICAgaWYgKHN0YXJ0Rm9sZCAmJiBlbmRGb2xkID09IHN0YXJ0Rm9sZCkKICAgICAgICAgICAgcmV0dXJuIHN0YXJ0Rm9sZC5hZGRTdWJGb2xkKGZvbGQpOwoKICAgICAgICBpZiAoCiAgICAgICAgICAgIChzdGFydEZvbGQgJiYgIXN0YXJ0Rm9sZC5yYW5nZS5pc1N0YXJ0KHN0YXJ0Um93LCBzdGFydENvbHVtbikpCiAgICAgICAgICAgIHx8IChlbmRGb2xkICYmICFlbmRGb2xkLnJhbmdlLmlzRW5kKGVuZFJvdywgZW5kQ29sdW1uKSkKICAgICAgICApIHsKICAgICAgICAgICAgdGhyb3cgIkEgZm9sZCBjYW4ndCBpbnRlcnNlY3QgYWxyZWFkeSBleGlzdGluZyBmb2xkIiArIGZvbGQucmFuZ2UgKyBzdGFydEZvbGQucmFuZ2U7CiAgICAgICAgfQogICAgICAgIHZhciBmb2xkcyA9IHRoaXMuZ2V0Rm9sZHNJblJhbmdlKGZvbGQucmFuZ2UpOwogICAgICAgIGlmIChmb2xkcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIHRoaXMucmVtb3ZlRm9sZHMoZm9sZHMpOwogICAgICAgICAgICBmb2xkLnN1YkZvbGRzID0gZm9sZHM7CiAgICAgICAgfQoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZvbGREYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBmb2xkTGluZSA9IGZvbGREYXRhW2ldOwogICAgICAgICAgICBpZiAoZW5kUm93ID09IGZvbGRMaW5lLnN0YXJ0LnJvdykgewogICAgICAgICAgICAgICAgZm9sZExpbmUuYWRkRm9sZChmb2xkKTsKICAgICAgICAgICAgICAgIGFkZGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgaWYgKHN0YXJ0Um93ID09IGZvbGRMaW5lLmVuZC5yb3cpIHsKICAgICAgICAgICAgICAgIGZvbGRMaW5lLmFkZEZvbGQoZm9sZCk7CiAgICAgICAgICAgICAgICBhZGRlZCA9IHRydWU7CiAgICAgICAgICAgICAgICBpZiAoIWZvbGQuc2FtZVJvdykgewogICAgICAgICAgICAgICAgICAgIHZhciBmb2xkTGluZU5leHQgPSBmb2xkRGF0YVtpICsgMV07CiAgICAgICAgICAgICAgICAgICAgaWYgKGZvbGRMaW5lTmV4dCAmJiBmb2xkTGluZU5leHQuc3RhcnQucm93ID09IGVuZFJvdykgewogICAgICAgICAgICAgICAgICAgICAgICBmb2xkTGluZS5tZXJnZShmb2xkTGluZU5leHQpOwogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChlbmRSb3cgPD0gZm9sZExpbmUuc3RhcnQucm93KSB7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKCFhZGRlZCkKICAgICAgICAgICAgZm9sZExpbmUgPSB0aGlzLiRhZGRGb2xkTGluZShuZXcgRm9sZExpbmUodGhpcy4kZm9sZERhdGEsIGZvbGQpKTsKCiAgICAgICAgaWYgKHRoaXMuJHVzZVdyYXBNb2RlKQogICAgICAgICAgICB0aGlzLiR1cGRhdGVXcmFwRGF0YShmb2xkTGluZS5zdGFydC5yb3csIGZvbGRMaW5lLnN0YXJ0LnJvdyk7CiAgICAgICAgZWxzZQogICAgICAgICAgICB0aGlzLiR1cGRhdGVSb3dMZW5ndGhDYWNoZShmb2xkTGluZS5zdGFydC5yb3csIGZvbGRMaW5lLnN0YXJ0LnJvdyk7CiAgICAgICAgdGhpcy4kbW9kaWZpZWQgPSB0cnVlOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZUZvbGQiLCB7IGRhdGE6IGZvbGQgfSk7CgogICAgICAgIHJldHVybiBmb2xkOwogICAgfTsKCiAgICB0aGlzLmFkZEZvbGRzID0gZnVuY3Rpb24oZm9sZHMpIHsKICAgICAgICBmb2xkcy5mb3JFYWNoKGZ1bmN0aW9uKGZvbGQpIHsKICAgICAgICAgICAgdGhpcy5hZGRGb2xkKGZvbGQpOwogICAgICAgIH0sIHRoaXMpOwogICAgfTsKCiAgICB0aGlzLnJlbW92ZUZvbGQgPSBmdW5jdGlvbihmb2xkKSB7CiAgICAgICAgdmFyIGZvbGRMaW5lID0gZm9sZC5mb2xkTGluZTsKICAgICAgICB2YXIgc3RhcnRSb3cgPSBmb2xkTGluZS5zdGFydC5yb3c7CiAgICAgICAgdmFyIGVuZFJvdyA9IGZvbGRMaW5lLmVuZC5yb3c7CgogICAgICAgIHZhciBmb2xkTGluZXMgPSB0aGlzLiRmb2xkRGF0YTsKICAgICAgICB2YXIgZm9sZHMgPSBmb2xkTGluZS5mb2xkczsKICAgICAgICBpZiAoZm9sZHMubGVuZ3RoID09IDEpIHsKICAgICAgICAgICAgZm9sZExpbmVzLnNwbGljZShmb2xkTGluZXMuaW5kZXhPZihmb2xkTGluZSksIDEpOwogICAgICAgIH0gZWxzZQogICAgICAgIGlmIChmb2xkTGluZS5yYW5nZS5pc0VuZChmb2xkLmVuZC5yb3csIGZvbGQuZW5kLmNvbHVtbikpIHsKICAgICAgICAgICAgZm9sZHMucG9wKCk7CiAgICAgICAgICAgIGZvbGRMaW5lLmVuZC5yb3cgPSBmb2xkc1tmb2xkcy5sZW5ndGggLSAxXS5lbmQucm93OwogICAgICAgICAgICBmb2xkTGluZS5lbmQuY29sdW1uID0gZm9sZHNbZm9sZHMubGVuZ3RoIC0gMV0uZW5kLmNvbHVtbjsKICAgICAgICB9IGVsc2UKICAgICAgICBpZiAoZm9sZExpbmUucmFuZ2UuaXNTdGFydChmb2xkLnN0YXJ0LnJvdywgZm9sZC5zdGFydC5jb2x1bW4pKSB7CiAgICAgICAgICAgIGZvbGRzLnNoaWZ0KCk7CiAgICAgICAgICAgIGZvbGRMaW5lLnN0YXJ0LnJvdyA9IGZvbGRzWzBdLnN0YXJ0LnJvdzsKICAgICAgICAgICAgZm9sZExpbmUuc3RhcnQuY29sdW1uID0gZm9sZHNbMF0uc3RhcnQuY29sdW1uOwogICAgICAgIH0gZWxzZQogICAgICAgIGlmIChmb2xkLnNhbWVSb3cpIHsKICAgICAgICAgICAgZm9sZHMuc3BsaWNlKGZvbGRzLmluZGV4T2YoZm9sZCksIDEpOwogICAgICAgIH0gZWxzZQogICAgICAgIHsKICAgICAgICAgICAgdmFyIG5ld0ZvbGRMaW5lID0gZm9sZExpbmUuc3BsaXQoZm9sZC5zdGFydC5yb3csIGZvbGQuc3RhcnQuY29sdW1uKTsKICAgICAgICAgICAgZm9sZHMgPSBuZXdGb2xkTGluZS5mb2xkczsKICAgICAgICAgICAgZm9sZHMuc2hpZnQoKTsKICAgICAgICAgICAgbmV3Rm9sZExpbmUuc3RhcnQucm93ID0gZm9sZHNbMF0uc3RhcnQucm93OwogICAgICAgICAgICBuZXdGb2xkTGluZS5zdGFydC5jb2x1bW4gPSBmb2xkc1swXS5zdGFydC5jb2x1bW47CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy4kdXNlV3JhcE1vZGUpCiAgICAgICAgICAgIHRoaXMuJHVwZGF0ZVdyYXBEYXRhKHN0YXJ0Um93LCBlbmRSb3cpOwogICAgICAgIGVsc2UKICAgICAgICAgICAgdGhpcy4kdXBkYXRlUm93TGVuZ3RoQ2FjaGUoc3RhcnRSb3csIGVuZFJvdyk7CiAgICAgICAgdGhpcy4kbW9kaWZpZWQgPSB0cnVlOwogICAgICAgIHRoaXMuX2VtaXQoImNoYW5nZUZvbGQiLCB7IGRhdGE6IGZvbGQgfSk7CiAgICB9OwoKICAgIHRoaXMucmVtb3ZlRm9sZHMgPSBmdW5jdGlvbihmb2xkcykgewogICAgICAgIHZhciBjbG9uZUZvbGRzID0gW107CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmb2xkcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBjbG9uZUZvbGRzLnB1c2goZm9sZHNbaV0pOwogICAgICAgIH0KCiAgICAgICAgY2xvbmVGb2xkcy5mb3JFYWNoKGZ1bmN0aW9uKGZvbGQpIHsKICAgICAgICAgICAgdGhpcy5yZW1vdmVGb2xkKGZvbGQpOwogICAgICAgIH0sIHRoaXMpOwogICAgICAgIHRoaXMuJG1vZGlmaWVkID0gdHJ1ZTsKICAgIH07CgogICAgdGhpcy5leHBhbmRGb2xkID0gZnVuY3Rpb24oZm9sZCkgewogICAgICAgIHRoaXMucmVtb3ZlRm9sZChmb2xkKTsKICAgICAgICBmb2xkLnN1YkZvbGRzLmZvckVhY2goZnVuY3Rpb24oZm9sZCkgewogICAgICAgICAgICB0aGlzLmFkZEZvbGQoZm9sZCk7CiAgICAgICAgfSwgdGhpcyk7CiAgICAgICAgZm9sZC5zdWJGb2xkcyA9IFtdOwogICAgfTsKCiAgICB0aGlzLmV4cGFuZEZvbGRzID0gZnVuY3Rpb24oZm9sZHMpIHsKICAgICAgICBmb2xkcy5mb3JFYWNoKGZ1bmN0aW9uKGZvbGQpIHsKICAgICAgICAgICAgdGhpcy5leHBhbmRGb2xkKGZvbGQpOwogICAgICAgIH0sIHRoaXMpOwogICAgfTsKCiAgICB0aGlzLnVuZm9sZCA9IGZ1bmN0aW9uKGxvY2F0aW9uLCBleHBhbmRJbm5lcikgewogICAgICAgIHZhciByYW5nZSwgZm9sZHM7CiAgICAgICAgaWYgKGxvY2F0aW9uID09IG51bGwpCiAgICAgICAgICAgIHJhbmdlID0gbmV3IFJhbmdlKDAsIDAsIHRoaXMuZ2V0TGVuZ3RoKCksIDApOwogICAgICAgIGVsc2UgaWYgKHR5cGVvZiBsb2NhdGlvbiA9PSAibnVtYmVyIikKICAgICAgICAgICAgcmFuZ2UgPSBuZXcgUmFuZ2UobG9jYXRpb24sIDAsIGxvY2F0aW9uLCB0aGlzLmdldExpbmUobG9jYXRpb24pLmxlbmd0aCk7CiAgICAgICAgZWxzZSBpZiAoInJvdyIgaW4gbG9jYXRpb24pCiAgICAgICAgICAgIHJhbmdlID0gUmFuZ2UuZnJvbVBvaW50cyhsb2NhdGlvbiwgbG9jYXRpb24pOwogICAgICAgIGVsc2UKICAgICAgICAgICAgcmFuZ2UgPSBsb2NhdGlvbjsKCiAgICAgICAgZm9sZHMgPSB0aGlzLmdldEZvbGRzSW5SYW5nZShyYW5nZSk7CiAgICAgICAgaWYgKGV4cGFuZElubmVyKSB7CiAgICAgICAgICAgIHRoaXMucmVtb3ZlRm9sZHMoZm9sZHMpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHdoaWxlIChmb2xkcy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kRm9sZHMoZm9sZHMpOwogICAgICAgICAgICAgICAgZm9sZHMgPSB0aGlzLmdldEZvbGRzSW5SYW5nZShyYW5nZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9OwogICAgdGhpcy5pc1Jvd0ZvbGRlZCA9IGZ1bmN0aW9uKGRvY1Jvdywgc3RhcnRGb2xkUm93KSB7CiAgICAgICAgcmV0dXJuICEhdGhpcy5nZXRGb2xkTGluZShkb2NSb3csIHN0YXJ0Rm9sZFJvdyk7CiAgICB9OwoKICAgIHRoaXMuZ2V0Um93Rm9sZEVuZCA9IGZ1bmN0aW9uKGRvY1Jvdywgc3RhcnRGb2xkUm93KSB7CiAgICAgICAgdmFyIGZvbGRMaW5lID0gdGhpcy5nZXRGb2xkTGluZShkb2NSb3csIHN0YXJ0Rm9sZFJvdyk7CiAgICAgICAgcmV0dXJuIGZvbGRMaW5lID8gZm9sZExpbmUuZW5kLnJvdyA6IGRvY1JvdzsKICAgIH07CgogICAgdGhpcy5nZXRGb2xkRGlzcGxheUxpbmUgPSBmdW5jdGlvbihmb2xkTGluZSwgZW5kUm93LCBlbmRDb2x1bW4sIHN0YXJ0Um93LCBzdGFydENvbHVtbikgewogICAgICAgIGlmIChzdGFydFJvdyA9PSBudWxsKSB7CiAgICAgICAgICAgIHN0YXJ0Um93ID0gZm9sZExpbmUuc3RhcnQucm93OwogICAgICAgICAgICBzdGFydENvbHVtbiA9IDA7CiAgICAgICAgfQoKICAgICAgICBpZiAoZW5kUm93ID09IG51bGwpIHsKICAgICAgICAgICAgZW5kUm93ID0gZm9sZExpbmUuZW5kLnJvdzsKICAgICAgICAgICAgZW5kQ29sdW1uID0gdGhpcy5nZXRMaW5lKGVuZFJvdykubGVuZ3RoOwogICAgICAgIH0KICAgICAgICB2YXIgZG9jID0gdGhpcy5kb2M7CiAgICAgICAgdmFyIHRleHRMaW5lID0gIiI7CgogICAgICAgIGZvbGRMaW5lLndhbGsoZnVuY3Rpb24ocGxhY2Vob2xkZXIsIHJvdywgY29sdW1uLCBsYXN0Q29sdW1uKSB7CiAgICAgICAgICAgIGlmIChyb3cgPCBzdGFydFJvdykgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9IGVsc2UgaWYgKHJvdyA9PSBzdGFydFJvdykgewogICAgICAgICAgICAgICAgaWYgKGNvbHVtbiA8IHN0YXJ0Q29sdW1uKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbGFzdENvbHVtbiA9IE1hdGgubWF4KHN0YXJ0Q29sdW1uLCBsYXN0Q29sdW1uKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAocGxhY2Vob2xkZXIgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgdGV4dExpbmUgKz0gcGxhY2Vob2xkZXI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0ZXh0TGluZSArPSBkb2MuZ2V0TGluZShyb3cpLnN1YnN0cmluZyhsYXN0Q29sdW1uLCBjb2x1bW4pOwogICAgICAgICAgICB9CiAgICAgICAgfS5iaW5kKHRoaXMpLCBlbmRSb3csIGVuZENvbHVtbik7CiAgICAgICAgcmV0dXJuIHRleHRMaW5lOwogICAgfTsKCiAgICB0aGlzLmdldERpc3BsYXlMaW5lID0gZnVuY3Rpb24ocm93LCBlbmRDb2x1bW4sIHN0YXJ0Um93LCBzdGFydENvbHVtbikgewogICAgICAgIHZhciBmb2xkTGluZSA9IHRoaXMuZ2V0Rm9sZExpbmUocm93KTsKCiAgICAgICAgaWYgKCFmb2xkTGluZSkgewogICAgICAgICAgICB2YXIgbGluZTsKICAgICAgICAgICAgbGluZSA9IHRoaXMuZG9jLmdldExpbmUocm93KTsKICAgICAgICAgICAgcmV0dXJuIGxpbmUuc3Vic3RyaW5nKHN0YXJ0Q29sdW1uIHx8IDAsIGVuZENvbHVtbiB8fCBsaW5lLmxlbmd0aCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Rm9sZERpc3BsYXlMaW5lKAogICAgICAgICAgICAgICAgZm9sZExpbmUsIHJvdywgZW5kQ29sdW1uLCBzdGFydFJvdywgc3RhcnRDb2x1bW4pOwogICAgICAgIH0KICAgIH07CgogICAgdGhpcy4kY2xvbmVGb2xkRGF0YSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBmZCA9IFtdOwogICAgICAgIGZkID0gdGhpcy4kZm9sZERhdGEubWFwKGZ1bmN0aW9uKGZvbGRMaW5lKSB7CiAgICAgICAgICAgIHZhciBmb2xkcyA9IGZvbGRMaW5lLmZvbGRzLm1hcChmdW5jdGlvbihmb2xkKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZm9sZC5jbG9uZSgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIG5ldyBGb2xkTGluZShmZCwgZm9sZHMpOwogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gZmQ7CiAgICB9OwoKICAgIHRoaXMudG9nZ2xlRm9sZCA9IGZ1bmN0aW9uKHRyeVRvVW5mb2xkKSB7CiAgICAgICAgdmFyIHNlbGVjdGlvbiA9IHRoaXMuc2VsZWN0aW9uOwogICAgICAgIHZhciByYW5nZSA9IHNlbGVjdGlvbi5nZXRSYW5nZSgpOwogICAgICAgIHZhciBmb2xkOwogICAgICAgIHZhciBicmFja2V0UG9zOwoKICAgICAgICBpZiAocmFuZ2UuaXNFbXB0eSgpKSB7CiAgICAgICAgICAgIHZhciBjdXJzb3IgPSByYW5nZS5zdGFydDsKICAgICAgICAgICAgZm9sZCA9IHRoaXMuZ2V0Rm9sZEF0KGN1cnNvci5yb3csIGN1cnNvci5jb2x1bW4pOwoKICAgICAgICAgICAgaWYgKGZvbGQpIHsKICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kRm9sZChmb2xkKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChicmFja2V0UG9zID0gdGhpcy5maW5kTWF0Y2hpbmdCcmFja2V0KGN1cnNvcikpIHsKICAgICAgICAgICAgICAgIGlmIChyYW5nZS5jb21wYXJlUG9pbnQoYnJhY2tldFBvcykgPT0gMSkgewogICAgICAgICAgICAgICAgICAgIHJhbmdlLmVuZCA9IGJyYWNrZXRQb3M7CiAgICAgICAgICAgICAgICB9IAogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnQgPSBicmFja2V0UG9zOwogICAgICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0LmNvbHVtbisrOwogICAgICAgICAgICAgICAgICAgIHJhbmdlLmVuZC5jb2x1bW4tLTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChicmFja2V0UG9zID0gdGhpcy5maW5kTWF0Y2hpbmdCcmFja2V0KHtyb3c6IGN1cnNvci5yb3csIGNvbHVtbjogY3Vyc29yLmNvbHVtbiArIDF9KSkgewogICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbXBhcmVQb2ludChicmFja2V0UG9zKSA9PSAxKQogICAgICAgICAgICAgICAgICAgIHJhbmdlLmVuZCA9IGJyYWNrZXRQb3M7CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnQgPSBicmFja2V0UG9zOwoKICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0LmNvbHVtbisrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgcmFuZ2UgPSB0aGlzLmdldENvbW1lbnRGb2xkUmFuZ2UoY3Vyc29yLnJvdywgY3Vyc29yLmNvbHVtbikgfHwgcmFuZ2U7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgZm9sZHMgPSB0aGlzLmdldEZvbGRzSW5SYW5nZShyYW5nZSk7CiAgICAgICAgICAgIGlmICh0cnlUb1VuZm9sZCAmJiBmb2xkcy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kRm9sZHMoZm9sZHMpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9IAogICAgICAgICAgICBlbHNlIGlmIChmb2xkcy5sZW5ndGggPT0gMSApIHsKICAgICAgICAgICAgICAgIGZvbGQgPSBmb2xkc1swXTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKCFmb2xkKQogICAgICAgICAgICBmb2xkID0gdGhpcy5nZXRGb2xkQXQocmFuZ2Uuc3RhcnQucm93LCByYW5nZS5zdGFydC5jb2x1bW4pOwoKICAgICAgICBpZiAoZm9sZCAmJiBmb2xkLnJhbmdlLnRvU3RyaW5nKCkgPT0gcmFuZ2UudG9TdHJpbmcoKSkgewogICAgICAgICAgICB0aGlzLmV4cGFuZEZvbGQoZm9sZCk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHZhciBwbGFjZWhvbGRlciA9ICIuLi4iOwogICAgICAgIGlmICghcmFuZ2UuaXNNdWx0aUxpbmUoKSkgewogICAgICAgICAgICBwbGFjZWhvbGRlciA9IHRoaXMuZ2V0VGV4dFJhbmdlKHJhbmdlKTsKICAgICAgICAgICAgaWYocGxhY2Vob2xkZXIubGVuZ3RoIDwgNCkKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgcGxhY2Vob2xkZXIgPSBwbGFjZWhvbGRlci50cmltKCkuc3Vic3RyaW5nKDAsIDIpICsgIi4uIjsKICAgICAgICB9CgogICAgICAgIHRoaXMuYWRkRm9sZChwbGFjZWhvbGRlciwgcmFuZ2UpOwogICAgfTsKCiAgICB0aGlzLmdldENvbW1lbnRGb2xkUmFuZ2UgPSBmdW5jdGlvbihyb3csIGNvbHVtbiwgZGlyKSB7CiAgICAgICAgdmFyIGl0ZXJhdG9yID0gbmV3IFRva2VuSXRlcmF0b3IodGhpcywgcm93LCBjb2x1bW4pOwogICAgICAgIHZhciB0b2tlbiA9IGl0ZXJhdG9yLmdldEN1cnJlbnRUb2tlbigpOwogICAgICAgIGlmICh0b2tlbiAmJiAvXmNvbW1lbnR8c3RyaW5nLy50ZXN0KHRva2VuLnR5cGUpKSB7CiAgICAgICAgICAgIHZhciByYW5nZSA9IG5ldyBSYW5nZSgpOwogICAgICAgICAgICB2YXIgcmUgPSBuZXcgUmVnRXhwKHRva2VuLnR5cGUucmVwbGFjZSgvXC4uKi8sICJcXC4iKSk7CiAgICAgICAgICAgIGlmIChkaXIgIT0gMSkgewogICAgICAgICAgICAgICAgZG8gewogICAgICAgICAgICAgICAgICAgIHRva2VuID0gaXRlcmF0b3Iuc3RlcEJhY2t3YXJkKCk7CiAgICAgICAgICAgICAgICB9IHdoaWxlKHRva2VuICYmIHJlLnRlc3QodG9rZW4udHlwZSkpOwogICAgICAgICAgICAgICAgaXRlcmF0b3Iuc3RlcEZvcndhcmQoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgcmFuZ2Uuc3RhcnQucm93ID0gaXRlcmF0b3IuZ2V0Q3VycmVudFRva2VuUm93KCk7CiAgICAgICAgICAgIHJhbmdlLnN0YXJ0LmNvbHVtbiA9IGl0ZXJhdG9yLmdldEN1cnJlbnRUb2tlbkNvbHVtbigpICsgMjsKCiAgICAgICAgICAgIGl0ZXJhdG9yID0gbmV3IFRva2VuSXRlcmF0b3IodGhpcywgcm93LCBjb2x1bW4pOwogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKGRpciAhPSAtMSkgewogICAgICAgICAgICAgICAgZG8gewogICAgICAgICAgICAgICAgICAgIHRva2VuID0gaXRlcmF0b3Iuc3RlcEZvcndhcmQoKTsKICAgICAgICAgICAgICAgIH0gd2hpbGUodG9rZW4gJiYgcmUudGVzdCh0b2tlbi50eXBlKSk7CiAgICAgICAgICAgICAgICB0b2tlbiA9IGl0ZXJhdG9yLnN0ZXBCYWNrd2FyZCgpOwogICAgICAgICAgICB9IGVsc2UKICAgICAgICAgICAgICAgIHRva2VuID0gaXRlcmF0b3IuZ2V0Q3VycmVudFRva2VuKCk7CgogICAgICAgICAgICByYW5nZS5lbmQucm93ID0gaXRlcmF0b3IuZ2V0Q3VycmVudFRva2VuUm93KCk7CiAgICAgICAgICAgIHJhbmdlLmVuZC5jb2x1bW4gPSBpdGVyYXRvci5nZXRDdXJyZW50VG9rZW5Db2x1bW4oKSArIHRva2VuLnZhbHVlLmxlbmd0aCAtIDI7CiAgICAgICAgICAgIHJldHVybiByYW5nZTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuZm9sZEFsbCA9IGZ1bmN0aW9uKHN0YXJ0Um93LCBlbmRSb3cpIHsKICAgICAgICB2YXIgZm9sZFdpZGdldHMgPSB0aGlzLmZvbGRXaWRnZXRzOwogICAgICAgIGVuZFJvdyA9IGVuZFJvdyB8fCB0aGlzLmdldExlbmd0aCgpOwogICAgICAgIGZvciAodmFyIHJvdyA9IHN0YXJ0Um93IHx8IDA7IHJvdyA8IGVuZFJvdzsgcm93KyspIHsKICAgICAgICAgICAgaWYgKGZvbGRXaWRnZXRzW3Jvd10gPT0gbnVsbCkKICAgICAgICAgICAgICAgIGZvbGRXaWRnZXRzW3Jvd10gPSB0aGlzLmdldEZvbGRXaWRnZXQocm93KTsKICAgICAgICAgICAgaWYgKGZvbGRXaWRnZXRzW3Jvd10gIT0gInN0YXJ0IikKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwoKICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5nZXRGb2xkV2lkZ2V0UmFuZ2Uocm93KTsKICAgICAgICAgICAgaWYgKHJhbmdlICYmIHJhbmdlLmVuZC5yb3cgPD0gZW5kUm93KSB0cnkgewogICAgICAgICAgICAgICAgdGhpcy5hZGRGb2xkKCIuLi4iLCByYW5nZSk7CiAgICAgICAgICAgIH0gY2F0Y2goZSkge30KICAgICAgICB9CiAgICB9OwogICAgCiAgICB0aGlzLiRmb2xkU3R5bGVzID0gewogICAgICAgICJtYW51YWwiOiAxLAogICAgICAgICJtYXJrYmVnaW4iOiAxLAogICAgICAgICJtYXJrYmVnaW5lbmQiOiAxCiAgICB9OwogICAgdGhpcy4kZm9sZFN0eWxlID0gIm1hcmtiZWdpbiI7CiAgICB0aGlzLnNldEZvbGRTdHlsZSA9IGZ1bmN0aW9uKHN0eWxlKSB7CiAgICAgICAgaWYgKCF0aGlzLiRmb2xkU3R5bGVzW3N0eWxlXSkKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGZvbGQgc3R5bGU6ICIgKyBzdHlsZSArICJbIiArIE9iamVjdC5rZXlzKHRoaXMuJGZvbGRTdHlsZXMpLmpvaW4oIiwgIikgKyAiXSIpOwogICAgICAgIAogICAgICAgIGlmICh0aGlzLiRmb2xkU3R5bGUgPT0gc3R5bGUpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdGhpcy4kZm9sZFN0eWxlID0gc3R5bGU7CiAgICAgICAgCiAgICAgICAgaWYgKHN0eWxlID09ICJtYW51YWwiKQogICAgICAgICAgICB0aGlzLnVuZm9sZCgpOwogICAgICAgIHZhciBtb2RlID0gdGhpcy4kZm9sZE1vZGU7CiAgICAgICAgdGhpcy4kc2V0Rm9sZGluZyhudWxsKTsKICAgICAgICB0aGlzLiRzZXRGb2xkaW5nKG1vZGUpOwogICAgfTsKICAgIHRoaXMuJHNldEZvbGRpbmcgPSBmdW5jdGlvbihmb2xkTW9kZSkgewogICAgICAgIGlmICh0aGlzLiRmb2xkTW9kZSA9PSBmb2xkTW9kZSkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAKICAgICAgICB0aGlzLiRmb2xkTW9kZSA9IGZvbGRNb2RlOwogICAgICAgIAogICAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMuJHVwZGF0ZUZvbGRXaWRnZXRzKTsKICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VBbm5vdGF0aW9uIik7CiAgICAgICAgCiAgICAgICAgaWYgKCFmb2xkTW9kZSB8fCB0aGlzLiRmb2xkU3R5bGUgPT0gIm1hbnVhbCIpIHsKICAgICAgICAgICAgdGhpcy5mb2xkV2lkZ2V0cyA9IG51bGw7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgdGhpcy5mb2xkV2lkZ2V0cyA9IFtdOwogICAgICAgIHRoaXMuZ2V0Rm9sZFdpZGdldCA9IGZvbGRNb2RlLmdldEZvbGRXaWRnZXQuYmluZChmb2xkTW9kZSwgdGhpcywgdGhpcy4kZm9sZFN0eWxlKTsKICAgICAgICB0aGlzLmdldEZvbGRXaWRnZXRSYW5nZSA9IGZvbGRNb2RlLmdldEZvbGRXaWRnZXRSYW5nZS5iaW5kKGZvbGRNb2RlLCB0aGlzLCB0aGlzLiRmb2xkU3R5bGUpOwogICAgICAgIAogICAgICAgIHRoaXMuJHVwZGF0ZUZvbGRXaWRnZXRzID0gdGhpcy51cGRhdGVGb2xkV2lkZ2V0cy5iaW5kKHRoaXMpOwogICAgICAgIHRoaXMub24oJ2NoYW5nZScsIHRoaXMuJHVwZGF0ZUZvbGRXaWRnZXRzKTsKICAgICAgICAKICAgIH07CgogICAgdGhpcy5vbkZvbGRXaWRnZXRDbGljayA9IGZ1bmN0aW9uKHJvdywgZSkgewogICAgICAgIGUgPSBlLmRvbUV2ZW50OwogICAgICAgIHZhciB0eXBlID0gdGhpcy5nZXRGb2xkV2lkZ2V0KHJvdyk7CiAgICAgICAgdmFyIGxpbmUgPSB0aGlzLmdldExpbmUocm93KTsKICAgICAgICB2YXIgb25seVN1YmZvbGRzID0gZS5zaGlmdEtleTsKICAgICAgICB2YXIgYWRkU3ViZm9sZHMgPSBvbmx5U3ViZm9sZHMgfHwgZS5jdHJsS2V5IHx8IGUuYWx0S2V5IHx8IGUubWV0YUtleTsKICAgICAgICB2YXIgZm9sZDsKCiAgICAgICAgaWYgKHR5cGUgPT0gImVuZCIpCiAgICAgICAgICAgIGZvbGQgPSB0aGlzLmdldEZvbGRBdChyb3csIDAsIC0xKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIGZvbGQgPSB0aGlzLmdldEZvbGRBdChyb3csIGxpbmUubGVuZ3RoLCAxKTsKCiAgICAgICAgaWYgKGZvbGQpIHsKICAgICAgICAgICAgaWYgKGFkZFN1YmZvbGRzKQogICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVGb2xkKGZvbGQpOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB0aGlzLmV4cGFuZEZvbGQoZm9sZCk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHZhciByYW5nZSA9IHRoaXMuZ2V0Rm9sZFdpZGdldFJhbmdlKHJvdyk7CiAgICAgICAgaWYgKHJhbmdlKSB7CiAgICAgICAgICAgIGlmICghcmFuZ2UuaXNNdWx0aUxpbmUoKSkgewogICAgICAgICAgICAgICAgZm9sZCA9IHRoaXMuZ2V0Rm9sZEF0KHJhbmdlLnN0YXJ0LnJvdywgcmFuZ2Uuc3RhcnQuY29sdW1uLCAxKTsKICAgICAgICAgICAgICAgIGlmIChmb2xkICYmIHJhbmdlLmlzRXF1YWwoZm9sZC5yYW5nZSkpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUZvbGQoZm9sZCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICBpZiAoIW9ubHlTdWJmb2xkcykKICAgICAgICAgICAgICAgIHRoaXMuYWRkRm9sZCgiLi4uIiwgcmFuZ2UpOwoKICAgICAgICAgICAgaWYgKGFkZFN1YmZvbGRzKQogICAgICAgICAgICAgICAgdGhpcy5mb2xkQWxsKHJhbmdlLnN0YXJ0LnJvdyArIDEsIHJhbmdlLmVuZC5yb3cpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIChhZGRTdWJmb2xkcykKICAgICAgICAgICAgICAgIHRoaXMuZm9sZEFsbChyb3cgKyAxLCB0aGlzLmdldExlbmd0aCgpKTsKICAgICAgICAgICAgKGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudCkuY2xhc3NOYW1lICs9ICIgYWNlX2ludmFsaWQiCiAgICAgICAgfQogICAgfTsKICAgIAogICAgdGhpcy51cGRhdGVGb2xkV2lkZ2V0cyA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICB2YXIgZGVsdGEgPSBlLmRhdGE7CiAgICAgICAgdmFyIHJhbmdlID0gZGVsdGEucmFuZ2U7CiAgICAgICAgdmFyIGZpcnN0Um93ID0gcmFuZ2Uuc3RhcnQucm93OwogICAgICAgIHZhciBsZW4gPSByYW5nZS5lbmQucm93IC0gZmlyc3RSb3c7CgogICAgICAgIGlmIChsZW4gPT09IDApIHsKICAgICAgICAgICAgdGhpcy5mb2xkV2lkZ2V0c1tmaXJzdFJvd10gPSBudWxsOwogICAgICAgIH0gZWxzZSBpZiAoZGVsdGEuYWN0aW9uID09ICJyZW1vdmVUZXh0IiB8fCBkZWx0YS5hY3Rpb24gPT0gInJlbW92ZUxpbmVzIikgewogICAgICAgICAgICB0aGlzLmZvbGRXaWRnZXRzLnNwbGljZShmaXJzdFJvdywgbGVuICsgMSwgbnVsbCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIGFyZ3MgPSBBcnJheShsZW4gKyAxKTsKICAgICAgICAgICAgYXJncy51bnNoaWZ0KGZpcnN0Um93LCAxKTsKICAgICAgICAgICAgdGhpcy5mb2xkV2lkZ2V0cy5zcGxpY2UuYXBwbHkodGhpcy5mb2xkV2lkZ2V0cywgYXJncyk7CiAgICAgICAgfQogICAgfTsKCn0KCmV4cG9ydHMuRm9sZGluZyA9IEZvbGRpbmc7Cgp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9lZGl0X3Nlc3Npb24vZm9sZF9saW5lJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvcmFuZ2UnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIFJhbmdlID0gcmVxdWlyZSgiLi4vcmFuZ2UiKS5SYW5nZTsKZnVuY3Rpb24gRm9sZExpbmUoZm9sZERhdGEsIGZvbGRzKSB7CiAgICB0aGlzLmZvbGREYXRhID0gZm9sZERhdGE7CiAgICBpZiAoQXJyYXkuaXNBcnJheShmb2xkcykpIHsKICAgICAgICB0aGlzLmZvbGRzID0gZm9sZHM7CiAgICB9IGVsc2UgewogICAgICAgIGZvbGRzID0gdGhpcy5mb2xkcyA9IFsgZm9sZHMgXTsKICAgIH0KCiAgICB2YXIgbGFzdCA9IGZvbGRzW2ZvbGRzLmxlbmd0aCAtIDFdCiAgICB0aGlzLnJhbmdlID0gbmV3IFJhbmdlKGZvbGRzWzBdLnN0YXJ0LnJvdywgZm9sZHNbMF0uc3RhcnQuY29sdW1uLAogICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0LmVuZC5yb3csIGxhc3QuZW5kLmNvbHVtbik7CiAgICB0aGlzLnN0YXJ0ID0gdGhpcy5yYW5nZS5zdGFydDsKICAgIHRoaXMuZW5kICAgPSB0aGlzLnJhbmdlLmVuZDsKCiAgICB0aGlzLmZvbGRzLmZvckVhY2goZnVuY3Rpb24oZm9sZCkgewogICAgICAgIGZvbGQuc2V0Rm9sZExpbmUodGhpcyk7CiAgICB9LCB0aGlzKTsKfQoKKGZ1bmN0aW9uKCkgewogICAgdGhpcy5zaGlmdFJvdyA9IGZ1bmN0aW9uKHNoaWZ0KSB7CiAgICAgICAgdGhpcy5zdGFydC5yb3cgKz0gc2hpZnQ7CiAgICAgICAgdGhpcy5lbmQucm93ICs9IHNoaWZ0OwogICAgICAgIHRoaXMuZm9sZHMuZm9yRWFjaChmdW5jdGlvbihmb2xkKSB7CiAgICAgICAgICAgIGZvbGQuc3RhcnQucm93ICs9IHNoaWZ0OwogICAgICAgICAgICBmb2xkLmVuZC5yb3cgKz0gc2hpZnQ7CiAgICAgICAgfSk7CiAgICB9CgogICAgdGhpcy5hZGRGb2xkID0gZnVuY3Rpb24oZm9sZCkgewogICAgICAgIGlmIChmb2xkLnNhbWVSb3cpIHsKICAgICAgICAgICAgaWYgKGZvbGQuc3RhcnQucm93IDwgdGhpcy5zdGFydFJvdyB8fCBmb2xkLmVuZFJvdyA+IHRoaXMuZW5kUm93KSB7CiAgICAgICAgICAgICAgICB0aHJvdyAiQ2FuJ3QgYWRkIGEgZm9sZCB0byB0aGlzIEZvbGRMaW5lIGFzIGl0IGhhcyBubyBjb25uZWN0aW9uIjsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmZvbGRzLnB1c2goZm9sZCk7CiAgICAgICAgICAgIHRoaXMuZm9sZHMuc29ydChmdW5jdGlvbihhLCBiKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gLWEucmFuZ2UuY29tcGFyZUVuZChiLnN0YXJ0LnJvdywgYi5zdGFydC5jb2x1bW4pOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgaWYgKHRoaXMucmFuZ2UuY29tcGFyZUVuZChmb2xkLnN0YXJ0LnJvdywgZm9sZC5zdGFydC5jb2x1bW4pID4gMCkgewogICAgICAgICAgICAgICAgdGhpcy5lbmQucm93ID0gZm9sZC5lbmQucm93OwogICAgICAgICAgICAgICAgdGhpcy5lbmQuY29sdW1uID0gIGZvbGQuZW5kLmNvbHVtbjsKICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnJhbmdlLmNvbXBhcmVTdGFydChmb2xkLmVuZC5yb3csIGZvbGQuZW5kLmNvbHVtbikgPCAwKSB7CiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0LnJvdyA9IGZvbGQuc3RhcnQucm93OwogICAgICAgICAgICAgICAgdGhpcy5zdGFydC5jb2x1bW4gPSBmb2xkLnN0YXJ0LmNvbHVtbjsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoZm9sZC5zdGFydC5yb3cgPT0gdGhpcy5lbmQucm93KSB7CiAgICAgICAgICAgIHRoaXMuZm9sZHMucHVzaChmb2xkKTsKICAgICAgICAgICAgdGhpcy5lbmQucm93ID0gZm9sZC5lbmQucm93OwogICAgICAgICAgICB0aGlzLmVuZC5jb2x1bW4gPSBmb2xkLmVuZC5jb2x1bW47CiAgICAgICAgfSBlbHNlIGlmIChmb2xkLmVuZC5yb3cgPT0gdGhpcy5zdGFydC5yb3cpIHsKICAgICAgICAgICAgdGhpcy5mb2xkcy51bnNoaWZ0KGZvbGQpOwogICAgICAgICAgICB0aGlzLnN0YXJ0LnJvdyA9IGZvbGQuc3RhcnQucm93OwogICAgICAgICAgICB0aGlzLnN0YXJ0LmNvbHVtbiA9IGZvbGQuc3RhcnQuY29sdW1uOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRocm93ICJUcnlpbmcgdG8gYWRkIGZvbGQgdG8gRm9sZFJvdyB0aGF0IGRvZXNuJ3QgaGF2ZSBhIG1hdGNoaW5nIHJvdyI7CiAgICAgICAgfQogICAgICAgIGZvbGQuZm9sZExpbmUgPSB0aGlzOwogICAgfQoKICAgIHRoaXMuY29udGFpbnNSb3cgPSBmdW5jdGlvbihyb3cpIHsKICAgICAgICByZXR1cm4gcm93ID49IHRoaXMuc3RhcnQucm93ICYmIHJvdyA8PSB0aGlzLmVuZC5yb3c7CiAgICB9CgogICAgdGhpcy53YWxrID0gZnVuY3Rpb24oY2FsbGJhY2ssIGVuZFJvdywgZW5kQ29sdW1uKSB7CiAgICAgICAgdmFyIGxhc3RFbmQgPSAwLAogICAgICAgICAgICBmb2xkcyA9IHRoaXMuZm9sZHMsCiAgICAgICAgICAgIGZvbGQsCiAgICAgICAgICAgIGNvbXAsIHN0b3AsIGlzTmV3Um93ID0gdHJ1ZTsKCiAgICAgICAgaWYgKGVuZFJvdyA9PSBudWxsKSB7CiAgICAgICAgICAgIGVuZFJvdyA9IHRoaXMuZW5kLnJvdzsKICAgICAgICAgICAgZW5kQ29sdW1uID0gdGhpcy5lbmQuY29sdW1uOwogICAgICAgIH0KCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmb2xkcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBmb2xkID0gZm9sZHNbaV07CgogICAgICAgICAgICBjb21wID0gZm9sZC5yYW5nZS5jb21wYXJlU3RhcnQoZW5kUm93LCBlbmRDb2x1bW4pOwogICAgICAgICAgICBpZiAoY29tcCA9PSAtMSkgewogICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgZW5kUm93LCBlbmRDb2x1bW4sIGxhc3RFbmQsIGlzTmV3Um93KTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgc3RvcCA9IGNhbGxiYWNrKG51bGwsIGZvbGQuc3RhcnQucm93LCBmb2xkLnN0YXJ0LmNvbHVtbiwgbGFzdEVuZCwgaXNOZXdSb3cpOwogICAgICAgICAgICBzdG9wID0gIXN0b3AgJiYgY2FsbGJhY2soZm9sZC5wbGFjZWhvbGRlciwgZm9sZC5zdGFydC5yb3csIGZvbGQuc3RhcnQuY29sdW1uLCBsYXN0RW5kKTsKICAgICAgICAgICAgaWYgKHN0b3AgfHwgY29tcCA9PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaXNOZXdSb3cgPSAhZm9sZC5zYW1lUm93OwogICAgICAgICAgICBsYXN0RW5kID0gZm9sZC5lbmQuY29sdW1uOwogICAgICAgIH0KICAgICAgICBjYWxsYmFjayhudWxsLCBlbmRSb3csIGVuZENvbHVtbiwgbGFzdEVuZCwgaXNOZXdSb3cpOwogICAgfQoKICAgIHRoaXMuZ2V0TmV4dEZvbGRUbyA9IGZ1bmN0aW9uKHJvdywgY29sdW1uKSB7CiAgICAgICAgdmFyIGZvbGQsIGNtcDsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZm9sZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgZm9sZCA9IHRoaXMuZm9sZHNbaV07CiAgICAgICAgICAgIGNtcCA9IGZvbGQucmFuZ2UuY29tcGFyZUVuZChyb3csIGNvbHVtbik7CiAgICAgICAgICAgIGlmIChjbXAgPT0gLTEpIHsKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgZm9sZDogZm9sZCwKICAgICAgICAgICAgICAgICAgICBraW5kOiAiYWZ0ZXIiCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9IGVsc2UgaWYgKGNtcCA9PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGZvbGQ6IGZvbGQsCiAgICAgICAgICAgICAgICAgICAga2luZDogImluc2lkZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gbnVsbDsKICAgIH0KCiAgICB0aGlzLmFkZFJlbW92ZUNoYXJzID0gZnVuY3Rpb24ocm93LCBjb2x1bW4sIGxlbikgewogICAgICAgIHZhciByZXQgPSB0aGlzLmdldE5leHRGb2xkVG8ocm93LCBjb2x1bW4pLAogICAgICAgICAgICBmb2xkLCBmb2xkczsKICAgICAgICBpZiAocmV0KSB7CiAgICAgICAgICAgIGZvbGQgPSByZXQuZm9sZDsKICAgICAgICAgICAgaWYgKHJldC5raW5kID09ICJpbnNpZGUiCiAgICAgICAgICAgICAgICAmJiBmb2xkLnN0YXJ0LmNvbHVtbiAhPSBjb2x1bW4KICAgICAgICAgICAgICAgICYmIGZvbGQuc3RhcnQucm93ICE9IHJvdykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUubG9nKHJvdywgY29sdW1uLCBmb2xkKTsKICAgICAgICAgICAgfSBlbHNlIGlmIChmb2xkLnN0YXJ0LnJvdyA9PSByb3cpIHsKICAgICAgICAgICAgICAgIGZvbGRzID0gdGhpcy5mb2xkczsKICAgICAgICAgICAgICAgIHZhciBpID0gZm9sZHMuaW5kZXhPZihmb2xkKTsKICAgICAgICAgICAgICAgIGlmIChpID09IDApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0LmNvbHVtbiArPSBsZW47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3IgKGk7IGkgPCBmb2xkcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgIGZvbGQgPSBmb2xkc1tpXTsKICAgICAgICAgICAgICAgICAgICBmb2xkLnN0YXJ0LmNvbHVtbiArPSBsZW47CiAgICAgICAgICAgICAgICAgICAgaWYgKCFmb2xkLnNhbWVSb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBmb2xkLmVuZC5jb2x1bW4gKz0gbGVuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5lbmQuY29sdW1uICs9IGxlbjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICB0aGlzLnNwbGl0ID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICB2YXIgZm9sZCA9IHRoaXMuZ2V0TmV4dEZvbGRUbyhyb3csIGNvbHVtbikuZm9sZCwKICAgICAgICAgICAgZm9sZHMgPSB0aGlzLmZvbGRzOwogICAgICAgIHZhciBmb2xkRGF0YSA9IHRoaXMuZm9sZERhdGE7CgogICAgICAgIGlmICghZm9sZCkgewogICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICB9CiAgICAgICAgdmFyIGkgPSBmb2xkcy5pbmRleE9mKGZvbGQpOwogICAgICAgIHZhciBmb2xkQmVmb3JlID0gZm9sZHNbaSAtIDFdOwogICAgICAgIHRoaXMuZW5kLnJvdyA9IGZvbGRCZWZvcmUuZW5kLnJvdzsKICAgICAgICB0aGlzLmVuZC5jb2x1bW4gPSBmb2xkQmVmb3JlLmVuZC5jb2x1bW47CiAgICAgICAgZm9sZHMgPSBmb2xkcy5zcGxpY2UoaSwgZm9sZHMubGVuZ3RoIC0gaSk7CgogICAgICAgIHZhciBuZXdGb2xkTGluZSA9IG5ldyBGb2xkTGluZShmb2xkRGF0YSwgZm9sZHMpOwogICAgICAgIGZvbGREYXRhLnNwbGljZShmb2xkRGF0YS5pbmRleE9mKHRoaXMpICsgMSwgMCwgbmV3Rm9sZExpbmUpOwogICAgICAgIHJldHVybiBuZXdGb2xkTGluZTsKICAgIH0KCiAgICB0aGlzLm1lcmdlID0gZnVuY3Rpb24oZm9sZExpbmVOZXh0KSB7CiAgICAgICAgdmFyIGZvbGRzID0gZm9sZExpbmVOZXh0LmZvbGRzOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZm9sZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdGhpcy5hZGRGb2xkKGZvbGRzW2ldKTsKICAgICAgICB9CiAgICAgICAgdmFyIGZvbGREYXRhID0gdGhpcy5mb2xkRGF0YTsKICAgICAgICBmb2xkRGF0YS5zcGxpY2UoZm9sZERhdGEuaW5kZXhPZihmb2xkTGluZU5leHQpLCAxKTsKICAgIH0KCiAgICB0aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHJldCA9IFt0aGlzLnJhbmdlLnRvU3RyaW5nKCkgKyAiOiBbIiBdOwoKICAgICAgICB0aGlzLmZvbGRzLmZvckVhY2goZnVuY3Rpb24oZm9sZCkgewogICAgICAgICAgICByZXQucHVzaCgiICAiICsgZm9sZC50b1N0cmluZygpKTsKICAgICAgICB9KTsKICAgICAgICByZXQucHVzaCgiXSIpCiAgICAgICAgcmV0dXJuIHJldC5qb2luKCJcbiIpOwogICAgfQoKICAgIHRoaXMuaWR4VG9Qb3NpdGlvbiA9IGZ1bmN0aW9uKGlkeCkgewogICAgICAgIHZhciBsYXN0Rm9sZEVuZENvbHVtbiA9IDA7CiAgICAgICAgdmFyIGZvbGQ7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5mb2xkcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIgZm9sZCA9IHRoaXMuZm9sZHNbaV07CgogICAgICAgICAgICBpZHggLT0gZm9sZC5zdGFydC5jb2x1bW4gLSBsYXN0Rm9sZEVuZENvbHVtbjsKICAgICAgICAgICAgaWYgKGlkeCA8IDApIHsKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgcm93OiBmb2xkLnN0YXJ0LnJvdywKICAgICAgICAgICAgICAgICAgICBjb2x1bW46IGZvbGQuc3RhcnQuY29sdW1uICsgaWR4CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZHggLT0gZm9sZC5wbGFjZWhvbGRlci5sZW5ndGg7CiAgICAgICAgICAgIGlmIChpZHggPCAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZm9sZC5zdGFydDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGFzdEZvbGRFbmRDb2x1bW4gPSBmb2xkLmVuZC5jb2x1bW47CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gewogICAgICAgICAgICByb3c6IHRoaXMuZW5kLnJvdywKICAgICAgICAgICAgY29sdW1uOiB0aGlzLmVuZC5jb2x1bW4gKyBpZHgKICAgICAgICB9OwogICAgfQp9KS5jYWxsKEZvbGRMaW5lLnByb3RvdHlwZSk7CgpleHBvcnRzLkZvbGRMaW5lID0gRm9sZExpbmU7Cn0pOwoKYWNlLmRlZmluZSgnYWNlL2VkaXRfc2Vzc2lvbi9mb2xkJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyBdLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKdmFyIEZvbGQgPSBleHBvcnRzLkZvbGQgPSBmdW5jdGlvbihyYW5nZSwgcGxhY2Vob2xkZXIpIHsKICAgIHRoaXMuZm9sZExpbmUgPSBudWxsOwogICAgdGhpcy5wbGFjZWhvbGRlciA9IHBsYWNlaG9sZGVyOwogICAgdGhpcy5yYW5nZSA9IHJhbmdlOwogICAgdGhpcy5zdGFydCA9IHJhbmdlLnN0YXJ0OwogICAgdGhpcy5lbmQgPSByYW5nZS5lbmQ7CgogICAgdGhpcy5zYW1lUm93ID0gcmFuZ2Uuc3RhcnQucm93ID09IHJhbmdlLmVuZC5yb3c7CiAgICB0aGlzLnN1YkZvbGRzID0gW107Cn07CgooZnVuY3Rpb24oKSB7CgogICAgdGhpcy50b1N0cmluZyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiAnIicgKyB0aGlzLnBsYWNlaG9sZGVyICsgJyIgJyArIHRoaXMucmFuZ2UudG9TdHJpbmcoKTsKICAgIH07CgogICAgdGhpcy5zZXRGb2xkTGluZSA9IGZ1bmN0aW9uKGZvbGRMaW5lKSB7CiAgICAgICAgdGhpcy5mb2xkTGluZSA9IGZvbGRMaW5lOwogICAgICAgIHRoaXMuc3ViRm9sZHMuZm9yRWFjaChmdW5jdGlvbihmb2xkKSB7CiAgICAgICAgICAgIGZvbGQuc2V0Rm9sZExpbmUoZm9sZExpbmUpOwogICAgICAgIH0pOwogICAgfTsKCiAgICB0aGlzLmNsb25lID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5yYW5nZS5jbG9uZSgpOwogICAgICAgIHZhciBmb2xkID0gbmV3IEZvbGQocmFuZ2UsIHRoaXMucGxhY2Vob2xkZXIpOwogICAgICAgIHRoaXMuc3ViRm9sZHMuZm9yRWFjaChmdW5jdGlvbihzdWJGb2xkKSB7CiAgICAgICAgICAgIGZvbGQuc3ViRm9sZHMucHVzaChzdWJGb2xkLmNsb25lKCkpOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBmb2xkOwogICAgfTsKCiAgICB0aGlzLmFkZFN1YkZvbGQgPSBmdW5jdGlvbihmb2xkKSB7CiAgICAgICAgaWYgKHRoaXMucmFuZ2UuaXNFcXVhbChmb2xkKSkKICAgICAgICAgICAgcmV0dXJuIHRoaXM7CgogICAgICAgIGlmICghdGhpcy5yYW5nZS5jb250YWluc1JhbmdlKGZvbGQpKQogICAgICAgICAgICB0aHJvdyAiQSBmb2xkIGNhbid0IGludGVyc2VjdCBhbHJlYWR5IGV4aXN0aW5nIGZvbGQiICsgZm9sZC5yYW5nZSArIHRoaXMucmFuZ2U7CgogICAgICAgIHZhciByb3cgPSBmb2xkLnJhbmdlLnN0YXJ0LnJvdywgY29sdW1uID0gZm9sZC5yYW5nZS5zdGFydC5jb2x1bW47CiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNtcCA9IC0xOyBpIDwgdGhpcy5zdWJGb2xkcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBjbXAgPSB0aGlzLnN1YkZvbGRzW2ldLnJhbmdlLmNvbXBhcmUocm93LCBjb2x1bW4pOwogICAgICAgICAgICBpZiAoY21wICE9IDEpCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgdmFyIGFmdGVyU3RhcnQgPSB0aGlzLnN1YkZvbGRzW2ldOwoKICAgICAgICBpZiAoY21wID09IDApCiAgICAgICAgICAgIHJldHVybiBhZnRlclN0YXJ0LmFkZFN1YkZvbGQoZm9sZCk7CiAgICAgICAgdmFyIHJvdyA9IGZvbGQucmFuZ2UuZW5kLnJvdywgY29sdW1uID0gZm9sZC5yYW5nZS5lbmQuY29sdW1uOwogICAgICAgIGZvciAodmFyIGogPSBpLCBjbXAgPSAtMTsgaiA8IHRoaXMuc3ViRm9sZHMubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgY21wID0gdGhpcy5zdWJGb2xkc1tqXS5yYW5nZS5jb21wYXJlKHJvdywgY29sdW1uKTsKICAgICAgICAgICAgaWYgKGNtcCAhPSAxKQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIHZhciBhZnRlckVuZCA9IHRoaXMuc3ViRm9sZHNbal07CgogICAgICAgIGlmIChjbXAgPT0gMCkKICAgICAgICAgICAgdGhyb3cgIkEgZm9sZCBjYW4ndCBpbnRlcnNlY3QgYWxyZWFkeSBleGlzdGluZyBmb2xkIiArIGZvbGQucmFuZ2UgKyB0aGlzLnJhbmdlOwoKICAgICAgICB2YXIgY29uc3VtZWRGb2xkcyA9IHRoaXMuc3ViRm9sZHMuc3BsaWNlKGksIGogLSBpLCBmb2xkKTsKICAgICAgICBmb2xkLnNldEZvbGRMaW5lKHRoaXMuZm9sZExpbmUpOwoKICAgICAgICByZXR1cm4gZm9sZDsKICAgIH07Cgp9KS5jYWxsKEZvbGQucHJvdG90eXBlKTsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL3Rva2VuX2l0ZXJhdG9yJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyBdLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKdmFyIFRva2VuSXRlcmF0b3IgPSBmdW5jdGlvbihzZXNzaW9uLCBpbml0aWFsUm93LCBpbml0aWFsQ29sdW1uKSB7CiAgICB0aGlzLiRzZXNzaW9uID0gc2Vzc2lvbjsKICAgIHRoaXMuJHJvdyA9IGluaXRpYWxSb3c7CiAgICB0aGlzLiRyb3dUb2tlbnMgPSBzZXNzaW9uLmdldFRva2Vucyhpbml0aWFsUm93KTsKCiAgICB2YXIgdG9rZW4gPSBzZXNzaW9uLmdldFRva2VuQXQoaW5pdGlhbFJvdywgaW5pdGlhbENvbHVtbik7CiAgICB0aGlzLiR0b2tlbkluZGV4ID0gdG9rZW4gPyB0b2tlbi5pbmRleCA6IC0xOwp9OwoKKGZ1bmN0aW9uKCkgeyAKICAgIHRoaXMuc3RlcEJhY2t3YXJkID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kdG9rZW5JbmRleCAtPSAxOwogICAgICAgIAogICAgICAgIHdoaWxlICh0aGlzLiR0b2tlbkluZGV4IDwgMCkgewogICAgICAgICAgICB0aGlzLiRyb3cgLT0gMTsKICAgICAgICAgICAgaWYgKHRoaXMuJHJvdyA8IDApIHsKICAgICAgICAgICAgICAgIHRoaXMuJHJvdyA9IDA7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHRoaXMuJHJvd1Rva2VucyA9IHRoaXMuJHNlc3Npb24uZ2V0VG9rZW5zKHRoaXMuJHJvdyk7CiAgICAgICAgICAgIHRoaXMuJHRva2VuSW5kZXggPSB0aGlzLiRyb3dUb2tlbnMubGVuZ3RoIC0gMTsKICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgIHJldHVybiB0aGlzLiRyb3dUb2tlbnNbdGhpcy4kdG9rZW5JbmRleF07CiAgICB9OyAgIAogICAgdGhpcy5zdGVwRm9yd2FyZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciByb3dDb3VudCA9IHRoaXMuJHNlc3Npb24uZ2V0TGVuZ3RoKCk7CiAgICAgICAgdGhpcy4kdG9rZW5JbmRleCArPSAxOwogICAgICAgIAogICAgICAgIHdoaWxlICh0aGlzLiR0b2tlbkluZGV4ID49IHRoaXMuJHJvd1Rva2Vucy5sZW5ndGgpIHsKICAgICAgICAgICAgdGhpcy4kcm93ICs9IDE7CiAgICAgICAgICAgIGlmICh0aGlzLiRyb3cgPj0gcm93Q291bnQpIHsKICAgICAgICAgICAgICAgIHRoaXMuJHJvdyA9IHJvd0NvdW50IC0gMTsKICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLiRyb3dUb2tlbnMgPSB0aGlzLiRzZXNzaW9uLmdldFRva2Vucyh0aGlzLiRyb3cpOwogICAgICAgICAgICB0aGlzLiR0b2tlbkluZGV4ID0gMDsKICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgIHJldHVybiB0aGlzLiRyb3dUb2tlbnNbdGhpcy4kdG9rZW5JbmRleF07CiAgICB9OyAgICAgIAogICAgdGhpcy5nZXRDdXJyZW50VG9rZW4gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHJvd1Rva2Vuc1t0aGlzLiR0b2tlbkluZGV4XTsKICAgIH07ICAgICAgCiAgICB0aGlzLmdldEN1cnJlbnRUb2tlblJvdyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kcm93OwogICAgfTsgICAgIAogICAgdGhpcy5nZXRDdXJyZW50VG9rZW5Db2x1bW4gPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgcm93VG9rZW5zID0gdGhpcy4kcm93VG9rZW5zOwogICAgICAgIHZhciB0b2tlbkluZGV4ID0gdGhpcy4kdG9rZW5JbmRleDsKICAgICAgICB2YXIgY29sdW1uID0gcm93VG9rZW5zW3Rva2VuSW5kZXhdLnN0YXJ0OwogICAgICAgIGlmIChjb2x1bW4gIT09IHVuZGVmaW5lZCkKICAgICAgICAgICAgcmV0dXJuIGNvbHVtbjsKICAgICAgICAgICAgCiAgICAgICAgY29sdW1uID0gMDsKICAgICAgICB3aGlsZSAodG9rZW5JbmRleCA+IDApIHsKICAgICAgICAgICAgdG9rZW5JbmRleCAtPSAxOwogICAgICAgICAgICBjb2x1bW4gKz0gcm93VG9rZW5zW3Rva2VuSW5kZXhdLnZhbHVlLmxlbmd0aDsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgcmV0dXJuIGNvbHVtbjsgIAogICAgfTsKICAgICAgICAgICAgCn0pLmNhbGwoVG9rZW5JdGVyYXRvci5wcm90b3R5cGUpOwoKZXhwb3J0cy5Ub2tlbkl0ZXJhdG9yID0gVG9rZW5JdGVyYXRvcjsKfSk7CgphY2UuZGVmaW5lKCdhY2UvZWRpdF9zZXNzaW9uL2JyYWNrZXRfbWF0Y2gnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS90b2tlbl9pdGVyYXRvcicsICdhY2UvcmFuZ2UnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIFRva2VuSXRlcmF0b3IgPSByZXF1aXJlKCIuLi90b2tlbl9pdGVyYXRvciIpLlRva2VuSXRlcmF0b3I7CnZhciBSYW5nZSA9IHJlcXVpcmUoIi4uL3JhbmdlIikuUmFuZ2U7CgoKZnVuY3Rpb24gQnJhY2tldE1hdGNoKCkgewoKICAgIHRoaXMuZmluZE1hdGNoaW5nQnJhY2tldCA9IGZ1bmN0aW9uKHBvc2l0aW9uLCBjaGFyKSB7CiAgICAgICAgaWYgKHBvc2l0aW9uLmNvbHVtbiA9PSAwKSByZXR1cm4gbnVsbDsKCiAgICAgICAgdmFyIGNoYXJCZWZvcmVDdXJzb3IgPSBjaGFyIHx8IHRoaXMuZ2V0TGluZShwb3NpdGlvbi5yb3cpLmNoYXJBdChwb3NpdGlvbi5jb2x1bW4tMSk7CiAgICAgICAgaWYgKGNoYXJCZWZvcmVDdXJzb3IgPT0gIiIpIHJldHVybiBudWxsOwoKICAgICAgICB2YXIgbWF0Y2ggPSBjaGFyQmVmb3JlQ3Vyc29yLm1hdGNoKC8oW1woXFtce10pfChbXClcXVx9XSkvKTsKICAgICAgICBpZiAoIW1hdGNoKQogICAgICAgICAgICByZXR1cm4gbnVsbDsKCiAgICAgICAgaWYgKG1hdGNoWzFdKQogICAgICAgICAgICByZXR1cm4gdGhpcy4kZmluZENsb3NpbmdCcmFja2V0KG1hdGNoWzFdLCBwb3NpdGlvbik7CiAgICAgICAgZWxzZQogICAgICAgICAgICByZXR1cm4gdGhpcy4kZmluZE9wZW5pbmdCcmFja2V0KG1hdGNoWzJdLCBwb3NpdGlvbik7CiAgICB9OwogICAgCiAgICB0aGlzLmdldEJyYWNrZXRSYW5nZSA9IGZ1bmN0aW9uKHBvcykgewogICAgICAgIHZhciBsaW5lID0gdGhpcy5nZXRMaW5lKHBvcy5yb3cpOwogICAgICAgIHZhciBiZWZvcmUgPSB0cnVlLCByYW5nZTsKCiAgICAgICAgdmFyIGNociA9IGxpbmUuY2hhckF0KHBvcy5jb2x1bW4tMSk7CiAgICAgICAgdmFyIG1hdGNoID0gY2hyICYmIGNoci5tYXRjaCgvKFtcKFxbXHtdKXwoW1wpXF1cfV0pLyk7CiAgICAgICAgaWYgKCFtYXRjaCkgewogICAgICAgICAgICBjaHIgPSBsaW5lLmNoYXJBdChwb3MuY29sdW1uKTsKICAgICAgICAgICAgcG9zID0ge3JvdzogcG9zLnJvdywgY29sdW1uOiBwb3MuY29sdW1uICsgMX07CiAgICAgICAgICAgIG1hdGNoID0gY2hyICYmIGNoci5tYXRjaCgvKFtcKFxbXHtdKXwoW1wpXF1cfV0pLyk7CiAgICAgICAgICAgIGJlZm9yZSA9IGZhbHNlOwogICAgICAgIH0KICAgICAgICBpZiAoIW1hdGNoKQogICAgICAgICAgICByZXR1cm4gbnVsbDsKCiAgICAgICAgaWYgKG1hdGNoWzFdKSB7CiAgICAgICAgICAgIHZhciBicmFja2V0UG9zID0gdGhpcy4kZmluZENsb3NpbmdCcmFja2V0KG1hdGNoWzFdLCBwb3MpOwogICAgICAgICAgICBpZiAoIWJyYWNrZXRQb3MpCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgcmFuZ2UgPSBSYW5nZS5mcm9tUG9pbnRzKHBvcywgYnJhY2tldFBvcyk7CiAgICAgICAgICAgIGlmICghYmVmb3JlKSB7CiAgICAgICAgICAgICAgICByYW5nZS5lbmQuY29sdW1uKys7CiAgICAgICAgICAgICAgICByYW5nZS5zdGFydC5jb2x1bW4tLTsKICAgICAgICAgICAgfQogICAgICAgICAgICByYW5nZS5jdXJzb3IgPSByYW5nZS5lbmQ7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIGJyYWNrZXRQb3MgPSB0aGlzLiRmaW5kT3BlbmluZ0JyYWNrZXQobWF0Y2hbMl0sIHBvcyk7CiAgICAgICAgICAgIGlmICghYnJhY2tldFBvcykKICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICByYW5nZSA9IFJhbmdlLmZyb21Qb2ludHMoYnJhY2tldFBvcywgcG9zKTsKICAgICAgICAgICAgaWYgKCFiZWZvcmUpIHsKICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0LmNvbHVtbisrOwogICAgICAgICAgICAgICAgcmFuZ2UuZW5kLmNvbHVtbi0tOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJhbmdlLmN1cnNvciA9IHJhbmdlLnN0YXJ0OwogICAgICAgIH0KICAgICAgICAKICAgICAgICByZXR1cm4gcmFuZ2U7CiAgICB9OwoKICAgIHRoaXMuJGJyYWNrZXRzID0gewogICAgICAgICIpIjogIigiLAogICAgICAgICIoIjogIikiLAogICAgICAgICJdIjogIlsiLAogICAgICAgICJbIjogIl0iLAogICAgICAgICJ7IjogIn0iLAogICAgICAgICJ9IjogInsiCiAgICB9OwoKICAgIHRoaXMuJGZpbmRPcGVuaW5nQnJhY2tldCA9IGZ1bmN0aW9uKGJyYWNrZXQsIHBvc2l0aW9uLCB0eXBlUmUpIHsKICAgICAgICB2YXIgb3BlbkJyYWNrZXQgPSB0aGlzLiRicmFja2V0c1ticmFja2V0XTsKICAgICAgICB2YXIgZGVwdGggPSAxOwoKICAgICAgICB2YXIgaXRlcmF0b3IgPSBuZXcgVG9rZW5JdGVyYXRvcih0aGlzLCBwb3NpdGlvbi5yb3csIHBvc2l0aW9uLmNvbHVtbik7CiAgICAgICAgdmFyIHRva2VuID0gaXRlcmF0b3IuZ2V0Q3VycmVudFRva2VuKCk7CiAgICAgICAgaWYgKCF0b2tlbikKICAgICAgICAgICAgdG9rZW4gPSBpdGVyYXRvci5zdGVwRm9yd2FyZCgpOwogICAgICAgIGlmICghdG9rZW4pCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAKICAgICAgICAgaWYgKCF0eXBlUmUpewogICAgICAgICAgICB0eXBlUmUgPSBuZXcgUmVnRXhwKAogICAgICAgICAgICAgICAgIihcXC4/IiArCiAgICAgICAgICAgICAgICB0b2tlbi50eXBlLnJlcGxhY2UoIi4iLCAiXFwuIikucmVwbGFjZSgicnBhcmVuIiwgIi5wYXJlbiIpCiAgICAgICAgICAgICAgICArICIpKyIKICAgICAgICAgICAgKTsKICAgICAgICB9CiAgICAgICAgdmFyIHZhbHVlSW5kZXggPSBwb3NpdGlvbi5jb2x1bW4gLSBpdGVyYXRvci5nZXRDdXJyZW50VG9rZW5Db2x1bW4oKSAtIDI7CiAgICAgICAgdmFyIHZhbHVlID0gdG9rZW4udmFsdWU7CiAgICAgICAgCiAgICAgICAgd2hpbGUgKHRydWUpIHsKICAgICAgICAKICAgICAgICAgICAgd2hpbGUgKHZhbHVlSW5kZXggPj0gMCkgewogICAgICAgICAgICAgICAgdmFyIGNociA9IHZhbHVlLmNoYXJBdCh2YWx1ZUluZGV4KTsKICAgICAgICAgICAgICAgIGlmIChjaHIgPT0gb3BlbkJyYWNrZXQpIHsKICAgICAgICAgICAgICAgICAgICBkZXB0aCAtPSAxOwogICAgICAgICAgICAgICAgICAgIGlmIChkZXB0aCA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7cm93OiBpdGVyYXRvci5nZXRDdXJyZW50VG9rZW5Sb3coKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbjogdmFsdWVJbmRleCArIGl0ZXJhdG9yLmdldEN1cnJlbnRUb2tlbkNvbHVtbigpfTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIGlmIChjaHIgPT0gYnJhY2tldCkgewogICAgICAgICAgICAgICAgICAgIGRlcHRoICs9IDE7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB2YWx1ZUluZGV4IC09IDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZG8gewogICAgICAgICAgICAgICAgdG9rZW4gPSBpdGVyYXRvci5zdGVwQmFja3dhcmQoKTsKICAgICAgICAgICAgfSB3aGlsZSAodG9rZW4gJiYgIXR5cGVSZS50ZXN0KHRva2VuLnR5cGUpKTsKCiAgICAgICAgICAgIGlmICh0b2tlbiA9PSBudWxsKQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgdmFsdWUgPSB0b2tlbi52YWx1ZTsKICAgICAgICAgICAgdmFsdWVJbmRleCA9IHZhbHVlLmxlbmd0aCAtIDE7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiBudWxsOwogICAgfTsKCiAgICB0aGlzLiRmaW5kQ2xvc2luZ0JyYWNrZXQgPSBmdW5jdGlvbihicmFja2V0LCBwb3NpdGlvbiwgdHlwZVJlKSB7CiAgICAgICAgdmFyIGNsb3NpbmdCcmFja2V0ID0gdGhpcy4kYnJhY2tldHNbYnJhY2tldF07CiAgICAgICAgdmFyIGRlcHRoID0gMTsKCiAgICAgICAgdmFyIGl0ZXJhdG9yID0gbmV3IFRva2VuSXRlcmF0b3IodGhpcywgcG9zaXRpb24ucm93LCBwb3NpdGlvbi5jb2x1bW4pOwogICAgICAgIHZhciB0b2tlbiA9IGl0ZXJhdG9yLmdldEN1cnJlbnRUb2tlbigpOwogICAgICAgIGlmICghdG9rZW4pCiAgICAgICAgICAgIHRva2VuID0gaXRlcmF0b3Iuc3RlcEZvcndhcmQoKTsKICAgICAgICBpZiAoIXRva2VuKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIGlmICghdHlwZVJlKXsKICAgICAgICAgICAgdHlwZVJlID0gbmV3IFJlZ0V4cCgKICAgICAgICAgICAgICAgICIoXFwuPyIgKwogICAgICAgICAgICAgICAgdG9rZW4udHlwZS5yZXBsYWNlKCIuIiwgIlxcLiIpLnJlcGxhY2UoImxwYXJlbiIsICIucGFyZW4iKQogICAgICAgICAgICAgICAgKyAiKSsiCiAgICAgICAgICAgICk7CiAgICAgICAgfQogICAgICAgIHZhciB2YWx1ZUluZGV4ID0gcG9zaXRpb24uY29sdW1uIC0gaXRlcmF0b3IuZ2V0Q3VycmVudFRva2VuQ29sdW1uKCk7CgogICAgICAgIHdoaWxlICh0cnVlKSB7CgogICAgICAgICAgICB2YXIgdmFsdWUgPSB0b2tlbi52YWx1ZTsKICAgICAgICAgICAgdmFyIHZhbHVlTGVuZ3RoID0gdmFsdWUubGVuZ3RoOwogICAgICAgICAgICB3aGlsZSAodmFsdWVJbmRleCA8IHZhbHVlTGVuZ3RoKSB7CiAgICAgICAgICAgICAgICB2YXIgY2hyID0gdmFsdWUuY2hhckF0KHZhbHVlSW5kZXgpOwogICAgICAgICAgICAgICAgaWYgKGNociA9PSBjbG9zaW5nQnJhY2tldCkgewogICAgICAgICAgICAgICAgICAgIGRlcHRoIC09IDE7CiAgICAgICAgICAgICAgICAgICAgaWYgKGRlcHRoID09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtyb3c6IGl0ZXJhdG9yLmdldEN1cnJlbnRUb2tlblJvdygpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uOiB2YWx1ZUluZGV4ICsgaXRlcmF0b3IuZ2V0Q3VycmVudFRva2VuQ29sdW1uKCl9OwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNociA9PSBicmFja2V0KSB7CiAgICAgICAgICAgICAgICAgICAgZGVwdGggKz0gMTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHZhbHVlSW5kZXggKz0gMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBkbyB7CiAgICAgICAgICAgICAgICB0b2tlbiA9IGl0ZXJhdG9yLnN0ZXBGb3J3YXJkKCk7CiAgICAgICAgICAgIH0gd2hpbGUgKHRva2VuICYmICF0eXBlUmUudGVzdCh0b2tlbi50eXBlKSk7CgogICAgICAgICAgICBpZiAodG9rZW4gPT0gbnVsbCkKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgdmFsdWVJbmRleCA9IDA7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiBudWxsOwogICAgfTsKfQpleHBvcnRzLkJyYWNrZXRNYXRjaCA9IEJyYWNrZXRNYXRjaDsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL3NlYXJjaCcsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9sYW5nJywgJ2FjZS9saWIvb29wJywgJ2FjZS9yYW5nZSddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgbGFuZyA9IHJlcXVpcmUoIi4vbGliL2xhbmciKTsKdmFyIG9vcCA9IHJlcXVpcmUoIi4vbGliL29vcCIpOwp2YXIgUmFuZ2UgPSByZXF1aXJlKCIuL3JhbmdlIikuUmFuZ2U7Cgp2YXIgU2VhcmNoID0gZnVuY3Rpb24oKSB7CiAgICB0aGlzLiRvcHRpb25zID0ge307Cn07CgooZnVuY3Rpb24oKSB7CiAgICB0aGlzLnNldCA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsKICAgICAgICBvb3AubWl4aW4odGhpcy4kb3B0aW9ucywgb3B0aW9ucyk7CiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICB9OwogICAgdGhpcy5nZXRPcHRpb25zID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIGxhbmcuY29weU9iamVjdCh0aGlzLiRvcHRpb25zKTsKICAgIH07CiAgICB0aGlzLnNldE9wdGlvbnMgPSBmdW5jdGlvbihvcHRpb25zKSB7CiAgICAgICAgdGhpcy4kb3B0aW9ucyA9IG9wdGlvbnM7CiAgICB9OwogICAgdGhpcy5maW5kID0gZnVuY3Rpb24oc2Vzc2lvbikgewogICAgICAgIHZhciBpdGVyYXRvciA9IHRoaXMuJG1hdGNoSXRlcmF0b3Ioc2Vzc2lvbiwgdGhpcy4kb3B0aW9ucyk7CgogICAgICAgIGlmICghaXRlcmF0b3IpCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKCiAgICAgICAgdmFyIGZpcnN0UmFuZ2UgPSBudWxsOwogICAgICAgIGl0ZXJhdG9yLmZvckVhY2goZnVuY3Rpb24ocmFuZ2UsIHJvdywgb2Zmc2V0KSB7CiAgICAgICAgICAgIGlmICghcmFuZ2Uuc3RhcnQpIHsKICAgICAgICAgICAgICAgIHZhciBjb2x1bW4gPSByYW5nZS5vZmZzZXQgKyAob2Zmc2V0IHx8IDApOwogICAgICAgICAgICAgICAgZmlyc3RSYW5nZSA9IG5ldyBSYW5nZShyb3csIGNvbHVtbiwgcm93LCBjb2x1bW4rcmFuZ2UubGVuZ3RoKTsKICAgICAgICAgICAgfSBlbHNlCiAgICAgICAgICAgICAgICBmaXJzdFJhbmdlID0gcmFuZ2U7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gZmlyc3RSYW5nZTsKICAgIH07CiAgICB0aGlzLmZpbmRBbGwgPSBmdW5jdGlvbihzZXNzaW9uKSB7CiAgICAgICAgdmFyIG9wdGlvbnMgPSB0aGlzLiRvcHRpb25zOwogICAgICAgIGlmICghb3B0aW9ucy5uZWVkbGUpCiAgICAgICAgICAgIHJldHVybiBbXTsKICAgICAgICB0aGlzLiRhc3NlbWJsZVJlZ0V4cChvcHRpb25zKTsKCiAgICAgICAgdmFyIHJhbmdlID0gb3B0aW9ucy5yYW5nZTsKICAgICAgICB2YXIgbGluZXMgPSByYW5nZQogICAgICAgICAgICA/IHNlc3Npb24uZ2V0TGluZXMocmFuZ2Uuc3RhcnQucm93LCByYW5nZS5lbmQucm93KQogICAgICAgICAgICA6IHNlc3Npb24uZG9jLmdldEFsbExpbmVzKCk7CgogICAgICAgIHZhciByYW5nZXMgPSBbXTsKICAgICAgICB2YXIgcmUgPSBvcHRpb25zLnJlOwogICAgICAgIGlmIChvcHRpb25zLiRpc011bHRpTGluZSkgewogICAgICAgICAgICB2YXIgbGVuID0gcmUubGVuZ3RoOwogICAgICAgICAgICB2YXIgbWF4Um93ID0gbGluZXMubGVuZ3RoIC0gbGVuOwogICAgICAgICAgICBmb3IgKHZhciByb3cgPSByZS5vZmZzZXQgfHwgMDsgcm93IDw9IG1heFJvdzsgcm93KyspIHsKICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbGVuOyBqKyspCiAgICAgICAgICAgICAgICAgICAgaWYgKGxpbmVzW3JvdyArIGpdLnNlYXJjaChyZVtqXSkgPT0gLTEpCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgc3RhcnRMaW5lID0gbGluZXNbcm93XTsKICAgICAgICAgICAgICAgIHZhciBsaW5lID0gbGluZXNbcm93ICsgbGVuIC0gMV07CiAgICAgICAgICAgICAgICB2YXIgc3RhcnRJbmRleCA9IHN0YXJ0TGluZS5tYXRjaChyZVswXSlbMF0ubGVuZ3RoOwogICAgICAgICAgICAgICAgdmFyIGVuZEluZGV4ID0gbGluZS5tYXRjaChyZVtsZW4gLSAxXSlbMF0ubGVuZ3RoOwoKICAgICAgICAgICAgICAgIHJhbmdlcy5wdXNoKG5ldyBSYW5nZSgKICAgICAgICAgICAgICAgICAgICByb3csIHN0YXJ0TGluZS5sZW5ndGggLSBzdGFydEluZGV4LAogICAgICAgICAgICAgICAgICAgIHJvdyArIGxlbiAtIDEsIGVuZEluZGV4CiAgICAgICAgICAgICAgICApKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIHZhciBtYXRjaGVzID0gbGFuZy5nZXRNYXRjaE9mZnNldHMobGluZXNbaV0sIHJlKTsKICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbWF0Y2hlcy5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaCA9IG1hdGNoZXNbal07CiAgICAgICAgICAgICAgICAgICAgcmFuZ2VzLnB1c2gobmV3IFJhbmdlKGksIG1hdGNoLm9mZnNldCwgaSwgbWF0Y2gub2Zmc2V0ICsgbWF0Y2gubGVuZ3RoKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChyYW5nZSkgewogICAgICAgICAgICB2YXIgc3RhcnRDb2x1bW4gPSByYW5nZS5zdGFydC5jb2x1bW47CiAgICAgICAgICAgIHZhciBlbmRDb2x1bW4gPSByYW5nZS5zdGFydC5jb2x1bW47CiAgICAgICAgICAgIHZhciBpID0gMCwgaiA9IHJhbmdlcy5sZW5ndGggLSAxOwogICAgICAgICAgICB3aGlsZSAoaSA8IGogJiYgcmFuZ2VzW2ldLnN0YXJ0LmNvbHVtbiA8IHN0YXJ0Q29sdW1uICYmIHJhbmdlc1tpXS5zdGFydC5yb3cgPT0gcmFuZ2Uuc3RhcnQucm93KQogICAgICAgICAgICAgICAgaSsrOwoKICAgICAgICAgICAgd2hpbGUgKGkgPCBqICYmIHJhbmdlc1tqXS5lbmQuY29sdW1uID4gZW5kQ29sdW1uICYmIHJhbmdlc1tqXS5lbmQucm93ID09IHJhbmdlLmVuZC5yb3cpCiAgICAgICAgICAgICAgICBqLS07CiAgICAgICAgICAgIHJldHVybiByYW5nZXMuc2xpY2UoaSwgaiArIDEpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJhbmdlczsKICAgIH07CiAgICB0aGlzLnJlcGxhY2UgPSBmdW5jdGlvbihpbnB1dCwgcmVwbGFjZW1lbnQpIHsKICAgICAgICB2YXIgb3B0aW9ucyA9IHRoaXMuJG9wdGlvbnM7CgogICAgICAgIHZhciByZSA9IHRoaXMuJGFzc2VtYmxlUmVnRXhwKG9wdGlvbnMpOwogICAgICAgIGlmIChvcHRpb25zLiRpc011bHRpTGluZSkKICAgICAgICAgICAgcmV0dXJuIHJlcGxhY2VtZW50OwoKICAgICAgICBpZiAoIXJlKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIHZhciBtYXRjaCA9IHJlLmV4ZWMoaW5wdXQpOwogICAgICAgIGlmICghbWF0Y2ggfHwgbWF0Y2hbMF0ubGVuZ3RoICE9IGlucHV0Lmxlbmd0aCkKICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgCiAgICAgICAgcmVwbGFjZW1lbnQgPSBpbnB1dC5yZXBsYWNlKHJlLCByZXBsYWNlbWVudCk7CiAgICAgICAgaWYgKG9wdGlvbnMucHJlc2VydmVDYXNlKSB7CiAgICAgICAgICAgIHJlcGxhY2VtZW50ID0gcmVwbGFjZW1lbnQuc3BsaXQoIiIpOwogICAgICAgICAgICBmb3IgKHZhciBpID0gTWF0aC5taW4oaW5wdXQubGVuZ3RoLCBpbnB1dC5sZW5ndGgpOyBpLS07ICkgewogICAgICAgICAgICAgICAgdmFyIGNoID0gaW5wdXRbaV07CiAgICAgICAgICAgICAgICBpZiAoY2ggJiYgY2gudG9Mb3dlckNhc2UoKSAhPSBjaCkKICAgICAgICAgICAgICAgICAgICByZXBsYWNlbWVudFtpXSA9IHJlcGxhY2VtZW50W2ldLnRvVXBwZXJDYXNlKCk7CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgcmVwbGFjZW1lbnRbaV0gPSByZXBsYWNlbWVudFtpXS50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJlcGxhY2VtZW50ID0gcmVwbGFjZW1lbnQuam9pbigiIik7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiByZXBsYWNlbWVudDsKICAgIH07CgogICAgdGhpcy4kbWF0Y2hJdGVyYXRvciA9IGZ1bmN0aW9uKHNlc3Npb24sIG9wdGlvbnMpIHsKICAgICAgICB2YXIgcmUgPSB0aGlzLiRhc3NlbWJsZVJlZ0V4cChvcHRpb25zKTsKICAgICAgICBpZiAoIXJlKQogICAgICAgICAgICByZXR1cm4gZmFsc2U7CgogICAgICAgIHZhciBzZWxmID0gdGhpcywgY2FsbGJhY2ssIGJhY2t3YXJkcyA9IG9wdGlvbnMuYmFja3dhcmRzOwoKICAgICAgICBpZiAob3B0aW9ucy4kaXNNdWx0aUxpbmUpIHsKICAgICAgICAgICAgdmFyIGxlbiA9IHJlLmxlbmd0aDsKICAgICAgICAgICAgdmFyIG1hdGNoSXRlcmF0b3IgPSBmdW5jdGlvbihsaW5lLCByb3csIG9mZnNldCkgewogICAgICAgICAgICAgICAgdmFyIHN0YXJ0SW5kZXggPSBsaW5lLnNlYXJjaChyZVswXSk7CiAgICAgICAgICAgICAgICBpZiAoc3RhcnRJbmRleCA9PSAtMSkKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgbGluZSA9IHNlc3Npb24uZ2V0TGluZShyb3cgKyBpKTsKICAgICAgICAgICAgICAgICAgICBpZiAobGluZS5zZWFyY2gocmVbaV0pID09IC0xKQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdmFyIGVuZEluZGV4ID0gbGluZS5tYXRjaChyZVtsZW4gLSAxXSlbMF0ubGVuZ3RoOwoKICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IG5ldyBSYW5nZShyb3csIHN0YXJ0SW5kZXgsIHJvdyArIGxlbiAtIDEsIGVuZEluZGV4KTsKICAgICAgICAgICAgICAgIGlmIChyZS5vZmZzZXQgPT0gMSkgewogICAgICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0LnJvdy0tOwogICAgICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0LmNvbHVtbiA9IE51bWJlci5NQVhfVkFMVUU7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG9mZnNldCkKICAgICAgICAgICAgICAgICAgICByYW5nZS5zdGFydC5jb2x1bW4gKz0gb2Zmc2V0OwoKICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayhyYW5nZSkpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH07CiAgICAgICAgfSBlbHNlIGlmIChiYWNrd2FyZHMpIHsKICAgICAgICAgICAgdmFyIG1hdGNoSXRlcmF0b3IgPSBmdW5jdGlvbihsaW5lLCByb3csIHN0YXJ0SW5kZXgpIHsKICAgICAgICAgICAgICAgIHZhciBtYXRjaGVzID0gbGFuZy5nZXRNYXRjaE9mZnNldHMobGluZSwgcmUpOwogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IG1hdGNoZXMubGVuZ3RoLTE7IGkgPj0gMDsgaS0tKQogICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayhtYXRjaGVzW2ldLCByb3csIHN0YXJ0SW5kZXgpKQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgbWF0Y2hJdGVyYXRvciA9IGZ1bmN0aW9uKGxpbmUsIHJvdywgc3RhcnRJbmRleCkgewogICAgICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBsYW5nLmdldE1hdGNoT2Zmc2V0cyhsaW5lLCByZSk7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1hdGNoZXMubGVuZ3RoOyBpKyspCiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKG1hdGNoZXNbaV0sIHJvdywgc3RhcnRJbmRleCkpCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9OwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZm9yRWFjaDogZnVuY3Rpb24oX2NhbGxiYWNrKSB7CiAgICAgICAgICAgICAgICBjYWxsYmFjayA9IF9jYWxsYmFjazsKICAgICAgICAgICAgICAgIHNlbGYuJGxpbmVJdGVyYXRvcihzZXNzaW9uLCBvcHRpb25zKS5mb3JFYWNoKG1hdGNoSXRlcmF0b3IpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgIH07CgogICAgdGhpcy4kYXNzZW1ibGVSZWdFeHAgPSBmdW5jdGlvbihvcHRpb25zKSB7CiAgICAgICAgaWYgKG9wdGlvbnMubmVlZGxlIGluc3RhbmNlb2YgUmVnRXhwKQogICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5yZSA9IG9wdGlvbnMubmVlZGxlOwoKICAgICAgICB2YXIgbmVlZGxlID0gb3B0aW9ucy5uZWVkbGU7CgogICAgICAgIGlmICghb3B0aW9ucy5uZWVkbGUpCiAgICAgICAgICAgIHJldHVybiBvcHRpb25zLnJlID0gZmFsc2U7CgogICAgICAgIGlmICghb3B0aW9ucy5yZWdFeHApCiAgICAgICAgICAgIG5lZWRsZSA9IGxhbmcuZXNjYXBlUmVnRXhwKG5lZWRsZSk7CgogICAgICAgIGlmIChvcHRpb25zLndob2xlV29yZCkKICAgICAgICAgICAgbmVlZGxlID0gIlxcYiIgKyBuZWVkbGUgKyAiXFxiIjsKCiAgICAgICAgdmFyIG1vZGlmaWVyID0gb3B0aW9ucy5jYXNlU2Vuc2l0aXZlID8gImciIDogImdpIjsKCiAgICAgICAgb3B0aW9ucy4kaXNNdWx0aUxpbmUgPSAvW1xuXHJdLy50ZXN0KG5lZWRsZSk7CiAgICAgICAgaWYgKG9wdGlvbnMuJGlzTXVsdGlMaW5lKQogICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5yZSA9IHRoaXMuJGFzc2VtYmxlTXVsdGlsaW5lUmVnRXhwKG5lZWRsZSwgbW9kaWZpZXIpOwoKICAgICAgICB0cnkgewogICAgICAgICAgICB2YXIgcmUgPSBuZXcgUmVnRXhwKG5lZWRsZSwgbW9kaWZpZXIpOwogICAgICAgIH0gY2F0Y2goZSkgewogICAgICAgICAgICByZSA9IGZhbHNlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gb3B0aW9ucy5yZSA9IHJlOwogICAgfTsKCiAgICB0aGlzLiRhc3NlbWJsZU11bHRpbGluZVJlZ0V4cCA9IGZ1bmN0aW9uKG5lZWRsZSwgbW9kaWZpZXIpIHsKICAgICAgICB2YXIgcGFydHMgPSBuZWVkbGUucmVwbGFjZSgvXHJcbnxccnxcbi9nLCAiJFxuXiIpLnNwbGl0KCJcbiIpOwogICAgICAgIHZhciByZSA9IFtdOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHRyeSB7CiAgICAgICAgICAgIHJlLnB1c2gobmV3IFJlZ0V4cChwYXJ0c1tpXSwgbW9kaWZpZXIpKTsKICAgICAgICB9IGNhdGNoKGUpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBpZiAocGFydHNbMF0gPT0gIiIpIHsKICAgICAgICAgICAgcmUuc2hpZnQoKTsKICAgICAgICAgICAgcmUub2Zmc2V0ID0gMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZS5vZmZzZXQgPSAwOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmU7CiAgICB9OwoKICAgIHRoaXMuJGxpbmVJdGVyYXRvciA9IGZ1bmN0aW9uKHNlc3Npb24sIG9wdGlvbnMpIHsKICAgICAgICB2YXIgYmFja3dhcmRzID0gb3B0aW9ucy5iYWNrd2FyZHMgPT0gdHJ1ZTsKICAgICAgICB2YXIgc2tpcEN1cnJlbnQgPSBvcHRpb25zLnNraXBDdXJyZW50ICE9IGZhbHNlOwoKICAgICAgICB2YXIgcmFuZ2UgPSBvcHRpb25zLnJhbmdlOwogICAgICAgIHZhciBzdGFydCA9IG9wdGlvbnMuc3RhcnQ7CiAgICAgICAgaWYgKCFzdGFydCkKICAgICAgICAgICAgc3RhcnQgPSByYW5nZSA/IHJhbmdlW2JhY2t3YXJkcyA/ICJlbmQiIDogInN0YXJ0Il0gOiBzZXNzaW9uLnNlbGVjdGlvbi5nZXRSYW5nZSgpOwogICAgICAgICAKICAgICAgICBpZiAoc3RhcnQuc3RhcnQpCiAgICAgICAgICAgIHN0YXJ0ID0gc3RhcnRbc2tpcEN1cnJlbnQgIT0gYmFja3dhcmRzID8gImVuZCIgOiAic3RhcnQiXTsKCiAgICAgICAgdmFyIGZpcnN0Um93ID0gcmFuZ2UgPyByYW5nZS5zdGFydC5yb3cgOiAwOwogICAgICAgIHZhciBsYXN0Um93ID0gcmFuZ2UgPyByYW5nZS5lbmQucm93IDogc2Vzc2lvbi5nZXRMZW5ndGgoKSAtIDE7CgogICAgICAgIHZhciBmb3JFYWNoID0gYmFja3dhcmRzID8gZnVuY3Rpb24oY2FsbGJhY2spIHsKICAgICAgICAgICAgICAgIHZhciByb3cgPSBzdGFydC5yb3c7CgogICAgICAgICAgICAgICAgdmFyIGxpbmUgPSBzZXNzaW9uLmdldExpbmUocm93KS5zdWJzdHJpbmcoMCwgc3RhcnQuY29sdW1uKTsKICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayhsaW5lLCByb3cpKQogICAgICAgICAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgICAgICAgICBmb3IgKHJvdy0tOyByb3cgPj0gZmlyc3RSb3c7IHJvdy0tKQogICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayhzZXNzaW9uLmdldExpbmUocm93KSwgcm93KSkKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLndyYXAgPT0gZmFsc2UpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICAgICAgICAgIGZvciAocm93ID0gbGFzdFJvdywgZmlyc3RSb3cgPSBzdGFydC5yb3c7IHJvdyA+PSBmaXJzdFJvdzsgcm93LS0pCiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKHNlc3Npb24uZ2V0TGluZShyb3cpLCByb3cpKQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0gOiBmdW5jdGlvbihjYWxsYmFjaykgewogICAgICAgICAgICAgICAgdmFyIHJvdyA9IHN0YXJ0LnJvdzsKCiAgICAgICAgICAgICAgICB2YXIgbGluZSA9IHNlc3Npb24uZ2V0TGluZShyb3cpLnN1YnN0cihzdGFydC5jb2x1bW4pOwogICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKGxpbmUsIHJvdywgc3RhcnQuY29sdW1uKSkKICAgICAgICAgICAgICAgICAgICByZXR1cm47CgogICAgICAgICAgICAgICAgZm9yIChyb3cgPSByb3crMTsgcm93IDw9IGxhc3RSb3c7IHJvdysrKQogICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayhzZXNzaW9uLmdldExpbmUocm93KSwgcm93KSkKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLndyYXAgPT0gZmFsc2UpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICAgICAgICAgIGZvciAocm93ID0gZmlyc3RSb3csIGxhc3RSb3cgPSBzdGFydC5yb3c7IHJvdyA8PSBsYXN0Um93OyByb3crKykKICAgICAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2soc2Vzc2lvbi5nZXRMaW5lKHJvdyksIHJvdykpCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfTsKICAgICAgICAKICAgICAgICByZXR1cm4ge2ZvckVhY2g6IGZvckVhY2h9OwogICAgfTsKCn0pLmNhbGwoU2VhcmNoLnByb3RvdHlwZSk7CgpleHBvcnRzLlNlYXJjaCA9IFNlYXJjaDsKfSk7CmFjZS5kZWZpbmUoJ2FjZS9jb21tYW5kcy9jb21tYW5kX21hbmFnZXInLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvb29wJywgJ2FjZS9rZXlib2FyZC9oYXNoX2hhbmRsZXInLCAnYWNlL2xpYi9ldmVudF9lbWl0dGVyJ10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBvb3AgPSByZXF1aXJlKCIuLi9saWIvb29wIik7CnZhciBIYXNoSGFuZGxlciA9IHJlcXVpcmUoIi4uL2tleWJvYXJkL2hhc2hfaGFuZGxlciIpLkhhc2hIYW5kbGVyOwp2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgiLi4vbGliL2V2ZW50X2VtaXR0ZXIiKS5FdmVudEVtaXR0ZXI7Cgp2YXIgQ29tbWFuZE1hbmFnZXIgPSBmdW5jdGlvbihwbGF0Zm9ybSwgY29tbWFuZHMpIHsKICAgIHRoaXMucGxhdGZvcm0gPSBwbGF0Zm9ybTsKICAgIHRoaXMuY29tbWFuZHMgPSB0aGlzLmJ5TmFtZSA9IHt9OwogICAgdGhpcy5jb21tbWFuZEtleUJpbmRpbmcgPSB7fTsKCiAgICB0aGlzLmFkZENvbW1hbmRzKGNvbW1hbmRzKTsKICAgIAogICAgdGhpcy5zZXREZWZhdWx0SGFuZGxlcigiZXhlYyIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICByZXR1cm4gZS5jb21tYW5kLmV4ZWMoZS5lZGl0b3IsIGUuYXJncyB8fCB7fSk7CiAgICB9KTsKfTsKCm9vcC5pbmhlcml0cyhDb21tYW5kTWFuYWdlciwgSGFzaEhhbmRsZXIpOwoKKGZ1bmN0aW9uKCkgewoKICAgIG9vcC5pbXBsZW1lbnQodGhpcywgRXZlbnRFbWl0dGVyKTsKCiAgICB0aGlzLmV4ZWMgPSBmdW5jdGlvbihjb21tYW5kLCBlZGl0b3IsIGFyZ3MpIHsKICAgICAgICBpZiAodHlwZW9mIGNvbW1hbmQgPT09ICdzdHJpbmcnKQogICAgICAgICAgICBjb21tYW5kID0gdGhpcy5jb21tYW5kc1tjb21tYW5kXTsKCiAgICAgICAgaWYgKCFjb21tYW5kKQogICAgICAgICAgICByZXR1cm4gZmFsc2U7CgogICAgICAgIGlmIChlZGl0b3IgJiYgZWRpdG9yLiRyZWFkT25seSAmJiAhY29tbWFuZC5yZWFkT25seSkKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICB2YXIgcmV0dmFsdWUgPSB0aGlzLl9lbWl0KCJleGVjIiwgewogICAgICAgICAgICBlZGl0b3I6IGVkaXRvciwKICAgICAgICAgICAgY29tbWFuZDogY29tbWFuZCwKICAgICAgICAgICAgYXJnczogYXJncwogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gcmV0dmFsdWUgPT09IGZhbHNlID8gZmFsc2UgOiB0cnVlOwogICAgfTsKCiAgICB0aGlzLnRvZ2dsZVJlY29yZGluZyA9IGZ1bmN0aW9uKGVkaXRvcikgewogICAgICAgIGlmICh0aGlzLiRpblJlcGxheSkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICBlZGl0b3IgJiYgZWRpdG9yLl9lbWl0KCJjaGFuZ2VTdGF0dXMiKTsKICAgICAgICBpZiAodGhpcy5yZWNvcmRpbmcpIHsKICAgICAgICAgICAgdGhpcy5tYWNyby5wb3AoKTsKICAgICAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCJleGVjIiwgdGhpcy4kYWRkQ29tbWFuZFRvTWFjcm8pOwoKICAgICAgICAgICAgaWYgKCF0aGlzLm1hY3JvLmxlbmd0aCkKICAgICAgICAgICAgICAgIHRoaXMubWFjcm8gPSB0aGlzLm9sZE1hY3JvOwoKICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVjb3JkaW5nID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmICghdGhpcy4kYWRkQ29tbWFuZFRvTWFjcm8pIHsKICAgICAgICAgICAgdGhpcy4kYWRkQ29tbWFuZFRvTWFjcm8gPSBmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgICB0aGlzLm1hY3JvLnB1c2goW2UuY29tbWFuZCwgZS5hcmdzXSk7CiAgICAgICAgICAgIH0uYmluZCh0aGlzKTsKICAgICAgICB9CgogICAgICAgIHRoaXMub2xkTWFjcm8gPSB0aGlzLm1hY3JvOwogICAgICAgIHRoaXMubWFjcm8gPSBbXTsKICAgICAgICB0aGlzLm9uKCJleGVjIiwgdGhpcy4kYWRkQ29tbWFuZFRvTWFjcm8pOwogICAgICAgIHJldHVybiB0aGlzLnJlY29yZGluZyA9IHRydWU7CiAgICB9OwoKICAgIHRoaXMucmVwbGF5ID0gZnVuY3Rpb24oZWRpdG9yKSB7CiAgICAgICAgaWYgKHRoaXMuJGluUmVwbGF5IHx8ICF0aGlzLm1hY3JvKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIGlmICh0aGlzLnJlY29yZGluZykKICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9nZ2xlUmVjb3JkaW5nKGVkaXRvcik7CgogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHRoaXMuJGluUmVwbGF5ID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5tYWNyby5mb3JFYWNoKGZ1bmN0aW9uKHgpIHsKICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgeCA9PSAic3RyaW5nIikKICAgICAgICAgICAgICAgICAgICB0aGlzLmV4ZWMoeCwgZWRpdG9yKTsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICB0aGlzLmV4ZWMoeFswXSwgZWRpdG9yLCB4WzFdKTsKICAgICAgICAgICAgfSwgdGhpcyk7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgdGhpcy4kaW5SZXBsYXkgPSBmYWxzZTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMudHJpbU1hY3JvID0gZnVuY3Rpb24obSkgewogICAgICAgIHJldHVybiBtLm1hcChmdW5jdGlvbih4KXsKICAgICAgICAgICAgaWYgKHR5cGVvZiB4WzBdICE9ICJzdHJpbmciKQogICAgICAgICAgICAgICAgeFswXSA9IHhbMF0ubmFtZTsKICAgICAgICAgICAgaWYgKCF4WzFdKQogICAgICAgICAgICAgICAgeCA9IHhbMF07CiAgICAgICAgICAgIHJldHVybiB4OwogICAgICAgIH0pOwogICAgfTsKCn0pLmNhbGwoQ29tbWFuZE1hbmFnZXIucHJvdG90eXBlKTsKCmV4cG9ydHMuQ29tbWFuZE1hbmFnZXIgPSBDb21tYW5kTWFuYWdlcjsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL2tleWJvYXJkL2hhc2hfaGFuZGxlcicsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9rZXlzJ10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBrZXlVdGlsICA9IHJlcXVpcmUoIi4uL2xpYi9rZXlzIik7CgpmdW5jdGlvbiBIYXNoSGFuZGxlcihjb25maWcsIHBsYXRmb3JtKSB7CiAgICB0aGlzLnBsYXRmb3JtID0gcGxhdGZvcm07CiAgICB0aGlzLmNvbW1hbmRzID0ge307CiAgICB0aGlzLmNvbW1tYW5kS2V5QmluZGluZyA9IHt9OwoKICAgIHRoaXMuYWRkQ29tbWFuZHMoY29uZmlnKTsKfTsKCihmdW5jdGlvbigpIHsKCiAgICB0aGlzLmFkZENvbW1hbmQgPSBmdW5jdGlvbihjb21tYW5kKSB7CiAgICAgICAgaWYgKHRoaXMuY29tbWFuZHNbY29tbWFuZC5uYW1lXSkKICAgICAgICAgICAgdGhpcy5yZW1vdmVDb21tYW5kKGNvbW1hbmQpOwoKICAgICAgICB0aGlzLmNvbW1hbmRzW2NvbW1hbmQubmFtZV0gPSBjb21tYW5kOwoKICAgICAgICBpZiAoY29tbWFuZC5iaW5kS2V5KQogICAgICAgICAgICB0aGlzLl9idWlsZEtleUhhc2goY29tbWFuZCk7CiAgICB9OwoKICAgIHRoaXMucmVtb3ZlQ29tbWFuZCA9IGZ1bmN0aW9uKGNvbW1hbmQpIHsKICAgICAgICB2YXIgbmFtZSA9ICh0eXBlb2YgY29tbWFuZCA9PT0gJ3N0cmluZycgPyBjb21tYW5kIDogY29tbWFuZC5uYW1lKTsKICAgICAgICBjb21tYW5kID0gdGhpcy5jb21tYW5kc1tuYW1lXTsKICAgICAgICBkZWxldGUgdGhpcy5jb21tYW5kc1tuYW1lXTsKICAgICAgICB2YXIgY2tiID0gdGhpcy5jb21tbWFuZEtleUJpbmRpbmc7CiAgICAgICAgZm9yICh2YXIgaGFzaElkIGluIGNrYikgewogICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gY2tiW2hhc2hJZF0pIHsKICAgICAgICAgICAgICAgIGlmIChja2JbaGFzaElkXVtrZXldID09IGNvbW1hbmQpCiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGNrYltoYXNoSWRdW2tleV07CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuYmluZEtleSA9IGZ1bmN0aW9uKGtleSwgY29tbWFuZCkgewogICAgICAgIGlmKCFrZXkpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICBpZiAodHlwZW9mIGNvbW1hbmQgPT0gImZ1bmN0aW9uIikgewogICAgICAgICAgICB0aGlzLmFkZENvbW1hbmQoe2V4ZWM6IGNvbW1hbmQsIGJpbmRLZXk6IGtleSwgbmFtZToga2V5fSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHZhciBja2IgPSB0aGlzLmNvbW1tYW5kS2V5QmluZGluZzsKICAgICAgICBrZXkuc3BsaXQoInwiKS5mb3JFYWNoKGZ1bmN0aW9uKGtleVBhcnQpIHsKICAgICAgICAgICAgdmFyIGJpbmRpbmcgPSB0aGlzLnBhcnNlS2V5cyhrZXlQYXJ0LCBjb21tYW5kKTsKICAgICAgICAgICAgdmFyIGhhc2hJZCA9IGJpbmRpbmcuaGFzaElkOwogICAgICAgICAgICAoY2tiW2hhc2hJZF0gfHwgKGNrYltoYXNoSWRdID0ge30pKVtiaW5kaW5nLmtleV0gPSBjb21tYW5kOwogICAgICAgIH0sIHRoaXMpOwogICAgfTsKCiAgICB0aGlzLmFkZENvbW1hbmRzID0gZnVuY3Rpb24oY29tbWFuZHMpIHsKICAgICAgICBjb21tYW5kcyAmJiBPYmplY3Qua2V5cyhjb21tYW5kcykuZm9yRWFjaChmdW5jdGlvbihuYW1lKSB7CiAgICAgICAgICAgIHZhciBjb21tYW5kID0gY29tbWFuZHNbbmFtZV07CiAgICAgICAgICAgIGlmICh0eXBlb2YgY29tbWFuZCA9PT0gInN0cmluZyIpCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5iaW5kS2V5KGNvbW1hbmQsIG5hbWUpOwoKICAgICAgICAgICAgaWYgKHR5cGVvZiBjb21tYW5kID09PSAiZnVuY3Rpb24iKQogICAgICAgICAgICAgICAgY29tbWFuZCA9IHsgZXhlYzogY29tbWFuZCB9OwoKICAgICAgICAgICAgaWYgKCFjb21tYW5kLm5hbWUpCiAgICAgICAgICAgICAgICBjb21tYW5kLm5hbWUgPSBuYW1lOwoKICAgICAgICAgICAgdGhpcy5hZGRDb21tYW5kKGNvbW1hbmQpOwogICAgICAgIH0sIHRoaXMpOwogICAgfTsKCiAgICB0aGlzLnJlbW92ZUNvbW1hbmRzID0gZnVuY3Rpb24oY29tbWFuZHMpIHsKICAgICAgICBPYmplY3Qua2V5cyhjb21tYW5kcykuZm9yRWFjaChmdW5jdGlvbihuYW1lKSB7CiAgICAgICAgICAgIHRoaXMucmVtb3ZlQ29tbWFuZChjb21tYW5kc1tuYW1lXSk7CiAgICAgICAgfSwgdGhpcyk7CiAgICB9OwoKICAgIHRoaXMuYmluZEtleXMgPSBmdW5jdGlvbihrZXlMaXN0KSB7CiAgICAgICAgT2JqZWN0LmtleXMoa2V5TGlzdCkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHsKICAgICAgICAgICAgdGhpcy5iaW5kS2V5KGtleSwga2V5TGlzdFtrZXldKTsKICAgICAgICB9LCB0aGlzKTsKICAgIH07CgogICAgdGhpcy5fYnVpbGRLZXlIYXNoID0gZnVuY3Rpb24oY29tbWFuZCkgewogICAgICAgIHZhciBiaW5kaW5nID0gY29tbWFuZC5iaW5kS2V5OwogICAgICAgIGlmICghYmluZGluZykKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB2YXIga2V5ID0gdHlwZW9mIGJpbmRpbmcgPT0gInN0cmluZyIgPyBiaW5kaW5nOiBiaW5kaW5nW3RoaXMucGxhdGZvcm1dOwogICAgICAgIHRoaXMuYmluZEtleShrZXksIGNvbW1hbmQpOwogICAgfTsKICAgIHRoaXMucGFyc2VLZXlzID0gZnVuY3Rpb24oa2V5cykgewogICAgICAgIHZhciBwYXJ0cyA9IGtleXMudG9Mb3dlckNhc2UoKS5zcGxpdCgvW1wtXCtdKFtcLVwrXSk/LykuZmlsdGVyKGZ1bmN0aW9uKHgpe3JldHVybiB4fSk7CiAgICAgICAgdmFyIGtleSA9IHBhcnRzLnBvcCgpOwoKICAgICAgICB2YXIga2V5Q29kZSA9IGtleVV0aWxba2V5XTsKICAgICAgICBpZiAoa2V5VXRpbC5GVU5DVElPTl9LRVlTW2tleUNvZGVdKQogICAgICAgICAgICBrZXkgPSBrZXlVdGlsLkZVTkNUSU9OX0tFWVNba2V5Q29kZV0udG9Mb3dlckNhc2UoKTsKICAgICAgICBlbHNlIGlmICghcGFydHMubGVuZ3RoKQogICAgICAgICAgICByZXR1cm4ge2tleToga2V5LCBoYXNoSWQ6IC0xfTsKICAgICAgICBlbHNlIGlmIChwYXJ0cy5sZW5ndGggPT0gMSAmJiBwYXJ0c1swXSA9PSAic2hpZnQiKQogICAgICAgICAgICByZXR1cm4ge2tleToga2V5LnRvVXBwZXJDYXNlKCksIGhhc2hJZDogLTF9OwoKICAgICAgICB2YXIgaGFzaElkID0gMDsKICAgICAgICBmb3IgKHZhciBpID0gcGFydHMubGVuZ3RoOyBpLS07KSB7CiAgICAgICAgICAgIHZhciBtb2RpZmllciA9IGtleVV0aWwuS0VZX01PRFNbcGFydHNbaV1dOwogICAgICAgICAgICBpZiAobW9kaWZpZXIgPT0gbnVsbCkKICAgICAgICAgICAgICAgIHRocm93ICJpbnZhbGlkIG1vZGlmaWVyICIgKyBwYXJ0c1tpXSArICIgaW4gIiArIGtleXM7CiAgICAgICAgICAgIGhhc2hJZCB8PSBtb2RpZmllcjsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHtrZXk6IGtleSwgaGFzaElkOiBoYXNoSWR9OwogICAgfTsKCiAgICB0aGlzLmZpbmRLZXlDb21tYW5kID0gZnVuY3Rpb24gZmluZEtleUNvbW1hbmQoaGFzaElkLCBrZXlTdHJpbmcpIHsKICAgICAgICB2YXIgY2ticiA9IHRoaXMuY29tbW1hbmRLZXlCaW5kaW5nOwogICAgICAgIHJldHVybiBja2JyW2hhc2hJZF0gJiYgY2ticltoYXNoSWRdW2tleVN0cmluZ107CiAgICB9OwoKICAgIHRoaXMuaGFuZGxlS2V5Ym9hcmQgPSBmdW5jdGlvbihkYXRhLCBoYXNoSWQsIGtleVN0cmluZywga2V5Q29kZSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGNvbW1hbmQ6IHRoaXMuZmluZEtleUNvbW1hbmQoaGFzaElkLCBrZXlTdHJpbmcpCiAgICAgICAgfTsKICAgIH07Cgp9KS5jYWxsKEhhc2hIYW5kbGVyLnByb3RvdHlwZSkKCmV4cG9ydHMuSGFzaEhhbmRsZXIgPSBIYXNoSGFuZGxlcjsKfSk7CgphY2UuZGVmaW5lKCdhY2UvY29tbWFuZHMvZGVmYXVsdF9jb21tYW5kcycsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9sYW5nJywgJ2FjZS9jb25maWcnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIGxhbmcgPSByZXF1aXJlKCIuLi9saWIvbGFuZyIpOwp2YXIgY29uZmlnID0gcmVxdWlyZSgiLi4vY29uZmlnIik7CgpmdW5jdGlvbiBiaW5kS2V5KHdpbiwgbWFjKSB7CiAgICByZXR1cm4gewogICAgICAgIHdpbjogd2luLAogICAgICAgIG1hYzogbWFjCiAgICB9Owp9CgpleHBvcnRzLmNvbW1hbmRzID0gW3sKICAgIG5hbWU6ICJzZWxlY3RhbGwiLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1BIiwgIkNvbW1hbmQtQSIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5zZWxlY3RBbGwoKTsgfSwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJjZW50ZXJzZWxlY3Rpb24iLAogICAgYmluZEtleTogYmluZEtleShudWxsLCAiQ3RybC1MIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmNlbnRlclNlbGVjdGlvbigpOyB9LAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogImdvdG9saW5lIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtTCIsICJDb21tYW5kLUwiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgewogICAgICAgIHZhciBsaW5lID0gcGFyc2VJbnQocHJvbXB0KCJFbnRlciBsaW5lIG51bWJlcjoiKSwgMTApOwogICAgICAgIGlmICghaXNOYU4obGluZSkpIHsKICAgICAgICAgICAgZWRpdG9yLmdvdG9MaW5lKGxpbmUpOwogICAgICAgIH0KICAgIH0sCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiZm9sZCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJBbHQtTHxDdHJsLUYxIiwgIkNvbW1hbmQtQWx0LUx8Q29tbWFuZC1GMSIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5zZXNzaW9uLnRvZ2dsZUZvbGQoZmFsc2UpOyB9LAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInVuZm9sZCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJBbHQtU2hpZnQtTHxDdHJsLVNoaWZ0LUYxIiwgIkNvbW1hbmQtQWx0LVNoaWZ0LUx8Q29tbWFuZC1TaGlmdC1GMSIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5zZXNzaW9uLnRvZ2dsZUZvbGQodHJ1ZSk7IH0sCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiZm9sZGFsbCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJBbHQtMCIsICJDb21tYW5kLU9wdGlvbi0wIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnNlc3Npb24uZm9sZEFsbCgpOyB9LAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInVuZm9sZGFsbCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJBbHQtU2hpZnQtMCIsICJDb21tYW5kLU9wdGlvbi1TaGlmdC0wIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnNlc3Npb24udW5mb2xkKCk7IH0sCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiZmluZG5leHQiLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1LIiwgIkNvbW1hbmQtRyIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5maW5kTmV4dCgpOyB9LAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogImZpbmRwcmV2aW91cyIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVNoaWZ0LUsiLCAiQ29tbWFuZC1TaGlmdC1HIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmZpbmRQcmV2aW91cygpOyB9LAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogImZpbmQiLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1GIiwgIkNvbW1hbmQtRiIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7CiAgICAgICAgY29uZmlnLmxvYWRNb2R1bGUoImFjZS9leHQvc2VhcmNoYm94IiwgZnVuY3Rpb24oZSkge2UuU2VhcmNoKGVkaXRvcil9KTsKICAgIH0sCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAib3ZlcndyaXRlIiwKICAgIGJpbmRLZXk6ICJJbnNlcnQiLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci50b2dnbGVPdmVyd3JpdGUoKTsgfSwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJzZWxlY3R0b3N0YXJ0IiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtU2hpZnQtSG9tZSIsICJDb21tYW5kLVNoaWZ0LVVwIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmdldFNlbGVjdGlvbigpLnNlbGVjdEZpbGVTdGFydCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJnb3Rvc3RhcnQiLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1Ib21lIiwgIkNvbW1hbmQtSG9tZXxDb21tYW5kLVVwIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLm5hdmlnYXRlRmlsZVN0YXJ0KCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giLAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNlbGVjdHVwIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIlNoaWZ0LVVwIiwgIlNoaWZ0LVVwIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmdldFNlbGVjdGlvbigpLnNlbGVjdFVwKCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giLAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogImdvbGluZXVwIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIlVwIiwgIlVwfEN0cmwtUCIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yLCBhcmdzKSB7IGVkaXRvci5uYXZpZ2F0ZVVwKGFyZ3MudGltZXMpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJzZWxlY3R0b2VuZCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVNoaWZ0LUVuZCIsICJDb21tYW5kLVNoaWZ0LURvd24iKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuZ2V0U2VsZWN0aW9uKCkuc2VsZWN0RmlsZUVuZCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJnb3RvZW5kIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtRW5kIiwgIkNvbW1hbmQtRW5kfENvbW1hbmQtRG93biIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5uYXZpZ2F0ZUZpbGVFbmQoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIsCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAic2VsZWN0ZG93biIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJTaGlmdC1Eb3duIiwgIlNoaWZ0LURvd24iKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuZ2V0U2VsZWN0aW9uKCkuc2VsZWN0RG93bigpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJnb2xpbmVkb3duIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkRvd24iLCAiRG93bnxDdHJsLU4iKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvciwgYXJncykgeyBlZGl0b3IubmF2aWdhdGVEb3duKGFyZ3MudGltZXMpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJzZWxlY3R3b3JkbGVmdCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVNoaWZ0LUxlZnQiLCAiT3B0aW9uLVNoaWZ0LUxlZnQiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuZ2V0U2VsZWN0aW9uKCkuc2VsZWN0V29yZExlZnQoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIsCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiZ290b3dvcmRsZWZ0IiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtTGVmdCIsICJPcHRpb24tTGVmdCIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5uYXZpZ2F0ZVdvcmRMZWZ0KCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giLAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNlbGVjdHRvbGluZXN0YXJ0IiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkFsdC1TaGlmdC1MZWZ0IiwgIkNvbW1hbmQtU2hpZnQtTGVmdCIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5nZXRTZWxlY3Rpb24oKS5zZWxlY3RMaW5lU3RhcnQoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIsCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiZ290b2xpbmVzdGFydCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJBbHQtTGVmdHxIb21lIiwgIkNvbW1hbmQtTGVmdHxIb21lfEN0cmwtQSIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5uYXZpZ2F0ZUxpbmVTdGFydCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJzZWxlY3RsZWZ0IiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIlNoaWZ0LUxlZnQiLCAiU2hpZnQtTGVmdCIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5nZXRTZWxlY3Rpb24oKS5zZWxlY3RMZWZ0KCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giLAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogImdvdG9sZWZ0IiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkxlZnQiLCAiTGVmdHxDdHJsLUIiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvciwgYXJncykgeyBlZGl0b3IubmF2aWdhdGVMZWZ0KGFyZ3MudGltZXMpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJzZWxlY3R3b3JkcmlnaHQiLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1TaGlmdC1SaWdodCIsICJPcHRpb24tU2hpZnQtUmlnaHQiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuZ2V0U2VsZWN0aW9uKCkuc2VsZWN0V29yZFJpZ2h0KCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giLAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogImdvdG93b3JkcmlnaHQiLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1SaWdodCIsICJPcHRpb24tUmlnaHQiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IubmF2aWdhdGVXb3JkUmlnaHQoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIsCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAic2VsZWN0dG9saW5lZW5kIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkFsdC1TaGlmdC1SaWdodCIsICJDb21tYW5kLVNoaWZ0LVJpZ2h0IiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmdldFNlbGVjdGlvbigpLnNlbGVjdExpbmVFbmQoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIsCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiZ290b2xpbmVlbmQiLAogICAgYmluZEtleTogYmluZEtleSgiQWx0LVJpZ2h0fEVuZCIsICJDb21tYW5kLVJpZ2h0fEVuZHxDdHJsLUUiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IubmF2aWdhdGVMaW5lRW5kKCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giLAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNlbGVjdHJpZ2h0IiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIlNoaWZ0LVJpZ2h0IiwgIlNoaWZ0LVJpZ2h0IiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmdldFNlbGVjdGlvbigpLnNlbGVjdFJpZ2h0KCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giLAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogImdvdG9yaWdodCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJSaWdodCIsICJSaWdodHxDdHJsLUYiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvciwgYXJncykgeyBlZGl0b3IubmF2aWdhdGVSaWdodChhcmdzLnRpbWVzKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIsCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAic2VsZWN0cGFnZWRvd24iLAogICAgYmluZEtleTogIlNoaWZ0LVBhZ2VEb3duIiwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3Iuc2VsZWN0UGFnZURvd24oKTsgfSwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJwYWdlZG93biIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KG51bGwsICJPcHRpb24tUGFnZURvd24iKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3Iuc2Nyb2xsUGFnZURvd24oKTsgfSwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJnb3RvcGFnZWRvd24iLAogICAgYmluZEtleTogYmluZEtleSgiUGFnZURvd24iLCAiUGFnZURvd258Q3RybC1WIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmdvdG9QYWdlRG93bigpOyB9LAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNlbGVjdHBhZ2V1cCIsCiAgICBiaW5kS2V5OiAiU2hpZnQtUGFnZVVwIiwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3Iuc2VsZWN0UGFnZVVwKCk7IH0sCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAicGFnZXVwIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkobnVsbCwgIk9wdGlvbi1QYWdlVXAiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3Iuc2Nyb2xsUGFnZVVwKCk7IH0sCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiZ290b3BhZ2V1cCIsCiAgICBiaW5kS2V5OiAiUGFnZVVwIiwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuZ290b1BhZ2VVcCgpOyB9LAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNjcm9sbHVwIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtVXAiLCBudWxsKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGUpIHsgZS5yZW5kZXJlci5zY3JvbGxCeSgwLCAtMiAqIGUucmVuZGVyZXIubGF5ZXJDb25maWcubGluZUhlaWdodCk7IH0sCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAic2Nyb2xsZG93biIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLURvd24iLCBudWxsKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGUpIHsgZS5yZW5kZXJlci5zY3JvbGxCeSgwLCAyICogZS5yZW5kZXJlci5sYXllckNvbmZpZy5saW5lSGVpZ2h0KTsgfSwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJzZWxlY3RsaW5lc3RhcnQiLAogICAgYmluZEtleTogIlNoaWZ0LUhvbWUiLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5nZXRTZWxlY3Rpb24oKS5zZWxlY3RMaW5lU3RhcnQoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIsCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAic2VsZWN0bGluZWVuZCIsCiAgICBiaW5kS2V5OiAiU2hpZnQtRW5kIiwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuZ2V0U2VsZWN0aW9uKCkuc2VsZWN0TGluZUVuZCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJ0b2dnbGVyZWNvcmRpbmciLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1BbHQtRSIsICJDb21tYW5kLU9wdGlvbi1FIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZVJlY29yZGluZyhlZGl0b3IpOyB9LAogICAgcmVhZE9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInJlcGxheW1hY3JvIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtU2hpZnQtRSIsICJDb21tYW5kLVNoaWZ0LUUiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuY29tbWFuZHMucmVwbGF5KGVkaXRvcik7IH0sCiAgICByZWFkT25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAianVtcHRvbWF0Y2hpbmciLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1QIiwgIkN0cmwtU2hpZnQtUCIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5qdW1wVG9NYXRjaGluZygpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIiwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJzZWxlY3R0b21hdGNoaW5nIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtU2hpZnQtUCIsIG51bGwpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5qdW1wVG9NYXRjaGluZyh0cnVlKTsgfSwKICAgIHJlYWRPbmx5OiB0cnVlCn0sIAp7CiAgICBuYW1lOiAiY3V0IiwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgewogICAgICAgIHZhciByYW5nZSA9IGVkaXRvci5nZXRTZWxlY3Rpb25SYW5nZSgpOwogICAgICAgIGVkaXRvci5fZW1pdCgiY3V0IiwgcmFuZ2UpOwoKICAgICAgICBpZiAoIWVkaXRvci5zZWxlY3Rpb24uaXNFbXB0eSgpKSB7CiAgICAgICAgICAgIGVkaXRvci5zZXNzaW9uLnJlbW92ZShyYW5nZSk7CiAgICAgICAgICAgIGVkaXRvci5jbGVhclNlbGVjdGlvbigpOwogICAgICAgIH0KICAgIH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giCn0sIHsKICAgIG5hbWU6ICJyZW1vdmVsaW5lIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtRCIsICJDb21tYW5kLUQiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IucmVtb3ZlTGluZXMoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIKfSwgewogICAgbmFtZTogImR1cGxpY2F0ZVNlbGVjdGlvbiIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVNoaWZ0LUQiLCAiQ29tbWFuZC1TaGlmdC1EIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmR1cGxpY2F0ZVNlbGVjdGlvbigpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIgp9LCB7CiAgICBuYW1lOiAic29ydGxpbmVzIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtQWx0LVMiLCAiQ29tbWFuZC1BbHQtUyIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5zb3J0TGluZXMoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIKfSwgewogICAgbmFtZTogInRvZ2dsZWNvbW1lbnQiLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC0vIiwgIkNvbW1hbmQtLyIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci50b2dnbGVDb21tZW50TGluZXMoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIKfSwgewogICAgbmFtZTogIm1vZGlmeU51bWJlclVwIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtU2hpZnQtVXAiLCAiQWx0LVNoaWZ0LVVwIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLm1vZGlmeU51bWJlcigxKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIKfSwgewogICAgbmFtZTogIm1vZGlmeU51bWJlckRvd24iLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1TaGlmdC1Eb3duIiwgIkFsdC1TaGlmdC1Eb3duIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLm1vZGlmeU51bWJlcigtMSk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giCn0sIHsKICAgIG5hbWU6ICJyZXBsYWNlIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtSCIsICJDb21tYW5kLU9wdGlvbi1GIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsKICAgICAgICBjb25maWcubG9hZE1vZHVsZSgiYWNlL2V4dC9zZWFyY2hib3giLCBmdW5jdGlvbihlKSB7ZS5TZWFyY2goZWRpdG9yLCB0cnVlKX0pOwogICAgfQp9LCB7CiAgICBuYW1lOiAidW5kbyIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVoiLCAiQ29tbWFuZC1aIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnVuZG8oKTsgfQp9LCB7CiAgICBuYW1lOiAicmVkbyIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVNoaWZ0LVp8Q3RybC1ZIiwgIkNvbW1hbmQtU2hpZnQtWnxDb21tYW5kLVkiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IucmVkbygpOyB9Cn0sIHsKICAgIG5hbWU6ICJjb3B5bGluZXN1cCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJBbHQtU2hpZnQtVXAiLCAiQ29tbWFuZC1PcHRpb24tVXAiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuY29weUxpbmVzVXAoKTsgfQp9LCB7CiAgICBuYW1lOiAibW92ZWxpbmVzdXAiLAogICAgYmluZEtleTogYmluZEtleSgiQWx0LVVwIiwgIk9wdGlvbi1VcCIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5tb3ZlTGluZXNVcCgpOyB9Cn0sIHsKICAgIG5hbWU6ICJjb3B5bGluZXNkb3duIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkFsdC1TaGlmdC1Eb3duIiwgIkNvbW1hbmQtT3B0aW9uLURvd24iKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuY29weUxpbmVzRG93bigpOyB9Cn0sIHsKICAgIG5hbWU6ICJtb3ZlbGluZXNkb3duIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkFsdC1Eb3duIiwgIk9wdGlvbi1Eb3duIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLm1vdmVMaW5lc0Rvd24oKTsgfQp9LCB7CiAgICBuYW1lOiAiZGVsIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkRlbGV0ZSIsICJEZWxldGV8Q3RybC1EIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnJlbW92ZSgicmlnaHQiKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIKfSwgewogICAgbmFtZTogImJhY2tzcGFjZSIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KAogICAgICAgICJDb21tYW5kLUJhY2tzcGFjZXxPcHRpb24tQmFja3NwYWNlfFNoaWZ0LUJhY2tzcGFjZXxCYWNrc3BhY2UiLAogICAgICAgICJDdHJsLUJhY2tzcGFjZXxDb21tYW5kLUJhY2tzcGFjZXxTaGlmdC1CYWNrc3BhY2V8QmFja3NwYWNlfEN0cmwtSCIKICAgICksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnJlbW92ZSgibGVmdCIpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIgp9LCB7CiAgICBuYW1lOiAicmVtb3ZldG9saW5lc3RhcnQiLAogICAgYmluZEtleTogYmluZEtleSgiQWx0LUJhY2tzcGFjZSIsICJDb21tYW5kLUJhY2tzcGFjZSIpLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5yZW1vdmVUb0xpbmVTdGFydCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIgp9LCB7CiAgICBuYW1lOiAicmVtb3ZldG9saW5lZW5kIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkFsdC1EZWxldGUiLCAiQ3RybC1LIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnJlbW92ZVRvTGluZUVuZCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIgp9LCB7CiAgICBuYW1lOiAicmVtb3Zld29yZGxlZnQiLAogICAgYmluZEtleTogYmluZEtleSgiQ3RybC1CYWNrc3BhY2UiLCAiQWx0LUJhY2tzcGFjZXxDdHJsLUFsdC1CYWNrc3BhY2UiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IucmVtb3ZlV29yZExlZnQoKTsgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIKfSwgewogICAgbmFtZTogInJlbW92ZXdvcmRyaWdodCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLURlbGV0ZSIsICJBbHQtRGVsZXRlIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnJlbW92ZVdvcmRSaWdodCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIgp9LCB7CiAgICBuYW1lOiAib3V0ZGVudCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJTaGlmdC1UYWIiLCAiU2hpZnQtVGFiIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmJsb2NrT3V0ZGVudCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIgp9LCB7CiAgICBuYW1lOiAiaW5kZW50IiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIlRhYiIsICJUYWIiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IuaW5kZW50KCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giCn0sewogICAgbmFtZTogImJsb2Nrb3V0ZGVudCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVsiLCAiQ3RybC1bIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmJsb2NrT3V0ZGVudCgpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIgp9LHsKICAgIG5hbWU6ICJibG9ja2luZGVudCIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLV0iLCAiQ3RybC1dIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmJsb2NrSW5kZW50KCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giCn0sIHsKICAgIG5hbWU6ICJpbnNlcnRzdHJpbmciLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yLCBzdHIpIHsgZWRpdG9yLmluc2VydChzdHIpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246ICJmb3JFYWNoIgp9LCB7CiAgICBuYW1lOiAiaW5zZXJ0dGV4dCIsCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IsIGFyZ3MpIHsKICAgICAgICBlZGl0b3IuaW5zZXJ0KGxhbmcuc3RyaW5nUmVwZWF0KGFyZ3MudGV4dCAgfHwgIiIsIGFyZ3MudGltZXMgfHwgMSkpOwogICAgfSwKICAgIG11bHRpU2VsZWN0QWN0aW9uOiAiZm9yRWFjaCIKfSwgewogICAgbmFtZTogInNwbGl0bGluZSIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KG51bGwsICJDdHJsLU8iKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3Iuc3BsaXRMaW5lKCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giCn0sIHsKICAgIG5hbWU6ICJ0cmFuc3Bvc2VsZXR0ZXJzIiwKICAgIGJpbmRLZXk6IGJpbmRLZXkoIkN0cmwtVCIsICJDdHJsLVQiKSwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IudHJhbnNwb3NlTGV0dGVycygpOyB9LAogICAgbXVsdGlTZWxlY3RBY3Rpb246IGZ1bmN0aW9uKGVkaXRvcikge2VkaXRvci50cmFuc3Bvc2VTZWxlY3Rpb25zKDEpOyB9Cn0sIHsKICAgIG5hbWU6ICJ0b3VwcGVyY2FzZSIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVUiLCAiQ3RybC1VIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnRvVXBwZXJDYXNlKCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giCn0sIHsKICAgIG5hbWU6ICJ0b2xvd2VyY2FzZSIsCiAgICBiaW5kS2V5OiBiaW5kS2V5KCJDdHJsLVNoaWZ0LVUiLCAiQ3RybC1TaGlmdC1VIiksCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnRvTG93ZXJDYXNlKCk7IH0sCiAgICBtdWx0aVNlbGVjdEFjdGlvbjogImZvckVhY2giCn1dOwoKfSk7CgphY2UuZGVmaW5lKCdhY2UvdW5kb21hbmFnZXInLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnIF0sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewp2YXIgVW5kb01hbmFnZXIgPSBmdW5jdGlvbigpIHsKICAgIHRoaXMucmVzZXQoKTsKfTsKCihmdW5jdGlvbigpIHsKICAgIHRoaXMuZXhlY3V0ZSA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsKICAgICAgICB2YXIgZGVsdGFzID0gb3B0aW9ucy5hcmdzWzBdOwogICAgICAgIHRoaXMuJGRvYyAgPSBvcHRpb25zLmFyZ3NbMV07CiAgICAgICAgdGhpcy4kdW5kb1N0YWNrLnB1c2goZGVsdGFzKTsKICAgICAgICB0aGlzLiRyZWRvU3RhY2sgPSBbXTsKICAgIH07CiAgICB0aGlzLnVuZG8gPSBmdW5jdGlvbihkb250U2VsZWN0KSB7CiAgICAgICAgdmFyIGRlbHRhcyA9IHRoaXMuJHVuZG9TdGFjay5wb3AoKTsKICAgICAgICB2YXIgdW5kb1NlbGVjdGlvblJhbmdlID0gbnVsbDsKICAgICAgICBpZiAoZGVsdGFzKSB7CiAgICAgICAgICAgIHVuZG9TZWxlY3Rpb25SYW5nZSA9CiAgICAgICAgICAgICAgICB0aGlzLiRkb2MudW5kb0NoYW5nZXMoZGVsdGFzLCBkb250U2VsZWN0KTsKICAgICAgICAgICAgdGhpcy4kcmVkb1N0YWNrLnB1c2goZGVsdGFzKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHVuZG9TZWxlY3Rpb25SYW5nZTsKICAgIH07CiAgICB0aGlzLnJlZG8gPSBmdW5jdGlvbihkb250U2VsZWN0KSB7CiAgICAgICAgdmFyIGRlbHRhcyA9IHRoaXMuJHJlZG9TdGFjay5wb3AoKTsKICAgICAgICB2YXIgcmVkb1NlbGVjdGlvblJhbmdlID0gbnVsbDsKICAgICAgICBpZiAoZGVsdGFzKSB7CiAgICAgICAgICAgIHJlZG9TZWxlY3Rpb25SYW5nZSA9CiAgICAgICAgICAgICAgICB0aGlzLiRkb2MucmVkb0NoYW5nZXMoZGVsdGFzLCBkb250U2VsZWN0KTsKICAgICAgICAgICAgdGhpcy4kdW5kb1N0YWNrLnB1c2goZGVsdGFzKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJlZG9TZWxlY3Rpb25SYW5nZTsKICAgIH07CiAgICB0aGlzLnJlc2V0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kdW5kb1N0YWNrID0gW107CiAgICAgICAgdGhpcy4kcmVkb1N0YWNrID0gW107CiAgICB9OwogICAgdGhpcy5oYXNVbmRvID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHVuZG9TdGFjay5sZW5ndGggPiAwOwogICAgfTsKICAgIHRoaXMuaGFzUmVkbyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRyZWRvU3RhY2subGVuZ3RoID4gMDsKICAgIH07Cgp9KS5jYWxsKFVuZG9NYW5hZ2VyLnByb3RvdHlwZSk7CgpleHBvcnRzLlVuZG9NYW5hZ2VyID0gVW5kb01hbmFnZXI7Cn0pOwoKYWNlLmRlZmluZSgnYWNlL3ZpcnR1YWxfcmVuZGVyZXInLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvb29wJywgJ2FjZS9saWIvZG9tJywgJ2FjZS9saWIvZXZlbnQnLCAnYWNlL2xpYi91c2VyYWdlbnQnLCAnYWNlL2NvbmZpZycsICdhY2UvbGliL25ldCcsICdhY2UvbGF5ZXIvZ3V0dGVyJywgJ2FjZS9sYXllci9tYXJrZXInLCAnYWNlL2xheWVyL3RleHQnLCAnYWNlL2xheWVyL2N1cnNvcicsICdhY2Uvc2Nyb2xsYmFyJywgJ2FjZS9yZW5kZXJsb29wJywgJ2FjZS9saWIvZXZlbnRfZW1pdHRlciddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgb29wID0gcmVxdWlyZSgiLi9saWIvb29wIik7CnZhciBkb20gPSByZXF1aXJlKCIuL2xpYi9kb20iKTsKdmFyIGV2ZW50ID0gcmVxdWlyZSgiLi9saWIvZXZlbnQiKTsKdmFyIHVzZXJhZ2VudCA9IHJlcXVpcmUoIi4vbGliL3VzZXJhZ2VudCIpOwp2YXIgY29uZmlnID0gcmVxdWlyZSgiLi9jb25maWciKTsKdmFyIG5ldCA9IHJlcXVpcmUoIi4vbGliL25ldCIpOwp2YXIgR3V0dGVyTGF5ZXIgPSByZXF1aXJlKCIuL2xheWVyL2d1dHRlciIpLkd1dHRlcjsKdmFyIE1hcmtlckxheWVyID0gcmVxdWlyZSgiLi9sYXllci9tYXJrZXIiKS5NYXJrZXI7CnZhciBUZXh0TGF5ZXIgPSByZXF1aXJlKCIuL2xheWVyL3RleHQiKS5UZXh0Owp2YXIgQ3Vyc29yTGF5ZXIgPSByZXF1aXJlKCIuL2xheWVyL2N1cnNvciIpLkN1cnNvcjsKdmFyIFNjcm9sbEJhciA9IHJlcXVpcmUoIi4vc2Nyb2xsYmFyIikuU2Nyb2xsQmFyOwp2YXIgUmVuZGVyTG9vcCA9IHJlcXVpcmUoIi4vcmVuZGVybG9vcCIpLlJlbmRlckxvb3A7CnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCIuL2xpYi9ldmVudF9lbWl0dGVyIikuRXZlbnRFbWl0dGVyOwp2YXIgZWRpdG9yQ3NzID0gIi5hY2VfZWRpdG9yIHtcCnBvc2l0aW9uOiByZWxhdGl2ZTtcCm92ZXJmbG93OiBoaWRkZW47XApmb250LWZhbWlseTogJ01vbmFjbycsICdNZW5sbycsICdVYnVudHUgTW9ubycsICdDb25zb2xhcycsICdzb3VyY2UtY29kZS1wcm8nLCBtb25vc3BhY2U7XApmb250LXNpemU6IDEycHg7XApsaW5lLWhlaWdodDogbm9ybWFsO1wKfVwKLmFjZV9zY3JvbGxlciB7XApwb3NpdGlvbjogYWJzb2x1dGU7XApvdmVyZmxvdzogaGlkZGVuO1wKdG9wOiAwO1wKYm90dG9tOiAwO1wKfVwKLmFjZV9jb250ZW50IHtcCnBvc2l0aW9uOiBhYnNvbHV0ZTtcCi1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcCi13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcCmJveC1zaXppbmc6IGJvcmRlci1ib3g7XApjdXJzb3I6IHRleHQ7XAp9XAouYWNlX2d1dHRlciB7XApwb3NpdGlvbjogYWJzb2x1dGU7XApvdmVyZmxvdyA6IGhpZGRlbjtcCndpZHRoOiBhdXRvO1wKdG9wOiAwO1wKYm90dG9tOiAwO1wKbGVmdDogMDtcCmN1cnNvcjogZGVmYXVsdDtcCnotaW5kZXg6IDQ7XAp9XAouYWNlX2d1dHRlci1hY3RpdmUtbGluZSB7XApwb3NpdGlvbjogYWJzb2x1dGU7XApsZWZ0OiAwO1wKcmlnaHQ6IDA7XAp9XAouYWNlX3Njcm9sbGVyLmFjZV9zY3JvbGwtbGVmdCB7XApib3gtc2hhZG93OiAxN3B4IDAgMTZweCAtMTZweCByZ2JhKDAsIDAsIDAsIDAuNCkgaW5zZXQ7XAp9XAouYWNlX2d1dHRlci1jZWxsIHtcCnBhZGRpbmctbGVmdDogMTlweDtcCnBhZGRpbmctcmlnaHQ6IDZweDtcCmJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XAp9XAouYWNlX2d1dHRlci1jZWxsLmFjZV9lcnJvciB7XApiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQXlKcFZGaDBXRTFNT21OdmJTNWhaRzlpWlM1NGJYQUFBQUFBQUR3L2VIQmhZMnRsZENCaVpXZHBiajBpNzd1L0lpQnBaRDBpVnpWTk1FMXdRMlZvYVVoNmNtVlRlazVVWTNwcll6bGtJajgrSUR4NE9uaHRjRzFsZEdFZ2VHMXNibk02ZUQwaVlXUnZZbVU2Ym5NNmJXVjBZUzhpSUhnNmVHMXdkR3M5SWtGa2IySmxJRmhOVUNCRGIzSmxJRFV1TUMxak1EWXdJRFl4TGpFek5EYzNOeXdnTWpBeE1DOHdNaTh4TWkweE56b3pNam93TUNBZ0lDQWdJQ0FnSWo0Z1BISmtaanBTUkVZZ2VHMXNibk02Y21SbVBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1THpBeUx6SXlMWEprWmkxemVXNTBZWGd0Ym5NaklqNGdQSEprWmpwRVpYTmpjbWx3ZEdsdmJpQnlaR1k2WVdKdmRYUTlJaUlnZUcxc2JuTTZlRzF3UFNKb2RIUndPaTh2Ym5NdVlXUnZZbVV1WTI5dEwzaGhjQzh4TGpBdklpQjRiV3h1Y3pwNGJYQk5UVDBpYUhSMGNEb3ZMMjV6TG1Ga2IySmxMbU52YlM5NFlYQXZNUzR3TDIxdEx5SWdlRzFzYm5NNmMzUlNaV1k5SW1oMGRIQTZMeTl1Y3k1aFpHOWlaUzVqYjIwdmVHRndMekV1TUM5elZIbHdaUzlTWlhOdmRYSmpaVkpsWmlNaUlIaHRjRHBEY21WaGRHOXlWRzl2YkQwaVFXUnZZbVVnVUdodmRHOXphRzl3SUVOVE5TQk5ZV05wYm5SdmMyZ2lJSGh0Y0UxTk9rbHVjM1JoYm1ObFNVUTlJbmh0Y0M1cGFXUTZRVU0yT0VaRFFUUTRSVFUwTVRGRk1VRXpNMFZGUlRNMlJVWTFNMFJCTWpZaUlIaHRjRTFOT2tSdlkzVnRaVzUwU1VROUluaHRjQzVrYVdRNlFVTTJPRVpEUVRVNFJUVTBNVEZGTVVFek0wVkZSVE0yUlVZMU0wUkJNallpUGlBOGVHMXdUVTA2UkdWeWFYWmxaRVp5YjIwZ2MzUlNaV1k2YVc1emRHRnVZMlZKUkQwaWVHMXdMbWxwWkRwQlF6WTRSa05CTWpoRk5UUXhNVVV4UVRNelJVVkZNelpGUmpVelJFRXlOaUlnYzNSU1pXWTZaRzlqZFcxbGJuUkpSRDBpZUcxd0xtUnBaRHBCUXpZNFJrTkJNemhGTlRReE1VVXhRVE16UlVWRk16WkZSalV6UkVFeU5pSXZQaUE4TDNKa1pqcEVaWE5qY21sd2RHbHZiajRnUEM5eVpHWTZVa1JHUGlBOEwzZzZlRzF3YldWMFlUNGdQRDk0Y0dGamEyVjBJR1Z1WkQwaWNpSS9Qa2dYeGJBQUFBSmJTVVJCVkhqYXBGTk5hQk5CRkg0enM1dmRaTFA1c1FtTnBUODJRWTIwOWhlaDFpb1dpc2FEUmNTS0YwV0tKMEdRbnJ6cnhhc0hzUjZFbmxyd0QwVGFneEphYmFWRXBGWXhMV2xMU1M4MjJ0cjg3bTY2Y2NmZDJHS3lWaEE2TU15YmdmZTk3L3ZtUFVRcGhkMHNaanRvOVhJbjlPT3N2bHUybmtxUnpWVSs2dnZselBmOFc2Yms4ZHhRME5QYnhBQUxnQ2dnMkprYVF1aHpRYXUvRWwwemJtVUE3VTBFczh2MkNpWW1LUUpIR08xUUlDQ0xvcWlsTWhrbXVyREF5YXBLZ3FJdGV6aS9VU1JkSnFFWVk0RDVqQ3kwM2h0MnlNa2t2TDkxalRUWDEwcXp5eXUyaHJ1UFJON2pnYkgrRU9zWGNNTGdZaVRoRWdBTWhBQlc4NW9xeTFEWGRSSWR2UDFBSEoyYWNRWHZESXJWSGNkUU5yRUtOWVNWTVNaR01qRXpJSUF3RFhJbys2Ry9GeGNHbnprQzNUMm9NaExqcmU0OXNCQitSUmNITHFkYWZLNnNZZEUvR0dCd1UxVnBGTmowYU44cEpiZStCa1p5ZXZVcnZMbDZYbW0wVzlJdVRjMER4ckROQUpkNW9FdkkvS1JzTkMzYlF5TmpQTzl5UTFZSGNmajJRdmZRYy81VFVoSlRCYzJpTTBVN0FXRFF0YzFuSkh2RC9jZk8yczdqYUdraVRFZmEvRXA4Y29MdTd6bU5taDgrZGM1bFpEdVVlRkFHVU5BL09ZNkpWYXlwUTB2anI3WFlqVXZKTTM3dnQrajF2dVRLNURnVmZWVW9UalZlK3kzL0x4TXhZMkdnVStDU0x5NGNwZnNZb3JSWHVYSU9pMFZ0NDBoNjd1WkZUZElvNm5MYVpjd1VKV0F6d05TMHRCbnFxS3pRRG5qZEcvaVB5WnhvNDZIYUtVcGJ2WWtqOHFZUlRac0JoZ2UrSkhoWnloMHg5Yjk1SnFqVkprVDA4NGtaSVB3dS9tUFdxUGdmUTVqWGgyKzkyQXk3SGVkZkFnd0E2S0RXYWZiNHczY0FBQUFBU1VWT1JLNUNZSUk9XCIpO1wKYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcCmJhY2tncm91bmQtcG9zaXRpb246IDJweCBjZW50ZXI7XAp9XAouYWNlX2d1dHRlci1jZWxsLmFjZV93YXJuaW5nIHtcCmJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFHWFJGV0hSVGIyWjBkMkZ5WlFCQlpHOWlaU0JKYldGblpWSmxZV1I1Y2NsbFBBQUFBeUpwVkZoMFdFMU1PbU52YlM1aFpHOWlaUzU0YlhBQUFBQUFBRHcvZUhCaFkydGxkQ0JpWldkcGJqMGk3N3UvSWlCcFpEMGlWelZOTUUxd1EyVm9hVWg2Y21WVGVrNVVZM3ByWXpsa0lqOCtJRHg0T25odGNHMWxkR0VnZUcxc2JuTTZlRDBpWVdSdlltVTZibk02YldWMFlTOGlJSGc2ZUcxd2RHczlJa0ZrYjJKbElGaE5VQ0JEYjNKbElEVXVNQzFqTURZd0lEWXhMakV6TkRjM055d2dNakF4TUM4d01pOHhNaTB4Tnpvek1qb3dNQ0FnSUNBZ0lDQWdJajRnUEhKa1pqcFNSRVlnZUcxc2JuTTZjbVJtUFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMekF5THpJeUxYSmtaaTF6ZVc1MFlYZ3Ribk1qSWo0Z1BISmtaanBFWlhOamNtbHdkR2x2YmlCeVpHWTZZV0p2ZFhROUlpSWdlRzFzYm5NNmVHMXdQU0pvZEhSd09pOHZibk11WVdSdlltVXVZMjl0TDNoaGNDOHhMakF2SWlCNGJXeHVjenA0YlhCTlRUMGlhSFIwY0RvdkwyNXpMbUZrYjJKbExtTnZiUzk0WVhBdk1TNHdMMjF0THlJZ2VHMXNibk02YzNSU1pXWTlJbWgwZEhBNkx5OXVjeTVoWkc5aVpTNWpiMjB2ZUdGd0x6RXVNQzl6Vkhsd1pTOVNaWE52ZFhKalpWSmxaaU1pSUhodGNEcERjbVZoZEc5eVZHOXZiRDBpUVdSdlltVWdVR2h2ZEc5emFHOXdJRU5UTlNCTllXTnBiblJ2YzJnaUlIaHRjRTFOT2tsdWMzUmhibU5sU1VROUluaHRjQzVwYVdRNlFVTTJPRVpEUVRnNFJUVTBNVEZGTVVFek0wVkZSVE0yUlVZMU0wUkJNallpSUhodGNFMU5Pa1J2WTNWdFpXNTBTVVE5SW5odGNDNWthV1E2UVVNMk9FWkRRVGs0UlRVME1URkZNVUV6TTBWRlJUTTJSVVkxTTBSQk1qWWlQaUE4ZUcxd1RVMDZSR1Z5YVhabFpFWnliMjBnYzNSU1pXWTZhVzV6ZEdGdVkyVkpSRDBpZUcxd0xtbHBaRHBCUXpZNFJrTkJOamhGTlRReE1VVXhRVE16UlVWRk16WkZSalV6UkVFeU5pSWdjM1JTWldZNlpHOWpkVzFsYm5SSlJEMGllRzF3TG1ScFpEcEJRelk0UmtOQk56aEZOVFF4TVVVeFFUTXpSVVZGTXpaRlJqVXpSRUV5TmlJdlBpQThMM0prWmpwRVpYTmpjbWx3ZEdsdmJqNGdQQzl5WkdZNlVrUkdQaUE4TDNnNmVHMXdiV1YwWVQ0Z1BEOTRjR0ZqYTJWMElHVnVaRDBpY2lJL1BnZDdQZklBQUFHbVNVUkJWSGphWXZyLy96OERKWmlKZ1VJQU5vQ1JrUkViOWdMaVNWQWFReDRPUU03QUFrd2Q3WFUyL3YrKy9yT3R0ZFlHRUI5ZEFTRXZPTXlkR0tmSDhHdi9wNFhUa3ZSQmZMeGVRQVArMWNVaFhvcHl2emhQN1AvSW9TajdnN013MDljTktPNkoxUVEwTDRnSUNQSXYvdmVnLzhXK0pkRnZRTkxIVnNXOS9ubW45ems3QitjQ2tEd2hMN2d0NmtuU1pueDkvTHVDRU9jdmtJQU1QK2N2dG85bmZxeVptbVVBa3NmbkJVdGJNNjBnWC8zL2tneXYzL3hTRk9MNURaVCtMOHZQK1lmaDVjdmZQdnAveFVIeVFIWEd5QVl3Z3B3QmpaWUZUM1kxT0VsL09mQ0g0ZmZ2M3d6YzRpd012TklzREorZi9tSDQrdklQQXhzYjYzMVdXMFlsbjZacFFMWGRNSy9EWEdEZmxoK3NJdjM3RWl2RDV4Ly9HYjcrWVdUNHk4NnNsN0JDQ2tTRCtaKysvMWRrdnNGUmwrSG5EMVJ2amU0Rjh3aGpNWG1HajU4WUdmNXpzRE13Y25Bd2ZQdktjbWw2MkRzUURlYUR4TisvWTBxd2xwRUhxcmRCOTRJUk5JRFVnZmdmS0pDaEdLNE9pa0VXM2dUaVhVQjk1MEFTTEZBRjU0QUM5NEEwRzlRQWZPbm1GOURDRHpBQkZxUzA4SUhZRElTY2Rpak9qUUFCQmdDKy85YXdCSDk2andBQUFBQkpSVTVFcmtKZ2dnPT1cIik7XApiYWNrZ3JvdW5kLXBvc2l0aW9uOiAycHggY2VudGVyO1wKfVwKLmFjZV9ndXR0ZXItY2VsbC5hY2VfaW5mbyB7XApiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL2dpZjtiYXNlNjQsUjBsR09EbGhFQUFRQU1RQUFBQUFBRUZCUVZKU1VsNWVYbVJrWkd0cmEzOS9mNFdGaFltSmlaR1JrYWFtcHJ5OHZNUER3OHpNek5YVjFkemMzT1RrNU9ycTZ2RHc4UC8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNINUJBa0FBQlFBTEFBQUFBQVFBQkFBQUFVdUlDV09aR21lYUJtbDVYR3dGQ1FTQkd5WFJTQXd0cVFJaVJ1aXdJTTVCb1lWYkVGSXlHQ1FvZUpHclZwdElRQTdcIik7XApiYWNrZ3JvdW5kLXBvc2l0aW9uOiAycHggY2VudGVyO1wKfVwKLmFjZV9kYXJrIC5hY2VfZ3V0dGVyLWNlbGwuYWNlX2luZm8ge1wKYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUF5UnBWRmgwV0UxTU9tTnZiUzVoWkc5aVpTNTRiWEFBQUFBQUFEdy9lSEJoWTJ0bGRDQmlaV2RwYmowaTc3dS9JaUJwWkQwaVZ6Vk5NRTF3UTJWb2FVaDZjbVZUZWs1VVkzcHJZemxrSWo4K0lEeDRPbmh0Y0cxbGRHRWdlRzFzYm5NNmVEMGlZV1J2WW1VNmJuTTZiV1YwWVM4aUlIZzZlRzF3ZEdzOUlrRmtiMkpsSUZoTlVDQkRiM0psSURVdU15MWpNREV4SURZMkxqRTBOVFkyTVN3Z01qQXhNaTh3TWk4d05pMHhORG8xTmpveU55QWdJQ0FnSUNBZ0lqNGdQSEprWmpwU1JFWWdlRzFzYm5NNmNtUm1QU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUx6QXlMekl5TFhKa1ppMXplVzUwWVhndGJuTWpJajRnUEhKa1pqcEVaWE5qY21sd2RHbHZiaUJ5WkdZNllXSnZkWFE5SWlJZ2VHMXNibk02ZUcxd1BTSm9kSFJ3T2k4dmJuTXVZV1J2WW1VdVkyOXRMM2hoY0M4eExqQXZJaUI0Yld4dWN6cDRiWEJOVFQwaWFIUjBjRG92TDI1ekxtRmtiMkpsTG1OdmJTOTRZWEF2TVM0d0wyMXRMeUlnZUcxc2JuTTZjM1JTWldZOUltaDBkSEE2THk5dWN5NWhaRzlpWlM1amIyMHZlR0Z3THpFdU1DOXpWSGx3WlM5U1pYTnZkWEpqWlZKbFppTWlJSGh0Y0RwRGNtVmhkRzl5Vkc5dmJEMGlRV1J2WW1VZ1VHaHZkRzl6YUc5d0lFTlROaUFvVFdGamFXNTBiM05vS1NJZ2VHMXdUVTA2U1c1emRHRnVZMlZKUkQwaWVHMXdMbWxwWkRwR1JUazVNVFZHUkVJeE5Ea3hNVVV4T1RjNVEwRkZSRVF5TVROR01qQkZReUlnZUcxd1RVMDZSRzlqZFcxbGJuUkpSRDBpZUcxd0xtUnBaRHBHUlRrNU1UVkdSVUl4TkRreE1VVXhPVGM1UTBGRlJFUXlNVE5HTWpCRlF5SStJRHg0YlhCTlRUcEVaWEpwZG1Wa1JuSnZiU0J6ZEZKbFpqcHBibk4wWVc1alpVbEVQU0o0YlhBdWFXbGtPa1pGT1RreE5VWkNRakUwT1RFeFJURTVOemxEUVVWRVJESXhNMFl5TUVWRElpQnpkRkpsWmpwa2IyTjFiV1Z1ZEVsRVBTSjRiWEF1Wkdsa09rWkZPVGt4TlVaRFFqRTBPVEV4UlRFNU56bERRVVZFUkRJeE0wWXlNRVZESWk4K0lEd3ZjbVJtT2tSbGMyTnlhWEIwYVc5dVBpQThMM0prWmpwU1JFWStJRHd2ZURwNGJYQnRaWFJoUGlBOFAzaHdZV05yWlhRZ1pXNWtQU0p5SWo4K1NJRGtqQUFBQUoxSlJFRlVlTnBpL1AvL1B3TWxnSW1CUWtCN0E2cXJxLytETUM1NUZrSUdLQ29xNHBWbnBGa2dUcDA2OWYvKy9mdi9yMXUzN3IrdHJlMS9rZzBBK3B0bjl1elpZTGFSa1JIcEx2anc0Y05YV1ZsWmh1ZlBuek9jTzNlT2RBTzB0YlZQQWpIRG16ZHZHQTRmUHN4SXNnR1NrcEptdjM3OVluajM3aDJEakl5TUNNa0czTGh4US9UMjdkc01hbXBxREhaMmRxL3BINDFEeHdDQUFBTUFGZGM2OGRVc0ZaZ0FBQUFBU1VWT1JLNUNZSUk9XCIpO1wKfVwKLmFjZV9zY3JvbGxiYXIge1wKcG9zaXRpb246IGFic29sdXRlO1wKb3ZlcmZsb3cteDogaGlkZGVuO1wKb3ZlcmZsb3cteTogc2Nyb2xsO1wKcmlnaHQ6IDA7XAp0b3A6IDA7XApib3R0b206IDA7XAp9XAouYWNlX3Njcm9sbGJhci1pbm5lciB7XApwb3NpdGlvbjogYWJzb2x1dGU7XAp3aWR0aDogMXB4O1wKbGVmdDogMDtcCn1cCi5hY2VfcHJpbnQtbWFyZ2luIHtcCnBvc2l0aW9uOiBhYnNvbHV0ZTtcCmhlaWdodDogMTAwJTtcCn1cCi5hY2VfdGV4dC1pbnB1dCB7XApwb3NpdGlvbjogYWJzb2x1dGU7XAp6LWluZGV4OiAwO1wKd2lkdGg6IDAuNWVtO1wKaGVpZ2h0OiAxZW07XApvcGFjaXR5OiAwO1wKYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XAotbW96LWFwcGVhcmFuY2U6IG5vbmU7XAphcHBlYXJhbmNlOiBub25lO1wKYm9yZGVyOiBub25lO1wKcmVzaXplOiBub25lO1wKb3V0bGluZTogbm9uZTtcCm92ZXJmbG93OiBoaWRkZW47XApmb250OiBpbmhlcml0O1wKfVwKLmFjZV90ZXh0LWlucHV0LmFjZV9jb21wb3NpdGlvbiB7XApiYWNrZ3JvdW5kOiAjZjhmOGY4O1wKY29sb3I6ICMxMTE7XAp6LWluZGV4OiAxMDAwO1wKb3BhY2l0eTogMTtcCmJvcmRlcjogc29saWQgbGlnaHRncmF5IDFweDtcCm1hcmdpbjogLTFweDtcCnBhZGRpbmc6IDAgMXB4O1wKfVwKLmFjZV9sYXllciB7XAp6LWluZGV4OiAxO1wKcG9zaXRpb246IGFic29sdXRlO1wKb3ZlcmZsb3c6IGhpZGRlbjtcCndoaXRlLXNwYWNlOiBub3dyYXA7XApoZWlnaHQ6IDEwMCU7XAp3aWR0aDogMTAwJTtcCi1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcCi13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcCmJveC1zaXppbmc6IGJvcmRlci1ib3g7XAovKiBzZXR0aW5nIHBvaW50ZXItZXZlbnRzOiBhdXRvOyBvbiBub2RlIHVuZGVyIHRoZSBtb3VzZSwgd2hpY2ggY2hhbmdlc1wKZHVyaW5nIHNjcm9sbCwgd2lsbCBicmVhayBtb3VzZSB3aGVlbCBzY3JvbGxpbmcgaW4gU2FmYXJpICovXApwb2ludGVyLWV2ZW50czogbm9uZTtcCn1cCi5hY2VfZ3V0dGVyLWxheWVyIHtcCnBvc2l0aW9uOiByZWxhdGl2ZTtcCndpZHRoOiBhdXRvO1wKdGV4dC1hbGlnbjogcmlnaHQ7XApwb2ludGVyLWV2ZW50czogYXV0bztcCn1cCi5hY2VfdGV4dC1sYXllciB7XApjb2xvcjogYmxhY2s7XApmb250OiBpbmhlcml0ICFpbXBvcnRhbnQ7XAp9XAouYWNlX2NqayB7XApkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XAp0ZXh0LWFsaWduOiBjZW50ZXI7XAp9XAouYWNlX2N1cnNvci1sYXllciB7XAp6LWluZGV4OiA0O1wKfVwKLmFjZV9jdXJzb3Ige1wKei1pbmRleDogNDtcCnBvc2l0aW9uOiBhYnNvbHV0ZTtcCi1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcCi13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcCmJveC1zaXppbmc6IGJvcmRlci1ib3g7XAp9XAouYWNlX2hpZGRlbi1jdXJzb3JzIC5hY2VfY3Vyc29yIHtcCm9wYWNpdHk6IDAuMjtcCn1cCi5hY2Vfc21vb3RoLWJsaW5raW5nIC5hY2VfY3Vyc29yIHtcCi1tb3otdHJhbnNpdGlvbjogb3BhY2l0eSAwLjE4cztcCi13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjE4cztcCi1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC4xOHM7XAotbXMtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjE4cztcCnRyYW5zaXRpb246IG9wYWNpdHkgMC4xOHM7XAp9XAouYWNlX2N1cnNvcltzdHlsZSo9XCJvcGFjaXR5OiAwXCJde1wKLW1zLWZpbHRlcjogXCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT0wKVwiO1wKfVwKLmFjZV9lZGl0b3IuYWNlX211bHRpc2VsZWN0IC5hY2VfY3Vyc29yIHtcCmJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7XAp9XAouYWNlX2xpbmUge1wKd2hpdGUtc3BhY2U6IG5vd3JhcDtcCn1cCi5hY2VfbWFya2VyLWxheWVyIC5hY2Vfc3RlcCB7XApwb3NpdGlvbjogYWJzb2x1dGU7XAp6LWluZGV4OiAzO1wKfVwKLmFjZV9tYXJrZXItbGF5ZXIgLmFjZV9zZWxlY3Rpb24ge1wKcG9zaXRpb246IGFic29sdXRlO1wKei1pbmRleDogNTtcCn1cCi5hY2VfbWFya2VyLWxheWVyIC5hY2VfYnJhY2tldCB7XApwb3NpdGlvbjogYWJzb2x1dGU7XAp6LWluZGV4OiA2O1wKfVwKLmFjZV9tYXJrZXItbGF5ZXIgLmFjZV9hY3RpdmUtbGluZSB7XApwb3NpdGlvbjogYWJzb2x1dGU7XAp6LWluZGV4OiAyO1wKfVwKLmFjZV9tYXJrZXItbGF5ZXIgLmFjZV9zZWxlY3RlZC13b3JkIHtcCnBvc2l0aW9uOiBhYnNvbHV0ZTtcCnotaW5kZXg6IDQ7XAotbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XAotd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XApib3gtc2l6aW5nOiBib3JkZXItYm94O1wKfVwKLmFjZV9saW5lIC5hY2VfZm9sZCB7XAotbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XAotd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XApib3gtc2l6aW5nOiBib3JkZXItYm94O1wKZGlzcGxheTogaW5saW5lLWJsb2NrO1wKaGVpZ2h0OiAxMXB4O1wKbWFyZ2luLXRvcDogLTJweDtcCnZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XApiYWNrZ3JvdW5kLWltYWdlOlwKdXJsKFwiZGF0YTppbWFnZS9wbmcsJTg5UE5HJTBEJTBBJTFBJTBBJTAwJTAwJTAwJTBESUhEUiUwMCUwMCUwMCUxMSUwMCUwMCUwMCUwOSUwOCUwNiUwMCUwMCUwMCVENCVFOCVDNyUwQyUwMCUwMCUwMyUxRWlDQ1BJQ0MlMjBQcm9maWxlJTAwJTAweCUwMSU4NVQlREZrJUQzUCUxNCVGRSVEQWUlOUQlQjAlRTElOEIlM0FnJTExJTA5JTNFaCU5MW5kU3RDJTlDJUI2a1clQkElQ0RaJUVBNiVCNyFIJTlCJUE2bSU1QyU5QSVDNiUyNCVFRH4lQjAlMDclRDklOEJvJTNBJUM1dyVGMSUwNyUzRSVGOSUwNyUwQyVEOSU4M28lN0IlOTIlMEQlQzYlMTRhJUY4JUFDJTg4JTIyTCVGNiUyMiVCMyU5RSU5QjRNJ1MlMDMlQjklRjclQkIlREYlRjklRUU5JyVFNyVFNCU1RSVBMCVGOXFaJUQzJTE0JTJGJTBGJTE0VVNPJUM1JUMyJUZDJUM0JUU0JTE0JURGJUYyJTAxJTVFJTFDQyUyQiVGQ2hNJThCJTg2JTE2SiUyNkclNDAlMEYlRDMlQjJ5JUVGJUIzJUYzJTBFJTFFJUM2bHQlRUVvJURGJUFCJUZFYyVENSU5QSU5NSUwQyUxMSVGMCUxQyUyMCVCRSU5NDUlQzQlMjIlRTFZJUEwaSU1QyVENHQlMTMlRTAlRDYlODklRUYlOUQxNSVDMiVDRExzWCVBNyUwNCUwOSUxRmc4b2MlODElRTElOEMlOEQlMjMlOTZmNDUlNDAlOUElMDklQzIlMDclQzVCJTNBSyVCOCU0MDglOThpJUUwJUYzJTBEJUQ4JUNFJTgxJTE0JUU0JyUyNiVBOSU5Mi4lOEIlM0MlQUJFUiUyRiVFNWRFJUIyJTBDJUY2JUYwJTFGcyU4MyVGMl8lQjAlQTglOTQlRTklOUIlQUQlRTclMTAlOERtJTlBJTE5TiVEMSU3QyU4QSVERSUxRjklN0RwJThDJUU2JTAwJUQ1JUMxJTNGXyUxOCVCREElQjglOURwWDYlRTMlQTM1fkIlQ0QlMjQlQUUlMTElMjYlQkQlRTclRUV0aSU5OCVFRGUlOUElOTdZKSUxMiUyNSUxQyUyNCVCQ2JUJUFFM2xpJUU2JTBCJTAzJTg5JTlBJUU2JUQzJUVEJUY0UCU5MiVCMCU5RjQlQkY0M1klRjMlRTMlRURQJTk1JTA0JUVCMSVDNSVGNSVGNktGJUY0JUJBJUJEJUQ3JURCJTkxJTkzJTA3JUUzNSUzRSVBNyklRDYlN0YlNDAlRkUlQkQlRjclRjVyJThBJUU1eSU5MiVGMCVFQiVCNCUxRSU4RCVENSVGNCU1QiU5MiUzQVYlREIlREIlRTQlQ0QlQTYlMjMlQzMlQzR3USUzRiUwM0hCJTgyJThFJTFDZCglRTAlOTFCJTBDYSU5QWMlQzQlQUElRjhMJTE2JTE5JTIySiVBNCVEMml0VHklQjI4JUQ2JTNCKCU5MyU5NiVFRCUxQ0d4JUM5XyUwRSVCOCU1RSUxNiVGNSU1QiVCMiVCOCVGNiVFMCVGQiU5RSVERCUyNSVENyU4RSVCQyUxNSU4NSVDNSVCNyVBMyVEOFElRUQlQjUlODElRTklQkElQjIlMTMlOUElMUIlN0Z1YSVBNSVBM24lRTE3JUI5JUU1JTlCJTFCbSVBQiUwQiUwOFElRkUlOEElRTUlQjFIJTVFZSVDQU8lODJRJUQ3dTYlRTYlOTBTJTk3JUZDdSUwQiVDRjIlOTQlRUUlMjV2JTEyWCUwQyVCQSVBQyVGMCU1RSVGOCpsJTBBTyU4NSUxNyVDMiU5NyVCRiVENCVDOCVDRSVERSVBRCUxMSVDQiU4MHElMkMlM0UlQUIlOUVTJUNEJUM2JUVDJTI1JUQyTCVEMiVFQmQlQjglQkYlOEElRjVCJUM2JTE4JUY5JTkwMUNaJTlEJUJFJTI0TSU5QyU4QTklRjIlREFQJTBCJyUwNnclODIlRUIlRTYlRTIlNUMlMkYlRDclMDclOUUlQkIlQ0MlNUQlRTElRkElQjklMDglQUQuciUyMyU4RSVDMiUxNyVGNUUlN0MhJUYwJUJFMyVCRSUzRV8lQjdvJTg4YSVBNyVEQiVCRSVEM2QlRUIlQTMxWiVFQiVCQiVEMyU5MSVCQSVBMiVCMXolOTQlOEYlREInJUY2JTNEJThFJUFBJTEzJTE5JUIyJUIxJUJFJUIxflYlMDglMkIlQjQlQTJjakolQjN0TyUwMCUwMyUyNW1OJTk3JUYzJTA1JTkzJUVGJTExJTg0JTBCJTdDJTg4JUFFLSU4OSU4RiVBQmJXJTkwTyUyQiUwQW8lOTklMEMlNUUlOTclMENJJUFGSCVEOS4lQjAlM0IlOEYlRUQlMDMlQjZTJUQ2JTVEJUU2aV9zOSVGMypwJUU5JTFCJUZEJUMzJUVCLjdVJTA2JTVFJTE5JUMwJUQxcy4lMTclQTAzdSVFNCUwOSVCMCU3QyU1RSUyQyVFQiUxNSVEQiUxRiUzQyU5RSVCNyU4MCU5MSUzQiVEQmMlQUQlM0RtYSVCQSU4QiUzRVYlQUIlREJ0LiU1QiUxRSUwMSVCQiUwRiVBQiVENSU5RiVDRiVBQSVENSVERCVFNyVFNCU3RiUwQnglQTMlRkMlMDYlQTklMjMlMEElRDYlQzIlQTFfMiUwMCUwMCUwMCUwOXBIWXMlMDAlMDAlMEIlMTMlMDAlMDAlMEIlMTMlMDElMDAlOUElOUMlMTglMDAlMDAlMDAlQjVJREFUKCUxNSVBNSU5MSUzRCUwRSUwMiElMTAlODVhYyVFMSUwNSVENiVDRSVENiVDNiVDRSVEMiVFOCVFRCVDRCVERSVDMCVDNiVENk4uJUUwViVGOCUzRCU5Q2ElODkxWEglQzIlQkUlRDl5JTNGJTkwISVFNiU5QyVDMyVCRmslRTUlMDExJUM2LSVGNSVDOE4lMDQlREYlQkQlRkYlODklREZ0JTgzRE4lNjAlM0UlRjMlQUIlQTAlREUlMUElNURnJUJFJTEwUSU5NyUxQiU0MCU5QyVBOG8lMTAlOEYlNUUlODI4JUI0JTFCJTYwJTg3JUY2JTAyJTI2JTg1JTFDaCUxRSVDMSUyQiU1QmslRkYlODYlRUUlQjdqJTA5JTlBJURBJTlCJUFDZSVBMyVGOSVFQyVEQSE5JUI0JUQ1JUE2JTgxJTg2JTg2JTk4JUNDJTNDJTVCJTQwJUZBJTgxJUIzJUU5JUNCJTIzJTk0JUMxNkF6byUwNSVENCVFMSVDMSU5NWElM0IlOEEnJUEwJUU4JUNDJTE3JTIyJTg1JTFEJUJBJTAwJUEyJUZBJURDJTBBJTk0JUQxJUQxJThEJThCJTNBJTg0JTE3QiVDNyU2MCUxQSUyNVolRkMlOEQlMDAlMDAlMDAlMDBJRU5EJUFFQiU2MCU4MlwiKSxcCnVybChcImRhdGE6aW1hZ2UvcG5nLCU4OVBORyUwRCUwQSUxQSUwQSUwMCUwMCUwMCUwRElIRFIlMDAlMDAlMDAlMDUlMDAlMDAlMDA3JTA4JTA2JTAwJTAwJTAwJUM0JUREJTgwQyUwMCUwMCUwMyUxRWlDQ1BJQ0MlMjBQcm9maWxlJTAwJTAweCUwMSU4NVQlREZrJUQzUCUxNCVGRSVEQWUlOUQlQjAlRTElOEIlM0FnJTExJTA5JTNFaCU5MW5kU3RDJTlDJUI2a1clQkElQ0RaJUVBNiVCNyFIJTlCJUE2bSU1QyU5QSVDNiUyNCVFRH4lQjAlMDclRDklOEJvJTNBJUM1dyVGMSUwNyUzRSVGOSUwNyUwQyVEOSU4M28lN0IlOTIlMEQlQzYlMTRhJUY4JUFDJTg4JTIyTCVGNiUyMiVCMyU5RSU5QjRNJ1MlMDMlQjklRjclQkIlREYlRjklRUU5JyVFNyVFNCU1RSVBMCVGOXFaJUQzJTE0JTJGJTBGJTE0VVNPJUM1JUMyJUZDJUM0JUU0JTE0JURGJUYyJTAxJTVFJTFDQyUyQiVGQ2hNJThCJTg2JTE2SiUyNkclNDAlMEYlRDMlQjJ5JUVGJUIzJUYzJTBFJTFFJUM2bHQlRUVvJURGJUFCJUZFYyVENSU5QSU5NSUwQyUxMSVGMCUxQyUyMCVCRSU5NDUlQzQlMjIlRTFZJUEwaSU1QyVENHQlMTMlRTAlRDYlODklRUYlOUQxNSVDMiVDRExzWCVBNyUwNCUwOSUxRmc4b2MlODElRTElOEMlOEQlMjMlOTZmNDUlNDAlOUElMDklQzIlMDclQzVCJTNBSyVCOCU0MDglOThpJUUwJUYzJTBEJUQ4JUNFJTgxJTE0JUU0JyUyNiVBOSU5Mi4lOEIlM0MlQUJFUiUyRiVFNWRFJUIyJTBDJUY2JUYwJTFGcyU4MyVGMl8lQjAlQTglOTQlRTklOUIlQUQlRTclMTAlOERtJTlBJTE5TiVEMSU3QyU4QSVERSUxRjklN0RwJThDJUU2JTAwJUQ1JUMxJTNGXyUxOCVCREElQjglOURwWDYlRTMlQTM1fkIlQ0QlMjQlQUUlMTElMjYlQkQlRTclRUV0aSU5OCVFRGUlOUElOTdZKSUxMiUyNSUxQyUyNCVCQ2JUJUFFM2xpJUU2JTBCJTAzJTg5JTlBJUU2JUQzJUVEJUY0UCU5MiVCMCU5RjQlQkY0M1klRjMlRTMlRURQJTk1JTA0JUVCMSVDNSVGNSVGNktGJUY0JUJBJUJEJUQ3JURCJTkxJTkzJTA3JUUzNSUzRSVBNyklRDYlN0YlNDAlRkUlQkQlRjclRjVyJThBJUU1eSU5MiVGMCVFQiVCNCUxRSU4RCVENSVGNCU1QiU5MiUzQVYlREIlREIlRTQlQ0QlQTYlMjMlQzMlQzR3USUzRiUwM0hCJTgyJThFJTFDZCglRTAlOTFCJTBDYSU5QWMlQzQlQUElRjhMJTE2JTE5JTIySiVBNCVEMml0VHklQjI4JUQ2JTNCKCU5MyU5NiVFRCUxQ0d4JUM5XyUwRSVCOCU1RSUxNiVGNSU1QiVCMiVCOCVGNiVFMCVGQiU5RSVERCUyNSVENyU4RSVCQyUxNSU4NSVDNSVCNyVBMyVEOFElRUQlQjUlODElRTklQkElQjIlMTMlOUElMUIlN0Z1YSVBNSVBM24lRTE3JUI5JUU1JTlCJTFCbSVBQiUwQiUwOFElRkUlOEElRTUlQjFIJTVFZSVDQU8lODJRJUQ3dTYlRTYlOTBTJTk3JUZDdSUwQiVDRjIlOTQlRUUlMjV2JTEyWCUwQyVCQSVBQyVGMCU1RSVGOCpsJTBBTyU4NSUxNyVDMiU5NyVCRiVENCVDOCVDRSVERSVBRCUxMSVDQiU4MHElMkMlM0UlQUIlOUVTJUNEJUM2JUVDJTI1JUQyTCVEMiVFQmQlQjglQkYlOEElRjVCJUM2JTE4JUY5JTkwMUNaJTlEJUJFJTI0TSU5QyU4QTklRjIlREFQJTBCJyUwNnclODIlRUIlRTYlRTIlNUMlMkYlRDclMDclOUUlQkIlQ0MlNUQlRTElRkElQjklMDglQUQuciUyMyU4RSVDMiUxNyVGNUUlN0MhJUYwJUJFMyVCRSUzRV8lQjdvJTg4YSVBNyVEQiVCRSVEM2QlRUIlQTMxWiVFQiVCQiVEMyU5MSVCQSVBMiVCMXolOTQlOEYlREInJUY2JTNEJThFJUFBJTEzJTE5JUIyJUIxJUJFJUIxflYlMDglMkIlQjQlQTJjakolQjN0TyUwMCUwMyUyNW1OJTk3JUYzJTA1JTkzJUVGJTExJTg0JTBCJTdDJTg4JUFFLSU4OSU4RiVBQmJXJTkwTyUyQiUwQW8lOTklMEMlNUUlOTclMENJJUFGSCVEOS4lQjAlM0IlOEYlRUQlMDMlQjZTJUQ2JTVEJUU2aV9zOSVGMypwJUU5JTFCJUZEJUMzJUVCLjdVJTA2JTVFJTE5JUMwJUQxcy4lMTclQTAzdSVFNCUwOSVCMCU3QyU1RSUyQyVFQiUxNSVEQiUxRiUzQyU5RSVCNyU4MCU5MSUzQiVEQmMlQUQlM0RtYSVCQSU4QiUzRVYlQUIlREJ0LiU1QiUxRSUwMSVCQiUwRiVBQiVENSU5RiVDRiVBQSVENSVERCVFNyVFNCU3RiUwQnglQTMlRkMlMDYlQTklMjMlMEElRDYlQzIlQTFfMiUwMCUwMCUwMCUwOXBIWXMlMDAlMDAlMEIlMTMlMDAlMDAlMEIlMTMlMDElMDAlOUElOUMlMTglMDAlMDAlMDAlM0FJREFUOCUxMWMlRkMlRkYlRkYlN0YlMTglMDMlMUElNjAlMDElRjIlM0YlQTAlODkxJTgwJTA0JUZGJTExLSVGOCUxNyU5QkolRTIlMDUlQjFaRCU4MXYlMjZ0JUU3JTgwJUY4JUEzJTgyaCVBMTIlMUElMjAlQTMlMDElMDIlMEYlMDElQkElMjUlMDYlMDAlMTklQzAlMEQlQUVGJUQ1JTNFUyUwMCUwMCUwMCUwMElFTkQlQUVCJTYwJTgyXCIpO1wKYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdCwgcmVwZWF0LXg7XApiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyLCB0b3AgbGVmdDtcCmNvbG9yOiB0cmFuc3BhcmVudDtcCmJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1wKLW1vei1ib3JkZXItcmFkaXVzOiAycHg7XAotd2Via2l0LWJvcmRlci1yYWRpdXM6IDJweDtcCmJvcmRlci1yYWRpdXM6IDJweDtcCmN1cnNvcjogcG9pbnRlcjtcCnBvaW50ZXItZXZlbnRzOiBhdXRvO1wKfVwKLmFjZV9kYXJrIC5hY2VfZm9sZCB7XAp9XAouYWNlX2ZvbGQ6aG92ZXJ7XApiYWNrZ3JvdW5kLWltYWdlOlwKdXJsKFwiZGF0YTppbWFnZS9wbmcsJTg5UE5HJTBEJTBBJTFBJTBBJTAwJTAwJTAwJTBESUhEUiUwMCUwMCUwMCUxMSUwMCUwMCUwMCUwOSUwOCUwNiUwMCUwMCUwMCVENCVFOCVDNyUwQyUwMCUwMCUwMyUxRWlDQ1BJQ0MlMjBQcm9maWxlJTAwJTAweCUwMSU4NVQlREZrJUQzUCUxNCVGRSVEQWUlOUQlQjAlRTElOEIlM0FnJTExJTA5JTNFaCU5MW5kU3RDJTlDJUI2a1clQkElQ0RaJUVBNiVCNyFIJTlCJUE2bSU1QyU5QSVDNiUyNCVFRH4lQjAlMDclRDklOEJvJTNBJUM1dyVGMSUwNyUzRSVGOSUwNyUwQyVEOSU4M28lN0IlOTIlMEQlQzYlMTRhJUY4JUFDJTg4JTIyTCVGNiUyMiVCMyU5RSU5QjRNJ1MlMDMlQjklRjclQkIlREYlRjklRUU5JyVFNyVFNCU1RSVBMCVGOXFaJUQzJTE0JTJGJTBGJTE0VVNPJUM1JUMyJUZDJUM0JUU0JTE0JURGJUYyJTAxJTVFJTFDQyUyQiVGQ2hNJThCJTg2JTE2SiUyNkclNDAlMEYlRDMlQjJ5JUVGJUIzJUYzJTBFJTFFJUM2bHQlRUVvJURGJUFCJUZFYyVENSU5QSU5NSUwQyUxMSVGMCUxQyUyMCVCRSU5NDUlQzQlMjIlRTFZJUEwaSU1QyVENHQlMTMlRTAlRDYlODklRUYlOUQxNSVDMiVDRExzWCVBNyUwNCUwOSUxRmc4b2MlODElRTElOEMlOEQlMjMlOTZmNDUlNDAlOUElMDklQzIlMDclQzVCJTNBSyVCOCU0MDglOThpJUUwJUYzJTBEJUQ4JUNFJTgxJTE0JUU0JyUyNiVBOSU5Mi4lOEIlM0MlQUJFUiUyRiVFNWRFJUIyJTBDJUY2JUYwJTFGcyU4MyVGMl8lQjAlQTglOTQlRTklOUIlQUQlRTclMTAlOERtJTlBJTE5TiVEMSU3QyU4QSVERSUxRjklN0RwJThDJUU2JTAwJUQ1JUMxJTNGXyUxOCVCREElQjglOURwWDYlRTMlQTM1fkIlQ0QlMjQlQUUlMTElMjYlQkQlRTclRUV0aSU5OCVFRGUlOUElOTdZKSUxMiUyNSUxQyUyNCVCQ2JUJUFFM2xpJUU2JTBCJTAzJTg5JTlBJUU2JUQzJUVEJUY0UCU5MiVCMCU5RjQlQkY0M1klRjMlRTMlRURQJTk1JTA0JUVCMSVDNSVGNSVGNktGJUY0JUJBJUJEJUQ3JURCJTkxJTkzJTA3JUUzNSUzRSVBNyklRDYlN0YlNDAlRkUlQkQlRjclRjVyJThBJUU1eSU5MiVGMCVFQiVCNCUxRSU4RCVENSVGNCU1QiU5MiUzQVYlREIlREIlRTQlQ0QlQTYlMjMlQzMlQzR3USUzRiUwM0hCJTgyJThFJTFDZCglRTAlOTFCJTBDYSU5QWMlQzQlQUElRjhMJTE2JTE5JTIySiVBNCVEMml0VHklQjI4JUQ2JTNCKCU5MyU5NiVFRCUxQ0d4JUM5XyUwRSVCOCU1RSUxNiVGNSU1QiVCMiVCOCVGNiVFMCVGQiU5RSVERCUyNSVENyU4RSVCQyUxNSU4NSVDNSVCNyVBMyVEOFElRUQlQjUlODElRTklQkElQjIlMTMlOUElMUIlN0Z1YSVBNSVBM24lRTE3JUI5JUU1JTlCJTFCbSVBQiUwQiUwOFElRkUlOEElRTUlQjFIJTVFZSVDQU8lODJRJUQ3dTYlRTYlOTBTJTk3JUZDdSUwQiVDRjIlOTQlRUUlMjV2JTEyWCUwQyVCQSVBQyVGMCU1RSVGOCpsJTBBTyU4NSUxNyVDMiU5NyVCRiVENCVDOCVDRSVERSVBRCUxMSVDQiU4MHElMkMlM0UlQUIlOUVTJUNEJUM2JUVDJTI1JUQyTCVEMiVFQmQlQjglQkYlOEElRjVCJUM2JTE4JUY5JTkwMUNaJTlEJUJFJTI0TSU5QyU4QTklRjIlREFQJTBCJyUwNnclODIlRUIlRTYlRTIlNUMlMkYlRDclMDclOUUlQkIlQ0MlNUQlRTElRkElQjklMDglQUQuciUyMyU4RSVDMiUxNyVGNUUlN0MhJUYwJUJFMyVCRSUzRV8lQjdvJTg4YSVBNyVEQiVCRSVEM2QlRUIlQTMxWiVFQiVCQiVEMyU5MSVCQSVBMiVCMXolOTQlOEYlREInJUY2JTNEJThFJUFBJTEzJTE5JUIyJUIxJUJFJUIxflYlMDglMkIlQjQlQTJjakolQjN0TyUwMCUwMyUyNW1OJTk3JUYzJTA1JTkzJUVGJTExJTg0JTBCJTdDJTg4JUFFLSU4OSU4RiVBQmJXJTkwTyUyQiUwQW8lOTklMEMlNUUlOTclMENJJUFGSCVEOS4lQjAlM0IlOEYlRUQlMDMlQjZTJUQ2JTVEJUU2aV9zOSVGMypwJUU5JTFCJUZEJUMzJUVCLjdVJTA2JTVFJTE5JUMwJUQxcy4lMTclQTAzdSVFNCUwOSVCMCU3QyU1RSUyQyVFQiUxNSVEQiUxRiUzQyU5RSVCNyU4MCU5MSUzQiVEQmMlQUQlM0RtYSVCQSU4QiUzRVYlQUIlREJ0LiU1QiUxRSUwMSVCQiUwRiVBQiVENSU5RiVDRiVBQSVENSVERCVFNyVFNCU3RiUwQnglQTMlRkMlMDYlQTklMjMlMEElRDYlQzIlQTFfMiUwMCUwMCUwMCUwOXBIWXMlMDAlMDAlMEIlMTMlMDAlMDAlMEIlMTMlMDElMDAlOUElOUMlMTglMDAlMDAlMDAlQjVJREFUKCUxNSVBNSU5MSUzRCUwRSUwMiElMTAlODVhYyVFMSUwNSVENiVDRSVENiVDNiVDRSVEMiVFOCVFRCVDRCVERSVDMCVDNiVENk4uJUUwViVGOCUzRCU5Q2ElODkxWEglQzIlQkUlRDl5JTNGJTkwISVFNiU5QyVDMyVCRmslRTUlMDExJUM2LSVGNSVDOE4lMDQlREYlQkQlRkYlODklREZ0JTgzRE4lNjAlM0UlRjMlQUIlQTAlREUlMUElNURnJUJFJTEwUSU5NyUxQiU0MCU5QyVBOG8lMTAlOEYlNUUlODI4JUI0JTFCJTYwJTg3JUY2JTAyJTI2JTg1JTFDaCUxRSVDMSUyQiU1QmslRkYlODYlRUUlQjdqJTA5JTlBJURBJTlCJUFDZSVBMyVGOSVFQyVEQSE5JUI0JUQ1JUE2JTgxJTg2JTg2JTk4JUNDJTNDJTVCJTQwJUZBJTgxJUIzJUU5JUNCJTIzJTk0JUMxNkF6byUwNSVENCVFMSVDMSU5NWElM0IlOEEnJUEwJUU4JUNDJTE3JTIyJTg1JTFEJUJBJTAwJUEyJUZBJURDJTBBJTk0JUQxJUQxJThEJThCJTNBJTg0JTE3QiVDNyU2MCUxQSUyNVolRkMlOEQlMDAlMDAlMDAlMDBJRU5EJUFFQiU2MCU4MlwiKSxcCnVybChcImRhdGE6aW1hZ2UvcG5nLCU4OVBORyUwRCUwQSUxQSUwQSUwMCUwMCUwMCUwRElIRFIlMDAlMDAlMDAlMDUlMDAlMDAlMDA3JTA4JTA2JTAwJTAwJTAwJUM0JUREJTgwQyUwMCUwMCUwMyUxRWlDQ1BJQ0MlMjBQcm9maWxlJTAwJTAweCUwMSU4NVQlREZrJUQzUCUxNCVGRSVEQWUlOUQlQjAlRTElOEIlM0FnJTExJTA5JTNFaCU5MW5kU3RDJTlDJUI2a1clQkElQ0RaJUVBNiVCNyFIJTlCJUE2bSU1QyU5QSVDNiUyNCVFRH4lQjAlMDclRDklOEJvJTNBJUM1dyVGMSUwNyUzRSVGOSUwNyUwQyVEOSU4M28lN0IlOTIlMEQlQzYlMTRhJUY4JUFDJTg4JTIyTCVGNiUyMiVCMyU5RSU5QjRNJ1MlMDMlQjklRjclQkIlREYlRjklRUU5JyVFNyVFNCU1RSVBMCVGOXFaJUQzJTE0JTJGJTBGJTE0VVNPJUM1JUMyJUZDJUM0JUU0JTE0JURGJUYyJTAxJTVFJTFDQyUyQiVGQ2hNJThCJTg2JTE2SiUyNkclNDAlMEYlRDMlQjJ5JUVGJUIzJUYzJTBFJTFFJUM2bHQlRUVvJURGJUFCJUZFYyVENSU5QSU5NSUwQyUxMSVGMCUxQyUyMCVCRSU5NDUlQzQlMjIlRTFZJUEwaSU1QyVENHQlMTMlRTAlRDYlODklRUYlOUQxNSVDMiVDRExzWCVBNyUwNCUwOSUxRmc4b2MlODElRTElOEMlOEQlMjMlOTZmNDUlNDAlOUElMDklQzIlMDclQzVCJTNBSyVCOCU0MDglOThpJUUwJUYzJTBEJUQ4JUNFJTgxJTE0JUU0JyUyNiVBOSU5Mi4lOEIlM0MlQUJFUiUyRiVFNWRFJUIyJTBDJUY2JUYwJTFGcyU4MyVGMl8lQjAlQTglOTQlRTklOUIlQUQlRTclMTAlOERtJTlBJTE5TiVEMSU3QyU4QSVERSUxRjklN0RwJThDJUU2JTAwJUQ1JUMxJTNGXyUxOCVCREElQjglOURwWDYlRTMlQTM1fkIlQ0QlMjQlQUUlMTElMjYlQkQlRTclRUV0aSU5OCVFRGUlOUElOTdZKSUxMiUyNSUxQyUyNCVCQ2JUJUFFM2xpJUU2JTBCJTAzJTg5JTlBJUU2JUQzJUVEJUY0UCU5MiVCMCU5RjQlQkY0M1klRjMlRTMlRURQJTk1JTA0JUVCMSVDNSVGNSVGNktGJUY0JUJBJUJEJUQ3JURCJTkxJTkzJTA3JUUzNSUzRSVBNyklRDYlN0YlNDAlRkUlQkQlRjclRjVyJThBJUU1eSU5MiVGMCVFQiVCNCUxRSU4RCVENSVGNCU1QiU5MiUzQVYlREIlREIlRTQlQ0QlQTYlMjMlQzMlQzR3USUzRiUwM0hCJTgyJThFJTFDZCglRTAlOTFCJTBDYSU5QWMlQzQlQUElRjhMJTE2JTE5JTIySiVBNCVEMml0VHklQjI4JUQ2JTNCKCU5MyU5NiVFRCUxQ0d4JUM5XyUwRSVCOCU1RSUxNiVGNSU1QiVCMiVCOCVGNiVFMCVGQiU5RSVERCUyNSVENyU4RSVCQyUxNSU4NSVDNSVCNyVBMyVEOFElRUQlQjUlODElRTklQkElQjIlMTMlOUElMUIlN0Z1YSVBNSVBM24lRTE3JUI5JUU1JTlCJTFCbSVBQiUwQiUwOFElRkUlOEElRTUlQjFIJTVFZSVDQU8lODJRJUQ3dTYlRTYlOTBTJTk3JUZDdSUwQiVDRjIlOTQlRUUlMjV2JTEyWCUwQyVCQSVBQyVGMCU1RSVGOCpsJTBBTyU4NSUxNyVDMiU5NyVCRiVENCVDOCVDRSVERSVBRCUxMSVDQiU4MHElMkMlM0UlQUIlOUVTJUNEJUM2JUVDJTI1JUQyTCVEMiVFQmQlQjglQkYlOEElRjVCJUM2JTE4JUY5JTkwMUNaJTlEJUJFJTI0TSU5QyU4QTklRjIlREFQJTBCJyUwNnclODIlRUIlRTYlRTIlNUMlMkYlRDclMDclOUUlQkIlQ0MlNUQlRTElRkElQjklMDglQUQuciUyMyU4RSVDMiUxNyVGNUUlN0MhJUYwJUJFMyVCRSUzRV8lQjdvJTg4YSVBNyVEQiVCRSVEM2QlRUIlQTMxWiVFQiVCQiVEMyU5MSVCQSVBMiVCMXolOTQlOEYlREInJUY2JTNEJThFJUFBJTEzJTE5JUIyJUIxJUJFJUIxflYlMDglMkIlQjQlQTJjakolQjN0TyUwMCUwMyUyNW1OJTk3JUYzJTA1JTkzJUVGJTExJTg0JTBCJTdDJTg4JUFFLSU4OSU4RiVBQmJXJTkwTyUyQiUwQW8lOTklMEMlNUUlOTclMENJJUFGSCVEOS4lQjAlM0IlOEYlRUQlMDMlQjZTJUQ2JTVEJUU2aV9zOSVGMypwJUU5JTFCJUZEJUMzJUVCLjdVJTA2JTVFJTE5JUMwJUQxcy4lMTclQTAzdSVFNCUwOSVCMCU3QyU1RSUyQyVFQiUxNSVEQiUxRiUzQyU5RSVCNyU4MCU5MSUzQiVEQmMlQUQlM0RtYSVCQSU4QiUzRVYlQUIlREJ0LiU1QiUxRSUwMSVCQiUwRiVBQiVENSU5RiVDRiVBQSVENSVERCVFNyVFNCU3RiUwQnglQTMlRkMlMDYlQTklMjMlMEElRDYlQzIlQTFfMiUwMCUwMCUwMCUwOXBIWXMlMDAlMDAlMEIlMTMlMDAlMDAlMEIlMTMlMDElMDAlOUElOUMlMTglMDAlMDAlMDAzSURBVDglMTFjJUZDJUZGJUZGJTdGJTNFJTAzJTFBJTYwJTAxJUYyJTNGJUEzJTg5MSU4MCUwNCVGRlElMjYlRjh3JUMwJUI0MyVBMSVEQiUwQyVFMiU4RiUwQSVBMiU4NSVDQWglODAlOEMlMDYlMDglM0MlMDQlRTglOTYlMTglMDAlQTNTJTBEJUNEJUNGJUQ4JUMxJTlEJTAwJTAwJTAwJTAwSUVORCVBRUIlNjAlODJcIik7XApiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0LCByZXBlYXQteDtcCmJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXIsIHRvcCBsZWZ0O1wKfVwKLmFjZV9lZGl0b3IuYWNlX2RyYWdnaW5nIC5hY2VfY29udGVudCB7XApjdXJzb3I6IG1vdmU7XAp9XAouYWNlX2d1dHRlci10b29sdGlwIHtcCmJhY2tncm91bmQtY29sb3I6ICNGRkY7XApiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHRyYW5zcGFyZW50LCByZ2JhKDAsIDAsIDAsIDAuMSkpO1wKYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgdHJhbnNwYXJlbnQsIHJnYmEoMCwgMCwgMCwgMC4xKSk7XApib3JkZXI6IDFweCBzb2xpZCBncmF5O1wKYm9yZGVyLXJhZGl1czogMXB4O1wKYm94LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcCmNvbG9yOiBibGFjaztcCmRpc3BsYXk6IGlubGluZS1ibG9jaztcCm1heC13aWR0aDogNTAwcHg7XApwYWRkaW5nOiA0cHg7XApwb3NpdGlvbjogZml4ZWQ7XAp6LWluZGV4OiAzMDA7XAotbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XAotd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XApib3gtc2l6aW5nOiBib3JkZXItYm94O1wKY3Vyc29yOiBkZWZhdWx0O1wKd2hpdGUtc3BhY2U6IHByZS1saW5lO1wKd29yZC13cmFwOiBicmVhay13b3JkO1wKbGluZS1oZWlnaHQ6IG5vcm1hbDtcCmZvbnQtc3R5bGU6IG5vcm1hbDtcCmZvbnQtd2VpZ2h0OiBub3JtYWw7XApsZXR0ZXItc3BhY2luZzogbm9ybWFsO1wKfVwKLmFjZV9mb2xkaW5nLWVuYWJsZWQgPiAuYWNlX2d1dHRlci1jZWxsIHtcCnBhZGRpbmctcmlnaHQ6IDEzcHg7XAp9XAouYWNlX2ZvbGQtd2lkZ2V0IHtcCi1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcCi13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcCmJveC1zaXppbmc6IGJvcmRlci1ib3g7XAptYXJnaW46IDAgLTEycHggMCAxcHg7XApkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XAp3aWR0aDogMTFweDtcCnZlcnRpY2FsLWFsaWduOiB0b3A7XApiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3BuZywlODlQTkclMEQlMEElMUElMEElMDAlMDAlMDAlMERJSERSJTAwJTAwJTAwJTA1JTAwJTAwJTAwJTA1JTA4JTA2JTAwJTAwJTAwJThEbyUyNiVFNSUwMCUwMCUwMDRJREFUeCVEQWUlOEElQjElMEQlMDAwJTBDJUMyJUYyJTJDSyU5NiVCQyVEMCU4RjklODElODhIJUU5JUQwJTBFJTk2JUMwJTEwJTkyJTNFJTAyJTgwJTVFJTgyJUU0JUE5Ki0lRUVzdyVDOCVDQyUxMSVFRSU5NnclRDglREMlRTkqRWglMEMlMTUxKCUwMCUwMCUwMCUwMElFTkQlQUVCJTYwJTgyXCIpO1wKYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcCmJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcCmJvcmRlci1yYWRpdXM6IDNweDtcCmJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1wKfVwKLmFjZV9mb2xkLXdpZGdldC5hY2VfZW5kIHtcCmJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2UvcG5nLCU4OVBORyUwRCUwQSUxQSUwQSUwMCUwMCUwMCUwRElIRFIlMDAlMDAlMDAlMDUlMDAlMDAlMDAlMDUlMDglMDYlMDAlMDAlMDAlOERvJTI2JUU1JTAwJTAwJTAwNElEQVR4JURBbSVDNyVDMSUwOSUwMDAlMDhDJUQxJThDJUVDRSVDOEUoJThFJUVDJTAyKSUxRVpKJUYxJUMxJyUwNCUwN0klRTElRTUlRUUlQ0FMJUY1JUEyJTk5JTk5JTIyJUUyJUQ2JTFGVSVCNSVGRTAlRDl4JUE3JTI2V3o1JTBFJUQ1JTAwJTAwJTAwJTAwSUVORCVBRUIlNjAlODJcIik7XAp9XAouYWNlX2ZvbGQtd2lkZ2V0LmFjZV9jbG9zZWQge1wKYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9wbmcsJTg5UE5HJTBEJTBBJTFBJTBBJTAwJTAwJTAwJTBESUhEUiUwMCUwMCUwMCUwMyUwMCUwMCUwMCUwNiUwOCUwNiUwMCUwMCUwMCUwNiVFNSUyNCUwQyUwMCUwMCUwMDlJREFUeCVEQTUlQ0ElQzElMDklMDAwJTA4JTAzJUMwJUFDKiglM0UlMDQlQzElMEQlQkElQjElMjMlQTRVaCVFMCUyMCU4MSVDMCVDQyVGOCU4MiU4MSVBQSVBMiVBQXJHZnIlODglMDglMTElMTElMUMlREQlN0QlRTAlRUUlNUIlRjYlRjYlQ0IlQjglMDVRJTJGJUU5dGFpJUQ5JTAwJTAwJTAwJTAwSUVORCVBRUIlNjAlODJcIik7XAp9XAouYWNlX2ZvbGQtd2lkZ2V0OmhvdmVyIHtcCmJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4zKTtcCmJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcCi1tb3otYm94LXNoYWRvdzogMCAxcHggMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcCi13ZWJraXQtYm94LXNoYWRvdzogMCAxcHggMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcCmJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XAp9XAouYWNlX2ZvbGQtd2lkZ2V0OmFjdGl2ZSB7XApib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNCk7XApiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1wKLW1vei1ib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1wKLXdlYmtpdC1ib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1wKYm94LXNoYWRvdzogMCAxcHggMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcCn1cCi8qKlwKKiBEYXJrIHZlcnNpb24gZm9yIGZvbGQgd2lkZ2V0c1wKKi9cCi5hY2VfZGFyayAuYWNlX2ZvbGQtd2lkZ2V0IHtcCmJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIa2xFUVZRSVcyUDQvLzgvQXpvR0VRN29HQ2FMTEFoV2lTd0IxNDZCQVFDU1RQWW9jcVQwQUFBQUFFbEZUa1N1UW1DQ1wiKTtcCn1cCi5hY2VfZGFyayAuYWNlX2ZvbGQtd2lkZ2V0LmFjZV9lbmQge1wKYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBVUFBQUFGQ0FZQUFBQ05ieWJsQUFBQUgwbEVRVlFJVzJQNC8vOC9BeFE3d05qSUFqRE1nQzRBeGpDVktCaXJJQUFGMGt6MnJsaHhwQUFBQUFCSlJVNUVya0pnZ2c9PVwiKTtcCn1cCi5hY2VfZGFyayAuYWNlX2ZvbGQtd2lkZ2V0LmFjZV9jbG9zZWQge1wKYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBTUFBQUFGQ0FZQUFBQ0FjVmFpQUFBQUhFbEVRVlFJVzJQNC8vKy9BeEF6Z0RBRGxPT0F6bkhBS2dQV0F3QVJqaThVSURUZlFRQUFBQUJKUlU1RXJrSmdnZz09XCIpO1wKfVwKLmFjZV9kYXJrIC5hY2VfZm9sZC13aWRnZXQ6aG92ZXIge1wKYm94LXNoYWRvdzogMCAxcHggMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcCmJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcCn1cCi5hY2VfZGFyayAuYWNlX2ZvbGQtd2lkZ2V0OmFjdGl2ZSB7XAotbW96LWJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XAotd2Via2l0LWJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XApib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1wKfVwKLmFjZV9mb2xkLXdpZGdldC5hY2VfaW52YWxpZCB7XApiYWNrZ3JvdW5kLWNvbG9yOiAjRkZCNEI0O1wKYm9yZGVyLWNvbG9yOiAjREU1NTU1O1wKfVwKLmFjZV9mYWRlLWZvbGQtd2lkZ2V0cyAuYWNlX2ZvbGQtd2lkZ2V0IHtcCi1tb3otdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UgMC4wNXM7XAotd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBlYXNlIDAuMDVzO1wKLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UgMC4wNXM7XAotbXMtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UgMC4wNXM7XAp0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgZWFzZSAwLjA1cztcCm9wYWNpdHk6IDA7XAp9XAouYWNlX2ZhZGUtZm9sZC13aWRnZXRzOmhvdmVyIC5hY2VfZm9sZC13aWRnZXQge1wKLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMDVzIGVhc2UgMC4wNXM7XAotd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4wNXMgZWFzZSAwLjA1cztcCi1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC4wNXMgZWFzZSAwLjA1cztcCi1tcy10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMDVzIGVhc2UgMC4wNXM7XAp0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMDVzIGVhc2UgMC4wNXM7XApvcGFjaXR5OjE7XAp9XAouYWNlX3VuZGVybGluZSB7XAp0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcCn1cCi5hY2VfYm9sZCB7XApmb250LXdlaWdodDogYm9sZDtcCn1cCi5hY2Vfbm9ib2xkIC5hY2VfYm9sZCB7XApmb250LXdlaWdodDogbm9ybWFsO1wKfVwKLmFjZV9pdGFsaWMge1wKZm9udC1zdHlsZTogaXRhbGljO1wKfVwKIjsKCmRvbS5pbXBvcnRDc3NTdHJpbmcoZWRpdG9yQ3NzLCAiYWNlX2VkaXRvciIpOwoKdmFyIFZpcnR1YWxSZW5kZXJlciA9IGZ1bmN0aW9uKGNvbnRhaW5lciwgdGhlbWUpIHsKICAgIHZhciBfc2VsZiA9IHRoaXM7CgogICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXIgfHwgZG9tLmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdGhpcy4ka2VlcFRleHRBcmVhQXRDdXJzb3IgPSAhdXNlcmFnZW50LmlzSUU7CgogICAgZG9tLmFkZENzc0NsYXNzKHRoaXMuY29udGFpbmVyLCAiYWNlX2VkaXRvciIpOwoKICAgIHRoaXMuc2V0VGhlbWUodGhlbWUpOwoKICAgIHRoaXMuJGd1dHRlciA9IGRvbS5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIHRoaXMuJGd1dHRlci5jbGFzc05hbWUgPSAiYWNlX2d1dHRlciI7CiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLiRndXR0ZXIpOwoKICAgIHRoaXMuc2Nyb2xsZXIgPSBkb20uY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICB0aGlzLnNjcm9sbGVyLmNsYXNzTmFtZSA9ICJhY2Vfc2Nyb2xsZXIiOwogICAgdGhpcy5jb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5zY3JvbGxlcik7CgogICAgdGhpcy5jb250ZW50ID0gZG9tLmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdGhpcy5jb250ZW50LmNsYXNzTmFtZSA9ICJhY2VfY29udGVudCI7CiAgICB0aGlzLnNjcm9sbGVyLmFwcGVuZENoaWxkKHRoaXMuY29udGVudCk7CgogICAgdGhpcy5zZXRIaWdobGlnaHRHdXR0ZXJMaW5lKHRydWUpOwogICAgdGhpcy4kZ3V0dGVyTGF5ZXIgPSBuZXcgR3V0dGVyTGF5ZXIodGhpcy4kZ3V0dGVyKTsKICAgIHRoaXMuJGd1dHRlckxheWVyLm9uKCJjaGFuZ2VHdXR0ZXJXaWR0aCIsIHRoaXMub25HdXR0ZXJSZXNpemUuYmluZCh0aGlzKSk7CgogICAgdGhpcy4kbWFya2VyQmFjayA9IG5ldyBNYXJrZXJMYXllcih0aGlzLmNvbnRlbnQpOwoKICAgIHZhciB0ZXh0TGF5ZXIgPSB0aGlzLiR0ZXh0TGF5ZXIgPSBuZXcgVGV4dExheWVyKHRoaXMuY29udGVudCk7CiAgICB0aGlzLmNhbnZhcyA9IHRleHRMYXllci5lbGVtZW50OwoKICAgIHRoaXMuJG1hcmtlckZyb250ID0gbmV3IE1hcmtlckxheWVyKHRoaXMuY29udGVudCk7CgogICAgdGhpcy4kY3Vyc29yTGF5ZXIgPSBuZXcgQ3Vyc29yTGF5ZXIodGhpcy5jb250ZW50KTsKICAgIHRoaXMuJGhvcml6U2Nyb2xsID0gZmFsc2U7CiAgICB0aGlzLiRob3JpelNjcm9sbEFsd2F5c1Zpc2libGUgPSBmYWxzZTsKCiAgICB0aGlzLiRhbmltYXRlZFNjcm9sbCA9IGZhbHNlOwoKICAgIHRoaXMuc2Nyb2xsQmFyID0gbmV3IFNjcm9sbEJhcih0aGlzLmNvbnRhaW5lcik7CiAgICB0aGlzLnNjcm9sbEJhci5hZGRFdmVudExpc3RlbmVyKCJzY3JvbGwiLCBmdW5jdGlvbihlKSB7CiAgICAgICAgaWYgKCFfc2VsZi4kaW5TY3JvbGxBbmltYXRpb24pCiAgICAgICAgICAgIF9zZWxmLnNlc3Npb24uc2V0U2Nyb2xsVG9wKGUuZGF0YSk7CiAgICB9KTsKCiAgICB0aGlzLnNjcm9sbFRvcCA9IDA7CiAgICB0aGlzLnNjcm9sbExlZnQgPSAwOwoKICAgIGV2ZW50LmFkZExpc3RlbmVyKHRoaXMuc2Nyb2xsZXIsICJzY3JvbGwiLCBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgc2Nyb2xsTGVmdCA9IF9zZWxmLnNjcm9sbGVyLnNjcm9sbExlZnQ7CiAgICAgICAgX3NlbGYuc2Nyb2xsTGVmdCA9IHNjcm9sbExlZnQ7CiAgICAgICAgX3NlbGYuc2Vzc2lvbi5zZXRTY3JvbGxMZWZ0KHNjcm9sbExlZnQpOwogICAgfSk7CgogICAgdGhpcy5jdXJzb3JQb3MgPSB7CiAgICAgICAgcm93IDogMCwKICAgICAgICBjb2x1bW4gOiAwCiAgICB9OwoKICAgIHRoaXMuJHRleHRMYXllci5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2VDaGFyYWN0ZXJTaXplIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgX3NlbGYudXBkYXRlQ2hhcmFjdGVyU2l6ZSgpOwogICAgICAgIF9zZWxmLm9uUmVzaXplKHRydWUpOwogICAgfSk7CgogICAgdGhpcy4kc2l6ZSA9IHsKICAgICAgICB3aWR0aDogMCwKICAgICAgICBoZWlnaHQ6IDAsCiAgICAgICAgc2Nyb2xsZXJIZWlnaHQ6IDAsCiAgICAgICAgc2Nyb2xsZXJXaWR0aDogMAogICAgfTsKCiAgICB0aGlzLmxheWVyQ29uZmlnID0gewogICAgICAgIHdpZHRoIDogMSwKICAgICAgICBwYWRkaW5nIDogMCwKICAgICAgICBmaXJzdFJvdyA6IDAsCiAgICAgICAgZmlyc3RSb3dTY3JlZW46IDAsCiAgICAgICAgbGFzdFJvdyA6IDAsCiAgICAgICAgbGluZUhlaWdodCA6IDEsCiAgICAgICAgY2hhcmFjdGVyV2lkdGggOiAxLAogICAgICAgIG1pbkhlaWdodCA6IDEsCiAgICAgICAgbWF4SGVpZ2h0IDogMSwKICAgICAgICBvZmZzZXQgOiAwLAogICAgICAgIGhlaWdodCA6IDEKICAgIH07CgogICAgdGhpcy4kbG9vcCA9IG5ldyBSZW5kZXJMb29wKAogICAgICAgIHRoaXMuJHJlbmRlckNoYW5nZXMuYmluZCh0aGlzKSwKICAgICAgICB0aGlzLmNvbnRhaW5lci5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3CiAgICApOwogICAgdGhpcy4kbG9vcC5zY2hlZHVsZSh0aGlzLkNIQU5HRV9GVUxMKTsKCiAgICB0aGlzLnVwZGF0ZUNoYXJhY3RlclNpemUoKTsKICAgIHRoaXMuc2V0UGFkZGluZyg0KTsKfTsKCihmdW5jdGlvbigpIHsKICAgIHRoaXMuc2hvd0d1dHRlciA9IHRydWU7CgogICAgdGhpcy5DSEFOR0VfQ1VSU09SID0gMTsKICAgIHRoaXMuQ0hBTkdFX01BUktFUiA9IDI7CiAgICB0aGlzLkNIQU5HRV9HVVRURVIgPSA0OwogICAgdGhpcy5DSEFOR0VfU0NST0xMID0gODsKICAgIHRoaXMuQ0hBTkdFX0xJTkVTID0gMTY7CiAgICB0aGlzLkNIQU5HRV9URVhUID0gMzI7CiAgICB0aGlzLkNIQU5HRV9TSVpFID0gNjQ7CiAgICB0aGlzLkNIQU5HRV9NQVJLRVJfQkFDSyA9IDEyODsKICAgIHRoaXMuQ0hBTkdFX01BUktFUl9GUk9OVCA9IDI1NjsKICAgIHRoaXMuQ0hBTkdFX0ZVTEwgPSA1MTI7CiAgICB0aGlzLkNIQU5HRV9IX1NDUk9MTCA9IDEwMjQ7CgogICAgb29wLmltcGxlbWVudCh0aGlzLCBFdmVudEVtaXR0ZXIpOwogICAgCiAgICB0aGlzLnVwZGF0ZUNoYXJhY3RlclNpemUgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodGhpcy4kdGV4dExheWVyLmFsbG93Qm9sZEZvbnRzICE9IHRoaXMuJGFsbG93Qm9sZEZvbnRzKSB7CiAgICAgICAgICAgIHRoaXMuJGFsbG93Qm9sZEZvbnRzID0gdGhpcy4kdGV4dExheWVyLmFsbG93Qm9sZEZvbnRzOwogICAgICAgICAgICB0aGlzLnNldFN0eWxlKCJhY2Vfbm9ib2xkIiwgIXRoaXMuJGFsbG93Qm9sZEZvbnRzKTsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgdGhpcy5jaGFyYWN0ZXJXaWR0aCA9IHRoaXMuJHRleHRMYXllci5nZXRDaGFyYWN0ZXJXaWR0aCgpOwogICAgICAgIHRoaXMubGluZUhlaWdodCA9IHRoaXMuJHRleHRMYXllci5nZXRMaW5lSGVpZ2h0KCk7CiAgICAgICAgdGhpcy4kdXBkYXRlUHJpbnRNYXJnaW4oKTsKICAgIH07CiAgICB0aGlzLnNldFNlc3Npb24gPSBmdW5jdGlvbihzZXNzaW9uKSB7CiAgICAgICAgdGhpcy5zZXNzaW9uID0gc2Vzc2lvbjsKICAgICAgICAKICAgICAgICB0aGlzLnNjcm9sbGVyLmNsYXNzTmFtZSA9ICJhY2Vfc2Nyb2xsZXIiOwogICAgICAgIAogICAgICAgIHRoaXMuJGN1cnNvckxheWVyLnNldFNlc3Npb24oc2Vzc2lvbik7CiAgICAgICAgdGhpcy4kbWFya2VyQmFjay5zZXRTZXNzaW9uKHNlc3Npb24pOwogICAgICAgIHRoaXMuJG1hcmtlckZyb250LnNldFNlc3Npb24oc2Vzc2lvbik7CiAgICAgICAgdGhpcy4kZ3V0dGVyTGF5ZXIuc2V0U2Vzc2lvbihzZXNzaW9uKTsKICAgICAgICB0aGlzLiR0ZXh0TGF5ZXIuc2V0U2Vzc2lvbihzZXNzaW9uKTsKICAgICAgICB0aGlzLiRsb29wLnNjaGVkdWxlKHRoaXMuQ0hBTkdFX0ZVTEwpOwogICAgICAgIAogICAgfTsKICAgIHRoaXMudXBkYXRlTGluZXMgPSBmdW5jdGlvbihmaXJzdFJvdywgbGFzdFJvdykgewogICAgICAgIGlmIChsYXN0Um93ID09PSB1bmRlZmluZWQpCiAgICAgICAgICAgIGxhc3RSb3cgPSBJbmZpbml0eTsKCiAgICAgICAgaWYgKCF0aGlzLiRjaGFuZ2VkTGluZXMpIHsKICAgICAgICAgICAgdGhpcy4kY2hhbmdlZExpbmVzID0gewogICAgICAgICAgICAgICAgZmlyc3RSb3c6IGZpcnN0Um93LAogICAgICAgICAgICAgICAgbGFzdFJvdzogbGFzdFJvdwogICAgICAgICAgICB9OwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgaWYgKHRoaXMuJGNoYW5nZWRMaW5lcy5maXJzdFJvdyA+IGZpcnN0Um93KQogICAgICAgICAgICAgICAgdGhpcy4kY2hhbmdlZExpbmVzLmZpcnN0Um93ID0gZmlyc3RSb3c7CgogICAgICAgICAgICBpZiAodGhpcy4kY2hhbmdlZExpbmVzLmxhc3RSb3cgPCBsYXN0Um93KQogICAgICAgICAgICAgICAgdGhpcy4kY2hhbmdlZExpbmVzLmxhc3RSb3cgPSBsYXN0Um93OwogICAgICAgIH0KICAgICAgICAKICAgICAgICBpZiAodGhpcy4kY2hhbmdlZExpbmVzLmZpcnN0Um93ID4gdGhpcy5sYXllckNvbmZpZy5sYXN0Um93IHx8CiAgICAgICAgICAgIHRoaXMuJGNoYW5nZWRMaW5lcy5sYXN0Um93IDwgdGhpcy5sYXllckNvbmZpZy5maXJzdFJvdykKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIHRoaXMuJGxvb3Auc2NoZWR1bGUodGhpcy5DSEFOR0VfTElORVMpOwogICAgfTsKCiAgICB0aGlzLm9uQ2hhbmdlVGFiU2l6ZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJGxvb3Auc2NoZWR1bGUodGhpcy5DSEFOR0VfVEVYVCB8IHRoaXMuQ0hBTkdFX01BUktFUik7CiAgICAgICAgdGhpcy4kdGV4dExheWVyLm9uQ2hhbmdlVGFiU2l6ZSgpOwogICAgfTsKICAgIHRoaXMudXBkYXRlVGV4dCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJGxvb3Auc2NoZWR1bGUodGhpcy5DSEFOR0VfVEVYVCk7CiAgICB9OwogICAgdGhpcy51cGRhdGVGdWxsID0gZnVuY3Rpb24oZm9yY2UpIHsKICAgICAgICBpZiAoZm9yY2UpewogICAgICAgICAgICB0aGlzLiRyZW5kZXJDaGFuZ2VzKHRoaXMuQ0hBTkdFX0ZVTEwsIHRydWUpOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kbG9vcC5zY2hlZHVsZSh0aGlzLkNIQU5HRV9GVUxMKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy51cGRhdGVGb250U2l6ZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJHRleHRMYXllci5jaGVja0ZvclNpemVDaGFuZ2VzKCk7CiAgICB9OwogICAgdGhpcy5vblJlc2l6ZSA9IGZ1bmN0aW9uKGZvcmNlLCBndXR0ZXJXaWR0aCwgd2lkdGgsIGhlaWdodCkgewogICAgICAgIHZhciBjaGFuZ2VzID0gdGhpcy5DSEFOR0VfU0laRTsKICAgICAgICB2YXIgc2l6ZSA9IHRoaXMuJHNpemU7CgogICAgICAgIGlmICh0aGlzLnJlc2l6aW5nID4gMikKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIGVsc2UgaWYgKHRoaXMucmVzaXppbmcgPiAxKQogICAgICAgICAgICB0aGlzLnJlc2l6aW5nKys7CiAgICAgICAgZWxzZQogICAgICAgICAgICB0aGlzLnJlc2l6aW5nID0gZm9yY2UgPyAxIDogMDsKICAgICAgICBpZiAoIWhlaWdodCkKICAgICAgICAgICAgaGVpZ2h0ID0gZG9tLmdldElubmVySGVpZ2h0KHRoaXMuY29udGFpbmVyKTsKCiAgICAgICAgaWYgKGhlaWdodCAmJiAoZm9yY2UgfHwgc2l6ZS5oZWlnaHQgIT0gaGVpZ2h0KSkgewogICAgICAgICAgICBzaXplLmhlaWdodCA9IGhlaWdodDsKCiAgICAgICAgICAgIHNpemUuc2Nyb2xsZXJIZWlnaHQgPSB0aGlzLnNjcm9sbGVyLmNsaWVudEhlaWdodDsKICAgICAgICAgICAgdGhpcy5zY3JvbGxCYXIuc2V0SGVpZ2h0KHNpemUuc2Nyb2xsZXJIZWlnaHQpOwoKICAgICAgICAgICAgaWYgKHRoaXMuc2Vzc2lvbikgewogICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnNldFNjcm9sbFRvcCh0aGlzLmdldFNjcm9sbFRvcCgpKTsKICAgICAgICAgICAgICAgIGNoYW5nZXMgPSBjaGFuZ2VzIHwgdGhpcy5DSEFOR0VfRlVMTDsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKCF3aWR0aCkKICAgICAgICAgICAgd2lkdGggPSBkb20uZ2V0SW5uZXJXaWR0aCh0aGlzLmNvbnRhaW5lcik7CgogICAgICAgIGlmICh3aWR0aCAmJiAoZm9yY2UgfHwgdGhpcy5yZXNpemluZyA+IDEgfHwgc2l6ZS53aWR0aCAhPSB3aWR0aCkpIHsKICAgICAgICAgICAgc2l6ZS53aWR0aCA9IHdpZHRoOwoKICAgICAgICAgICAgdmFyIGd1dHRlcldpZHRoID0gdGhpcy5zaG93R3V0dGVyID8gdGhpcy4kZ3V0dGVyLm9mZnNldFdpZHRoIDogMDsKICAgICAgICAgICAgdGhpcy5zY3JvbGxlci5zdHlsZS5sZWZ0ID0gZ3V0dGVyV2lkdGggKyAicHgiOwogICAgICAgICAgICBzaXplLnNjcm9sbGVyV2lkdGggPSBNYXRoLm1heCgwLCB3aWR0aCAtIGd1dHRlcldpZHRoIC0gdGhpcy5zY3JvbGxCYXIuZ2V0V2lkdGgoKSk7CiAgICAgICAgICAgIHRoaXMuc2Nyb2xsZXIuc3R5bGUucmlnaHQgPSB0aGlzLnNjcm9sbEJhci5nZXRXaWR0aCgpICsgInB4IjsKCiAgICAgICAgICAgIGlmICh0aGlzLnNlc3Npb24uZ2V0VXNlV3JhcE1vZGUoKSAmJiB0aGlzLmFkanVzdFdyYXBMaW1pdCgpIHx8IGZvcmNlKQogICAgICAgICAgICAgICAgY2hhbmdlcyA9IGNoYW5nZXMgfCB0aGlzLkNIQU5HRV9GVUxMOwogICAgICAgIH0KCiAgICAgICAgaWYgKGZvcmNlKQogICAgICAgICAgICB0aGlzLiRyZW5kZXJDaGFuZ2VzKGNoYW5nZXMsIHRydWUpOwogICAgICAgIGVsc2UKICAgICAgICAgICAgdGhpcy4kbG9vcC5zY2hlZHVsZShjaGFuZ2VzKTsKICAgICAgICAKICAgICAgICBpZiAoZm9yY2UpCiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnJlc2l6aW5nOwogICAgfTsKCiAgICB0aGlzLm9uR3V0dGVyUmVzaXplID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHdpZHRoID0gdGhpcy4kc2l6ZS53aWR0aDsKICAgICAgICB2YXIgZ3V0dGVyV2lkdGggPSB0aGlzLnNob3dHdXR0ZXIgPyB0aGlzLiRndXR0ZXIub2Zmc2V0V2lkdGggOiAwOwogICAgICAgIHRoaXMuc2Nyb2xsZXIuc3R5bGUubGVmdCA9IGd1dHRlcldpZHRoICsgInB4IjsKICAgICAgICB0aGlzLiRzaXplLnNjcm9sbGVyV2lkdGggPSBNYXRoLm1heCgwLCB3aWR0aCAtIGd1dHRlcldpZHRoIC0gdGhpcy5zY3JvbGxCYXIuZ2V0V2lkdGgoKSk7CgogICAgICAgIGlmICh0aGlzLnNlc3Npb24uZ2V0VXNlV3JhcE1vZGUoKSAmJiB0aGlzLmFkanVzdFdyYXBMaW1pdCgpKQogICAgICAgICAgICB0aGlzLiRsb29wLnNjaGVkdWxlKHRoaXMuQ0hBTkdFX0ZVTEwpOwogICAgfTsKICAgIHRoaXMuYWRqdXN0V3JhcExpbWl0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGF2YWlsYWJsZVdpZHRoID0gdGhpcy4kc2l6ZS5zY3JvbGxlcldpZHRoIC0gdGhpcy4kcGFkZGluZyAqIDI7CiAgICAgICAgdmFyIGxpbWl0ID0gTWF0aC5mbG9vcihhdmFpbGFibGVXaWR0aCAvIHRoaXMuY2hhcmFjdGVyV2lkdGgpOwogICAgICAgIHJldHVybiB0aGlzLnNlc3Npb24uYWRqdXN0V3JhcExpbWl0KGxpbWl0KTsKICAgIH07CiAgICB0aGlzLnNldEFuaW1hdGVkU2Nyb2xsID0gZnVuY3Rpb24oc2hvdWxkQW5pbWF0ZSl7CiAgICAgICAgdGhpcy4kYW5pbWF0ZWRTY3JvbGwgPSBzaG91bGRBbmltYXRlOwogICAgfTsKICAgIHRoaXMuZ2V0QW5pbWF0ZWRTY3JvbGwgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kYW5pbWF0ZWRTY3JvbGw7CiAgICB9OwogICAgdGhpcy5zZXRTaG93SW52aXNpYmxlcyA9IGZ1bmN0aW9uKHNob3dJbnZpc2libGVzKSB7CiAgICAgICAgaWYgKHRoaXMuJHRleHRMYXllci5zZXRTaG93SW52aXNpYmxlcyhzaG93SW52aXNpYmxlcykpCiAgICAgICAgICAgIHRoaXMuJGxvb3Auc2NoZWR1bGUodGhpcy5DSEFOR0VfVEVYVCk7CiAgICB9OwogICAgdGhpcy5nZXRTaG93SW52aXNpYmxlcyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiR0ZXh0TGF5ZXIuc2hvd0ludmlzaWJsZXM7CiAgICB9OwoKICAgIHRoaXMuZ2V0RGlzcGxheUluZGVudEd1aWRlcyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiR0ZXh0TGF5ZXIuZGlzcGxheUluZGVudEd1aWRlczsKICAgIH07CiAgICAKICAgIHRoaXMuc2V0RGlzcGxheUluZGVudEd1aWRlcyA9IGZ1bmN0aW9uKGRpc3BsYXkpIHsKICAgICAgICBpZiAodGhpcy4kdGV4dExheWVyLnNldERpc3BsYXlJbmRlbnRHdWlkZXMoZGlzcGxheSkpCiAgICAgICAgICAgIHRoaXMuJGxvb3Auc2NoZWR1bGUodGhpcy5DSEFOR0VfVEVYVCk7CiAgICB9OwogICAgCiAgICB0aGlzLiRzaG93UHJpbnRNYXJnaW4gPSB0cnVlOwogICAgdGhpcy5zZXRTaG93UHJpbnRNYXJnaW4gPSBmdW5jdGlvbihzaG93UHJpbnRNYXJnaW4pIHsKICAgICAgICB0aGlzLiRzaG93UHJpbnRNYXJnaW4gPSBzaG93UHJpbnRNYXJnaW47CiAgICAgICAgdGhpcy4kdXBkYXRlUHJpbnRNYXJnaW4oKTsKICAgIH07CiAgICB0aGlzLmdldFNob3dQcmludE1hcmdpbiA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzaG93UHJpbnRNYXJnaW47CiAgICB9OwoKICAgIHRoaXMuJHByaW50TWFyZ2luQ29sdW1uID0gODA7CiAgICB0aGlzLnNldFByaW50TWFyZ2luQ29sdW1uID0gZnVuY3Rpb24oc2hvd1ByaW50TWFyZ2luKSB7CiAgICAgICAgdGhpcy4kcHJpbnRNYXJnaW5Db2x1bW4gPSBzaG93UHJpbnRNYXJnaW47CiAgICAgICAgdGhpcy4kdXBkYXRlUHJpbnRNYXJnaW4oKTsKICAgIH07CiAgICB0aGlzLmdldFByaW50TWFyZ2luQ29sdW1uID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHByaW50TWFyZ2luQ29sdW1uOwogICAgfTsKICAgIHRoaXMuZ2V0U2hvd0d1dHRlciA9IGZ1bmN0aW9uKCl7CiAgICAgICAgcmV0dXJuIHRoaXMuc2hvd0d1dHRlcjsKICAgIH07CiAgICB0aGlzLnNldFNob3dHdXR0ZXIgPSBmdW5jdGlvbihzaG93KXsKICAgICAgICBpZih0aGlzLnNob3dHdXR0ZXIgPT09IHNob3cpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB0aGlzLiRndXR0ZXIuc3R5bGUuZGlzcGxheSA9IHNob3cgPyAiYmxvY2siIDogIm5vbmUiOwogICAgICAgIHRoaXMuc2hvd0d1dHRlciA9IHNob3c7CiAgICAgICAgdGhpcy5vblJlc2l6ZSh0cnVlKTsKICAgIH07CgogICAgdGhpcy5nZXRGYWRlRm9sZFdpZGdldHMgPSBmdW5jdGlvbigpewogICAgICAgIHJldHVybiBkb20uaGFzQ3NzQ2xhc3ModGhpcy4kZ3V0dGVyLCAiYWNlX2ZhZGUtZm9sZC13aWRnZXRzIik7CiAgICB9OwoKICAgIHRoaXMuc2V0RmFkZUZvbGRXaWRnZXRzID0gZnVuY3Rpb24oc2hvdykgewogICAgICAgIGlmIChzaG93KQogICAgICAgICAgICBkb20uYWRkQ3NzQ2xhc3ModGhpcy4kZ3V0dGVyLCAiYWNlX2ZhZGUtZm9sZC13aWRnZXRzIik7CiAgICAgICAgZWxzZQogICAgICAgICAgICBkb20ucmVtb3ZlQ3NzQ2xhc3ModGhpcy4kZ3V0dGVyLCAiYWNlX2ZhZGUtZm9sZC13aWRnZXRzIik7CiAgICB9OwoKICAgIHRoaXMuJGhpZ2hsaWdodEd1dHRlckxpbmUgPSBmYWxzZTsKICAgIHRoaXMuc2V0SGlnaGxpZ2h0R3V0dGVyTGluZSA9IGZ1bmN0aW9uKHNob3VsZEhpZ2hsaWdodCkgewogICAgICAgIGlmICh0aGlzLiRoaWdobGlnaHRHdXR0ZXJMaW5lID09IHNob3VsZEhpZ2hsaWdodCkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIHRoaXMuJGhpZ2hsaWdodEd1dHRlckxpbmUgPSBzaG91bGRIaWdobGlnaHQ7CgogICAgICAgIGlmICghdGhpcy4kZ3V0dGVyTGluZUhpZ2hsaWdodCkgewogICAgICAgICAgICB0aGlzLiRndXR0ZXJMaW5lSGlnaGxpZ2h0ID0gZG9tLmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgICAgICB0aGlzLiRndXR0ZXJMaW5lSGlnaGxpZ2h0LmNsYXNzTmFtZSA9ICJhY2VfZ3V0dGVyLWFjdGl2ZS1saW5lIjsKICAgICAgICAgICAgdGhpcy4kZ3V0dGVyLmFwcGVuZENoaWxkKHRoaXMuJGd1dHRlckxpbmVIaWdobGlnaHQpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRndXR0ZXJMaW5lSGlnaGxpZ2h0LnN0eWxlLmRpc3BsYXkgPSBzaG91bGRIaWdobGlnaHQgPyAiIiA6ICJub25lIjsKICAgICAgICBpZiAodGhpcy4kY3Vyc29yTGF5ZXIuJHBpeGVsUG9zKQogICAgICAgICAgICB0aGlzLiR1cGRhdGVHdXR0ZXJMaW5lSGlnaGxpZ2h0KCk7CiAgICB9OwoKICAgIHRoaXMuZ2V0SGlnaGxpZ2h0R3V0dGVyTGluZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRoaWdobGlnaHRHdXR0ZXJMaW5lOwogICAgfTsKCiAgICB0aGlzLiR1cGRhdGVHdXR0ZXJMaW5lSGlnaGxpZ2h0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kZ3V0dGVyTGluZUhpZ2hsaWdodC5zdHlsZS50b3AgPSB0aGlzLiRjdXJzb3JMYXllci4kcGl4ZWxQb3MudG9wIC0gdGhpcy5sYXllckNvbmZpZy5vZmZzZXQgKyAicHgiOwogICAgICAgIHRoaXMuJGd1dHRlckxpbmVIaWdobGlnaHQuc3R5bGUuaGVpZ2h0ID0gdGhpcy5sYXllckNvbmZpZy5saW5lSGVpZ2h0ICsgInB4IjsKICAgIH07CiAgICAKICAgIHRoaXMuJHVwZGF0ZVByaW50TWFyZ2luID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKCF0aGlzLiRzaG93UHJpbnRNYXJnaW4gJiYgIXRoaXMuJHByaW50TWFyZ2luRWwpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgaWYgKCF0aGlzLiRwcmludE1hcmdpbkVsKSB7CiAgICAgICAgICAgIHZhciBjb250YWluZXJFbCA9IGRvbS5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICAgICAgY29udGFpbmVyRWwuY2xhc3NOYW1lID0gImFjZV9sYXllciBhY2VfcHJpbnQtbWFyZ2luLWxheWVyIjsKICAgICAgICAgICAgdGhpcy4kcHJpbnRNYXJnaW5FbCA9IGRvbS5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICAgICAgdGhpcy4kcHJpbnRNYXJnaW5FbC5jbGFzc05hbWUgPSAiYWNlX3ByaW50LW1hcmdpbiI7CiAgICAgICAgICAgIGNvbnRhaW5lckVsLmFwcGVuZENoaWxkKHRoaXMuJHByaW50TWFyZ2luRWwpOwogICAgICAgICAgICB0aGlzLmNvbnRlbnQuaW5zZXJ0QmVmb3JlKGNvbnRhaW5lckVsLCB0aGlzLmNvbnRlbnQuZmlyc3RDaGlsZCk7CiAgICAgICAgfQoKICAgICAgICB2YXIgc3R5bGUgPSB0aGlzLiRwcmludE1hcmdpbkVsLnN0eWxlOwogICAgICAgIHN0eWxlLmxlZnQgPSAoKHRoaXMuY2hhcmFjdGVyV2lkdGggKiB0aGlzLiRwcmludE1hcmdpbkNvbHVtbikgKyB0aGlzLiRwYWRkaW5nKSArICJweCI7CiAgICAgICAgc3R5bGUudmlzaWJpbGl0eSA9IHRoaXMuJHNob3dQcmludE1hcmdpbiA/ICJ2aXNpYmxlIiA6ICJoaWRkZW4iOwogICAgfTsKICAgIHRoaXMuZ2V0Q29udGFpbmVyRWxlbWVudCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLmNvbnRhaW5lcjsKICAgIH07CiAgICB0aGlzLmdldE1vdXNlRXZlbnRUYXJnZXQgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50OwogICAgfTsKICAgIHRoaXMuZ2V0VGV4dEFyZWFDb250YWluZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5jb250YWluZXI7CiAgICB9OwogICAgdGhpcy4kbW92ZVRleHRBcmVhVG9DdXJzb3IgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAoIXRoaXMuJGtlZXBUZXh0QXJlYUF0Q3Vyc29yKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdmFyIGNvbmZpZyA9IHRoaXMubGF5ZXJDb25maWc7CiAgICAgICAgdmFyIHBvc1RvcCA9IHRoaXMuJGN1cnNvckxheWVyLiRwaXhlbFBvcy50b3A7CiAgICAgICAgdmFyIHBvc0xlZnQgPSB0aGlzLiRjdXJzb3JMYXllci4kcGl4ZWxQb3MubGVmdDsKICAgICAgICBwb3NUb3AgLT0gY29uZmlnLm9mZnNldDsKCiAgICAgICAgaWYgKHBvc1RvcCA8IDAgfHwgcG9zVG9wID4gY29uZmlnLmhlaWdodCAtIHRoaXMubGluZUhlaWdodCkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB2YXIgdyA9IHRoaXMuY2hhcmFjdGVyV2lkdGg7CiAgICAgICAgaWYgKHRoaXMuJGNvbXBvc2l0aW9uKSB7CiAgICAgICAgICAgIHZhciB2YWwgPSB0aGlzLnRleHRhcmVhLnZhbHVlLnJlcGxhY2UoL15ceDAxKy8sICIiKTsKICAgICAgICAgICAgdyAqPSB0aGlzLnNlc3Npb24uJGdldFN0cmluZ1NjcmVlbldpZHRoKHZhbClbMF07CiAgICAgICAgfQogICAgICAgIHBvc0xlZnQgLT0gdGhpcy5zY3JvbGxMZWZ0OwogICAgICAgIGlmIChwb3NMZWZ0ID4gdGhpcy4kc2l6ZS5zY3JvbGxlcldpZHRoIC0gdykKICAgICAgICAgICAgcG9zTGVmdCA9IHRoaXMuJHNpemUuc2Nyb2xsZXJXaWR0aCAtIHc7CgogICAgICAgIHBvc0xlZnQgLT0gdGhpcy5zY3JvbGxCYXIud2lkdGg7CgogICAgICAgIHRoaXMudGV4dGFyZWEuc3R5bGUuaGVpZ2h0ID0gdGhpcy5saW5lSGVpZ2h0ICsgInB4IjsKICAgICAgICB0aGlzLnRleHRhcmVhLnN0eWxlLndpZHRoID0gdyArICJweCI7CiAgICAgICAgdGhpcy50ZXh0YXJlYS5zdHlsZS5yaWdodCA9IHRoaXMuJHNpemUuc2Nyb2xsZXJXaWR0aCAtIHBvc0xlZnQgLSB3ICsgInB4IjsKICAgICAgICB0aGlzLnRleHRhcmVhLnN0eWxlLmJvdHRvbSA9IHRoaXMuJHNpemUuaGVpZ2h0IC0gcG9zVG9wIC0gdGhpcy5saW5lSGVpZ2h0ICsgInB4IjsKICAgIH07CiAgICB0aGlzLmdldEZpcnN0VmlzaWJsZVJvdyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLmxheWVyQ29uZmlnLmZpcnN0Um93OwogICAgfTsKICAgIHRoaXMuZ2V0Rmlyc3RGdWxseVZpc2libGVSb3cgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5sYXllckNvbmZpZy5maXJzdFJvdyArICh0aGlzLmxheWVyQ29uZmlnLm9mZnNldCA9PT0gMCA/IDAgOiAxKTsKICAgIH07CiAgICB0aGlzLmdldExhc3RGdWxseVZpc2libGVSb3cgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgZmxpbnQgPSBNYXRoLmZsb29yKCh0aGlzLmxheWVyQ29uZmlnLmhlaWdodCArIHRoaXMubGF5ZXJDb25maWcub2Zmc2V0KSAvIHRoaXMubGF5ZXJDb25maWcubGluZUhlaWdodCk7CiAgICAgICAgcmV0dXJuIHRoaXMubGF5ZXJDb25maWcuZmlyc3RSb3cgLSAxICsgZmxpbnQ7CiAgICB9OwogICAgdGhpcy5nZXRMYXN0VmlzaWJsZVJvdyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLmxheWVyQ29uZmlnLmxhc3RSb3c7CiAgICB9OwoKICAgIHRoaXMuJHBhZGRpbmcgPSBudWxsOwogICAgdGhpcy5zZXRQYWRkaW5nID0gZnVuY3Rpb24ocGFkZGluZykgewogICAgICAgIHRoaXMuJHBhZGRpbmcgPSBwYWRkaW5nOwogICAgICAgIHRoaXMuJHRleHRMYXllci5zZXRQYWRkaW5nKHBhZGRpbmcpOwogICAgICAgIHRoaXMuJGN1cnNvckxheWVyLnNldFBhZGRpbmcocGFkZGluZyk7CiAgICAgICAgdGhpcy4kbWFya2VyRnJvbnQuc2V0UGFkZGluZyhwYWRkaW5nKTsKICAgICAgICB0aGlzLiRtYXJrZXJCYWNrLnNldFBhZGRpbmcocGFkZGluZyk7CiAgICAgICAgdGhpcy4kbG9vcC5zY2hlZHVsZSh0aGlzLkNIQU5HRV9GVUxMKTsKICAgICAgICB0aGlzLiR1cGRhdGVQcmludE1hcmdpbigpOwogICAgfTsKICAgIHRoaXMuZ2V0SFNjcm9sbEJhckFsd2F5c1Zpc2libGUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kaG9yaXpTY3JvbGxBbHdheXNWaXNpYmxlOwogICAgfTsKICAgIHRoaXMuc2V0SFNjcm9sbEJhckFsd2F5c1Zpc2libGUgPSBmdW5jdGlvbihhbHdheXNWaXNpYmxlKSB7CiAgICAgICAgaWYgKHRoaXMuJGhvcml6U2Nyb2xsQWx3YXlzVmlzaWJsZSAhPSBhbHdheXNWaXNpYmxlKSB7CiAgICAgICAgICAgIHRoaXMuJGhvcml6U2Nyb2xsQWx3YXlzVmlzaWJsZSA9IGFsd2F5c1Zpc2libGU7CiAgICAgICAgICAgIGlmICghdGhpcy4kaG9yaXpTY3JvbGxBbHdheXNWaXNpYmxlIHx8ICF0aGlzLiRob3JpelNjcm9sbCkKICAgICAgICAgICAgICAgIHRoaXMuJGxvb3Auc2NoZWR1bGUodGhpcy5DSEFOR0VfU0NST0xMKTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuJHVwZGF0ZVNjcm9sbEJhciA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuc2Nyb2xsQmFyLnNldElubmVySGVpZ2h0KHRoaXMubGF5ZXJDb25maWcubWF4SGVpZ2h0KTsKICAgICAgICB0aGlzLnNjcm9sbEJhci5zZXRTY3JvbGxUb3AodGhpcy5zY3JvbGxUb3ApOwogICAgfTsKCiAgICB0aGlzLiRyZW5kZXJDaGFuZ2VzID0gZnVuY3Rpb24oY2hhbmdlcywgZm9yY2UpIHsKICAgICAgICBpZiAoIWZvcmNlICYmICghY2hhbmdlcyB8fCAhdGhpcy5zZXNzaW9uIHx8ICF0aGlzLmNvbnRhaW5lci5vZmZzZXRXaWR0aCkpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICBpZiAoY2hhbmdlcyAmIHRoaXMuQ0hBTkdFX0ZVTEwgfHwKICAgICAgICAgICAgY2hhbmdlcyAmIHRoaXMuQ0hBTkdFX1NJWkUgfHwKICAgICAgICAgICAgY2hhbmdlcyAmIHRoaXMuQ0hBTkdFX1RFWFQgfHwKICAgICAgICAgICAgY2hhbmdlcyAmIHRoaXMuQ0hBTkdFX0xJTkVTIHx8CiAgICAgICAgICAgIGNoYW5nZXMgJiB0aGlzLkNIQU5HRV9TQ1JPTEwKICAgICAgICApCiAgICAgICAgICAgIHRoaXMuJGNvbXB1dGVMYXllckNvbmZpZygpOwogICAgICAgIGlmIChjaGFuZ2VzICYgdGhpcy5DSEFOR0VfSF9TQ1JPTEwpIHsKICAgICAgICAgICAgdGhpcy5zY3JvbGxlci5zY3JvbGxMZWZ0ID0gdGhpcy5zY3JvbGxMZWZ0OwogICAgICAgICAgICB2YXIgc2Nyb2xsTGVmdCA9IHRoaXMuc2Nyb2xsZXIuc2Nyb2xsTGVmdDsKICAgICAgICAgICAgdGhpcy5zY3JvbGxMZWZ0ID0gc2Nyb2xsTGVmdDsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnNldFNjcm9sbExlZnQoc2Nyb2xsTGVmdCk7CgogICAgICAgICAgICB0aGlzLnNjcm9sbGVyLmNsYXNzTmFtZSA9IHRoaXMuc2Nyb2xsTGVmdCA9PSAwID8gImFjZV9zY3JvbGxlciIgOiAiYWNlX3Njcm9sbGVyIGFjZV9zY3JvbGwtbGVmdCI7CiAgICAgICAgfQogICAgICAgIGlmIChjaGFuZ2VzICYgdGhpcy5DSEFOR0VfRlVMTCkgewogICAgICAgICAgICB0aGlzLiR0ZXh0TGF5ZXIuY2hlY2tGb3JTaXplQ2hhbmdlcygpOwogICAgICAgICAgICB0aGlzLiR1cGRhdGVTY3JvbGxCYXIoKTsKICAgICAgICAgICAgdGhpcy4kdGV4dExheWVyLnVwZGF0ZSh0aGlzLmxheWVyQ29uZmlnKTsKICAgICAgICAgICAgaWYgKHRoaXMuc2hvd0d1dHRlcikKICAgICAgICAgICAgICAgIHRoaXMuJGd1dHRlckxheWVyLnVwZGF0ZSh0aGlzLmxheWVyQ29uZmlnKTsKICAgICAgICAgICAgdGhpcy4kbWFya2VyQmFjay51cGRhdGUodGhpcy5sYXllckNvbmZpZyk7CiAgICAgICAgICAgIHRoaXMuJG1hcmtlckZyb250LnVwZGF0ZSh0aGlzLmxheWVyQ29uZmlnKTsKICAgICAgICAgICAgdGhpcy4kY3Vyc29yTGF5ZXIudXBkYXRlKHRoaXMubGF5ZXJDb25maWcpOwogICAgICAgICAgICB0aGlzLiRtb3ZlVGV4dEFyZWFUb0N1cnNvcigpOwogICAgICAgICAgICB0aGlzLiRoaWdobGlnaHRHdXR0ZXJMaW5lICYmIHRoaXMuJHVwZGF0ZUd1dHRlckxpbmVIaWdobGlnaHQoKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBpZiAoY2hhbmdlcyAmIHRoaXMuQ0hBTkdFX1NDUk9MTCkgewogICAgICAgICAgICB0aGlzLiR1cGRhdGVTY3JvbGxCYXIoKTsKICAgICAgICAgICAgaWYgKGNoYW5nZXMgJiB0aGlzLkNIQU5HRV9URVhUIHx8IGNoYW5nZXMgJiB0aGlzLkNIQU5HRV9MSU5FUykKICAgICAgICAgICAgICAgIHRoaXMuJHRleHRMYXllci51cGRhdGUodGhpcy5sYXllckNvbmZpZyk7CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHRoaXMuJHRleHRMYXllci5zY3JvbGxMaW5lcyh0aGlzLmxheWVyQ29uZmlnKTsKCiAgICAgICAgICAgIGlmICh0aGlzLnNob3dHdXR0ZXIpCiAgICAgICAgICAgICAgICB0aGlzLiRndXR0ZXJMYXllci51cGRhdGUodGhpcy5sYXllckNvbmZpZyk7CiAgICAgICAgICAgIHRoaXMuJG1hcmtlckJhY2sudXBkYXRlKHRoaXMubGF5ZXJDb25maWcpOwogICAgICAgICAgICB0aGlzLiRtYXJrZXJGcm9udC51cGRhdGUodGhpcy5sYXllckNvbmZpZyk7CiAgICAgICAgICAgIHRoaXMuJGN1cnNvckxheWVyLnVwZGF0ZSh0aGlzLmxheWVyQ29uZmlnKTsKICAgICAgICAgICAgdGhpcy4kbW92ZVRleHRBcmVhVG9DdXJzb3IoKTsKICAgICAgICAgICAgdGhpcy4kaGlnaGxpZ2h0R3V0dGVyTGluZSAmJiB0aGlzLiR1cGRhdGVHdXR0ZXJMaW5lSGlnaGxpZ2h0KCk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGlmIChjaGFuZ2VzICYgdGhpcy5DSEFOR0VfVEVYVCkgewogICAgICAgICAgICB0aGlzLiR0ZXh0TGF5ZXIudXBkYXRlKHRoaXMubGF5ZXJDb25maWcpOwogICAgICAgICAgICBpZiAodGhpcy5zaG93R3V0dGVyKQogICAgICAgICAgICAgICAgdGhpcy4kZ3V0dGVyTGF5ZXIudXBkYXRlKHRoaXMubGF5ZXJDb25maWcpOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChjaGFuZ2VzICYgdGhpcy5DSEFOR0VfTElORVMpIHsKICAgICAgICAgICAgaWYgKHRoaXMuJHVwZGF0ZUxpbmVzKCkgfHwgKGNoYW5nZXMgJiB0aGlzLkNIQU5HRV9HVVRURVIpICYmIHRoaXMuc2hvd0d1dHRlcikKICAgICAgICAgICAgICAgIHRoaXMuJGd1dHRlckxheWVyLnVwZGF0ZSh0aGlzLmxheWVyQ29uZmlnKTsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAoY2hhbmdlcyAmIHRoaXMuQ0hBTkdFX1RFWFQgfHwgY2hhbmdlcyAmIHRoaXMuQ0hBTkdFX0dVVFRFUikgewogICAgICAgICAgICBpZiAodGhpcy5zaG93R3V0dGVyKQogICAgICAgICAgICAgICAgdGhpcy4kZ3V0dGVyTGF5ZXIudXBkYXRlKHRoaXMubGF5ZXJDb25maWcpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGNoYW5nZXMgJiB0aGlzLkNIQU5HRV9DVVJTT1IpIHsKICAgICAgICAgICAgdGhpcy4kY3Vyc29yTGF5ZXIudXBkYXRlKHRoaXMubGF5ZXJDb25maWcpOwogICAgICAgICAgICB0aGlzLiRtb3ZlVGV4dEFyZWFUb0N1cnNvcigpOwogICAgICAgICAgICB0aGlzLiRoaWdobGlnaHRHdXR0ZXJMaW5lICYmIHRoaXMuJHVwZGF0ZUd1dHRlckxpbmVIaWdobGlnaHQoKTsKICAgICAgICB9CgogICAgICAgIGlmIChjaGFuZ2VzICYgKHRoaXMuQ0hBTkdFX01BUktFUiB8IHRoaXMuQ0hBTkdFX01BUktFUl9GUk9OVCkpIHsKICAgICAgICAgICAgdGhpcy4kbWFya2VyRnJvbnQudXBkYXRlKHRoaXMubGF5ZXJDb25maWcpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGNoYW5nZXMgJiAodGhpcy5DSEFOR0VfTUFSS0VSIHwgdGhpcy5DSEFOR0VfTUFSS0VSX0JBQ0spKSB7CiAgICAgICAgICAgIHRoaXMuJG1hcmtlckJhY2sudXBkYXRlKHRoaXMubGF5ZXJDb25maWcpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGNoYW5nZXMgJiB0aGlzLkNIQU5HRV9TSVpFKQogICAgICAgICAgICB0aGlzLiR1cGRhdGVTY3JvbGxCYXIoKTsKICAgIH07CgogICAgdGhpcy4kY29tcHV0ZUxheWVyQ29uZmlnID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHNlc3Npb24gPSB0aGlzLnNlc3Npb247CgogICAgICAgIHZhciBvZmZzZXQgPSB0aGlzLnNjcm9sbFRvcCAlIHRoaXMubGluZUhlaWdodDsKICAgICAgICB2YXIgbWluSGVpZ2h0ID0gdGhpcy4kc2l6ZS5zY3JvbGxlckhlaWdodCArIHRoaXMubGluZUhlaWdodDsKCiAgICAgICAgdmFyIGxvbmdlc3RMaW5lID0gdGhpcy4kZ2V0TG9uZ2VzdExpbmUoKTsKCiAgICAgICAgdmFyIGhvcml6U2Nyb2xsID0gdGhpcy4kaG9yaXpTY3JvbGxBbHdheXNWaXNpYmxlIHx8IHRoaXMuJHNpemUuc2Nyb2xsZXJXaWR0aCAtIGxvbmdlc3RMaW5lIDwgMDsKICAgICAgICB2YXIgaG9yaXpTY3JvbGxDaGFuZ2VkID0gdGhpcy4kaG9yaXpTY3JvbGwgIT09IGhvcml6U2Nyb2xsOwogICAgICAgIHRoaXMuJGhvcml6U2Nyb2xsID0gaG9yaXpTY3JvbGw7CiAgICAgICAgaWYgKGhvcml6U2Nyb2xsQ2hhbmdlZCkgewogICAgICAgICAgICB0aGlzLnNjcm9sbGVyLnN0eWxlLm92ZXJmbG93WCA9IGhvcml6U2Nyb2xsID8gInNjcm9sbCIgOiAiaGlkZGVuIjsKICAgICAgICAgICAgaWYgKCFob3JpelNjcm9sbCkKICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbi5zZXRTY3JvbGxMZWZ0KDApOwogICAgICAgIH0KICAgICAgICB2YXIgbWF4SGVpZ2h0ID0gdGhpcy5zZXNzaW9uLmdldFNjcmVlbkxlbmd0aCgpICogdGhpcy5saW5lSGVpZ2h0OwogICAgICAgIHRoaXMuc2Vzc2lvbi5zZXRTY3JvbGxUb3AoTWF0aC5tYXgoMCwgTWF0aC5taW4odGhpcy5zY3JvbGxUb3AsIG1heEhlaWdodCAtIHRoaXMuJHNpemUuc2Nyb2xsZXJIZWlnaHQpKSk7CgogICAgICAgIHZhciBsaW5lQ291bnQgPSBNYXRoLmNlaWwobWluSGVpZ2h0IC8gdGhpcy5saW5lSGVpZ2h0KSAtIDE7CiAgICAgICAgdmFyIGZpcnN0Um93ID0gTWF0aC5tYXgoMCwgTWF0aC5yb3VuZCgodGhpcy5zY3JvbGxUb3AgLSBvZmZzZXQpIC8gdGhpcy5saW5lSGVpZ2h0KSk7CiAgICAgICAgdmFyIGxhc3RSb3cgPSBmaXJzdFJvdyArIGxpbmVDb3VudDsKICAgICAgICB2YXIgZmlyc3RSb3dTY3JlZW4sIGZpcnN0Um93SGVpZ2h0OwogICAgICAgIHZhciBsaW5lSGVpZ2h0ID0gdGhpcy5saW5lSGVpZ2h0OwogICAgICAgIGZpcnN0Um93ID0gc2Vzc2lvbi5zY3JlZW5Ub0RvY3VtZW50Um93KGZpcnN0Um93LCAwKTsKICAgICAgICB2YXIgZm9sZExpbmUgPSBzZXNzaW9uLmdldEZvbGRMaW5lKGZpcnN0Um93KTsKICAgICAgICBpZiAoZm9sZExpbmUpIHsKICAgICAgICAgICAgZmlyc3RSb3cgPSBmb2xkTGluZS5zdGFydC5yb3c7CiAgICAgICAgfQoKICAgICAgICBmaXJzdFJvd1NjcmVlbiA9IHNlc3Npb24uZG9jdW1lbnRUb1NjcmVlblJvdyhmaXJzdFJvdywgMCk7CiAgICAgICAgZmlyc3RSb3dIZWlnaHQgPSBzZXNzaW9uLmdldFJvd0xlbmd0aChmaXJzdFJvdykgKiBsaW5lSGVpZ2h0OwoKICAgICAgICBsYXN0Um93ID0gTWF0aC5taW4oc2Vzc2lvbi5zY3JlZW5Ub0RvY3VtZW50Um93KGxhc3RSb3csIDApLCBzZXNzaW9uLmdldExlbmd0aCgpIC0gMSk7CiAgICAgICAgbWluSGVpZ2h0ID0gdGhpcy4kc2l6ZS5zY3JvbGxlckhlaWdodCArIHNlc3Npb24uZ2V0Um93TGVuZ3RoKGxhc3RSb3cpICogbGluZUhlaWdodCArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Um93SGVpZ2h0OwoKICAgICAgICBvZmZzZXQgPSB0aGlzLnNjcm9sbFRvcCAtIGZpcnN0Um93U2NyZWVuICogbGluZUhlaWdodDsKCiAgICAgICAgdGhpcy5sYXllckNvbmZpZyA9IHsKICAgICAgICAgICAgd2lkdGggOiBsb25nZXN0TGluZSwKICAgICAgICAgICAgcGFkZGluZyA6IHRoaXMuJHBhZGRpbmcsCiAgICAgICAgICAgIGZpcnN0Um93IDogZmlyc3RSb3csCiAgICAgICAgICAgIGZpcnN0Um93U2NyZWVuOiBmaXJzdFJvd1NjcmVlbiwKICAgICAgICAgICAgbGFzdFJvdyA6IGxhc3RSb3csCiAgICAgICAgICAgIGxpbmVIZWlnaHQgOiBsaW5lSGVpZ2h0LAogICAgICAgICAgICBjaGFyYWN0ZXJXaWR0aCA6IHRoaXMuY2hhcmFjdGVyV2lkdGgsCiAgICAgICAgICAgIG1pbkhlaWdodCA6IG1pbkhlaWdodCwKICAgICAgICAgICAgbWF4SGVpZ2h0IDogbWF4SGVpZ2h0LAogICAgICAgICAgICBvZmZzZXQgOiBvZmZzZXQsCiAgICAgICAgICAgIGhlaWdodCA6IHRoaXMuJHNpemUuc2Nyb2xsZXJIZWlnaHQKICAgICAgICB9OwoKICAgICAgICB0aGlzLiRndXR0ZXJMYXllci5lbGVtZW50LnN0eWxlLm1hcmdpblRvcCA9ICgtb2Zmc2V0KSArICJweCI7CiAgICAgICAgdGhpcy5jb250ZW50LnN0eWxlLm1hcmdpblRvcCA9ICgtb2Zmc2V0KSArICJweCI7CiAgICAgICAgdGhpcy5jb250ZW50LnN0eWxlLndpZHRoID0gbG9uZ2VzdExpbmUgKyAyICogdGhpcy4kcGFkZGluZyArICJweCI7CiAgICAgICAgdGhpcy5jb250ZW50LnN0eWxlLmhlaWdodCA9IG1pbkhlaWdodCArICJweCI7CiAgICAgICAgaWYgKGhvcml6U2Nyb2xsQ2hhbmdlZCkKICAgICAgICAgICAgdGhpcy5vblJlc2l6ZSh0cnVlKTsKICAgIH07CgogICAgdGhpcy4kdXBkYXRlTGluZXMgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgZmlyc3RSb3cgPSB0aGlzLiRjaGFuZ2VkTGluZXMuZmlyc3RSb3c7CiAgICAgICAgdmFyIGxhc3RSb3cgPSB0aGlzLiRjaGFuZ2VkTGluZXMubGFzdFJvdzsKICAgICAgICB0aGlzLiRjaGFuZ2VkTGluZXMgPSBudWxsOwoKICAgICAgICB2YXIgbGF5ZXJDb25maWcgPSB0aGlzLmxheWVyQ29uZmlnOwoKICAgICAgICBpZiAoZmlyc3RSb3cgPiBsYXllckNvbmZpZy5sYXN0Um93ICsgMSkgeyByZXR1cm47IH0KICAgICAgICBpZiAobGFzdFJvdyA8IGxheWVyQ29uZmlnLmZpcnN0Um93KSB7IHJldHVybjsgfQogICAgICAgIGlmIChsYXN0Um93ID09PSBJbmZpbml0eSkgewogICAgICAgICAgICBpZiAodGhpcy5zaG93R3V0dGVyKQogICAgICAgICAgICAgICAgdGhpcy4kZ3V0dGVyTGF5ZXIudXBkYXRlKGxheWVyQ29uZmlnKTsKICAgICAgICAgICAgdGhpcy4kdGV4dExheWVyLnVwZGF0ZShsYXllckNvbmZpZyk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgdGhpcy4kdGV4dExheWVyLnVwZGF0ZUxpbmVzKGxheWVyQ29uZmlnLCBmaXJzdFJvdywgbGFzdFJvdyk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9OwoKICAgIHRoaXMuJGdldExvbmdlc3RMaW5lID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGNoYXJDb3VudCA9IHRoaXMuc2Vzc2lvbi5nZXRTY3JlZW5XaWR0aCgpOwogICAgICAgIGlmICh0aGlzLiR0ZXh0TGF5ZXIuc2hvd0ludmlzaWJsZXMpCiAgICAgICAgICAgIGNoYXJDb3VudCArPSAxOwoKICAgICAgICByZXR1cm4gTWF0aC5tYXgodGhpcy4kc2l6ZS5zY3JvbGxlcldpZHRoIC0gMiAqIHRoaXMuJHBhZGRpbmcsIE1hdGgucm91bmQoY2hhckNvdW50ICogdGhpcy5jaGFyYWN0ZXJXaWR0aCkpOwogICAgfTsKICAgIHRoaXMudXBkYXRlRnJvbnRNYXJrZXJzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kbWFya2VyRnJvbnQuc2V0TWFya2Vycyh0aGlzLnNlc3Npb24uZ2V0TWFya2Vycyh0cnVlKSk7CiAgICAgICAgdGhpcy4kbG9vcC5zY2hlZHVsZSh0aGlzLkNIQU5HRV9NQVJLRVJfRlJPTlQpOwogICAgfTsKICAgIHRoaXMudXBkYXRlQmFja01hcmtlcnMgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRtYXJrZXJCYWNrLnNldE1hcmtlcnModGhpcy5zZXNzaW9uLmdldE1hcmtlcnMoKSk7CiAgICAgICAgdGhpcy4kbG9vcC5zY2hlZHVsZSh0aGlzLkNIQU5HRV9NQVJLRVJfQkFDSyk7CiAgICB9OwogICAgdGhpcy5hZGRHdXR0ZXJEZWNvcmF0aW9uID0gZnVuY3Rpb24ocm93LCBjbGFzc05hbWUpewogICAgICAgIHRoaXMuJGd1dHRlckxheWVyLmFkZEd1dHRlckRlY29yYXRpb24ocm93LCBjbGFzc05hbWUpOwogICAgfTsKICAgIHRoaXMucmVtb3ZlR3V0dGVyRGVjb3JhdGlvbiA9IGZ1bmN0aW9uKHJvdywgY2xhc3NOYW1lKXsKICAgICAgICB0aGlzLiRndXR0ZXJMYXllci5yZW1vdmVHdXR0ZXJEZWNvcmF0aW9uKHJvdywgY2xhc3NOYW1lKTsKICAgIH07CiAgICB0aGlzLnVwZGF0ZUJyZWFrcG9pbnRzID0gZnVuY3Rpb24ocm93cykgewogICAgICAgIHRoaXMuJGxvb3Auc2NoZWR1bGUodGhpcy5DSEFOR0VfR1VUVEVSKTsKICAgIH07CiAgICB0aGlzLnNldEFubm90YXRpb25zID0gZnVuY3Rpb24oYW5ub3RhdGlvbnMpIHsKICAgICAgICB0aGlzLiRndXR0ZXJMYXllci5zZXRBbm5vdGF0aW9ucyhhbm5vdGF0aW9ucyk7CiAgICAgICAgdGhpcy4kbG9vcC5zY2hlZHVsZSh0aGlzLkNIQU5HRV9HVVRURVIpOwogICAgfTsKICAgIHRoaXMudXBkYXRlQ3Vyc29yID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kbG9vcC5zY2hlZHVsZSh0aGlzLkNIQU5HRV9DVVJTT1IpOwogICAgfTsKICAgIHRoaXMuaGlkZUN1cnNvciA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuJGN1cnNvckxheWVyLmhpZGVDdXJzb3IoKTsKICAgIH07CiAgICB0aGlzLnNob3dDdXJzb3IgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLiRjdXJzb3JMYXllci5zaG93Q3Vyc29yKCk7CiAgICB9OwoKICAgIHRoaXMuc2Nyb2xsU2VsZWN0aW9uSW50b1ZpZXcgPSBmdW5jdGlvbihhbmNob3IsIGxlYWQsIG9mZnNldCkgewogICAgICAgIHRoaXMuc2Nyb2xsQ3Vyc29ySW50b1ZpZXcoYW5jaG9yLCBvZmZzZXQpOwogICAgICAgIHRoaXMuc2Nyb2xsQ3Vyc29ySW50b1ZpZXcobGVhZCwgb2Zmc2V0KTsKICAgIH07CiAgICB0aGlzLnNjcm9sbEN1cnNvckludG9WaWV3ID0gZnVuY3Rpb24oY3Vyc29yLCBvZmZzZXQpIHsKICAgICAgICBpZiAodGhpcy4kc2l6ZS5zY3JvbGxlckhlaWdodCA9PT0gMCkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB2YXIgcG9zID0gdGhpcy4kY3Vyc29yTGF5ZXIuZ2V0UGl4ZWxQb3NpdGlvbihjdXJzb3IpOwoKICAgICAgICB2YXIgbGVmdCA9IHBvcy5sZWZ0OwogICAgICAgIHZhciB0b3AgPSBwb3MudG9wOwoKICAgICAgICBpZiAodGhpcy5zY3JvbGxUb3AgPiB0b3ApIHsKICAgICAgICAgICAgaWYgKG9mZnNldCkKICAgICAgICAgICAgICAgIHRvcCAtPSBvZmZzZXQgKiB0aGlzLiRzaXplLnNjcm9sbGVySGVpZ2h0OwogICAgICAgICAgICB0aGlzLnNlc3Npb24uc2V0U2Nyb2xsVG9wKHRvcCk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNjcm9sbFRvcCArIHRoaXMuJHNpemUuc2Nyb2xsZXJIZWlnaHQgPCB0b3AgKyB0aGlzLmxpbmVIZWlnaHQpIHsKICAgICAgICAgICAgaWYgKG9mZnNldCkKICAgICAgICAgICAgICAgIHRvcCArPSBvZmZzZXQgKiB0aGlzLiRzaXplLnNjcm9sbGVySGVpZ2h0OwogICAgICAgICAgICB0aGlzLnNlc3Npb24uc2V0U2Nyb2xsVG9wKHRvcCArIHRoaXMubGluZUhlaWdodCAtIHRoaXMuJHNpemUuc2Nyb2xsZXJIZWlnaHQpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHNjcm9sbExlZnQgPSB0aGlzLnNjcm9sbExlZnQ7CgogICAgICAgIGlmIChzY3JvbGxMZWZ0ID4gbGVmdCkgewogICAgICAgICAgICBpZiAobGVmdCA8IHRoaXMuJHBhZGRpbmcgKyAyICogdGhpcy5sYXllckNvbmZpZy5jaGFyYWN0ZXJXaWR0aCkKICAgICAgICAgICAgICAgIGxlZnQgPSAwOwogICAgICAgICAgICB0aGlzLnNlc3Npb24uc2V0U2Nyb2xsTGVmdChsZWZ0KTsKICAgICAgICB9IGVsc2UgaWYgKHNjcm9sbExlZnQgKyB0aGlzLiRzaXplLnNjcm9sbGVyV2lkdGggPCBsZWZ0ICsgdGhpcy5jaGFyYWN0ZXJXaWR0aCkgewogICAgICAgICAgICB0aGlzLnNlc3Npb24uc2V0U2Nyb2xsTGVmdChNYXRoLnJvdW5kKGxlZnQgKyB0aGlzLmNoYXJhY3RlcldpZHRoIC0gdGhpcy4kc2l6ZS5zY3JvbGxlcldpZHRoKSk7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuZ2V0U2Nyb2xsVG9wID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc2Vzc2lvbi5nZXRTY3JvbGxUb3AoKTsKICAgIH07CiAgICB0aGlzLmdldFNjcm9sbExlZnQgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5zZXNzaW9uLmdldFNjcm9sbExlZnQoKTsKICAgIH07CiAgICB0aGlzLmdldFNjcm9sbFRvcFJvdyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLnNjcm9sbFRvcCAvIHRoaXMubGluZUhlaWdodDsKICAgIH07CiAgICB0aGlzLmdldFNjcm9sbEJvdHRvbVJvdyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLmZsb29yKCh0aGlzLnNjcm9sbFRvcCArIHRoaXMuJHNpemUuc2Nyb2xsZXJIZWlnaHQpIC8gdGhpcy5saW5lSGVpZ2h0KSAtIDEpOwogICAgfTsKICAgIHRoaXMuc2Nyb2xsVG9Sb3cgPSBmdW5jdGlvbihyb3cpIHsKICAgICAgICB0aGlzLnNlc3Npb24uc2V0U2Nyb2xsVG9wKHJvdyAqIHRoaXMubGluZUhlaWdodCk7CiAgICB9OwoKICAgIHRoaXMuYWxpZ25DdXJzb3IgPSBmdW5jdGlvbihjdXJzb3IsIGFsaWdubWVudCkgewogICAgICAgIGlmICh0eXBlb2YgY3Vyc29yID09ICJudW1iZXIiKQogICAgICAgICAgICBjdXJzb3IgPSB7cm93OiBjdXJzb3IsIGNvbHVtbjogMH07CgogICAgICAgIHZhciBwb3MgPSB0aGlzLiRjdXJzb3JMYXllci5nZXRQaXhlbFBvc2l0aW9uKGN1cnNvcik7CiAgICAgICAgdmFyIGggPSB0aGlzLiRzaXplLnNjcm9sbGVySGVpZ2h0IC0gdGhpcy5saW5lSGVpZ2h0OwogICAgICAgIHZhciBvZmZzZXQgPSBwb3MudG9wIC0gaCAqIChhbGlnbm1lbnQgfHwgMCk7CgogICAgICAgIHRoaXMuc2Vzc2lvbi5zZXRTY3JvbGxUb3Aob2Zmc2V0KTsKICAgICAgICByZXR1cm4gb2Zmc2V0OwogICAgfTsKCiAgICB0aGlzLlNURVBTID0gODsKICAgIHRoaXMuJGNhbGNTdGVwcyA9IGZ1bmN0aW9uKGZyb21WYWx1ZSwgdG9WYWx1ZSl7CiAgICAgICAgdmFyIGkgPSAwOwogICAgICAgIHZhciBsID0gdGhpcy5TVEVQUzsKICAgICAgICB2YXIgc3RlcHMgPSBbXTsKCiAgICAgICAgdmFyIGZ1bmMgID0gZnVuY3Rpb24odCwgeF9taW4sIGR4KSB7CiAgICAgICAgICAgIHJldHVybiBkeCAqIChNYXRoLnBvdyh0IC0gMSwgMykgKyAxKSArIHhfbWluOwogICAgICAgIH07CgogICAgICAgIGZvciAoaSA9IDA7IGkgPCBsOyArK2kpCiAgICAgICAgICAgIHN0ZXBzLnB1c2goZnVuYyhpIC8gdGhpcy5TVEVQUywgZnJvbVZhbHVlLCB0b1ZhbHVlIC0gZnJvbVZhbHVlKSk7CgogICAgICAgIHJldHVybiBzdGVwczsKICAgIH07CiAgICB0aGlzLnNjcm9sbFRvTGluZSA9IGZ1bmN0aW9uKGxpbmUsIGNlbnRlciwgYW5pbWF0ZSwgY2FsbGJhY2spIHsKICAgICAgICB2YXIgcG9zID0gdGhpcy4kY3Vyc29yTGF5ZXIuZ2V0UGl4ZWxQb3NpdGlvbih7cm93OiBsaW5lLCBjb2x1bW46IDB9KTsKICAgICAgICB2YXIgb2Zmc2V0ID0gcG9zLnRvcDsKICAgICAgICBpZiAoY2VudGVyKQogICAgICAgICAgICBvZmZzZXQgLT0gdGhpcy4kc2l6ZS5zY3JvbGxlckhlaWdodCAvIDI7CgogICAgICAgIHZhciBpbml0aWFsU2Nyb2xsID0gdGhpcy5zY3JvbGxUb3A7CiAgICAgICAgdGhpcy5zZXNzaW9uLnNldFNjcm9sbFRvcChvZmZzZXQpOwogICAgICAgIGlmIChhbmltYXRlICE9PSBmYWxzZSkKICAgICAgICAgICAgdGhpcy5hbmltYXRlU2Nyb2xsaW5nKGluaXRpYWxTY3JvbGwsIGNhbGxiYWNrKTsKICAgIH07CgogICAgdGhpcy5hbmltYXRlU2Nyb2xsaW5nID0gZnVuY3Rpb24oZnJvbVZhbHVlLCBjYWxsYmFjaykgewogICAgICAgIHZhciB0b1ZhbHVlID0gdGhpcy5zY3JvbGxUb3A7CiAgICAgICAgaWYgKHRoaXMuJGFuaW1hdGVkU2Nyb2xsICYmIE1hdGguYWJzKGZyb21WYWx1ZSAtIHRvVmFsdWUpIDwgMTAwMDAwKSB7CiAgICAgICAgICAgIHZhciBfc2VsZiA9IHRoaXM7CiAgICAgICAgICAgIHZhciBzdGVwcyA9IF9zZWxmLiRjYWxjU3RlcHMoZnJvbVZhbHVlLCB0b1ZhbHVlKTsKICAgICAgICAgICAgdGhpcy4kaW5TY3JvbGxBbmltYXRpb24gPSB0cnVlOwoKICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLiR0aW1lcik7CgogICAgICAgICAgICBfc2VsZi5zZXNzaW9uLnNldFNjcm9sbFRvcChzdGVwcy5zaGlmdCgpKTsKICAgICAgICAgICAgdGhpcy4kdGltZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGlmIChzdGVwcy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICBfc2VsZi5zZXNzaW9uLnNldFNjcm9sbFRvcChzdGVwcy5zaGlmdCgpKTsKICAgICAgICAgICAgICAgICAgICBfc2VsZi5zZXNzaW9uLiRzY3JvbGxUb3AgPSB0b1ZhbHVlOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0b1ZhbHVlICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICBfc2VsZi5zZXNzaW9uLiRzY3JvbGxUb3AgPSAtMTsKICAgICAgICAgICAgICAgICAgICBfc2VsZi5zZXNzaW9uLnNldFNjcm9sbFRvcCh0b1ZhbHVlKTsKICAgICAgICAgICAgICAgICAgICB0b1ZhbHVlID0gbnVsbDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgX3NlbGYuJHRpbWVyID0gY2xlYXJJbnRlcnZhbChfc2VsZi4kdGltZXIpOwogICAgICAgICAgICAgICAgICAgIF9zZWxmLiRpblNjcm9sbEFuaW1hdGlvbiA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIDEwKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5zY3JvbGxUb1kgPSBmdW5jdGlvbihzY3JvbGxUb3ApIHsKICAgICAgICBpZiAodGhpcy5zY3JvbGxUb3AgIT09IHNjcm9sbFRvcCkgewogICAgICAgICAgICB0aGlzLiRsb29wLnNjaGVkdWxlKHRoaXMuQ0hBTkdFX1NDUk9MTCk7CiAgICAgICAgICAgIHRoaXMuc2Nyb2xsVG9wID0gc2Nyb2xsVG9wOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLnNjcm9sbFRvWCA9IGZ1bmN0aW9uKHNjcm9sbExlZnQpIHsKICAgICAgICBpZiAoc2Nyb2xsTGVmdCA8IDApCiAgICAgICAgICAgIHNjcm9sbExlZnQgPSAwOwoKICAgICAgICBpZiAodGhpcy5zY3JvbGxMZWZ0ICE9PSBzY3JvbGxMZWZ0KQogICAgICAgICAgICB0aGlzLnNjcm9sbExlZnQgPSBzY3JvbGxMZWZ0OwogICAgICAgIHRoaXMuJGxvb3Auc2NoZWR1bGUodGhpcy5DSEFOR0VfSF9TQ1JPTEwpOwogICAgfTsKICAgIHRoaXMuc2Nyb2xsQnkgPSBmdW5jdGlvbihkZWx0YVgsIGRlbHRhWSkgewogICAgICAgIGRlbHRhWSAmJiB0aGlzLnNlc3Npb24uc2V0U2Nyb2xsVG9wKHRoaXMuc2Vzc2lvbi5nZXRTY3JvbGxUb3AoKSArIGRlbHRhWSk7CiAgICAgICAgZGVsdGFYICYmIHRoaXMuc2Vzc2lvbi5zZXRTY3JvbGxMZWZ0KHRoaXMuc2Vzc2lvbi5nZXRTY3JvbGxMZWZ0KCkgKyBkZWx0YVgpOwogICAgfTsKICAgIHRoaXMuaXNTY3JvbGxhYmxlQnkgPSBmdW5jdGlvbihkZWx0YVgsIGRlbHRhWSkgewogICAgICAgIGlmIChkZWx0YVkgPCAwICYmIHRoaXMuc2Vzc2lvbi5nZXRTY3JvbGxUb3AoKSA+IDApCiAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgaWYgKGRlbHRhWSA+IDAgJiYgdGhpcy5zZXNzaW9uLmdldFNjcm9sbFRvcCgpICsgdGhpcy4kc2l6ZS5zY3JvbGxlckhlaWdodCA8IHRoaXMubGF5ZXJDb25maWcubWF4SGVpZ2h0KQogICAgICAgICAgIHJldHVybiB0cnVlOwogICAgfTsKCiAgICB0aGlzLnBpeGVsVG9TY3JlZW5Db29yZGluYXRlcyA9IGZ1bmN0aW9uKHgsIHkpIHsKICAgICAgICB2YXIgY2FudmFzUG9zID0gdGhpcy5zY3JvbGxlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKCiAgICAgICAgdmFyIG9mZnNldCA9ICh4ICsgdGhpcy5zY3JvbGxMZWZ0IC0gY2FudmFzUG9zLmxlZnQgLSB0aGlzLiRwYWRkaW5nKSAvIHRoaXMuY2hhcmFjdGVyV2lkdGg7CiAgICAgICAgdmFyIHJvdyA9IE1hdGguZmxvb3IoKHkgKyB0aGlzLnNjcm9sbFRvcCAtIGNhbnZhc1Bvcy50b3ApIC8gdGhpcy5saW5lSGVpZ2h0KTsKICAgICAgICB2YXIgY29sID0gTWF0aC5yb3VuZChvZmZzZXQpOwoKICAgICAgICByZXR1cm4ge3Jvdzogcm93LCBjb2x1bW46IGNvbCwgc2lkZTogb2Zmc2V0IC0gY29sID4gMCA/IDEgOiAtMX07CiAgICB9OwoKICAgIHRoaXMuc2NyZWVuVG9UZXh0Q29vcmRpbmF0ZXMgPSBmdW5jdGlvbih4LCB5KSB7CiAgICAgICAgdmFyIGNhbnZhc1BvcyA9IHRoaXMuc2Nyb2xsZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CgogICAgICAgIHZhciBjb2wgPSBNYXRoLnJvdW5kKAogICAgICAgICAgICAoeCArIHRoaXMuc2Nyb2xsTGVmdCAtIGNhbnZhc1Bvcy5sZWZ0IC0gdGhpcy4kcGFkZGluZykgLyB0aGlzLmNoYXJhY3RlcldpZHRoCiAgICAgICAgKTsKICAgICAgICB2YXIgcm93ID0gTWF0aC5mbG9vcigKICAgICAgICAgICAgKHkgKyB0aGlzLnNjcm9sbFRvcCAtIGNhbnZhc1Bvcy50b3ApIC8gdGhpcy5saW5lSGVpZ2h0CiAgICAgICAgKTsKCiAgICAgICAgcmV0dXJuIHRoaXMuc2Vzc2lvbi5zY3JlZW5Ub0RvY3VtZW50UG9zaXRpb24ocm93LCBNYXRoLm1heChjb2wsIDApKTsKICAgIH07CiAgICB0aGlzLnRleHRUb1NjcmVlbkNvb3JkaW5hdGVzID0gZnVuY3Rpb24ocm93LCBjb2x1bW4pIHsKICAgICAgICB2YXIgY2FudmFzUG9zID0gdGhpcy5zY3JvbGxlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgICAgICB2YXIgcG9zID0gdGhpcy5zZXNzaW9uLmRvY3VtZW50VG9TY3JlZW5Qb3NpdGlvbihyb3csIGNvbHVtbik7CgogICAgICAgIHZhciB4ID0gdGhpcy4kcGFkZGluZyArIE1hdGgucm91bmQocG9zLmNvbHVtbiAqIHRoaXMuY2hhcmFjdGVyV2lkdGgpOwogICAgICAgIHZhciB5ID0gcG9zLnJvdyAqIHRoaXMubGluZUhlaWdodDsKCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgcGFnZVg6IGNhbnZhc1Bvcy5sZWZ0ICsgeCAtIHRoaXMuc2Nyb2xsTGVmdCwKICAgICAgICAgICAgcGFnZVk6IGNhbnZhc1Bvcy50b3AgKyB5IC0gdGhpcy5zY3JvbGxUb3AKICAgICAgICB9OwogICAgfTsKICAgIHRoaXMudmlzdWFsaXplRm9jdXMgPSBmdW5jdGlvbigpIHsKICAgICAgICBkb20uYWRkQ3NzQ2xhc3ModGhpcy5jb250YWluZXIsICJhY2VfZm9jdXMiKTsKICAgIH07CiAgICB0aGlzLnZpc3VhbGl6ZUJsdXIgPSBmdW5jdGlvbigpIHsKICAgICAgICBkb20ucmVtb3ZlQ3NzQ2xhc3ModGhpcy5jb250YWluZXIsICJhY2VfZm9jdXMiKTsKICAgIH07CiAgICB0aGlzLnNob3dDb21wb3NpdGlvbiA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7CiAgICAgICAgaWYgKCF0aGlzLiRjb21wb3NpdGlvbikKICAgICAgICAgICAgdGhpcy4kY29tcG9zaXRpb24gPSB7CiAgICAgICAgICAgICAgICBrZWVwVGV4dEFyZWFBdEN1cnNvcjogdGhpcy4ka2VlcFRleHRBcmVhQXRDdXJzb3IsCiAgICAgICAgICAgICAgICBjc3NUZXh0OiB0aGlzLnRleHRhcmVhLnN0eWxlLmNzc1RleHQKICAgICAgICAgICAgfTsKCiAgICAgICAgdGhpcy4ka2VlcFRleHRBcmVhQXRDdXJzb3IgPSB0cnVlOwogICAgICAgIGRvbS5hZGRDc3NDbGFzcyh0aGlzLnRleHRhcmVhLCAiYWNlX2NvbXBvc2l0aW9uIik7CiAgICAgICAgdGhpcy50ZXh0YXJlYS5zdHlsZS5jc3NUZXh0ID0gIiI7CiAgICAgICAgdGhpcy4kbW92ZVRleHRBcmVhVG9DdXJzb3IoKTsKICAgIH07CiAgICB0aGlzLnNldENvbXBvc2l0aW9uVGV4dCA9IGZ1bmN0aW9uKHRleHQpIHsKICAgICAgICB0aGlzLiRtb3ZlVGV4dEFyZWFUb0N1cnNvcigpOwogICAgfTsKICAgIHRoaXMuaGlkZUNvbXBvc2l0aW9uID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKCF0aGlzLiRjb21wb3NpdGlvbikKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICBkb20ucmVtb3ZlQ3NzQ2xhc3ModGhpcy50ZXh0YXJlYSwgImFjZV9jb21wb3NpdGlvbiIpOwogICAgICAgIHRoaXMuJGtlZXBUZXh0QXJlYUF0Q3Vyc29yID0gdGhpcy4kY29tcG9zaXRpb24ua2VlcFRleHRBcmVhQXRDdXJzb3I7CiAgICAgICAgdGhpcy50ZXh0YXJlYS5zdHlsZS5jc3NUZXh0ID0gdGhpcy4kY29tcG9zaXRpb24uY3NzVGV4dDsKICAgICAgICB0aGlzLiRjb21wb3NpdGlvbiA9IG51bGw7CiAgICB9OwoKICAgIHRoaXMuX2xvYWRUaGVtZSA9IGZ1bmN0aW9uKG5hbWUsIGNhbGxiYWNrKSB7CiAgICAgICAgCiAgICB9OwogICAgdGhpcy5zZXRUaGVtZSA9IGZ1bmN0aW9uKHRoZW1lKSB7CiAgICAgICAgdmFyIF9zZWxmID0gdGhpczsKICAgICAgICB0aGlzLiR0aGVtZVZhbHVlID0gdGhlbWU7CiAgICAgICAgX3NlbGYuX2Rpc3BhdGNoRXZlbnQoJ3RoZW1lQ2hhbmdlJyx7dGhlbWU6dGhlbWV9KTsKICAgICAgICAKICAgICAgICBpZiAoIXRoZW1lIHx8IHR5cGVvZiB0aGVtZSA9PSAic3RyaW5nIikgewogICAgICAgICAgICB2YXIgbW9kdWxlTmFtZSA9IHRoZW1lIHx8ICJhY2UvdGhlbWUvdGV4dG1hdGUiOwogICAgICAgICAgICBjb25maWcubG9hZE1vZHVsZShbInRoZW1lIiwgbW9kdWxlTmFtZV0sIGFmdGVyTG9hZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYWZ0ZXJMb2FkKHRoZW1lKTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIGFmdGVyTG9hZCh0aGVtZSkgewogICAgICAgICAgICBkb20uaW1wb3J0Q3NzU3RyaW5nKAogICAgICAgICAgICAgICAgdGhlbWUuY3NzVGV4dCwKICAgICAgICAgICAgICAgIHRoZW1lLmNzc0NsYXNzLAogICAgICAgICAgICAgICAgX3NlbGYuY29udGFpbmVyLm93bmVyRG9jdW1lbnQKICAgICAgICAgICAgKTsKCiAgICAgICAgICAgIGlmIChfc2VsZi50aGVtZSkKICAgICAgICAgICAgICAgIGRvbS5yZW1vdmVDc3NDbGFzcyhfc2VsZi5jb250YWluZXIsIF9zZWxmLnRoZW1lLmNzc0NsYXNzKTsKICAgICAgICAgICAgX3NlbGYuJHRoZW1lID0gdGhlbWUuY3NzQ2xhc3M7CgogICAgICAgICAgICBfc2VsZi50aGVtZSA9IHRoZW1lOwogICAgICAgICAgICBkb20uYWRkQ3NzQ2xhc3MoX3NlbGYuY29udGFpbmVyLCB0aGVtZS5jc3NDbGFzcyk7CiAgICAgICAgICAgIGRvbS5zZXRDc3NDbGFzcyhfc2VsZi5jb250YWluZXIsICJhY2VfZGFyayIsIHRoZW1lLmlzRGFyayk7CgogICAgICAgICAgICB2YXIgcGFkZGluZyA9IHRoZW1lLnBhZGRpbmcgfHwgNDsKICAgICAgICAgICAgaWYgKF9zZWxmLiRwYWRkaW5nICYmIHBhZGRpbmcgIT0gX3NlbGYuJHBhZGRpbmcpCiAgICAgICAgICAgICAgICBfc2VsZi5zZXRQYWRkaW5nKHBhZGRpbmcpOwogICAgICAgICAgICBpZiAoX3NlbGYuJHNpemUpIHsKICAgICAgICAgICAgICAgIF9zZWxmLiRzaXplLndpZHRoID0gMDsKICAgICAgICAgICAgICAgIF9zZWxmLm9uUmVzaXplKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIF9zZWxmLl9kaXNwYXRjaEV2ZW50KCd0aGVtZUxvYWRlZCcse3RoZW1lOnRoZW1lfSk7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuZ2V0VGhlbWUgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdGhlbWVWYWx1ZTsKICAgIH07CiAgICB0aGlzLnNldFN0eWxlID0gZnVuY3Rpb24gc2V0U3R5bGUoc3R5bGUsIGluY2x1ZGUpIHsKICAgICAgICBkb20uc2V0Q3NzQ2xhc3ModGhpcy5jb250YWluZXIsIHN0eWxlLCBpbmNsdWRlICE9IGZhbHNlKTsKICAgIH07CiAgICB0aGlzLnVuc2V0U3R5bGUgPSBmdW5jdGlvbiB1bnNldFN0eWxlKHN0eWxlKSB7CiAgICAgICAgZG9tLnJlbW92ZUNzc0NsYXNzKHRoaXMuY29udGFpbmVyLCBzdHlsZSk7CiAgICB9OwogICAgdGhpcy5kZXN0cm95ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy4kdGV4dExheWVyLmRlc3Ryb3koKTsKICAgICAgICB0aGlzLiRjdXJzb3JMYXllci5kZXN0cm95KCk7CiAgICB9OwoKfSkuY2FsbChWaXJ0dWFsUmVuZGVyZXIucHJvdG90eXBlKTsKCmV4cG9ydHMuVmlydHVhbFJlbmRlcmVyID0gVmlydHVhbFJlbmRlcmVyOwp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9sYXllci9ndXR0ZXInLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvZG9tJywgJ2FjZS9saWIvb29wJywgJ2FjZS9saWIvbGFuZycsICdhY2UvbGliL2V2ZW50X2VtaXR0ZXInXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIGRvbSA9IHJlcXVpcmUoIi4uL2xpYi9kb20iKTsKdmFyIG9vcCA9IHJlcXVpcmUoIi4uL2xpYi9vb3AiKTsKdmFyIGxhbmcgPSByZXF1aXJlKCIuLi9saWIvbGFuZyIpOwp2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgiLi4vbGliL2V2ZW50X2VtaXR0ZXIiKS5FdmVudEVtaXR0ZXI7Cgp2YXIgR3V0dGVyID0gZnVuY3Rpb24ocGFyZW50RWwpIHsKICAgIHRoaXMuZWxlbWVudCA9IGRvbS5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIHRoaXMuZWxlbWVudC5jbGFzc05hbWUgPSAiYWNlX2xheWVyIGFjZV9ndXR0ZXItbGF5ZXIiOwogICAgcGFyZW50RWwuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTsKICAgIHRoaXMuc2V0U2hvd0ZvbGRXaWRnZXRzKHRoaXMuJHNob3dGb2xkV2lkZ2V0cyk7CiAgICAKICAgIHRoaXMuZ3V0dGVyV2lkdGggPSAwOwoKICAgIHRoaXMuJGFubm90YXRpb25zID0gW107CiAgICB0aGlzLiR1cGRhdGVBbm5vdGF0aW9ucyA9IHRoaXMuJHVwZGF0ZUFubm90YXRpb25zLmJpbmQodGhpcyk7Cn07CgooZnVuY3Rpb24oKSB7CgogICAgb29wLmltcGxlbWVudCh0aGlzLCBFdmVudEVtaXR0ZXIpOwoKICAgIHRoaXMuc2V0U2Vzc2lvbiA9IGZ1bmN0aW9uKHNlc3Npb24pIHsKICAgICAgICBpZiAodGhpcy5zZXNzaW9uKQogICAgICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgdGhpcy4kdXBkYXRlQW5ub3RhdGlvbnMpOwogICAgICAgIHRoaXMuc2Vzc2lvbiA9IHNlc3Npb247CiAgICAgICAgc2Vzc2lvbi5vbigiY2hhbmdlIiwgdGhpcy4kdXBkYXRlQW5ub3RhdGlvbnMpOwogICAgfTsKCiAgICB0aGlzLmFkZEd1dHRlckRlY29yYXRpb24gPSBmdW5jdGlvbihyb3csIGNsYXNzTmFtZSl7CiAgICAgICAgaWYgKHdpbmRvdy5jb25zb2xlKQogICAgICAgICAgICBjb25zb2xlLndhcm4gJiYgY29uc29sZS53YXJuKCJkZXByZWNhdGVkIHVzZSBzZXNzaW9uLmFkZEd1dHRlckRlY29yYXRpb24iKTsKICAgICAgICB0aGlzLnNlc3Npb24uYWRkR3V0dGVyRGVjb3JhdGlvbihyb3csIGNsYXNzTmFtZSk7CiAgICB9OwoKICAgIHRoaXMucmVtb3ZlR3V0dGVyRGVjb3JhdGlvbiA9IGZ1bmN0aW9uKHJvdywgY2xhc3NOYW1lKXsKICAgICAgICBpZiAod2luZG93LmNvbnNvbGUpCiAgICAgICAgICAgIGNvbnNvbGUud2FybiAmJiBjb25zb2xlLndhcm4oImRlcHJlY2F0ZWQgdXNlIHNlc3Npb24ucmVtb3ZlR3V0dGVyRGVjb3JhdGlvbiIpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmVHdXR0ZXJEZWNvcmF0aW9uKHJvdywgY2xhc3NOYW1lKTsKICAgIH07CgogICAgdGhpcy5zZXRBbm5vdGF0aW9ucyA9IGZ1bmN0aW9uKGFubm90YXRpb25zKSB7CiAgICAgICAgdGhpcy4kYW5ub3RhdGlvbnMgPSBbXQogICAgICAgIHZhciByb3dJbmZvLCByb3c7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbm5vdGF0aW9ucy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIgYW5ub3RhdGlvbiA9IGFubm90YXRpb25zW2ldOwogICAgICAgICAgICB2YXIgcm93ID0gYW5ub3RhdGlvbi5yb3c7CiAgICAgICAgICAgIHZhciByb3dJbmZvID0gdGhpcy4kYW5ub3RhdGlvbnNbcm93XTsKICAgICAgICAgICAgaWYgKCFyb3dJbmZvKQogICAgICAgICAgICAgICAgcm93SW5mbyA9IHRoaXMuJGFubm90YXRpb25zW3Jvd10gPSB7dGV4dDogW119OwogICAgICAgICAgIAogICAgICAgICAgICB2YXIgYW5ub1RleHQgPSBhbm5vdGF0aW9uLnRleHQ7CiAgICAgICAgICAgIGFubm9UZXh0ID0gYW5ub1RleHQgPyBsYW5nLmVzY2FwZUhUTUwoYW5ub1RleHQpIDogYW5ub3RhdGlvbi5odG1sIHx8ICIiOwoKICAgICAgICAgICAgaWYgKHJvd0luZm8udGV4dC5pbmRleE9mKGFubm9UZXh0KSA9PT0gLTEpCiAgICAgICAgICAgICAgICByb3dJbmZvLnRleHQucHVzaChhbm5vVGV4dCk7CgogICAgICAgICAgICB2YXIgdHlwZSA9IGFubm90YXRpb24udHlwZTsKICAgICAgICAgICAgaWYgKHR5cGUgPT0gImVycm9yIikKICAgICAgICAgICAgICAgIHJvd0luZm8uY2xhc3NOYW1lID0gIiBhY2VfZXJyb3IiOwogICAgICAgICAgICBlbHNlIGlmICh0eXBlID09ICJ3YXJuaW5nIiAmJiByb3dJbmZvLmNsYXNzTmFtZSAhPSAiIGFjZV9lcnJvciIpCiAgICAgICAgICAgICAgICByb3dJbmZvLmNsYXNzTmFtZSA9ICIgYWNlX3dhcm5pbmciOwogICAgICAgICAgICBlbHNlIGlmICh0eXBlID09ICJpbmZvIiAmJiAoIXJvd0luZm8uY2xhc3NOYW1lKSkKICAgICAgICAgICAgICAgIHJvd0luZm8uY2xhc3NOYW1lID0gIiBhY2VfaW5mbyI7CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLiR1cGRhdGVBbm5vdGF0aW9ucyA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgaWYgKCF0aGlzLiRhbm5vdGF0aW9ucy5sZW5ndGgpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB2YXIgZGVsdGEgPSBlLmRhdGE7CiAgICAgICAgdmFyIHJhbmdlID0gZGVsdGEucmFuZ2U7CiAgICAgICAgdmFyIGZpcnN0Um93ID0gcmFuZ2Uuc3RhcnQucm93OwogICAgICAgIHZhciBsZW4gPSByYW5nZS5lbmQucm93IC0gZmlyc3RSb3c7CiAgICAgICAgaWYgKGxlbiA9PT0gMCkgewogICAgICAgIH0gZWxzZSBpZiAoZGVsdGEuYWN0aW9uID09ICJyZW1vdmVUZXh0IiB8fCBkZWx0YS5hY3Rpb24gPT0gInJlbW92ZUxpbmVzIikgewogICAgICAgICAgICB0aGlzLiRhbm5vdGF0aW9ucy5zcGxpY2UoZmlyc3RSb3csIGxlbiArIDEsIG51bGwpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBhcmdzID0gQXJyYXkobGVuICsgMSk7CiAgICAgICAgICAgIGFyZ3MudW5zaGlmdChmaXJzdFJvdywgMSk7CiAgICAgICAgICAgIHRoaXMuJGFubm90YXRpb25zLnNwbGljZS5hcHBseSh0aGlzLiRhbm5vdGF0aW9ucywgYXJncyk7CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLnVwZGF0ZSA9IGZ1bmN0aW9uKGNvbmZpZykgewogICAgICAgIHZhciBlbXB0eUFubm8gPSB7Y2xhc3NOYW1lOiAiIn07CiAgICAgICAgdmFyIGh0bWwgPSBbXTsKICAgICAgICB2YXIgaSA9IGNvbmZpZy5maXJzdFJvdzsKICAgICAgICB2YXIgbGFzdFJvdyA9IGNvbmZpZy5sYXN0Um93OwogICAgICAgIHZhciBmb2xkID0gdGhpcy5zZXNzaW9uLmdldE5leHRGb2xkTGluZShpKTsKICAgICAgICB2YXIgZm9sZFN0YXJ0ID0gZm9sZCA/IGZvbGQuc3RhcnQucm93IDogSW5maW5pdHk7CiAgICAgICAgdmFyIGZvbGRXaWRnZXRzID0gdGhpcy4kc2hvd0ZvbGRXaWRnZXRzICYmIHRoaXMuc2Vzc2lvbi5mb2xkV2lkZ2V0czsKICAgICAgICB2YXIgYnJlYWtwb2ludHMgPSB0aGlzLnNlc3Npb24uJGJyZWFrcG9pbnRzOwogICAgICAgIHZhciBkZWNvcmF0aW9ucyA9IHRoaXMuc2Vzc2lvbi4kZGVjb3JhdGlvbnM7CiAgICAgICAgdmFyIGxhc3RMaW5lTnVtYmVyID0gMDsKCiAgICAgICAgd2hpbGUgKHRydWUpIHsKICAgICAgICAgICAgaWYoaSA+IGZvbGRTdGFydCkgewogICAgICAgICAgICAgICAgaSA9IGZvbGQuZW5kLnJvdyArIDE7CiAgICAgICAgICAgICAgICBmb2xkID0gdGhpcy5zZXNzaW9uLmdldE5leHRGb2xkTGluZShpLCBmb2xkKTsKICAgICAgICAgICAgICAgIGZvbGRTdGFydCA9IGZvbGQgP2ZvbGQuc3RhcnQucm93IDpJbmZpbml0eTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZihpID4gbGFzdFJvdykKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgdmFyIGFubm90YXRpb24gPSB0aGlzLiRhbm5vdGF0aW9uc1tpXSB8fCBlbXB0eUFubm87CiAgICAgICAgICAgIGh0bWwucHVzaCgKICAgICAgICAgICAgICAgICI8ZGl2IGNsYXNzPSdhY2VfZ3V0dGVyLWNlbGwgIiwKICAgICAgICAgICAgICAgIGJyZWFrcG9pbnRzW2ldIHx8ICIiLCBkZWNvcmF0aW9uc1tpXSB8fCAiIiwgYW5ub3RhdGlvbi5jbGFzc05hbWUsCiAgICAgICAgICAgICAgICAiJyBzdHlsZT0naGVpZ2h0OiIsIHRoaXMuc2Vzc2lvbi5nZXRSb3dMZW5ndGgoaSkgKiBjb25maWcubGluZUhlaWdodCwgInB4Oyc+IiwgCiAgICAgICAgICAgICAgICBsYXN0TGluZU51bWJlciA9IGkgKyAxCiAgICAgICAgICAgICk7CgogICAgICAgICAgICBpZiAoZm9sZFdpZGdldHMpIHsKICAgICAgICAgICAgICAgIHZhciBjID0gZm9sZFdpZGdldHNbaV07CiAgICAgICAgICAgICAgICBpZiAoYyA9PSBudWxsKQogICAgICAgICAgICAgICAgICAgIGMgPSBmb2xkV2lkZ2V0c1tpXSA9IHRoaXMuc2Vzc2lvbi5nZXRGb2xkV2lkZ2V0KGkpOwogICAgICAgICAgICAgICAgaWYgKGMpCiAgICAgICAgICAgICAgICAgICAgaHRtbC5wdXNoKAogICAgICAgICAgICAgICAgICAgICAgICAiPHNwYW4gY2xhc3M9J2FjZV9mb2xkLXdpZGdldCBhY2VfIiwgYywKICAgICAgICAgICAgICAgICAgICAgICAgYyA9PSAic3RhcnQiICYmIGkgPT0gZm9sZFN0YXJ0ICYmIGkgPCBmb2xkLmVuZC5yb3cgPyAiIGFjZV9jbG9zZWQiIDogIiBhY2Vfb3BlbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICInIHN0eWxlPSdoZWlnaHQ6IiwgY29uZmlnLmxpbmVIZWlnaHQsICJweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICInPjwvc3Bhbj4iCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaHRtbC5wdXNoKCI8L2Rpdj4iKTsKCiAgICAgICAgICAgIGkrKzsKICAgICAgICB9CgogICAgICAgIHRoaXMuZWxlbWVudCA9IGRvbS5zZXRJbm5lckh0bWwodGhpcy5lbGVtZW50LCBodG1sLmpvaW4oIiIpKTsKICAgICAgICB0aGlzLmVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gY29uZmlnLm1pbkhlaWdodCArICJweCI7CiAgICAgICAgCiAgICAgICAgaWYgKHRoaXMuc2Vzc2lvbi4kdXNlV3JhcE1vZGUpCiAgICAgICAgICAgIGxhc3RMaW5lTnVtYmVyID0gdGhpcy5zZXNzaW9uLmdldExlbmd0aCgpOwogICAgICAgIAogICAgICAgIHZhciBndXR0ZXJXaWR0aCA9ICgiIiArIGxhc3RMaW5lTnVtYmVyKS5sZW5ndGggKiBjb25maWcuY2hhcmFjdGVyV2lkdGg7CiAgICAgICAgdmFyIHBhZGRpbmcgPSB0aGlzLiRwYWRkaW5nIHx8IHRoaXMuJGNvbXB1dGVQYWRkaW5nKCk7CiAgICAgICAgZ3V0dGVyV2lkdGggKz0gcGFkZGluZy5sZWZ0ICsgcGFkZGluZy5yaWdodDsKICAgICAgICBpZiAoZ3V0dGVyV2lkdGggIT09IHRoaXMuZ3V0dGVyV2lkdGgpIHsKICAgICAgICAgICAgdGhpcy5ndXR0ZXJXaWR0aCA9IGd1dHRlcldpZHRoOwogICAgICAgICAgICB0aGlzLmVsZW1lbnQuc3R5bGUud2lkdGggPSBNYXRoLmNlaWwodGhpcy5ndXR0ZXJXaWR0aCkgKyAicHgiOwogICAgICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VHdXR0ZXJXaWR0aCIsIGd1dHRlcldpZHRoKTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuJHNob3dGb2xkV2lkZ2V0cyA9IHRydWU7CiAgICB0aGlzLnNldFNob3dGb2xkV2lkZ2V0cyA9IGZ1bmN0aW9uKHNob3cpIHsKICAgICAgICBpZiAoc2hvdykKICAgICAgICAgICAgZG9tLmFkZENzc0NsYXNzKHRoaXMuZWxlbWVudCwgImFjZV9mb2xkaW5nLWVuYWJsZWQiKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIGRvbS5yZW1vdmVDc3NDbGFzcyh0aGlzLmVsZW1lbnQsICJhY2VfZm9sZGluZy1lbmFibGVkIik7CgogICAgICAgIHRoaXMuJHNob3dGb2xkV2lkZ2V0cyA9IHNob3c7CiAgICAgICAgdGhpcy4kcGFkZGluZyA9IG51bGw7CiAgICB9OwogICAgCiAgICB0aGlzLmdldFNob3dGb2xkV2lkZ2V0cyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzaG93Rm9sZFdpZGdldHM7CiAgICB9OwoKICAgIHRoaXMuJGNvbXB1dGVQYWRkaW5nID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKCF0aGlzLmVsZW1lbnQuZmlyc3RDaGlsZCkKICAgICAgICAgICAgcmV0dXJuIHtsZWZ0OiAwLCByaWdodDogMH07CiAgICAgICAgdmFyIHN0eWxlID0gZG9tLmNvbXB1dGVkU3R5bGUodGhpcy5lbGVtZW50LmZpcnN0Q2hpbGQpOwogICAgICAgIHRoaXMuJHBhZGRpbmcgPSB7fQogICAgICAgIHRoaXMuJHBhZGRpbmcubGVmdCA9IHBhcnNlSW50KHN0eWxlLnBhZGRpbmdMZWZ0KSArIDE7CiAgICAgICAgdGhpcy4kcGFkZGluZy5yaWdodCA9IHBhcnNlSW50KHN0eWxlLnBhZGRpbmdSaWdodCk7ICAKICAgICAgICByZXR1cm4gdGhpcy4kcGFkZGluZzsKICAgIH07CgogICAgdGhpcy5nZXRSZWdpb24gPSBmdW5jdGlvbihwb2ludCkgewogICAgICAgIHZhciBwYWRkaW5nID0gdGhpcy4kcGFkZGluZyB8fCB0aGlzLiRjb21wdXRlUGFkZGluZygpOwogICAgICAgIHZhciByZWN0ID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgICAgIGlmIChwb2ludC54IDwgcGFkZGluZy5sZWZ0ICsgcmVjdC5sZWZ0KQogICAgICAgICAgICByZXR1cm4gIm1hcmtlcnMiOwogICAgICAgIGlmICh0aGlzLiRzaG93Rm9sZFdpZGdldHMgJiYgcG9pbnQueCA+IHJlY3QucmlnaHQgLSBwYWRkaW5nLnJpZ2h0KQogICAgICAgICAgICByZXR1cm4gImZvbGRXaWRnZXRzIjsKICAgIH07Cgp9KS5jYWxsKEd1dHRlci5wcm90b3R5cGUpOwoKZXhwb3J0cy5HdXR0ZXIgPSBHdXR0ZXI7Cgp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9sYXllci9tYXJrZXInLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9yYW5nZScsICdhY2UvbGliL2RvbSddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgUmFuZ2UgPSByZXF1aXJlKCIuLi9yYW5nZSIpLlJhbmdlOwp2YXIgZG9tID0gcmVxdWlyZSgiLi4vbGliL2RvbSIpOwoKdmFyIE1hcmtlciA9IGZ1bmN0aW9uKHBhcmVudEVsKSB7CiAgICB0aGlzLmVsZW1lbnQgPSBkb20uY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICB0aGlzLmVsZW1lbnQuY2xhc3NOYW1lID0gImFjZV9sYXllciBhY2VfbWFya2VyLWxheWVyIjsKICAgIHBhcmVudEVsLmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7Cn07CgooZnVuY3Rpb24oKSB7CgogICAgdGhpcy4kcGFkZGluZyA9IDA7CgogICAgdGhpcy5zZXRQYWRkaW5nID0gZnVuY3Rpb24ocGFkZGluZykgewogICAgICAgIHRoaXMuJHBhZGRpbmcgPSBwYWRkaW5nOwogICAgfTsKICAgIHRoaXMuc2V0U2Vzc2lvbiA9IGZ1bmN0aW9uKHNlc3Npb24pIHsKICAgICAgICB0aGlzLnNlc3Npb24gPSBzZXNzaW9uOwogICAgfTsKICAgIAogICAgdGhpcy5zZXRNYXJrZXJzID0gZnVuY3Rpb24obWFya2VycykgewogICAgICAgIHRoaXMubWFya2VycyA9IG1hcmtlcnM7CiAgICB9OwoKICAgIHRoaXMudXBkYXRlID0gZnVuY3Rpb24oY29uZmlnKSB7CiAgICAgICAgdmFyIGNvbmZpZyA9IGNvbmZpZyB8fCB0aGlzLmNvbmZpZzsKICAgICAgICBpZiAoIWNvbmZpZykKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZzsKCgogICAgICAgIHZhciBodG1sID0gW107CiAgICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMubWFya2VycykgewogICAgICAgICAgICB2YXIgbWFya2VyID0gdGhpcy5tYXJrZXJzW2tleV07CgogICAgICAgICAgICBpZiAoIW1hcmtlci5yYW5nZSkgewogICAgICAgICAgICAgICAgbWFya2VyLnVwZGF0ZShodG1sLCB0aGlzLCB0aGlzLnNlc3Npb24sIGNvbmZpZyk7CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIHJhbmdlID0gbWFya2VyLnJhbmdlLmNsaXBSb3dzKGNvbmZpZy5maXJzdFJvdywgY29uZmlnLmxhc3RSb3cpOwogICAgICAgICAgICBpZiAocmFuZ2UuaXNFbXB0eSgpKSBjb250aW51ZTsKCiAgICAgICAgICAgIHJhbmdlID0gcmFuZ2UudG9TY3JlZW5SYW5nZSh0aGlzLnNlc3Npb24pOwogICAgICAgICAgICBpZiAobWFya2VyLnJlbmRlcmVyKSB7CiAgICAgICAgICAgICAgICB2YXIgdG9wID0gdGhpcy4kZ2V0VG9wKHJhbmdlLnN0YXJ0LnJvdywgY29uZmlnKTsKICAgICAgICAgICAgICAgIHZhciBsZWZ0ID0gdGhpcy4kcGFkZGluZyArIHJhbmdlLnN0YXJ0LmNvbHVtbiAqIGNvbmZpZy5jaGFyYWN0ZXJXaWR0aDsKICAgICAgICAgICAgICAgIG1hcmtlci5yZW5kZXJlcihodG1sLCByYW5nZSwgbGVmdCwgdG9wLCBjb25maWcpOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1hcmtlci50eXBlID09ICJmdWxsTGluZSIpIHsKICAgICAgICAgICAgICAgIHRoaXMuZHJhd0Z1bGxMaW5lTWFya2VyKGh0bWwsIHJhbmdlLCBtYXJrZXIuY2xhenosIGNvbmZpZyk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAocmFuZ2UuaXNNdWx0aUxpbmUoKSkgewogICAgICAgICAgICAgICAgaWYgKG1hcmtlci50eXBlID09ICJ0ZXh0IikKICAgICAgICAgICAgICAgICAgICB0aGlzLmRyYXdUZXh0TWFya2VyKGh0bWwsIHJhbmdlLCBtYXJrZXIuY2xhenosIGNvbmZpZyk7CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgdGhpcy5kcmF3TXVsdGlMaW5lTWFya2VyKGh0bWwsIHJhbmdlLCBtYXJrZXIuY2xhenosIGNvbmZpZyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmRyYXdTaW5nbGVMaW5lTWFya2VyKGh0bWwsIHJhbmdlLCBtYXJrZXIuY2xhenogKyAiIGFjZV9zdGFydCIsIGNvbmZpZyk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy5lbGVtZW50ID0gZG9tLnNldElubmVySHRtbCh0aGlzLmVsZW1lbnQsIGh0bWwuam9pbigiIikpOwogICAgfTsKCiAgICB0aGlzLiRnZXRUb3AgPSBmdW5jdGlvbihyb3csIGxheWVyQ29uZmlnKSB7CiAgICAgICAgcmV0dXJuIChyb3cgLSBsYXllckNvbmZpZy5maXJzdFJvd1NjcmVlbikgKiBsYXllckNvbmZpZy5saW5lSGVpZ2h0OwogICAgfTsKICAgIHRoaXMuZHJhd1RleHRNYXJrZXIgPSBmdW5jdGlvbihzdHJpbmdCdWlsZGVyLCByYW5nZSwgY2xhenosIGxheWVyQ29uZmlnKSB7CiAgICAgICAgdmFyIHJvdyA9IHJhbmdlLnN0YXJ0LnJvdzsKCiAgICAgICAgdmFyIGxpbmVSYW5nZSA9IG5ldyBSYW5nZSgKICAgICAgICAgICAgcm93LCByYW5nZS5zdGFydC5jb2x1bW4sCiAgICAgICAgICAgIHJvdywgdGhpcy5zZXNzaW9uLmdldFNjcmVlbkxhc3RSb3dDb2x1bW4ocm93KQogICAgICAgICk7CiAgICAgICAgdGhpcy5kcmF3U2luZ2xlTGluZU1hcmtlcihzdHJpbmdCdWlsZGVyLCBsaW5lUmFuZ2UsIGNsYXp6ICsgIiBhY2Vfc3RhcnQiLCBsYXllckNvbmZpZywgMSwgInRleHQiKTsKICAgICAgICByb3cgPSByYW5nZS5lbmQucm93OwogICAgICAgIGxpbmVSYW5nZSA9IG5ldyBSYW5nZShyb3csIDAsIHJvdywgcmFuZ2UuZW5kLmNvbHVtbik7CiAgICAgICAgdGhpcy5kcmF3U2luZ2xlTGluZU1hcmtlcihzdHJpbmdCdWlsZGVyLCBsaW5lUmFuZ2UsIGNsYXp6LCBsYXllckNvbmZpZywgMCwgInRleHQiKTsKCiAgICAgICAgZm9yIChyb3cgPSByYW5nZS5zdGFydC5yb3cgKyAxOyByb3cgPCByYW5nZS5lbmQucm93OyByb3crKykgewogICAgICAgICAgICBsaW5lUmFuZ2Uuc3RhcnQucm93ID0gcm93OwogICAgICAgICAgICBsaW5lUmFuZ2UuZW5kLnJvdyA9IHJvdzsKICAgICAgICAgICAgbGluZVJhbmdlLmVuZC5jb2x1bW4gPSB0aGlzLnNlc3Npb24uZ2V0U2NyZWVuTGFzdFJvd0NvbHVtbihyb3cpOwogICAgICAgICAgICB0aGlzLmRyYXdTaW5nbGVMaW5lTWFya2VyKHN0cmluZ0J1aWxkZXIsIGxpbmVSYW5nZSwgY2xhenosIGxheWVyQ29uZmlnLCAxLCAidGV4dCIpOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLmRyYXdNdWx0aUxpbmVNYXJrZXIgPSBmdW5jdGlvbihzdHJpbmdCdWlsZGVyLCByYW5nZSwgY2xhenosIGNvbmZpZywgdHlwZSkgewogICAgICAgIHZhciBwYWRkaW5nID0gdGhpcy4kcGFkZGluZzsKICAgICAgICB2YXIgaGVpZ2h0ID0gY29uZmlnLmxpbmVIZWlnaHQ7CiAgICAgICAgdmFyIHRvcCA9IHRoaXMuJGdldFRvcChyYW5nZS5zdGFydC5yb3csIGNvbmZpZyk7CiAgICAgICAgdmFyIGxlZnQgPSBwYWRkaW5nICsgcmFuZ2Uuc3RhcnQuY29sdW1uICogY29uZmlnLmNoYXJhY3RlcldpZHRoOwoKICAgICAgICBzdHJpbmdCdWlsZGVyLnB1c2goCiAgICAgICAgICAgICI8ZGl2IGNsYXNzPSciLCBjbGF6eiwgIiBhY2Vfc3RhcnQnIHN0eWxlPSciLAogICAgICAgICAgICAiaGVpZ2h0OiIsIGhlaWdodCwgInB4OyIsCiAgICAgICAgICAgICJyaWdodDowOyIsCiAgICAgICAgICAgICJ0b3A6IiwgdG9wLCAicHg7IiwKICAgICAgICAgICAgImxlZnQ6IiwgbGVmdCwgInB4Oyc+PC9kaXY+IgogICAgICAgICk7CiAgICAgICAgdG9wID0gdGhpcy4kZ2V0VG9wKHJhbmdlLmVuZC5yb3csIGNvbmZpZyk7CiAgICAgICAgdmFyIHdpZHRoID0gcmFuZ2UuZW5kLmNvbHVtbiAqIGNvbmZpZy5jaGFyYWN0ZXJXaWR0aDsKCiAgICAgICAgc3RyaW5nQnVpbGRlci5wdXNoKAogICAgICAgICAgICAiPGRpdiBjbGFzcz0nIiwgY2xhenosICInIHN0eWxlPSciLAogICAgICAgICAgICAiaGVpZ2h0OiIsIGhlaWdodCwgInB4OyIsCiAgICAgICAgICAgICJ3aWR0aDoiLCB3aWR0aCwgInB4OyIsCiAgICAgICAgICAgICJ0b3A6IiwgdG9wLCAicHg7IiwKICAgICAgICAgICAgImxlZnQ6IiwgcGFkZGluZywgInB4Oyc+PC9kaXY+IgogICAgICAgICk7CiAgICAgICAgaGVpZ2h0ID0gKHJhbmdlLmVuZC5yb3cgLSByYW5nZS5zdGFydC5yb3cgLSAxKSAqIGNvbmZpZy5saW5lSGVpZ2h0OwogICAgICAgIGlmIChoZWlnaHQgPCAwKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdG9wID0gdGhpcy4kZ2V0VG9wKHJhbmdlLnN0YXJ0LnJvdyArIDEsIGNvbmZpZyk7CgogICAgICAgIHN0cmluZ0J1aWxkZXIucHVzaCgKICAgICAgICAgICAgIjxkaXYgY2xhc3M9JyIsIGNsYXp6LCAiJyBzdHlsZT0nIiwKICAgICAgICAgICAgImhlaWdodDoiLCBoZWlnaHQsICJweDsiLAogICAgICAgICAgICAicmlnaHQ6MDsiLAogICAgICAgICAgICAidG9wOiIsIHRvcCwgInB4OyIsCiAgICAgICAgICAgICJsZWZ0OiIsIHBhZGRpbmcsICJweDsnPjwvZGl2PiIKICAgICAgICApOwogICAgfTsKICAgIHRoaXMuZHJhd1NpbmdsZUxpbmVNYXJrZXIgPSBmdW5jdGlvbihzdHJpbmdCdWlsZGVyLCByYW5nZSwgY2xhenosIGNvbmZpZywgZXh0cmFMZW5ndGgpIHsKICAgICAgICB2YXIgaGVpZ2h0ID0gY29uZmlnLmxpbmVIZWlnaHQ7CiAgICAgICAgdmFyIHdpZHRoID0gKHJhbmdlLmVuZC5jb2x1bW4gKyAoZXh0cmFMZW5ndGggfHwgMCkgLSByYW5nZS5zdGFydC5jb2x1bW4pICogY29uZmlnLmNoYXJhY3RlcldpZHRoOwoKICAgICAgICB2YXIgdG9wID0gdGhpcy4kZ2V0VG9wKHJhbmdlLnN0YXJ0LnJvdywgY29uZmlnKTsKICAgICAgICB2YXIgbGVmdCA9IHRoaXMuJHBhZGRpbmcgKyByYW5nZS5zdGFydC5jb2x1bW4gKiBjb25maWcuY2hhcmFjdGVyV2lkdGg7CgogICAgICAgIHN0cmluZ0J1aWxkZXIucHVzaCgKICAgICAgICAgICAgIjxkaXYgY2xhc3M9JyIsIGNsYXp6LCAiJyBzdHlsZT0nIiwKICAgICAgICAgICAgImhlaWdodDoiLCBoZWlnaHQsICJweDsiLAogICAgICAgICAgICAid2lkdGg6Iiwgd2lkdGgsICJweDsiLAogICAgICAgICAgICAidG9wOiIsIHRvcCwgInB4OyIsCiAgICAgICAgICAgICJsZWZ0OiIsIGxlZnQsInB4Oyc+PC9kaXY+IgogICAgICAgICk7CiAgICB9OwoKICAgIHRoaXMuZHJhd0Z1bGxMaW5lTWFya2VyID0gZnVuY3Rpb24oc3RyaW5nQnVpbGRlciwgcmFuZ2UsIGNsYXp6LCBjb25maWcpIHsKICAgICAgICB2YXIgdG9wID0gdGhpcy4kZ2V0VG9wKHJhbmdlLnN0YXJ0LnJvdywgY29uZmlnKTsKICAgICAgICB2YXIgaGVpZ2h0ID0gY29uZmlnLmxpbmVIZWlnaHQ7CiAgICAgICAgaWYgKHJhbmdlLnN0YXJ0LnJvdyAhPSByYW5nZS5lbmQucm93KQogICAgICAgICAgICBoZWlnaHQgKz0gdGhpcy4kZ2V0VG9wKHJhbmdlLmVuZC5yb3csIGNvbmZpZykgLSB0b3A7CgogICAgICAgIHN0cmluZ0J1aWxkZXIucHVzaCgKICAgICAgICAgICAgIjxkaXYgY2xhc3M9JyIsIGNsYXp6LCAiJyBzdHlsZT0nIiwKICAgICAgICAgICAgImhlaWdodDoiLCBoZWlnaHQsICJweDsiLAogICAgICAgICAgICAidG9wOiIsIHRvcCwgInB4OyIsCiAgICAgICAgICAgICJsZWZ0OjA7cmlnaHQ6MDsnPjwvZGl2PiIKICAgICAgICApOwogICAgfQoKfSkuY2FsbChNYXJrZXIucHJvdG90eXBlKTsKCmV4cG9ydHMuTWFya2VyID0gTWFya2VyOwoKfSk7CgphY2UuZGVmaW5lKCdhY2UvbGF5ZXIvdGV4dCcsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9vb3AnLCAnYWNlL2xpYi9kb20nLCAnYWNlL2xpYi9sYW5nJywgJ2FjZS9saWIvdXNlcmFnZW50JywgJ2FjZS9saWIvZXZlbnRfZW1pdHRlciddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgb29wID0gcmVxdWlyZSgiLi4vbGliL29vcCIpOwp2YXIgZG9tID0gcmVxdWlyZSgiLi4vbGliL2RvbSIpOwp2YXIgbGFuZyA9IHJlcXVpcmUoIi4uL2xpYi9sYW5nIik7CnZhciB1c2VyYWdlbnQgPSByZXF1aXJlKCIuLi9saWIvdXNlcmFnZW50Iik7CnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCIuLi9saWIvZXZlbnRfZW1pdHRlciIpLkV2ZW50RW1pdHRlcjsKCnZhciBUZXh0ID0gZnVuY3Rpb24ocGFyZW50RWwpIHsKICAgIHRoaXMuZWxlbWVudCA9IGRvbS5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIHRoaXMuZWxlbWVudC5jbGFzc05hbWUgPSAiYWNlX2xheWVyIGFjZV90ZXh0LWxheWVyIjsKICAgIHBhcmVudEVsLmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7CgogICAgdGhpcy4kY2hhcmFjdGVyU2l6ZSA9IHt3aWR0aDogMCwgaGVpZ2h0OiAwfTsKICAgIHRoaXMuY2hlY2tGb3JTaXplQ2hhbmdlcygpOwogICAgdGhpcy4kcG9sbFNpemVDaGFuZ2VzKCk7Cn07CgooZnVuY3Rpb24oKSB7CgogICAgb29wLmltcGxlbWVudCh0aGlzLCBFdmVudEVtaXR0ZXIpOwoKICAgIHRoaXMuRU9GX0NIQVIgPSAiXHhCNiI7IC8vIiZwYXJhOyI7CiAgICB0aGlzLkVPTF9DSEFSID0gIlx4QUMiOyAvLyImbm90OyI7CiAgICB0aGlzLlRBQl9DSEFSID0gIlx1MjE5MiI7IC8vIiZyYXJyOyIgIlx1MjFFNSI7CiAgICB0aGlzLlNQQUNFX0NIQVIgPSAiXHhCNyI7IC8vIiZtaWRkb3Q7IjsKICAgIHRoaXMuJHBhZGRpbmcgPSAwOwoKICAgIHRoaXMuc2V0UGFkZGluZyA9IGZ1bmN0aW9uKHBhZGRpbmcpIHsKICAgICAgICB0aGlzLiRwYWRkaW5nID0gcGFkZGluZzsKICAgICAgICB0aGlzLmVsZW1lbnQuc3R5bGUucGFkZGluZyA9ICIwICIgKyBwYWRkaW5nICsgInB4IjsKICAgIH07CgogICAgdGhpcy5nZXRMaW5lSGVpZ2h0ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJGNoYXJhY3RlclNpemUuaGVpZ2h0IHx8IDE7CiAgICB9OwoKICAgIHRoaXMuZ2V0Q2hhcmFjdGVyV2lkdGggPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kY2hhcmFjdGVyU2l6ZS53aWR0aCB8fCAxOwogICAgfTsKCiAgICB0aGlzLmNoZWNrRm9yU2l6ZUNoYW5nZXMgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgc2l6ZSA9IHRoaXMuJG1lYXN1cmVTaXplcygpOwogICAgICAgIGlmIChzaXplICYmICh0aGlzLiRjaGFyYWN0ZXJTaXplLndpZHRoICE9PSBzaXplLndpZHRoIHx8IHRoaXMuJGNoYXJhY3RlclNpemUuaGVpZ2h0ICE9PSBzaXplLmhlaWdodCkpIHsKICAgICAgICAgICAgdGhpcy4kbWVhc3VyZU5vZGUuc3R5bGUuZm9udFdlaWdodCA9ICJib2xkIjsKICAgICAgICAgICAgdmFyIGJvbGRTaXplID0gdGhpcy4kbWVhc3VyZVNpemVzKCk7CiAgICAgICAgICAgIHRoaXMuJG1lYXN1cmVOb2RlLnN0eWxlLmZvbnRXZWlnaHQgPSAiIjsKICAgICAgICAgICAgdGhpcy4kY2hhcmFjdGVyU2l6ZSA9IHNpemU7CiAgICAgICAgICAgIHRoaXMuYWxsb3dCb2xkRm9udHMgPSBib2xkU2l6ZSAmJiBib2xkU2l6ZS53aWR0aCA9PT0gc2l6ZS53aWR0aCAmJiBib2xkU2l6ZS5oZWlnaHQgPT09IHNpemUuaGVpZ2h0OwogICAgICAgICAgICB0aGlzLl9lbWl0KCJjaGFuZ2VDaGFyYWN0ZXJTaXplIiwge2RhdGE6IHNpemV9KTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuJHBvbGxTaXplQ2hhbmdlcyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgICB0aGlzLiRwb2xsU2l6ZUNoYW5nZXNUaW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICBzZWxmLmNoZWNrRm9yU2l6ZUNoYW5nZXMoKTsKICAgICAgICB9LCA1MDApOwogICAgfTsKCiAgICB0aGlzLiRmb250U3R5bGVzID0gewogICAgICAgIGZvbnRGYW1pbHkgOiAxLAogICAgICAgIGZvbnRTaXplIDogMSwKICAgICAgICBmb250V2VpZ2h0IDogMSwKICAgICAgICBmb250U3R5bGUgOiAxLAogICAgICAgIGxpbmVIZWlnaHQgOiAxCiAgICB9OwoKICAgIHRoaXMuJG1lYXN1cmVTaXplcyA9IHVzZXJhZ2VudC5pc0lFIHx8IHVzZXJhZ2VudC5pc09sZEdlY2tvID8gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIG4gPSAxMDAwOwogICAgICAgIGlmICghdGhpcy4kbWVhc3VyZU5vZGUpIHsKICAgICAgICAgICAgdmFyIG1lYXN1cmVOb2RlID0gdGhpcy4kbWVhc3VyZU5vZGUgPSBkb20uY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgICAgIHZhciBzdHlsZSA9IG1lYXN1cmVOb2RlLnN0eWxlOwoKICAgICAgICAgICAgc3R5bGUud2lkdGggPSBzdHlsZS5oZWlnaHQgPSAiYXV0byI7CiAgICAgICAgICAgIHN0eWxlLmxlZnQgPSBzdHlsZS50b3AgPSAoLW4gKiA0MCkgICsgInB4IjsKCiAgICAgICAgICAgIHN0eWxlLnZpc2liaWxpdHkgPSAiaGlkZGVuIjsKICAgICAgICAgICAgc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgICAgICAgICBzdHlsZS5vdmVyZmxvdyA9ICJ2aXNpYmxlIjsKICAgICAgICAgICAgc3R5bGUud2hpdGVTcGFjZSA9ICJub3dyYXAiOwogICAgICAgICAgICBtZWFzdXJlTm9kZS5pbm5lckhUTUwgPSBsYW5nLnN0cmluZ1JlcGVhdCgiWHkiLCBuKTsKCiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQub3duZXJEb2N1bWVudC5ib2R5KSB7CiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQub3duZXJEb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1lYXN1cmVOb2RlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciBjb250YWluZXIgPSB0aGlzLmVsZW1lbnQucGFyZW50Tm9kZTsKICAgICAgICAgICAgICAgIHdoaWxlICghZG9tLmhhc0Nzc0NsYXNzKGNvbnRhaW5lciwgImFjZV9lZGl0b3IiKSkKICAgICAgICAgICAgICAgICAgICBjb250YWluZXIgPSBjb250YWluZXIucGFyZW50Tm9kZTsKICAgICAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChtZWFzdXJlTm9kZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKCF0aGlzLmVsZW1lbnQub2Zmc2V0V2lkdGgpCiAgICAgICAgICAgIHJldHVybiBudWxsOwoKICAgICAgICB2YXIgc3R5bGUgPSB0aGlzLiRtZWFzdXJlTm9kZS5zdHlsZTsKICAgICAgICB2YXIgY29tcHV0ZWRTdHlsZSA9IGRvbS5jb21wdXRlZFN0eWxlKHRoaXMuZWxlbWVudCk7CiAgICAgICAgZm9yICh2YXIgcHJvcCBpbiB0aGlzLiRmb250U3R5bGVzKQogICAgICAgICAgICBzdHlsZVtwcm9wXSA9IGNvbXB1dGVkU3R5bGVbcHJvcF07CgogICAgICAgIHZhciBzaXplID0gewogICAgICAgICAgICBoZWlnaHQ6IHRoaXMuJG1lYXN1cmVOb2RlLm9mZnNldEhlaWdodCwKICAgICAgICAgICAgd2lkdGg6IHRoaXMuJG1lYXN1cmVOb2RlLm9mZnNldFdpZHRoIC8gKG4gKiAyKQogICAgICAgIH07CiAgICAgICAgaWYgKHNpemUud2lkdGggPT0gMCB8fCBzaXplLmhlaWdodCA9PSAwKQogICAgICAgICAgICByZXR1cm4gbnVsbDsKCiAgICAgICAgcmV0dXJuIHNpemU7CiAgICB9CiAgICA6IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICghdGhpcy4kbWVhc3VyZU5vZGUpIHsKICAgICAgICAgICAgdmFyIG1lYXN1cmVOb2RlID0gdGhpcy4kbWVhc3VyZU5vZGUgPSBkb20uY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgICAgIHZhciBzdHlsZSA9IG1lYXN1cmVOb2RlLnN0eWxlOwoKICAgICAgICAgICAgc3R5bGUud2lkdGggPSBzdHlsZS5oZWlnaHQgPSAiYXV0byI7CiAgICAgICAgICAgIHN0eWxlLmxlZnQgPSBzdHlsZS50b3AgPSAtMTAwICsgInB4IjsKCiAgICAgICAgICAgIHN0eWxlLnZpc2liaWxpdHkgPSAiaGlkZGVuIjsKICAgICAgICAgICAgc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgICAgICAgICBzdHlsZS5vdmVyZmxvdyA9ICJ2aXNpYmxlIjsKICAgICAgICAgICAgc3R5bGUud2hpdGVTcGFjZSA9ICJub3dyYXAiOwoKICAgICAgICAgICAgbWVhc3VyZU5vZGUuaW5uZXJIVE1MID0gIlgiOwoKICAgICAgICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuZWxlbWVudC5wYXJlbnROb2RlOwogICAgICAgICAgICB3aGlsZSAoY29udGFpbmVyICYmICFkb20uaGFzQ3NzQ2xhc3MoY29udGFpbmVyLCAiYWNlX2VkaXRvciIpKQogICAgICAgICAgICAgICAgY29udGFpbmVyID0gY29udGFpbmVyLnBhcmVudE5vZGU7CgogICAgICAgICAgICBpZiAoIWNvbnRhaW5lcikKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRtZWFzdXJlTm9kZSA9IG51bGw7CgogICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQobWVhc3VyZU5vZGUpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJlY3QgPSB0aGlzLiRtZWFzdXJlTm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKCiAgICAgICAgdmFyIHNpemUgPSB7CiAgICAgICAgICAgIGhlaWdodDogcmVjdC5oZWlnaHQsCiAgICAgICAgICAgIHdpZHRoOiByZWN0LndpZHRoCiAgICAgICAgfTsKICAgICAgICBpZiAoc2l6ZS53aWR0aCA9PSAwIHx8IHNpemUuaGVpZ2h0ID09IDApCiAgICAgICAgICAgIHJldHVybiBudWxsOwoKICAgICAgICByZXR1cm4gc2l6ZTsKICAgIH07CgogICAgdGhpcy5zZXRTZXNzaW9uID0gZnVuY3Rpb24oc2Vzc2lvbikgewogICAgICAgIHRoaXMuc2Vzc2lvbiA9IHNlc3Npb247CiAgICAgICAgdGhpcy4kY29tcHV0ZVRhYlN0cmluZygpOwogICAgfTsKCiAgICB0aGlzLnNob3dJbnZpc2libGVzID0gZmFsc2U7CiAgICB0aGlzLnNldFNob3dJbnZpc2libGVzID0gZnVuY3Rpb24oc2hvd0ludmlzaWJsZXMpIHsKICAgICAgICBpZiAodGhpcy5zaG93SW52aXNpYmxlcyA9PSBzaG93SW52aXNpYmxlcykKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICB0aGlzLnNob3dJbnZpc2libGVzID0gc2hvd0ludmlzaWJsZXM7CiAgICAgICAgdGhpcy4kY29tcHV0ZVRhYlN0cmluZygpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfTsKCiAgICB0aGlzLmRpc3BsYXlJbmRlbnRHdWlkZXMgPSB0cnVlOwogICAgdGhpcy5zZXREaXNwbGF5SW5kZW50R3VpZGVzID0gZnVuY3Rpb24oZGlzcGxheSkgewogICAgICAgIGlmICh0aGlzLmRpc3BsYXlJbmRlbnRHdWlkZXMgPT0gZGlzcGxheSkKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICB0aGlzLmRpc3BsYXlJbmRlbnRHdWlkZXMgPSBkaXNwbGF5OwogICAgICAgIHRoaXMuJGNvbXB1dGVUYWJTdHJpbmcoKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH07CgogICAgdGhpcy4kdGFiU3RyaW5ncyA9IFtdOwogICAgdGhpcy5vbkNoYW5nZVRhYlNpemUgPQogICAgdGhpcy4kY29tcHV0ZVRhYlN0cmluZyA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciB0YWJTaXplID0gdGhpcy5zZXNzaW9uLmdldFRhYlNpemUoKTsKICAgICAgICB0aGlzLnRhYlNpemUgPSB0YWJTaXplOwogICAgICAgIHZhciB0YWJTdHIgPSB0aGlzLiR0YWJTdHJpbmdzID0gWzBdOwogICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgdGFiU2l6ZSArIDE7IGkrKykgewogICAgICAgICAgICBpZiAodGhpcy5zaG93SW52aXNpYmxlcykgewogICAgICAgICAgICAgICAgdGFiU3RyLnB1c2goIjxzcGFuIGNsYXNzPSdhY2VfaW52aXNpYmxlJz4iCiAgICAgICAgICAgICAgICAgICAgKyB0aGlzLlRBQl9DSEFSCiAgICAgICAgICAgICAgICAgICAgKyBsYW5nLnN0cmluZ1JlcGVhdCgiXHhhMCIsIGkgLSAxKQogICAgICAgICAgICAgICAgICAgICsgIjwvc3Bhbj4iKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRhYlN0ci5wdXNoKGxhbmcuc3RyaW5nUmVwZWF0KCJceGEwIiwgaSkpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICh0aGlzLmRpc3BsYXlJbmRlbnRHdWlkZXMpIHsKICAgICAgICAgICAgdGhpcy4kaW5kZW50R3VpZGVSZSA9ICAvXHNcU3wgXHR8XHQgfFxzJC87CiAgICAgICAgICAgIHZhciBjbGFzc05hbWUgPSAiYWNlX2luZGVudC1ndWlkZSI7CiAgICAgICAgICAgIGlmICh0aGlzLnNob3dJbnZpc2libGVzKSB7CiAgICAgICAgICAgICAgICBjbGFzc05hbWUgKz0gIiBhY2VfaW52aXNpYmxlIjsKICAgICAgICAgICAgICAgIHZhciBzcGFjZUNvbnRlbnQgPSBsYW5nLnN0cmluZ1JlcGVhdCh0aGlzLlNQQUNFX0NIQVIsIHRoaXMudGFiU2l6ZSk7CiAgICAgICAgICAgICAgICB2YXIgdGFiQ29udGVudCA9IHRoaXMuVEFCX0NIQVIgKyBsYW5nLnN0cmluZ1JlcGVhdCgiXHhhMCIsIHRoaXMudGFiU2l6ZSAtIDEpOwogICAgICAgICAgICB9IGVsc2V7CiAgICAgICAgICAgICAgICB2YXIgc3BhY2VDb250ZW50ID0gbGFuZy5zdHJpbmdSZXBlYXQoIlx4YTAiLCB0aGlzLnRhYlNpemUpOwogICAgICAgICAgICAgICAgdmFyIHRhYkNvbnRlbnQgPSBzcGFjZUNvbnRlbnQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuJHRhYlN0cmluZ3NbIiAiXSA9ICI8c3BhbiBjbGFzcz0nIiArIGNsYXNzTmFtZSArICInPiIgKyBzcGFjZUNvbnRlbnQgKyAiPC9zcGFuPiI7CiAgICAgICAgICAgIHRoaXMuJHRhYlN0cmluZ3NbIlx0Il0gPSAiPHNwYW4gY2xhc3M9JyIgKyBjbGFzc05hbWUgKyAiJz4iICsgdGFiQ29udGVudCArICI8L3NwYW4+IjsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMudXBkYXRlTGluZXMgPSBmdW5jdGlvbihjb25maWcsIGZpcnN0Um93LCBsYXN0Um93KSB7CiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmxhc3RSb3cgIT0gY29uZmlnLmxhc3RSb3cgfHwKICAgICAgICAgICAgdGhpcy5jb25maWcuZmlyc3RSb3cgIT0gY29uZmlnLmZpcnN0Um93KSB7CiAgICAgICAgICAgIHRoaXMuc2Nyb2xsTGluZXMoY29uZmlnKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7CgogICAgICAgIHZhciBmaXJzdCA9IE1hdGgubWF4KGZpcnN0Um93LCBjb25maWcuZmlyc3RSb3cpOwogICAgICAgIHZhciBsYXN0ID0gTWF0aC5taW4obGFzdFJvdywgY29uZmlnLmxhc3RSb3cpOwoKICAgICAgICB2YXIgbGluZUVsZW1lbnRzID0gdGhpcy5lbGVtZW50LmNoaWxkTm9kZXM7CiAgICAgICAgdmFyIGxpbmVFbGVtZW50c0lkeCA9IDA7CgogICAgICAgIGZvciAodmFyIHJvdyA9IGNvbmZpZy5maXJzdFJvdzsgcm93IDwgZmlyc3Q7IHJvdysrKSB7CiAgICAgICAgICAgIHZhciBmb2xkTGluZSA9IHRoaXMuc2Vzc2lvbi5nZXRGb2xkTGluZShyb3cpOwogICAgICAgICAgICBpZiAoZm9sZExpbmUpIHsKICAgICAgICAgICAgICAgIGlmIChmb2xkTGluZS5jb250YWluc1JvdyhmaXJzdCkpIHsKICAgICAgICAgICAgICAgICAgICBmaXJzdCA9IGZvbGRMaW5lLnN0YXJ0LnJvdzsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcm93ID0gZm9sZExpbmUuZW5kLnJvdzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBsaW5lRWxlbWVudHNJZHggKys7CiAgICAgICAgfQoKICAgICAgICB2YXIgcm93ID0gZmlyc3Q7CiAgICAgICAgdmFyIGZvbGRMaW5lID0gdGhpcy5zZXNzaW9uLmdldE5leHRGb2xkTGluZShyb3cpOwogICAgICAgIHZhciBmb2xkU3RhcnQgPSBmb2xkTGluZSA/IGZvbGRMaW5lLnN0YXJ0LnJvdyA6IEluZmluaXR5OwoKICAgICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgICAgICBpZiAocm93ID4gZm9sZFN0YXJ0KSB7CiAgICAgICAgICAgICAgICByb3cgPSBmb2xkTGluZS5lbmQucm93KzE7CiAgICAgICAgICAgICAgICBmb2xkTGluZSA9IHRoaXMuc2Vzc2lvbi5nZXROZXh0Rm9sZExpbmUocm93LCBmb2xkTGluZSk7CiAgICAgICAgICAgICAgICBmb2xkU3RhcnQgPSBmb2xkTGluZSA/IGZvbGRMaW5lLnN0YXJ0LnJvdyA6SW5maW5pdHk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHJvdyA+IGxhc3QpCiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIHZhciBsaW5lRWxlbWVudCA9IGxpbmVFbGVtZW50c1tsaW5lRWxlbWVudHNJZHgrK107CiAgICAgICAgICAgIGlmIChsaW5lRWxlbWVudCkgewogICAgICAgICAgICAgICAgdmFyIGh0bWwgPSBbXTsKICAgICAgICAgICAgICAgIHRoaXMuJHJlbmRlckxpbmUoCiAgICAgICAgICAgICAgICAgICAgaHRtbCwgcm93LCAhdGhpcy4kdXNlTGluZUdyb3VwcygpLCByb3cgPT0gZm9sZFN0YXJ0ID8gZm9sZExpbmUgOiBmYWxzZQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIGRvbS5zZXRJbm5lckh0bWwobGluZUVsZW1lbnQsIGh0bWwuam9pbigiIikpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJvdysrOwogICAgICAgIH0KICAgIH07CgogICAgdGhpcy5zY3JvbGxMaW5lcyA9IGZ1bmN0aW9uKGNvbmZpZykgewogICAgICAgIHZhciBvbGRDb25maWcgPSB0aGlzLmNvbmZpZzsKICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZzsKCiAgICAgICAgaWYgKCFvbGRDb25maWcgfHwgb2xkQ29uZmlnLmxhc3RSb3cgPCBjb25maWcuZmlyc3RSb3cpCiAgICAgICAgICAgIHJldHVybiB0aGlzLnVwZGF0ZShjb25maWcpOwoKICAgICAgICBpZiAoY29uZmlnLmxhc3RSb3cgPCBvbGRDb25maWcuZmlyc3RSb3cpCiAgICAgICAgICAgIHJldHVybiB0aGlzLnVwZGF0ZShjb25maWcpOwoKICAgICAgICB2YXIgZWwgPSB0aGlzLmVsZW1lbnQ7CiAgICAgICAgaWYgKG9sZENvbmZpZy5maXJzdFJvdyA8IGNvbmZpZy5maXJzdFJvdykKICAgICAgICAgICAgZm9yICh2YXIgcm93PXRoaXMuc2Vzc2lvbi5nZXRGb2xkZWRSb3dDb3VudChvbGRDb25maWcuZmlyc3RSb3csIGNvbmZpZy5maXJzdFJvdyAtIDEpOyByb3c+MDsgcm93LS0pCiAgICAgICAgICAgICAgICBlbC5yZW1vdmVDaGlsZChlbC5maXJzdENoaWxkKTsKCiAgICAgICAgaWYgKG9sZENvbmZpZy5sYXN0Um93ID4gY29uZmlnLmxhc3RSb3cpCiAgICAgICAgICAgIGZvciAodmFyIHJvdz10aGlzLnNlc3Npb24uZ2V0Rm9sZGVkUm93Q291bnQoY29uZmlnLmxhc3RSb3cgKyAxLCBvbGRDb25maWcubGFzdFJvdyk7IHJvdz4wOyByb3ctLSkKICAgICAgICAgICAgICAgIGVsLnJlbW92ZUNoaWxkKGVsLmxhc3RDaGlsZCk7CgogICAgICAgIGlmIChjb25maWcuZmlyc3RSb3cgPCBvbGRDb25maWcuZmlyc3RSb3cpIHsKICAgICAgICAgICAgdmFyIGZyYWdtZW50ID0gdGhpcy4kcmVuZGVyTGluZXNGcmFnbWVudChjb25maWcsIGNvbmZpZy5maXJzdFJvdywgb2xkQ29uZmlnLmZpcnN0Um93IC0gMSk7CiAgICAgICAgICAgIGlmIChlbC5maXJzdENoaWxkKQogICAgICAgICAgICAgICAgZWwuaW5zZXJ0QmVmb3JlKGZyYWdtZW50LCBlbC5maXJzdENoaWxkKTsKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgZWwuYXBwZW5kQ2hpbGQoZnJhZ21lbnQpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGNvbmZpZy5sYXN0Um93ID4gb2xkQ29uZmlnLmxhc3RSb3cpIHsKICAgICAgICAgICAgdmFyIGZyYWdtZW50ID0gdGhpcy4kcmVuZGVyTGluZXNGcmFnbWVudChjb25maWcsIG9sZENvbmZpZy5sYXN0Um93ICsgMSwgY29uZmlnLmxhc3RSb3cpOwogICAgICAgICAgICBlbC5hcHBlbmRDaGlsZChmcmFnbWVudCk7CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLiRyZW5kZXJMaW5lc0ZyYWdtZW50ID0gZnVuY3Rpb24oY29uZmlnLCBmaXJzdFJvdywgbGFzdFJvdykgewogICAgICAgIHZhciBmcmFnbWVudCA9IHRoaXMuZWxlbWVudC5vd25lckRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsKICAgICAgICB2YXIgcm93ID0gZmlyc3RSb3c7CiAgICAgICAgdmFyIGZvbGRMaW5lID0gdGhpcy5zZXNzaW9uLmdldE5leHRGb2xkTGluZShyb3cpOwogICAgICAgIHZhciBmb2xkU3RhcnQgPSBmb2xkTGluZSA/IGZvbGRMaW5lLnN0YXJ0LnJvdyA6IEluZmluaXR5OwoKICAgICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgICAgICBpZiAocm93ID4gZm9sZFN0YXJ0KSB7CiAgICAgICAgICAgICAgICByb3cgPSBmb2xkTGluZS5lbmQucm93KzE7CiAgICAgICAgICAgICAgICBmb2xkTGluZSA9IHRoaXMuc2Vzc2lvbi5nZXROZXh0Rm9sZExpbmUocm93LCBmb2xkTGluZSk7CiAgICAgICAgICAgICAgICBmb2xkU3RhcnQgPSBmb2xkTGluZSA/IGZvbGRMaW5lLnN0YXJ0LnJvdyA6IEluZmluaXR5OwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChyb3cgPiBsYXN0Um93KQogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICB2YXIgY29udGFpbmVyID0gZG9tLmNyZWF0ZUVsZW1lbnQoImRpdiIpOwoKICAgICAgICAgICAgdmFyIGh0bWwgPSBbXTsKICAgICAgICAgICAgdGhpcy4kcmVuZGVyTGluZShodG1sLCByb3csIGZhbHNlLCByb3cgPT0gZm9sZFN0YXJ0ID8gZm9sZExpbmUgOiBmYWxzZSk7CiAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSBodG1sLmpvaW4oIiIpOwogICAgICAgICAgICBpZiAodGhpcy4kdXNlTGluZUdyb3VwcygpKSB7CiAgICAgICAgICAgICAgICBjb250YWluZXIuY2xhc3NOYW1lID0gJ2FjZV9saW5lX2dyb3VwJzsKICAgICAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB2YXIgbGluZXMgPSBjb250YWluZXIuY2hpbGROb2RlcwogICAgICAgICAgICAgICAgd2hpbGUobGluZXMubGVuZ3RoKQogICAgICAgICAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKGxpbmVzWzBdKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcm93Kys7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmcmFnbWVudDsKICAgIH07CgogICAgdGhpcy51cGRhdGUgPSBmdW5jdGlvbihjb25maWcpIHsKICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZzsKCiAgICAgICAgdmFyIGh0bWwgPSBbXTsKICAgICAgICB2YXIgZmlyc3RSb3cgPSBjb25maWcuZmlyc3RSb3csIGxhc3RSb3cgPSBjb25maWcubGFzdFJvdzsKCiAgICAgICAgdmFyIHJvdyA9IGZpcnN0Um93OwogICAgICAgIHZhciBmb2xkTGluZSA9IHRoaXMuc2Vzc2lvbi5nZXROZXh0Rm9sZExpbmUocm93KTsKICAgICAgICB2YXIgZm9sZFN0YXJ0ID0gZm9sZExpbmUgPyBmb2xkTGluZS5zdGFydC5yb3cgOiBJbmZpbml0eTsKCiAgICAgICAgd2hpbGUgKHRydWUpIHsKICAgICAgICAgICAgaWYgKHJvdyA+IGZvbGRTdGFydCkgewogICAgICAgICAgICAgICAgcm93ID0gZm9sZExpbmUuZW5kLnJvdysxOwogICAgICAgICAgICAgICAgZm9sZExpbmUgPSB0aGlzLnNlc3Npb24uZ2V0TmV4dEZvbGRMaW5lKHJvdywgZm9sZExpbmUpOwogICAgICAgICAgICAgICAgZm9sZFN0YXJ0ID0gZm9sZExpbmUgPyBmb2xkTGluZS5zdGFydC5yb3cgOkluZmluaXR5OwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChyb3cgPiBsYXN0Um93KQogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBpZiAodGhpcy4kdXNlTGluZUdyb3VwcygpKQogICAgICAgICAgICAgICAgaHRtbC5wdXNoKCI8ZGl2IGNsYXNzPSdhY2VfbGluZV9ncm91cCc+IikKCiAgICAgICAgICAgIHRoaXMuJHJlbmRlckxpbmUoaHRtbCwgcm93LCBmYWxzZSwgcm93ID09IGZvbGRTdGFydCA/IGZvbGRMaW5lIDogZmFsc2UpOwoKICAgICAgICAgICAgaWYgKHRoaXMuJHVzZUxpbmVHcm91cHMoKSkKICAgICAgICAgICAgICAgIGh0bWwucHVzaCgiPC9kaXY+Iik7IC8vIGVuZCB0aGUgbGluZSBncm91cAoKICAgICAgICAgICAgcm93Kys7CiAgICAgICAgfQogICAgICAgIHRoaXMuZWxlbWVudCA9IGRvbS5zZXRJbm5lckh0bWwodGhpcy5lbGVtZW50LCBodG1sLmpvaW4oIiIpKTsKICAgIH07CgogICAgdGhpcy4kdGV4dFRva2VuID0gewogICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAicnBhcmVuIjogdHJ1ZSwKICAgICAgICAibHBhcmVuIjogdHJ1ZQogICAgfTsKCiAgICB0aGlzLiRyZW5kZXJUb2tlbiA9IGZ1bmN0aW9uKHN0cmluZ0J1aWxkZXIsIHNjcmVlbkNvbHVtbiwgdG9rZW4sIHZhbHVlKSB7CiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICAgIHZhciByZXBsYWNlUmVnID0gL1x0fCZ8PHwoICspfChbXHgwMC1ceDFmXHg4MC1ceGEwXHUxNjgwXHUxODBFXHUyMDAwLVx1MjAwZlx1MjAyOFx1MjAyOVx1MjAyRlx1MjA1Rlx1MzAwMFx1RkVGRl0pfFtcdTExMDAtXHUxMTVGXHUxMUEzLVx1MTFBN1x1MTFGQS1cdTExRkZcdTIzMjktXHUyMzJBXHUyRTgwLVx1MkU5OVx1MkU5Qi1cdTJFRjNcdTJGMDAtXHUyRkQ1XHUyRkYwLVx1MkZGQlx1MzAwMC1cdTMwM0VcdTMwNDEtXHUzMDk2XHUzMDk5LVx1MzBGRlx1MzEwNS1cdTMxMkRcdTMxMzEtXHUzMThFXHUzMTkwLVx1MzFCQVx1MzFDMC1cdTMxRTNcdTMxRjAtXHUzMjFFXHUzMjIwLVx1MzI0N1x1MzI1MC1cdTMyRkVcdTMzMDAtXHU0REJGXHU0RTAwLVx1QTQ4Q1x1QTQ5MC1cdUE0QzZcdUE5NjAtXHVBOTdDXHVBQzAwLVx1RDdBM1x1RDdCMC1cdUQ3QzZcdUQ3Q0ItXHVEN0ZCXHVGOTAwLVx1RkFGRlx1RkUxMC1cdUZFMTlcdUZFMzAtXHVGRTUyXHVGRTU0LVx1RkU2Nlx1RkU2OC1cdUZFNkJcdUZGMDEtXHVGRjYwXHVGRkUwLVx1RkZFNl0vZzsKICAgICAgICB2YXIgcmVwbGFjZUZ1bmMgPSBmdW5jdGlvbihjLCBhLCBiLCB0YWJJZHgsIGlkeDQpIHsKICAgICAgICAgICAgaWYgKGEpIHsKICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLnNob3dJbnZpc2libGVzID8KICAgICAgICAgICAgICAgICAgICAiPHNwYW4gY2xhc3M9J2FjZV9pbnZpc2libGUnPiIgKyBsYW5nLnN0cmluZ1JlcGVhdChzZWxmLlNQQUNFX0NIQVIsIGMubGVuZ3RoKSArICI8L3NwYW4+IiA6CiAgICAgICAgICAgICAgICAgICAgbGFuZy5zdHJpbmdSZXBlYXQoIlx4YTAiLCBjLmxlbmd0aCk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PSAiJiIpIHsKICAgICAgICAgICAgICAgIHJldHVybiAiJiMzODsiOwogICAgICAgICAgICB9IGVsc2UgaWYgKGMgPT0gIjwiKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIiYjNjA7IjsKICAgICAgICAgICAgfSBlbHNlIGlmIChjID09ICJcdCIpIHsKICAgICAgICAgICAgICAgIHZhciB0YWJTaXplID0gc2VsZi5zZXNzaW9uLmdldFNjcmVlblRhYlNpemUoc2NyZWVuQ29sdW1uICsgdGFiSWR4KTsKICAgICAgICAgICAgICAgIHNjcmVlbkNvbHVtbiArPSB0YWJTaXplIC0gMTsKICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLiR0YWJTdHJpbmdzW3RhYlNpemVdOwogICAgICAgICAgICB9IGVsc2UgaWYgKGMgPT0gIlx1MzAwMCIpIHsKICAgICAgICAgICAgICAgIHZhciBjbGFzc1RvVXNlID0gc2VsZi5zaG93SW52aXNpYmxlcyA/ICJhY2VfY2prIGFjZV9pbnZpc2libGUiIDogImFjZV9jamsiOwogICAgICAgICAgICAgICAgdmFyIHNwYWNlID0gc2VsZi5zaG93SW52aXNpYmxlcyA/IHNlbGYuU1BBQ0VfQ0hBUiA6ICIiOwogICAgICAgICAgICAgICAgc2NyZWVuQ29sdW1uICs9IDE7CiAgICAgICAgICAgICAgICByZXR1cm4gIjxzcGFuIGNsYXNzPSciICsgY2xhc3NUb1VzZSArICInIHN0eWxlPSd3aWR0aDoiICsKICAgICAgICAgICAgICAgICAgICAoc2VsZi5jb25maWcuY2hhcmFjdGVyV2lkdGggKiAyKSArCiAgICAgICAgICAgICAgICAgICAgInB4Jz4iICsgc3BhY2UgKyAiPC9zcGFuPiI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoYikgewogICAgICAgICAgICAgICAgcmV0dXJuICI8c3BhbiBjbGFzcz0nYWNlX2ludmlzaWJsZSBhY2VfaW52YWxpZCc+IiArIHNlbGYuU1BBQ0VfQ0hBUiArICI8L3NwYW4+IjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHNjcmVlbkNvbHVtbiArPSAxOwogICAgICAgICAgICAgICAgcmV0dXJuICI8c3BhbiBjbGFzcz0nYWNlX2Nqaycgc3R5bGU9J3dpZHRoOiIgKwogICAgICAgICAgICAgICAgICAgIChzZWxmLmNvbmZpZy5jaGFyYWN0ZXJXaWR0aCAqIDIpICsKICAgICAgICAgICAgICAgICAgICAicHgnPiIgKyBjICsgIjwvc3Bhbj4iOwogICAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgdmFyIG91dHB1dCA9IHZhbHVlLnJlcGxhY2UocmVwbGFjZVJlZywgcmVwbGFjZUZ1bmMpOwoKICAgICAgICBpZiAoIXRoaXMuJHRleHRUb2tlblt0b2tlbi50eXBlXSkgewogICAgICAgICAgICB2YXIgY2xhc3NlcyA9ICJhY2VfIiArIHRva2VuLnR5cGUucmVwbGFjZSgvXC4vZywgIiBhY2VfIik7CiAgICAgICAgICAgIHZhciBzdHlsZSA9ICIiOwogICAgICAgICAgICBpZiAodG9rZW4udHlwZSA9PSAiZm9sZCIpCiAgICAgICAgICAgICAgICBzdHlsZSA9ICIgc3R5bGU9J3dpZHRoOiIgKyAodG9rZW4udmFsdWUubGVuZ3RoICogdGhpcy5jb25maWcuY2hhcmFjdGVyV2lkdGgpICsgInB4OycgIjsKICAgICAgICAgICAgc3RyaW5nQnVpbGRlci5wdXNoKCI8c3BhbiBjbGFzcz0nIiwgY2xhc3NlcywgIiciLCBzdHlsZSwgIj4iLCBvdXRwdXQsICI8L3NwYW4+Iik7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICBzdHJpbmdCdWlsZGVyLnB1c2gob3V0cHV0KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHNjcmVlbkNvbHVtbiArIHZhbHVlLmxlbmd0aDsKICAgIH07CgogICAgdGhpcy5yZW5kZXJJbmRlbnRHdWlkZSA9IGZ1bmN0aW9uKHN0cmluZ0J1aWxkZXIsIHZhbHVlKSB7CiAgICAgICAgdmFyIGNvbHMgPSB2YWx1ZS5zZWFyY2godGhpcy4kaW5kZW50R3VpZGVSZSk7CiAgICAgICAgaWYgKGNvbHMgPD0gMCkKICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgIGlmICh2YWx1ZVswXSA9PSAiICIpIHsKICAgICAgICAgICAgY29scyAtPSBjb2xzICUgdGhpcy50YWJTaXplOwogICAgICAgICAgICBzdHJpbmdCdWlsZGVyLnB1c2gobGFuZy5zdHJpbmdSZXBlYXQodGhpcy4kdGFiU3RyaW5nc1siICJdLCBjb2xzL3RoaXMudGFiU2l6ZSkpOwogICAgICAgICAgICByZXR1cm4gdmFsdWUuc3Vic3RyKGNvbHMpOwogICAgICAgIH0gZWxzZSBpZiAodmFsdWVbMF0gPT0gIlx0IikgewogICAgICAgICAgICBzdHJpbmdCdWlsZGVyLnB1c2gobGFuZy5zdHJpbmdSZXBlYXQodGhpcy4kdGFiU3RyaW5nc1siXHQiXSwgY29scykpOwogICAgICAgICAgICByZXR1cm4gdmFsdWUuc3Vic3RyKGNvbHMpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdmFsdWU7CiAgICB9OwoKICAgIHRoaXMuJHJlbmRlcldyYXBwZWRMaW5lID0gZnVuY3Rpb24oc3RyaW5nQnVpbGRlciwgdG9rZW5zLCBzcGxpdHMsIG9ubHlDb250ZW50cykgewogICAgICAgIHZhciBjaGFycyA9IDA7CiAgICAgICAgdmFyIHNwbGl0ID0gMDsKICAgICAgICB2YXIgc3BsaXRDaGFycyA9IHNwbGl0c1swXTsKICAgICAgICB2YXIgc2NyZWVuQ29sdW1uID0gMDsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldOwogICAgICAgICAgICB2YXIgdmFsdWUgPSB0b2tlbi52YWx1ZTsKICAgICAgICAgICAgaWYgKGkgPT0gMCAmJiB0aGlzLmRpc3BsYXlJbmRlbnRHdWlkZXMpIHsKICAgICAgICAgICAgICAgIGNoYXJzID0gdmFsdWUubGVuZ3RoOwogICAgICAgICAgICAgICAgdmFsdWUgPSB0aGlzLnJlbmRlckluZGVudEd1aWRlKHN0cmluZ0J1aWxkZXIsIHZhbHVlKTsKICAgICAgICAgICAgICAgIGlmICghdmFsdWUpCiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICBjaGFycyAtPSB2YWx1ZS5sZW5ndGg7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChjaGFycyArIHZhbHVlLmxlbmd0aCA8IHNwbGl0Q2hhcnMpIHsKICAgICAgICAgICAgICAgIHNjcmVlbkNvbHVtbiA9IHRoaXMuJHJlbmRlclRva2VuKHN0cmluZ0J1aWxkZXIsIHNjcmVlbkNvbHVtbiwgdG9rZW4sIHZhbHVlKTsKICAgICAgICAgICAgICAgIGNoYXJzICs9IHZhbHVlLmxlbmd0aDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHdoaWxlIChjaGFycyArIHZhbHVlLmxlbmd0aCA+PSBzcGxpdENoYXJzKSB7CiAgICAgICAgICAgICAgICAgICAgc2NyZWVuQ29sdW1uID0gdGhpcy4kcmVuZGVyVG9rZW4oCiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZ0J1aWxkZXIsIHNjcmVlbkNvbHVtbiwKICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW4sIHZhbHVlLnN1YnN0cmluZygwLCBzcGxpdENoYXJzIC0gY2hhcnMpCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnN1YnN0cmluZyhzcGxpdENoYXJzIC0gY2hhcnMpOwogICAgICAgICAgICAgICAgICAgIGNoYXJzID0gc3BsaXRDaGFyczsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCFvbmx5Q29udGVudHMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nQnVpbGRlci5wdXNoKCI8L2Rpdj4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIjxkaXYgY2xhc3M9J2FjZV9saW5lJyBzdHlsZT0naGVpZ2h0OiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZy5saW5lSGVpZ2h0LCAicHgnPiIKICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHNwbGl0ICsrOwogICAgICAgICAgICAgICAgICAgIHNjcmVlbkNvbHVtbiA9IDA7CiAgICAgICAgICAgICAgICAgICAgc3BsaXRDaGFycyA9IHNwbGl0c1tzcGxpdF0gfHwgTnVtYmVyLk1BWF9WQUxVRTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5sZW5ndGggIT0gMCkgewogICAgICAgICAgICAgICAgICAgIGNoYXJzICs9IHZhbHVlLmxlbmd0aDsKICAgICAgICAgICAgICAgICAgICBzY3JlZW5Db2x1bW4gPSB0aGlzLiRyZW5kZXJUb2tlbigKICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nQnVpbGRlciwgc2NyZWVuQ29sdW1uLCB0b2tlbiwgdmFsdWUKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLiRyZW5kZXJTaW1wbGVMaW5lID0gZnVuY3Rpb24oc3RyaW5nQnVpbGRlciwgdG9rZW5zKSB7CiAgICAgICAgdmFyIHNjcmVlbkNvbHVtbiA9IDA7CiAgICAgICAgdmFyIHRva2VuID0gdG9rZW5zWzBdOwogICAgICAgIHZhciB2YWx1ZSA9IHRva2VuLnZhbHVlOwogICAgICAgIGlmICh0aGlzLmRpc3BsYXlJbmRlbnRHdWlkZXMpCiAgICAgICAgICAgIHZhbHVlID0gdGhpcy5yZW5kZXJJbmRlbnRHdWlkZShzdHJpbmdCdWlsZGVyLCB2YWx1ZSk7CiAgICAgICAgaWYgKHZhbHVlKQogICAgICAgICAgICBzY3JlZW5Db2x1bW4gPSB0aGlzLiRyZW5kZXJUb2tlbihzdHJpbmdCdWlsZGVyLCBzY3JlZW5Db2x1bW4sIHRva2VuLCB2YWx1ZSk7CiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdG9rZW4gPSB0b2tlbnNbaV07CiAgICAgICAgICAgIHZhbHVlID0gdG9rZW4udmFsdWU7CiAgICAgICAgICAgIHNjcmVlbkNvbHVtbiA9IHRoaXMuJHJlbmRlclRva2VuKHN0cmluZ0J1aWxkZXIsIHNjcmVlbkNvbHVtbiwgdG9rZW4sIHZhbHVlKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy4kcmVuZGVyTGluZSA9IGZ1bmN0aW9uKHN0cmluZ0J1aWxkZXIsIHJvdywgb25seUNvbnRlbnRzLCBmb2xkTGluZSkgewogICAgICAgIGlmICghZm9sZExpbmUgJiYgZm9sZExpbmUgIT0gZmFsc2UpCiAgICAgICAgICAgIGZvbGRMaW5lID0gdGhpcy5zZXNzaW9uLmdldEZvbGRMaW5lKHJvdyk7CgogICAgICAgIGlmIChmb2xkTGluZSkKICAgICAgICAgICAgdmFyIHRva2VucyA9IHRoaXMuJGdldEZvbGRMaW5lVG9rZW5zKHJvdywgZm9sZExpbmUpOwogICAgICAgIGVsc2UKICAgICAgICAgICAgdmFyIHRva2VucyA9IHRoaXMuc2Vzc2lvbi5nZXRUb2tlbnMocm93KTsKCgogICAgICAgIGlmICghb25seUNvbnRlbnRzKSB7CiAgICAgICAgICAgIHN0cmluZ0J1aWxkZXIucHVzaCgKICAgICAgICAgICAgICAgICI8ZGl2IGNsYXNzPSdhY2VfbGluZScgc3R5bGU9J2hlaWdodDoiLCB0aGlzLmNvbmZpZy5saW5lSGVpZ2h0LCAicHgnPiIKICAgICAgICAgICAgKTsKICAgICAgICB9CgogICAgICAgIGlmICh0b2tlbnMubGVuZ3RoKSB7CiAgICAgICAgICAgIHZhciBzcGxpdHMgPSB0aGlzLnNlc3Npb24uZ2V0Um93U3BsaXREYXRhKHJvdyk7CiAgICAgICAgICAgIGlmIChzcGxpdHMgJiYgc3BsaXRzLmxlbmd0aCkKICAgICAgICAgICAgICAgIHRoaXMuJHJlbmRlcldyYXBwZWRMaW5lKHN0cmluZ0J1aWxkZXIsIHRva2Vucywgc3BsaXRzLCBvbmx5Q29udGVudHMpOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB0aGlzLiRyZW5kZXJTaW1wbGVMaW5lKHN0cmluZ0J1aWxkZXIsIHRva2Vucyk7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5zaG93SW52aXNpYmxlcykgewogICAgICAgICAgICBpZiAoZm9sZExpbmUpCiAgICAgICAgICAgICAgICByb3cgPSBmb2xkTGluZS5lbmQucm93CgogICAgICAgICAgICBzdHJpbmdCdWlsZGVyLnB1c2goCiAgICAgICAgICAgICAgICAiPHNwYW4gY2xhc3M9J2FjZV9pbnZpc2libGUnPiIsCiAgICAgICAgICAgICAgICByb3cgPT0gdGhpcy5zZXNzaW9uLmdldExlbmd0aCgpIC0gMSA/IHRoaXMuRU9GX0NIQVIgOiB0aGlzLkVPTF9DSEFSLAogICAgICAgICAgICAgICAgIjwvc3Bhbj4iCiAgICAgICAgICAgICk7CiAgICAgICAgfQogICAgICAgIGlmICghb25seUNvbnRlbnRzKQogICAgICAgICAgICBzdHJpbmdCdWlsZGVyLnB1c2goIjwvZGl2PiIpOwogICAgfTsKCiAgICB0aGlzLiRnZXRGb2xkTGluZVRva2VucyA9IGZ1bmN0aW9uKHJvdywgZm9sZExpbmUpIHsKICAgICAgICB2YXIgc2Vzc2lvbiA9IHRoaXMuc2Vzc2lvbjsKICAgICAgICB2YXIgcmVuZGVyVG9rZW5zID0gW107CgogICAgICAgIGZ1bmN0aW9uIGFkZFRva2Vucyh0b2tlbnMsIGZyb20sIHRvKSB7CiAgICAgICAgICAgIHZhciBpZHggPSAwLCBjb2wgPSAwOwogICAgICAgICAgICB3aGlsZSAoKGNvbCArIHRva2Vuc1tpZHhdLnZhbHVlLmxlbmd0aCkgPCBmcm9tKSB7CiAgICAgICAgICAgICAgICBjb2wgKz0gdG9rZW5zW2lkeF0udmFsdWUubGVuZ3RoOwogICAgICAgICAgICAgICAgaWR4Kys7CgogICAgICAgICAgICAgICAgaWYgKGlkeCA9PSB0b2tlbnMubGVuZ3RoKQogICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoY29sICE9IGZyb20pIHsKICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IHRva2Vuc1tpZHhdLnZhbHVlLnN1YnN0cmluZyhmcm9tIC0gY29sKTsKICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPiAodG8gLSBmcm9tKSkKICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnN1YnN0cmluZygwLCB0byAtIGZyb20pOwoKICAgICAgICAgICAgICAgIHJlbmRlclRva2Vucy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiB0b2tlbnNbaWR4XS50eXBlLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgY29sID0gZnJvbSArIHZhbHVlLmxlbmd0aDsKICAgICAgICAgICAgICAgIGlkeCArPSAxOwogICAgICAgICAgICB9CgogICAgICAgICAgICB3aGlsZSAoY29sIDwgdG8gJiYgaWR4IDwgdG9rZW5zLmxlbmd0aCkgewogICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gdG9rZW5zW2lkeF0udmFsdWU7CiAgICAgICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoICsgY29sID4gdG8pIHsKICAgICAgICAgICAgICAgICAgICByZW5kZXJUb2tlbnMucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHRva2Vuc1tpZHhdLnR5cGUsCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZS5zdWJzdHJpbmcoMCwgdG8gLSBjb2wpCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9IGVsc2UKICAgICAgICAgICAgICAgICAgICByZW5kZXJUb2tlbnMucHVzaCh0b2tlbnNbaWR4XSk7CiAgICAgICAgICAgICAgICBjb2wgKz0gdmFsdWUubGVuZ3RoOwogICAgICAgICAgICAgICAgaWR4ICs9IDE7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHZhciB0b2tlbnMgPSBzZXNzaW9uLmdldFRva2Vucyhyb3cpOwogICAgICAgIGZvbGRMaW5lLndhbGsoZnVuY3Rpb24ocGxhY2Vob2xkZXIsIHJvdywgY29sdW1uLCBsYXN0Q29sdW1uLCBpc05ld1JvdykgewogICAgICAgICAgICBpZiAocGxhY2Vob2xkZXIgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgcmVuZGVyVG9rZW5zLnB1c2goewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJmb2xkIiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcGxhY2Vob2xkZXIKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgKGlzTmV3Um93KQogICAgICAgICAgICAgICAgICAgIHRva2VucyA9IHNlc3Npb24uZ2V0VG9rZW5zKHJvdyk7CgogICAgICAgICAgICAgICAgaWYgKHRva2Vucy5sZW5ndGgpCiAgICAgICAgICAgICAgICAgICAgYWRkVG9rZW5zKHRva2VucywgbGFzdENvbHVtbiwgY29sdW1uKTsKICAgICAgICAgICAgfQogICAgICAgIH0sIGZvbGRMaW5lLmVuZC5yb3csIHRoaXMuc2Vzc2lvbi5nZXRMaW5lKGZvbGRMaW5lLmVuZC5yb3cpLmxlbmd0aCk7CgogICAgICAgIHJldHVybiByZW5kZXJUb2tlbnM7CiAgICB9OwoKICAgIHRoaXMuJHVzZUxpbmVHcm91cHMgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy5zZXNzaW9uLmdldFVzZVdyYXBNb2RlKCk7CiAgICB9OwoKICAgIHRoaXMuZGVzdHJveSA9IGZ1bmN0aW9uKCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy4kcG9sbFNpemVDaGFuZ2VzVGltZXIpOwogICAgICAgIGlmICh0aGlzLiRtZWFzdXJlTm9kZSkKICAgICAgICAgICAgdGhpcy4kbWVhc3VyZU5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLiRtZWFzdXJlTm9kZSk7CiAgICAgICAgZGVsZXRlIHRoaXMuJG1lYXN1cmVOb2RlOwogICAgfTsKCn0pLmNhbGwoVGV4dC5wcm90b3R5cGUpOwoKZXhwb3J0cy5UZXh0ID0gVGV4dDsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL2xheWVyL2N1cnNvcicsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2xpYi9kb20nXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIGRvbSA9IHJlcXVpcmUoIi4uL2xpYi9kb20iKTsKCnZhciBDdXJzb3IgPSBmdW5jdGlvbihwYXJlbnRFbCkgewogICAgdGhpcy5lbGVtZW50ID0gZG9tLmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdGhpcy5lbGVtZW50LmNsYXNzTmFtZSA9ICJhY2VfbGF5ZXIgYWNlX2N1cnNvci1sYXllciI7CiAgICBwYXJlbnRFbC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpOwoKICAgIHRoaXMuaXNWaXNpYmxlID0gZmFsc2U7CiAgICB0aGlzLmlzQmxpbmtpbmcgPSB0cnVlOwogICAgdGhpcy5ibGlua0ludGVydmFsID0gMTAwMDsKICAgIHRoaXMuc21vb3RoQmxpbmtpbmcgPSBmYWxzZTsKCiAgICB0aGlzLmN1cnNvcnMgPSBbXTsKICAgIHRoaXMuY3Vyc29yID0gdGhpcy5hZGRDdXJzb3IoKTsKICAgIGRvbS5hZGRDc3NDbGFzcyh0aGlzLmVsZW1lbnQsICJhY2VfaGlkZGVuLWN1cnNvcnMiKTsKfTsKCihmdW5jdGlvbigpIHsKCiAgICB0aGlzLiRwYWRkaW5nID0gMDsKICAgIHRoaXMuc2V0UGFkZGluZyA9IGZ1bmN0aW9uKHBhZGRpbmcpIHsKICAgICAgICB0aGlzLiRwYWRkaW5nID0gcGFkZGluZzsKICAgIH07CgogICAgdGhpcy5zZXRTZXNzaW9uID0gZnVuY3Rpb24oc2Vzc2lvbikgewogICAgICAgIHRoaXMuc2Vzc2lvbiA9IHNlc3Npb247CiAgICB9OwoKICAgIHRoaXMuc2V0QmxpbmtpbmcgPSBmdW5jdGlvbihibGlua2luZykgewogICAgICAgIGlmIChibGlua2luZyAhPSB0aGlzLmlzQmxpbmtpbmcpewogICAgICAgICAgICB0aGlzLmlzQmxpbmtpbmcgPSBibGlua2luZzsKICAgICAgICAgICAgdGhpcy5yZXN0YXJ0VGltZXIoKTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuc2V0QmxpbmtJbnRlcnZhbCA9IGZ1bmN0aW9uKGJsaW5rSW50ZXJ2YWwpIHsKICAgICAgICBpZiAoYmxpbmtJbnRlcnZhbCAhPSB0aGlzLmJsaW5rSW50ZXJ2YWwpewogICAgICAgICAgICB0aGlzLmJsaW5rSW50ZXJ2YWwgPSBibGlua0ludGVydmFsOwogICAgICAgICAgICB0aGlzLnJlc3RhcnRUaW1lcigpOwogICAgICAgIH0KICAgIH07CgogICAgdGhpcy5zZXRTbW9vdGhCbGlua2luZyA9IGZ1bmN0aW9uKHNtb290aEJsaW5raW5nKSB7CiAgICAgICAgaWYgKHNtb290aEJsaW5raW5nICE9IHRoaXMuc21vb3RoQmxpbmtpbmcpIHsKICAgICAgICAgICAgdGhpcy5zbW9vdGhCbGlua2luZyA9IHNtb290aEJsaW5raW5nOwogICAgICAgICAgICBpZiAoc21vb3RoQmxpbmtpbmcpCiAgICAgICAgICAgICAgICBkb20uYWRkQ3NzQ2xhc3ModGhpcy5lbGVtZW50LCAiYWNlX3Ntb290aC1ibGlua2luZyIpOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICBkb20ucmVtb3ZlQ3NzQ2xhc3ModGhpcy5lbGVtZW50LCAiYWNlX3Ntb290aC1ibGlua2luZyIpOwogICAgICAgICAgICB0aGlzLnJlc3RhcnRUaW1lcigpOwogICAgICAgIH0KICAgIH07CgogICAgdGhpcy5hZGRDdXJzb3IgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgZWwgPSBkb20uY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgZWwuY2xhc3NOYW1lID0gImFjZV9jdXJzb3IiOwogICAgICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChlbCk7CiAgICAgICAgdGhpcy5jdXJzb3JzLnB1c2goZWwpOwogICAgICAgIHJldHVybiBlbDsKICAgIH07CgogICAgdGhpcy5yZW1vdmVDdXJzb3IgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodGhpcy5jdXJzb3JzLmxlbmd0aCA+IDEpIHsKICAgICAgICAgICAgdmFyIGVsID0gdGhpcy5jdXJzb3JzLnBvcCgpOwogICAgICAgICAgICBlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsKTsKICAgICAgICAgICAgcmV0dXJuIGVsOwogICAgICAgIH0KICAgIH07CgogICAgdGhpcy5oaWRlQ3Vyc29yID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5pc1Zpc2libGUgPSBmYWxzZTsKICAgICAgICBkb20uYWRkQ3NzQ2xhc3ModGhpcy5lbGVtZW50LCAiYWNlX2hpZGRlbi1jdXJzb3JzIik7CiAgICAgICAgdGhpcy5yZXN0YXJ0VGltZXIoKTsKICAgIH07CgogICAgdGhpcy5zaG93Q3Vyc29yID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5pc1Zpc2libGUgPSB0cnVlOwogICAgICAgIGRvbS5yZW1vdmVDc3NDbGFzcyh0aGlzLmVsZW1lbnQsICJhY2VfaGlkZGVuLWN1cnNvcnMiKTsKICAgICAgICB0aGlzLnJlc3RhcnRUaW1lcigpOwogICAgfTsKCiAgICB0aGlzLnJlc3RhcnRUaW1lciA9IGZ1bmN0aW9uKCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbElkKTsKICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWQpOwogICAgICAgIGlmICh0aGlzLnNtb290aEJsaW5raW5nKQogICAgICAgICAgICBkb20ucmVtb3ZlQ3NzQ2xhc3ModGhpcy5lbGVtZW50LCAiYWNlX3Ntb290aC1ibGlua2luZyIpOwogICAgICAgIGZvciAodmFyIGkgPSB0aGlzLmN1cnNvcnMubGVuZ3RoOyBpLS07ICkKICAgICAgICAgICAgdGhpcy5jdXJzb3JzW2ldLnN0eWxlLm9wYWNpdHkgPSAiIjsKCiAgICAgICAgaWYgKCF0aGlzLmlzQmxpbmtpbmcgfHwgIXRoaXMuYmxpbmtJbnRlcnZhbCB8fCAhdGhpcy5pc1Zpc2libGUpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgaWYgKHRoaXMuc21vb3RoQmxpbmtpbmcpCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgIGRvbS5hZGRDc3NDbGFzcyh0aGlzLmVsZW1lbnQsICJhY2Vfc21vb3RoLWJsaW5raW5nIik7CiAgICAgICAgICAgIH0uYmluZCh0aGlzKSk7CgogICAgICAgIHZhciBibGluayA9IGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIHRoaXMudGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSB0aGlzLmN1cnNvcnMubGVuZ3RoOyBpLS07ICkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY3Vyc29yc1tpXS5zdHlsZS5vcGFjaXR5ID0gMDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfS5iaW5kKHRoaXMpLCAwLjYgKiB0aGlzLmJsaW5rSW50ZXJ2YWwpOwogICAgICAgIH0uYmluZCh0aGlzKTsKCiAgICAgICAgdGhpcy5pbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSB0aGlzLmN1cnNvcnMubGVuZ3RoOyBpLS07ICkgewogICAgICAgICAgICAgICAgdGhpcy5jdXJzb3JzW2ldLnN0eWxlLm9wYWNpdHkgPSAiIjsKICAgICAgICAgICAgfQogICAgICAgICAgICBibGluaygpOwogICAgICAgIH0uYmluZCh0aGlzKSwgdGhpcy5ibGlua0ludGVydmFsKTsKCiAgICAgICAgYmxpbmsoKTsKICAgIH07CgogICAgdGhpcy5nZXRQaXhlbFBvc2l0aW9uID0gZnVuY3Rpb24ocG9zaXRpb24sIG9uU2NyZWVuKSB7CiAgICAgICAgaWYgKCF0aGlzLmNvbmZpZyB8fCAhdGhpcy5zZXNzaW9uKQogICAgICAgICAgICByZXR1cm4ge2xlZnQgOiAwLCB0b3AgOiAwfTsKCiAgICAgICAgaWYgKCFwb3NpdGlvbikKICAgICAgICAgICAgcG9zaXRpb24gPSB0aGlzLnNlc3Npb24uc2VsZWN0aW9uLmdldEN1cnNvcigpOwogICAgICAgIHZhciBwb3MgPSB0aGlzLnNlc3Npb24uZG9jdW1lbnRUb1NjcmVlblBvc2l0aW9uKHBvc2l0aW9uKTsKICAgICAgICB2YXIgY3Vyc29yTGVmdCA9IHRoaXMuJHBhZGRpbmcgKyBwb3MuY29sdW1uICogdGhpcy5jb25maWcuY2hhcmFjdGVyV2lkdGg7CiAgICAgICAgdmFyIGN1cnNvclRvcCA9IChwb3Mucm93IC0gKG9uU2NyZWVuID8gdGhpcy5jb25maWcuZmlyc3RSb3dTY3JlZW4gOiAwKSkgKgogICAgICAgICAgICB0aGlzLmNvbmZpZy5saW5lSGVpZ2h0OwoKICAgICAgICByZXR1cm4ge2xlZnQgOiBjdXJzb3JMZWZ0LCB0b3AgOiBjdXJzb3JUb3B9OwogICAgfTsKCiAgICB0aGlzLnVwZGF0ZSA9IGZ1bmN0aW9uKGNvbmZpZykgewogICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnOwoKICAgICAgICB2YXIgc2VsZWN0aW9ucyA9IHRoaXMuc2Vzc2lvbi4kc2VsZWN0aW9uTWFya2VyczsKICAgICAgICB2YXIgaSA9IDAsIGN1cnNvckluZGV4ID0gMDsKCiAgICAgICAgaWYgKHNlbGVjdGlvbnMgPT09IHVuZGVmaW5lZCB8fCBzZWxlY3Rpb25zLmxlbmd0aCA9PT0gMCl7CiAgICAgICAgICAgIHNlbGVjdGlvbnMgPSBbe2N1cnNvcjogbnVsbH1dOwogICAgICAgIH0KCiAgICAgICAgZm9yICh2YXIgaSA9IHNlbGVjdGlvbnMubGVuZ3RoOyBpLS07ICkgewogICAgICAgICAgICB2YXIgcGl4ZWxQb3MgPSB0aGlzLmdldFBpeGVsUG9zaXRpb24oc2VsZWN0aW9uc1tpXS5jdXJzb3IsIHRydWUpOwogICAgICAgICAgICBpZiAoKHBpeGVsUG9zLnRvcCA+IGNvbmZpZy5oZWlnaHQgKyBjb25maWcub2Zmc2V0IHx8CiAgICAgICAgICAgICAgICAgcGl4ZWxQb3MudG9wIDwgLWNvbmZpZy5vZmZzZXQpICYmIGkgPiAxKSB7CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIHN0eWxlID0gKHRoaXMuY3Vyc29yc1tjdXJzb3JJbmRleCsrXSB8fCB0aGlzLmFkZEN1cnNvcigpKS5zdHlsZTsKCiAgICAgICAgICAgIHN0eWxlLmxlZnQgPSBwaXhlbFBvcy5sZWZ0ICsgInB4IjsKICAgICAgICAgICAgc3R5bGUudG9wID0gcGl4ZWxQb3MudG9wICsgInB4IjsKICAgICAgICAgICAgc3R5bGUud2lkdGggPSBjb25maWcuY2hhcmFjdGVyV2lkdGggKyAicHgiOwogICAgICAgICAgICBzdHlsZS5oZWlnaHQgPSBjb25maWcubGluZUhlaWdodCArICJweCI7CiAgICAgICAgfQogICAgICAgIHdoaWxlICh0aGlzLmN1cnNvcnMubGVuZ3RoID4gY3Vyc29ySW5kZXgpCiAgICAgICAgICAgIHRoaXMucmVtb3ZlQ3Vyc29yKCk7CgogICAgICAgIHZhciBvdmVyd3JpdGUgPSB0aGlzLnNlc3Npb24uZ2V0T3ZlcndyaXRlKCk7CiAgICAgICAgdGhpcy4kc2V0T3ZlcndyaXRlKG92ZXJ3cml0ZSk7CiAgICAgICAgdGhpcy4kcGl4ZWxQb3MgPSBwaXhlbFBvczsKICAgICAgICB0aGlzLnJlc3RhcnRUaW1lcigpOwogICAgfTsKCiAgICB0aGlzLiRzZXRPdmVyd3JpdGUgPSBmdW5jdGlvbihvdmVyd3JpdGUpIHsKICAgICAgICBpZiAob3ZlcndyaXRlICE9IHRoaXMub3ZlcndyaXRlKSB7CiAgICAgICAgICAgIHRoaXMub3ZlcndyaXRlID0gb3ZlcndyaXRlOwogICAgICAgICAgICBpZiAob3ZlcndyaXRlKQogICAgICAgICAgICAgICAgZG9tLmFkZENzc0NsYXNzKHRoaXMuZWxlbWVudCwgImFjZV9vdmVyd3JpdGUtY3Vyc29ycyIpOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICBkb20ucmVtb3ZlQ3NzQ2xhc3ModGhpcy5lbGVtZW50LCAiYWNlX292ZXJ3cml0ZS1jdXJzb3JzIik7CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxJZCk7CiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dElkKTsKICAgIH07Cgp9KS5jYWxsKEN1cnNvci5wcm90b3R5cGUpOwoKZXhwb3J0cy5DdXJzb3IgPSBDdXJzb3I7Cgp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9zY3JvbGxiYXInLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvb29wJywgJ2FjZS9saWIvZG9tJywgJ2FjZS9saWIvZXZlbnQnLCAnYWNlL2xpYi9ldmVudF9lbWl0dGVyJ10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKCnZhciBvb3AgPSByZXF1aXJlKCIuL2xpYi9vb3AiKTsKdmFyIGRvbSA9IHJlcXVpcmUoIi4vbGliL2RvbSIpOwp2YXIgZXZlbnQgPSByZXF1aXJlKCIuL2xpYi9ldmVudCIpOwp2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgiLi9saWIvZXZlbnRfZW1pdHRlciIpLkV2ZW50RW1pdHRlcjsKdmFyIFNjcm9sbEJhciA9IGZ1bmN0aW9uKHBhcmVudCkgewogICAgdGhpcy5lbGVtZW50ID0gZG9tLmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdGhpcy5lbGVtZW50LmNsYXNzTmFtZSA9ICJhY2Vfc2Nyb2xsYmFyIjsKCiAgICB0aGlzLmlubmVyID0gZG9tLmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdGhpcy5pbm5lci5jbGFzc05hbWUgPSAiYWNlX3Njcm9sbGJhci1pbm5lciI7CiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5pbm5lcik7CgogICAgcGFyZW50LmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7CiAgICB0aGlzLndpZHRoID0gZG9tLnNjcm9sbGJhcldpZHRoKHBhcmVudC5vd25lckRvY3VtZW50KTsKICAgIHRoaXMuZWxlbWVudC5zdHlsZS53aWR0aCA9ICh0aGlzLndpZHRoIHx8IDE1KSArIDUgKyAicHgiOwoKICAgIGV2ZW50LmFkZExpc3RlbmVyKHRoaXMuZWxlbWVudCwgInNjcm9sbCIsIHRoaXMub25TY3JvbGwuYmluZCh0aGlzKSk7Cn07CgooZnVuY3Rpb24oKSB7CiAgICBvb3AuaW1wbGVtZW50KHRoaXMsIEV2ZW50RW1pdHRlcik7CiAgICB0aGlzLm9uU2Nyb2xsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKCF0aGlzLnNraXBFdmVudCkgewogICAgICAgICAgICB0aGlzLnNjcm9sbFRvcCA9IHRoaXMuZWxlbWVudC5zY3JvbGxUb3A7CiAgICAgICAgICAgIHRoaXMuX2VtaXQoInNjcm9sbCIsIHtkYXRhOiB0aGlzLnNjcm9sbFRvcH0pOwogICAgICAgIH0KICAgICAgICB0aGlzLnNraXBFdmVudCA9IGZhbHNlOwogICAgfTsKICAgIHRoaXMuZ2V0V2lkdGggPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy53aWR0aDsKICAgIH07CiAgICB0aGlzLnNldEhlaWdodCA9IGZ1bmN0aW9uKGhlaWdodCkgewogICAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5oZWlnaHQgPSBoZWlnaHQgKyAicHgiOwogICAgfTsKICAgIHRoaXMuc2V0SW5uZXJIZWlnaHQgPSBmdW5jdGlvbihoZWlnaHQpIHsKICAgICAgICB0aGlzLmlubmVyLnN0eWxlLmhlaWdodCA9IGhlaWdodCArICJweCI7CiAgICB9OwogICAgdGhpcy5zZXRTY3JvbGxUb3AgPSBmdW5jdGlvbihzY3JvbGxUb3ApIHsKICAgICAgICBpZiAodGhpcy5zY3JvbGxUb3AgIT0gc2Nyb2xsVG9wKSB7CiAgICAgICAgICAgIHRoaXMuc2tpcEV2ZW50ID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5zY3JvbGxUb3AgPSB0aGlzLmVsZW1lbnQuc2Nyb2xsVG9wID0gc2Nyb2xsVG9wOwogICAgICAgIH0KICAgIH07Cgp9KS5jYWxsKFNjcm9sbEJhci5wcm90b3R5cGUpOwoKZXhwb3J0cy5TY3JvbGxCYXIgPSBTY3JvbGxCYXI7Cn0pOwoKYWNlLmRlZmluZSgnYWNlL3JlbmRlcmxvb3AnLCBbJ3JlcXVpcmUnLCAnZXhwb3J0cycsICdtb2R1bGUnICwgJ2FjZS9saWIvZXZlbnQnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIGV2ZW50ID0gcmVxdWlyZSgiLi9saWIvZXZlbnQiKTsKCgp2YXIgUmVuZGVyTG9vcCA9IGZ1bmN0aW9uKG9uUmVuZGVyLCB3aW4pIHsKICAgIHRoaXMub25SZW5kZXIgPSBvblJlbmRlcjsKICAgIHRoaXMucGVuZGluZyA9IGZhbHNlOwogICAgdGhpcy5jaGFuZ2VzID0gMDsKICAgIHRoaXMud2luZG93ID0gd2luIHx8IHdpbmRvdzsKfTsKCihmdW5jdGlvbigpIHsKCgogICAgdGhpcy5zY2hlZHVsZSA9IGZ1bmN0aW9uKGNoYW5nZSkgewogICAgICAgIHRoaXMuY2hhbmdlcyA9IHRoaXMuY2hhbmdlcyB8IGNoYW5nZTsKICAgICAgICBpZiAoIXRoaXMucGVuZGluZykgewogICAgICAgICAgICB0aGlzLnBlbmRpbmcgPSB0cnVlOwogICAgICAgICAgICB2YXIgX3NlbGYgPSB0aGlzOwogICAgICAgICAgICBldmVudC5uZXh0RnJhbWUoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBfc2VsZi5wZW5kaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICB2YXIgY2hhbmdlczsKICAgICAgICAgICAgICAgIHdoaWxlIChjaGFuZ2VzID0gX3NlbGYuY2hhbmdlcykgewogICAgICAgICAgICAgICAgICAgIF9zZWxmLmNoYW5nZXMgPSAwOwogICAgICAgICAgICAgICAgICAgIF9zZWxmLm9uUmVuZGVyKGNoYW5nZXMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCB0aGlzLndpbmRvdyk7CiAgICAgICAgfQogICAgfTsKCn0pLmNhbGwoUmVuZGVyTG9vcC5wcm90b3R5cGUpOwoKZXhwb3J0cy5SZW5kZXJMb29wID0gUmVuZGVyTG9vcDsKfSk7CgphY2UuZGVmaW5lKCdhY2UvbXVsdGlfc2VsZWN0JywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvcmFuZ2VfbGlzdCcsICdhY2UvcmFuZ2UnLCAnYWNlL3NlbGVjdGlvbicsICdhY2UvbW91c2UvbXVsdGlfc2VsZWN0X2hhbmRsZXInLCAnYWNlL2xpYi9ldmVudCcsICdhY2UvbGliL2xhbmcnLCAnYWNlL2NvbW1hbmRzL211bHRpX3NlbGVjdF9jb21tYW5kcycsICdhY2Uvc2VhcmNoJywgJ2FjZS9lZGl0X3Nlc3Npb24nLCAnYWNlL2VkaXRvciddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCnZhciBSYW5nZUxpc3QgPSByZXF1aXJlKCIuL3JhbmdlX2xpc3QiKS5SYW5nZUxpc3Q7CnZhciBSYW5nZSA9IHJlcXVpcmUoIi4vcmFuZ2UiKS5SYW5nZTsKdmFyIFNlbGVjdGlvbiA9IHJlcXVpcmUoIi4vc2VsZWN0aW9uIikuU2VsZWN0aW9uOwp2YXIgb25Nb3VzZURvd24gPSByZXF1aXJlKCIuL21vdXNlL211bHRpX3NlbGVjdF9oYW5kbGVyIikub25Nb3VzZURvd247CnZhciBldmVudCA9IHJlcXVpcmUoIi4vbGliL2V2ZW50Iik7CnZhciBsYW5nID0gcmVxdWlyZSgiLi9saWIvbGFuZyIpOwp2YXIgY29tbWFuZHMgPSByZXF1aXJlKCIuL2NvbW1hbmRzL211bHRpX3NlbGVjdF9jb21tYW5kcyIpOwpleHBvcnRzLmNvbW1hbmRzID0gY29tbWFuZHMuZGVmYXVsdENvbW1hbmRzLmNvbmNhdChjb21tYW5kcy5tdWx0aVNlbGVjdENvbW1hbmRzKTsKdmFyIFNlYXJjaCA9IHJlcXVpcmUoIi4vc2VhcmNoIikuU2VhcmNoOwp2YXIgc2VhcmNoID0gbmV3IFNlYXJjaCgpOwoKZnVuY3Rpb24gZmluZChzZXNzaW9uLCBuZWVkbGUsIGRpcikgewogICAgc2VhcmNoLiRvcHRpb25zLndyYXAgPSB0cnVlOwogICAgc2VhcmNoLiRvcHRpb25zLm5lZWRsZSA9IG5lZWRsZTsKICAgIHNlYXJjaC4kb3B0aW9ucy5iYWNrd2FyZHMgPSBkaXIgPT0gLTE7CiAgICByZXR1cm4gc2VhcmNoLmZpbmQoc2Vzc2lvbik7Cn0KdmFyIEVkaXRTZXNzaW9uID0gcmVxdWlyZSgiLi9lZGl0X3Nlc3Npb24iKS5FZGl0U2Vzc2lvbjsKKGZ1bmN0aW9uKCkgewogICAgdGhpcy5nZXRTZWxlY3Rpb25NYXJrZXJzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHNlbGVjdGlvbk1hcmtlcnM7CiAgICB9Owp9KS5jYWxsKEVkaXRTZXNzaW9uLnByb3RvdHlwZSk7CihmdW5jdGlvbigpIHsKICAgIHRoaXMucmFuZ2VzID0gbnVsbDsKICAgIHRoaXMucmFuZ2VMaXN0ID0gbnVsbDsKICAgIHRoaXMuYWRkUmFuZ2UgPSBmdW5jdGlvbihyYW5nZSwgJGJsb2NrQ2hhbmdlRXZlbnRzKSB7CiAgICAgICAgaWYgKCFyYW5nZSkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICBpZiAoIXRoaXMuaW5NdWx0aVNlbGVjdE1vZGUgJiYgdGhpcy5yYW5nZUNvdW50ID09IDApIHsKICAgICAgICAgICAgdmFyIG9sZFJhbmdlID0gdGhpcy50b09yaWVudGVkUmFuZ2UoKTsKICAgICAgICAgICAgaWYgKHJhbmdlLmludGVyc2VjdHMob2xkUmFuZ2UpKQogICAgICAgICAgICAgICAgcmV0dXJuICRibG9ja0NoYW5nZUV2ZW50cyB8fCB0aGlzLmZyb21PcmllbnRlZFJhbmdlKHJhbmdlKTsKCiAgICAgICAgICAgIHRoaXMucmFuZ2VMaXN0LmFkZChvbGRSYW5nZSk7CiAgICAgICAgICAgIHRoaXMuJG9uQWRkUmFuZ2Uob2xkUmFuZ2UpOwogICAgICAgIH0KCiAgICAgICAgaWYgKCFyYW5nZS5jdXJzb3IpCiAgICAgICAgICAgIHJhbmdlLmN1cnNvciA9IHJhbmdlLmVuZDsKCiAgICAgICAgdmFyIHJlbW92ZWQgPSB0aGlzLnJhbmdlTGlzdC5hZGQocmFuZ2UpOwoKICAgICAgICB0aGlzLiRvbkFkZFJhbmdlKHJhbmdlKTsKCiAgICAgICAgaWYgKHJlbW92ZWQubGVuZ3RoKQogICAgICAgICAgICB0aGlzLiRvblJlbW92ZVJhbmdlKHJlbW92ZWQpOwoKICAgICAgICBpZiAodGhpcy5yYW5nZUNvdW50ID4gMSAmJiAhdGhpcy5pbk11bHRpU2VsZWN0TW9kZSkgewogICAgICAgICAgICB0aGlzLl9lbWl0KCJtdWx0aVNlbGVjdCIpOwogICAgICAgICAgICB0aGlzLmluTXVsdGlTZWxlY3RNb2RlID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLiR1bmRvU2VsZWN0ID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMucmFuZ2VMaXN0LmF0dGFjaCh0aGlzLnNlc3Npb24pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRibG9ja0NoYW5nZUV2ZW50cyB8fCB0aGlzLmZyb21PcmllbnRlZFJhbmdlKHJhbmdlKTsKICAgIH07CgogICAgdGhpcy50b1NpbmdsZVJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHsKICAgICAgICByYW5nZSA9IHJhbmdlIHx8IHRoaXMucmFuZ2VzWzBdOwogICAgICAgIHZhciByZW1vdmVkID0gdGhpcy5yYW5nZUxpc3QucmVtb3ZlQWxsKCk7CiAgICAgICAgaWYgKHJlbW92ZWQubGVuZ3RoKQogICAgICAgICAgICB0aGlzLiRvblJlbW92ZVJhbmdlKHJlbW92ZWQpOwoKICAgICAgICByYW5nZSAmJiB0aGlzLmZyb21PcmllbnRlZFJhbmdlKHJhbmdlKTsKICAgIH07CiAgICB0aGlzLnN1YnN0cmFjdFBvaW50ID0gZnVuY3Rpb24ocG9zKSB7CiAgICAgICAgdmFyIHJlbW92ZWQgPSB0aGlzLnJhbmdlTGlzdC5zdWJzdHJhY3RQb2ludChwb3MpOwogICAgICAgIGlmIChyZW1vdmVkKSB7CiAgICAgICAgICAgIHRoaXMuJG9uUmVtb3ZlUmFuZ2UocmVtb3ZlZCk7CiAgICAgICAgICAgIHJldHVybiByZW1vdmVkWzBdOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLm1lcmdlT3ZlcmxhcHBpbmdSYW5nZXMgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgcmVtb3ZlZCA9IHRoaXMucmFuZ2VMaXN0Lm1lcmdlKCk7CiAgICAgICAgaWYgKHJlbW92ZWQubGVuZ3RoKQogICAgICAgICAgICB0aGlzLiRvblJlbW92ZVJhbmdlKHJlbW92ZWQpOwogICAgICAgIGVsc2UgaWYodGhpcy5yYW5nZXNbMF0pCiAgICAgICAgICAgIHRoaXMuZnJvbU9yaWVudGVkUmFuZ2UodGhpcy5yYW5nZXNbMF0pOwogICAgfTsKCiAgICB0aGlzLiRvbkFkZFJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHsKICAgICAgICB0aGlzLnJhbmdlQ291bnQgPSB0aGlzLnJhbmdlTGlzdC5yYW5nZXMubGVuZ3RoOwogICAgICAgIHRoaXMucmFuZ2VzLnVuc2hpZnQocmFuZ2UpOwogICAgICAgIHRoaXMuX2VtaXQoImFkZFJhbmdlIiwge3JhbmdlOiByYW5nZX0pOwogICAgfTsKCiAgICB0aGlzLiRvblJlbW92ZVJhbmdlID0gZnVuY3Rpb24ocmVtb3ZlZCkgewogICAgICAgIHRoaXMucmFuZ2VDb3VudCA9IHRoaXMucmFuZ2VMaXN0LnJhbmdlcy5sZW5ndGg7CiAgICAgICAgaWYgKHRoaXMucmFuZ2VDb3VudCA9PSAxICYmIHRoaXMuaW5NdWx0aVNlbGVjdE1vZGUpIHsKICAgICAgICAgICAgdmFyIGxhc3RSYW5nZSA9IHRoaXMucmFuZ2VMaXN0LnJhbmdlcy5wb3AoKTsKICAgICAgICAgICAgcmVtb3ZlZC5wdXNoKGxhc3RSYW5nZSk7CiAgICAgICAgICAgIHRoaXMucmFuZ2VDb3VudCA9IDA7CiAgICAgICAgfQoKICAgICAgICBmb3IgKHZhciBpID0gcmVtb3ZlZC5sZW5ndGg7IGktLTsgKSB7CiAgICAgICAgICAgIHZhciBpbmRleCA9IHRoaXMucmFuZ2VzLmluZGV4T2YocmVtb3ZlZFtpXSk7CiAgICAgICAgICAgIHRoaXMucmFuZ2VzLnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLl9lbWl0KCJyZW1vdmVSYW5nZSIsIHtyYW5nZXM6IHJlbW92ZWR9KTsKCiAgICAgICAgaWYgKHRoaXMucmFuZ2VDb3VudCA9PSAwICYmIHRoaXMuaW5NdWx0aVNlbGVjdE1vZGUpIHsKICAgICAgICAgICAgdGhpcy5pbk11bHRpU2VsZWN0TW9kZSA9IGZhbHNlOwogICAgICAgICAgICB0aGlzLl9lbWl0KCJzaW5nbGVTZWxlY3QiKTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLiR1bmRvU2VsZWN0ID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5yYW5nZUxpc3QuZGV0YWNoKHRoaXMuc2Vzc2lvbik7CiAgICAgICAgfQoKICAgICAgICBsYXN0UmFuZ2UgPSBsYXN0UmFuZ2UgfHwgdGhpcy5yYW5nZXNbMF07CiAgICAgICAgaWYgKGxhc3RSYW5nZSAmJiAhbGFzdFJhbmdlLmlzRXF1YWwodGhpcy5nZXRSYW5nZSgpKSkKICAgICAgICAgICAgdGhpcy5mcm9tT3JpZW50ZWRSYW5nZShsYXN0UmFuZ2UpOwogICAgfTsKICAgIHRoaXMuJGluaXRSYW5nZUxpc3QgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodGhpcy5yYW5nZUxpc3QpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdGhpcy5yYW5nZUxpc3QgPSBuZXcgUmFuZ2VMaXN0KCk7CiAgICAgICAgdGhpcy5yYW5nZXMgPSBbXTsKICAgICAgICB0aGlzLnJhbmdlQ291bnQgPSAwOwogICAgfTsKICAgIHRoaXMuZ2V0QWxsUmFuZ2VzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmFuZ2VMaXN0LnJhbmdlcy5jb25jYXQoKTsKICAgIH07CgogICAgdGhpcy5zcGxpdEludG9MaW5lcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAodGhpcy5yYW5nZUNvdW50ID4gMSkgewogICAgICAgICAgICB2YXIgcmFuZ2VzID0gdGhpcy5yYW5nZUxpc3QucmFuZ2VzOwogICAgICAgICAgICB2YXIgbGFzdFJhbmdlID0gcmFuZ2VzW3Jhbmdlcy5sZW5ndGggLSAxXTsKICAgICAgICAgICAgdmFyIHJhbmdlID0gUmFuZ2UuZnJvbVBvaW50cyhyYW5nZXNbMF0uc3RhcnQsIGxhc3RSYW5nZS5lbmQpOwoKICAgICAgICAgICAgdGhpcy50b1NpbmdsZVJhbmdlKCk7CiAgICAgICAgICAgIHRoaXMuc2V0U2VsZWN0aW9uUmFuZ2UocmFuZ2UsIGxhc3RSYW5nZS5jdXJzb3IgPT0gbGFzdFJhbmdlLnN0YXJ0KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLmdldFJhbmdlKCk7CiAgICAgICAgICAgIHZhciBpc0JhY2t3YXJkcyA9IHRoaXMuaXNCYWNrd2FyZHMoKTsKICAgICAgICAgICAgdmFyIHN0YXJ0Um93ID0gcmFuZ2Uuc3RhcnQucm93OwogICAgICAgICAgICB2YXIgZW5kUm93ID0gcmFuZ2UuZW5kLnJvdzsKICAgICAgICAgICAgaWYgKHN0YXJ0Um93ID09IGVuZFJvdykgewogICAgICAgICAgICAgICAgaWYgKGlzQmFja3dhcmRzKQogICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHJhbmdlLmVuZCwgZW5kID0gcmFuZ2Uuc3RhcnQ7CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gcmFuZ2Uuc3RhcnQsIGVuZCA9IHJhbmdlLmVuZDsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdGhpcy5hZGRSYW5nZShSYW5nZS5mcm9tUG9pbnRzKGVuZCwgZW5kKSk7CiAgICAgICAgICAgICAgICB0aGlzLmFkZFJhbmdlKFJhbmdlLmZyb21Qb2ludHMoc3RhcnQsIHN0YXJ0KSk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZhciByZWN0U2VsID0gW107CiAgICAgICAgICAgIHZhciByID0gdGhpcy5nZXRMaW5lUmFuZ2Uoc3RhcnRSb3csIHRydWUpOwogICAgICAgICAgICByLnN0YXJ0LmNvbHVtbiA9IHJhbmdlLnN0YXJ0LmNvbHVtbjsKICAgICAgICAgICAgcmVjdFNlbC5wdXNoKHIpOwoKICAgICAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0Um93ICsgMTsgaSA8IGVuZFJvdzsgaSsrKQogICAgICAgICAgICAgICAgcmVjdFNlbC5wdXNoKHRoaXMuZ2V0TGluZVJhbmdlKGksIHRydWUpKTsKCiAgICAgICAgICAgIHIgPSB0aGlzLmdldExpbmVSYW5nZShlbmRSb3csIHRydWUpOwogICAgICAgICAgICByLmVuZC5jb2x1bW4gPSByYW5nZS5lbmQuY29sdW1uOwogICAgICAgICAgICByZWN0U2VsLnB1c2gocik7CgogICAgICAgICAgICByZWN0U2VsLmZvckVhY2godGhpcy5hZGRSYW5nZSwgdGhpcyk7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMudG9nZ2xlQmxvY2tTZWxlY3Rpb24gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKHRoaXMucmFuZ2VDb3VudCA+IDEpIHsKICAgICAgICAgICAgdmFyIHJhbmdlcyA9IHRoaXMucmFuZ2VMaXN0LnJhbmdlczsKICAgICAgICAgICAgdmFyIGxhc3RSYW5nZSA9IHJhbmdlc1tyYW5nZXMubGVuZ3RoIC0gMV07CiAgICAgICAgICAgIHZhciByYW5nZSA9IFJhbmdlLmZyb21Qb2ludHMocmFuZ2VzWzBdLnN0YXJ0LCBsYXN0UmFuZ2UuZW5kKTsKCiAgICAgICAgICAgIHRoaXMudG9TaW5nbGVSYW5nZSgpOwogICAgICAgICAgICB0aGlzLnNldFNlbGVjdGlvblJhbmdlKHJhbmdlLCBsYXN0UmFuZ2UuY3Vyc29yID09IGxhc3RSYW5nZS5zdGFydCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIGN1cnNvciA9IHRoaXMuc2Vzc2lvbi5kb2N1bWVudFRvU2NyZWVuUG9zaXRpb24odGhpcy5zZWxlY3Rpb25MZWFkKTsKICAgICAgICAgICAgdmFyIGFuY2hvciA9IHRoaXMuc2Vzc2lvbi5kb2N1bWVudFRvU2NyZWVuUG9zaXRpb24odGhpcy5zZWxlY3Rpb25BbmNob3IpOwoKICAgICAgICAgICAgdmFyIHJlY3RTZWwgPSB0aGlzLnJlY3Rhbmd1bGFyUmFuZ2VCbG9jayhjdXJzb3IsIGFuY2hvcik7CiAgICAgICAgICAgIHJlY3RTZWwuZm9yRWFjaCh0aGlzLmFkZFJhbmdlLCB0aGlzKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5yZWN0YW5ndWxhclJhbmdlQmxvY2sgPSBmdW5jdGlvbihzY3JlZW5DdXJzb3IsIHNjcmVlbkFuY2hvciwgaW5jbHVkZUVtcHR5TGluZXMpIHsKICAgICAgICB2YXIgcmVjdFNlbCA9IFtdOwoKICAgICAgICB2YXIgeEJhY2t3YXJkcyA9IHNjcmVlbkN1cnNvci5jb2x1bW4gPCBzY3JlZW5BbmNob3IuY29sdW1uOwogICAgICAgIGlmICh4QmFja3dhcmRzKSB7CiAgICAgICAgICAgIHZhciBzdGFydENvbHVtbiA9IHNjcmVlbkN1cnNvci5jb2x1bW47CiAgICAgICAgICAgIHZhciBlbmRDb2x1bW4gPSBzY3JlZW5BbmNob3IuY29sdW1uOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBzdGFydENvbHVtbiA9IHNjcmVlbkFuY2hvci5jb2x1bW47CiAgICAgICAgICAgIHZhciBlbmRDb2x1bW4gPSBzY3JlZW5DdXJzb3IuY29sdW1uOwogICAgICAgIH0KCiAgICAgICAgdmFyIHlCYWNrd2FyZHMgPSBzY3JlZW5DdXJzb3Iucm93IDwgc2NyZWVuQW5jaG9yLnJvdzsKICAgICAgICBpZiAoeUJhY2t3YXJkcykgewogICAgICAgICAgICB2YXIgc3RhcnRSb3cgPSBzY3JlZW5DdXJzb3Iucm93OwogICAgICAgICAgICB2YXIgZW5kUm93ID0gc2NyZWVuQW5jaG9yLnJvdzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgc3RhcnRSb3cgPSBzY3JlZW5BbmNob3Iucm93OwogICAgICAgICAgICB2YXIgZW5kUm93ID0gc2NyZWVuQ3Vyc29yLnJvdzsKICAgICAgICB9CgogICAgICAgIGlmIChzdGFydENvbHVtbiA8IDApCiAgICAgICAgICAgIHN0YXJ0Q29sdW1uID0gMDsKICAgICAgICBpZiAoc3RhcnRSb3cgPCAwKQogICAgICAgICAgICBzdGFydFJvdyA9IDA7CgogICAgICAgIGlmIChzdGFydFJvdyA9PSBlbmRSb3cpCiAgICAgICAgICAgIGluY2x1ZGVFbXB0eUxpbmVzID0gdHJ1ZTsKCiAgICAgICAgZm9yICh2YXIgcm93ID0gc3RhcnRSb3c7IHJvdyA8PSBlbmRSb3c7IHJvdysrKSB7CiAgICAgICAgICAgIHZhciByYW5nZSA9IFJhbmdlLmZyb21Qb2ludHMoCiAgICAgICAgICAgICAgICB0aGlzLnNlc3Npb24uc2NyZWVuVG9Eb2N1bWVudFBvc2l0aW9uKHJvdywgc3RhcnRDb2x1bW4pLAogICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnNjcmVlblRvRG9jdW1lbnRQb3NpdGlvbihyb3csIGVuZENvbHVtbikKICAgICAgICAgICAgKTsKICAgICAgICAgICAgaWYgKHJhbmdlLmlzRW1wdHkoKSkgewogICAgICAgICAgICAgICAgaWYgKGRvY0VuZCAmJiBpc1NhbWVQb2ludChyYW5nZS5lbmQsIGRvY0VuZCkpCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB2YXIgZG9jRW5kID0gcmFuZ2UuZW5kOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJhbmdlLmN1cnNvciA9IHhCYWNrd2FyZHMgPyByYW5nZS5zdGFydCA6IHJhbmdlLmVuZDsKICAgICAgICAgICAgcmVjdFNlbC5wdXNoKHJhbmdlKTsKICAgICAgICB9CgogICAgICAgIGlmICh5QmFja3dhcmRzKQogICAgICAgICAgICByZWN0U2VsLnJldmVyc2UoKTsKCiAgICAgICAgaWYgKCFpbmNsdWRlRW1wdHlMaW5lcykgewogICAgICAgICAgICB2YXIgZW5kID0gcmVjdFNlbC5sZW5ndGggLSAxOwogICAgICAgICAgICB3aGlsZSAocmVjdFNlbFtlbmRdLmlzRW1wdHkoKSAmJiBlbmQgPiAwKQogICAgICAgICAgICAgICAgZW5kLS07CiAgICAgICAgICAgIGlmIChlbmQgPiAwKSB7CiAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSAwOwogICAgICAgICAgICAgICAgd2hpbGUgKHJlY3RTZWxbc3RhcnRdLmlzRW1wdHkoKSkKICAgICAgICAgICAgICAgICAgICBzdGFydCsrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvciAodmFyIGkgPSBlbmQ7IGkgPj0gc3RhcnQ7IGktLSkgewogICAgICAgICAgICAgICAgaWYgKHJlY3RTZWxbaV0uaXNFbXB0eSgpKQogICAgICAgICAgICAgICAgICAgIHJlY3RTZWwuc3BsaWNlKGksIDEpOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gcmVjdFNlbDsKICAgIH07Cn0pLmNhbGwoU2VsZWN0aW9uLnByb3RvdHlwZSk7CnZhciBFZGl0b3IgPSByZXF1aXJlKCIuL2VkaXRvciIpLkVkaXRvcjsKKGZ1bmN0aW9uKCkgewogICAgdGhpcy51cGRhdGVTZWxlY3Rpb25NYXJrZXJzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci51cGRhdGVDdXJzb3IoKTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnVwZGF0ZUJhY2tNYXJrZXJzKCk7CiAgICB9OwogICAgdGhpcy5hZGRTZWxlY3Rpb25NYXJrZXIgPSBmdW5jdGlvbihvcmllbnRlZFJhbmdlKSB7CiAgICAgICAgaWYgKCFvcmllbnRlZFJhbmdlLmN1cnNvcikKICAgICAgICAgICAgb3JpZW50ZWRSYW5nZS5jdXJzb3IgPSBvcmllbnRlZFJhbmdlLmVuZDsKCiAgICAgICAgdmFyIHN0eWxlID0gdGhpcy5nZXRTZWxlY3Rpb25TdHlsZSgpOwogICAgICAgIG9yaWVudGVkUmFuZ2UubWFya2VyID0gdGhpcy5zZXNzaW9uLmFkZE1hcmtlcihvcmllbnRlZFJhbmdlLCAiYWNlX3NlbGVjdGlvbiIsIHN0eWxlKTsKCiAgICAgICAgdGhpcy5zZXNzaW9uLiRzZWxlY3Rpb25NYXJrZXJzLnB1c2gob3JpZW50ZWRSYW5nZSk7CiAgICAgICAgdGhpcy5zZXNzaW9uLnNlbGVjdGlvbk1hcmtlckNvdW50ID0gdGhpcy5zZXNzaW9uLiRzZWxlY3Rpb25NYXJrZXJzLmxlbmd0aDsKICAgICAgICByZXR1cm4gb3JpZW50ZWRSYW5nZTsKICAgIH07CiAgICB0aGlzLnJlbW92ZVNlbGVjdGlvbk1hcmtlciA9IGZ1bmN0aW9uKHJhbmdlKSB7CiAgICAgICAgaWYgKCFyYW5nZS5tYXJrZXIpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlTWFya2VyKHJhbmdlLm1hcmtlcik7CiAgICAgICAgdmFyIGluZGV4ID0gdGhpcy5zZXNzaW9uLiRzZWxlY3Rpb25NYXJrZXJzLmluZGV4T2YocmFuZ2UpOwogICAgICAgIGlmIChpbmRleCAhPSAtMSkKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLiRzZWxlY3Rpb25NYXJrZXJzLnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgdGhpcy5zZXNzaW9uLnNlbGVjdGlvbk1hcmtlckNvdW50ID0gdGhpcy5zZXNzaW9uLiRzZWxlY3Rpb25NYXJrZXJzLmxlbmd0aDsKICAgIH07CgogICAgdGhpcy5yZW1vdmVTZWxlY3Rpb25NYXJrZXJzID0gZnVuY3Rpb24ocmFuZ2VzKSB7CiAgICAgICAgdmFyIG1hcmtlckxpc3QgPSB0aGlzLnNlc3Npb24uJHNlbGVjdGlvbk1hcmtlcnM7CiAgICAgICAgZm9yICh2YXIgaSA9IHJhbmdlcy5sZW5ndGg7IGktLTsgKSB7CiAgICAgICAgICAgIHZhciByYW5nZSA9IHJhbmdlc1tpXTsKICAgICAgICAgICAgaWYgKCFyYW5nZS5tYXJrZXIpCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZU1hcmtlcihyYW5nZS5tYXJrZXIpOwogICAgICAgICAgICB2YXIgaW5kZXggPSBtYXJrZXJMaXN0LmluZGV4T2YocmFuZ2UpOwogICAgICAgICAgICBpZiAoaW5kZXggIT0gLTEpCiAgICAgICAgICAgICAgICBtYXJrZXJMaXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgfQogICAgICAgIHRoaXMuc2Vzc2lvbi5zZWxlY3Rpb25NYXJrZXJDb3VudCA9IG1hcmtlckxpc3QubGVuZ3RoOwogICAgfTsKCiAgICB0aGlzLiRvbkFkZFJhbmdlID0gZnVuY3Rpb24oZSkgewogICAgICAgIHRoaXMuYWRkU2VsZWN0aW9uTWFya2VyKGUucmFuZ2UpOwogICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlQ3Vyc29yKCk7CiAgICAgICAgdGhpcy5yZW5kZXJlci51cGRhdGVCYWNrTWFya2VycygpOwogICAgfTsKCiAgICB0aGlzLiRvblJlbW92ZVJhbmdlID0gZnVuY3Rpb24oZSkgewogICAgICAgIHRoaXMucmVtb3ZlU2VsZWN0aW9uTWFya2VycyhlLnJhbmdlcyk7CiAgICAgICAgdGhpcy5yZW5kZXJlci51cGRhdGVDdXJzb3IoKTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnVwZGF0ZUJhY2tNYXJrZXJzKCk7CiAgICB9OwoKICAgIHRoaXMuJG9uTXVsdGlTZWxlY3QgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgaWYgKHRoaXMuaW5NdWx0aVNlbGVjdE1vZGUpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB0aGlzLmluTXVsdGlTZWxlY3RNb2RlID0gdHJ1ZTsKCiAgICAgICAgdGhpcy5zZXRTdHlsZSgiYWNlX211bHRpc2VsZWN0Iik7CiAgICAgICAgdGhpcy5rZXlCaW5kaW5nLmFkZEtleWJvYXJkSGFuZGxlcihjb21tYW5kcy5rZXlib2FyZEhhbmRsZXIpOwogICAgICAgIHRoaXMuY29tbWFuZHMub24oImV4ZWMiLCB0aGlzLiRvbk11bHRpU2VsZWN0RXhlYyk7CgogICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlQ3Vyc29yKCk7CiAgICAgICAgdGhpcy5yZW5kZXJlci51cGRhdGVCYWNrTWFya2VycygpOwogICAgfTsKCiAgICB0aGlzLiRvblNpbmdsZVNlbGVjdCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICBpZiAodGhpcy5zZXNzaW9uLm11bHRpU2VsZWN0LmluVmlydHVhbE1vZGUpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB0aGlzLmluTXVsdGlTZWxlY3RNb2RlID0gZmFsc2U7CgogICAgICAgIHRoaXMudW5zZXRTdHlsZSgiYWNlX211bHRpc2VsZWN0Iik7CiAgICAgICAgdGhpcy5rZXlCaW5kaW5nLnJlbW92ZUtleWJvYXJkSGFuZGxlcihjb21tYW5kcy5rZXlib2FyZEhhbmRsZXIpOwoKICAgICAgICB0aGlzLmNvbW1hbmRzLnJlbW92ZUV2ZW50TGlzdGVuZXIoImV4ZWMiLCB0aGlzLiRvbk11bHRpU2VsZWN0RXhlYyk7CiAgICAgICAgdGhpcy5yZW5kZXJlci51cGRhdGVDdXJzb3IoKTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnVwZGF0ZUJhY2tNYXJrZXJzKCk7CiAgICB9OwoKICAgIHRoaXMuJG9uTXVsdGlTZWxlY3RFeGVjID0gZnVuY3Rpb24oZSkgewogICAgICAgIHZhciBjb21tYW5kID0gZS5jb21tYW5kOwogICAgICAgIHZhciBlZGl0b3IgPSBlLmVkaXRvcjsKICAgICAgICBpZiAoIWVkaXRvci5tdWx0aVNlbGVjdCkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIGlmICghY29tbWFuZC5tdWx0aVNlbGVjdEFjdGlvbikgewogICAgICAgICAgICBjb21tYW5kLmV4ZWMoZWRpdG9yLCBlLmFyZ3MgfHwge30pOwogICAgICAgICAgICBlZGl0b3IubXVsdGlTZWxlY3QuYWRkUmFuZ2UoZWRpdG9yLm11bHRpU2VsZWN0LnRvT3JpZW50ZWRSYW5nZSgpKTsKICAgICAgICAgICAgZWRpdG9yLm11bHRpU2VsZWN0Lm1lcmdlT3ZlcmxhcHBpbmdSYW5nZXMoKTsKICAgICAgICB9IGVsc2UgaWYgKGNvbW1hbmQubXVsdGlTZWxlY3RBY3Rpb24gPT0gImZvckVhY2giKSB7CiAgICAgICAgICAgIGVkaXRvci5mb3JFYWNoU2VsZWN0aW9uKGNvbW1hbmQsIGUuYXJncyk7CiAgICAgICAgfSBlbHNlIGlmIChjb21tYW5kLm11bHRpU2VsZWN0QWN0aW9uID09ICJzaW5nbGUiKSB7CiAgICAgICAgICAgIGVkaXRvci5leGl0TXVsdGlTZWxlY3RNb2RlKCk7CiAgICAgICAgICAgIGNvbW1hbmQuZXhlYyhlZGl0b3IsIGUuYXJncyB8fCB7fSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29tbWFuZC5tdWx0aVNlbGVjdEFjdGlvbihlZGl0b3IsIGUuYXJncyB8fCB7fSk7CiAgICAgICAgfQogICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgIH07IAogICAgdGhpcy5mb3JFYWNoU2VsZWN0aW9uID0gZnVuY3Rpb24oY21kLCBhcmdzKSB7CiAgICAgICAgaWYgKHRoaXMuaW5WaXJ0dWFsU2VsZWN0aW9uTW9kZSkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICB2YXIgc2Vzc2lvbiA9IHRoaXMuc2Vzc2lvbjsKICAgICAgICB2YXIgc2VsZWN0aW9uID0gdGhpcy5zZWxlY3Rpb247CiAgICAgICAgdmFyIHJhbmdlTGlzdCA9IHNlbGVjdGlvbi5yYW5nZUxpc3Q7CgogICAgICAgIHZhciByZWcgPSBzZWxlY3Rpb24uX2V2ZW50UmVnaXN0cnk7CiAgICAgICAgc2VsZWN0aW9uLl9ldmVudFJlZ2lzdHJ5ID0ge307CgogICAgICAgIHZhciB0bXBTZWwgPSBuZXcgU2VsZWN0aW9uKHNlc3Npb24pOwogICAgICAgIHRoaXMuaW5WaXJ0dWFsU2VsZWN0aW9uTW9kZSA9IHRydWU7CiAgICAgICAgZm9yICh2YXIgaSA9IHJhbmdlTGlzdC5yYW5nZXMubGVuZ3RoOyBpLS07KSB7CiAgICAgICAgICAgIHRtcFNlbC5mcm9tT3JpZW50ZWRSYW5nZShyYW5nZUxpc3QucmFuZ2VzW2ldKTsKICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24gPSBzZXNzaW9uLnNlbGVjdGlvbiA9IHRtcFNlbDsKICAgICAgICAgICAgY21kLmV4ZWModGhpcywgYXJncyB8fCB7fSk7CiAgICAgICAgICAgIHRtcFNlbC50b09yaWVudGVkUmFuZ2UocmFuZ2VMaXN0LnJhbmdlc1tpXSk7CiAgICAgICAgfQogICAgICAgIHRtcFNlbC5kZXRhY2goKTsKCiAgICAgICAgdGhpcy5zZWxlY3Rpb24gPSBzZXNzaW9uLnNlbGVjdGlvbiA9IHNlbGVjdGlvbjsKICAgICAgICB0aGlzLmluVmlydHVhbFNlbGVjdGlvbk1vZGUgPSBmYWxzZTsKICAgICAgICBzZWxlY3Rpb24uX2V2ZW50UmVnaXN0cnkgPSByZWc7CiAgICAgICAgc2VsZWN0aW9uLm1lcmdlT3ZlcmxhcHBpbmdSYW5nZXMoKTsKCiAgICAgICAgdGhpcy5vbkN1cnNvckNoYW5nZSgpOwogICAgICAgIHRoaXMub25TZWxlY3Rpb25DaGFuZ2UoKTsKICAgIH07CiAgICB0aGlzLmV4aXRNdWx0aVNlbGVjdE1vZGUgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodGhpcy5pblZpcnR1YWxTZWxlY3Rpb25Nb2RlKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdGhpcy5tdWx0aVNlbGVjdC50b1NpbmdsZVJhbmdlKCk7CiAgICB9OwoKICAgIHRoaXMuZ2V0Q29weVRleHQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgdGV4dCA9ICIiOwogICAgICAgIGlmICh0aGlzLmluTXVsdGlTZWxlY3RNb2RlKSB7CiAgICAgICAgICAgIHZhciByYW5nZXMgPSB0aGlzLm11bHRpU2VsZWN0LnJhbmdlTGlzdC5yYW5nZXM7CiAgICAgICAgICAgIHRleHQgPSBbXTsKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByYW5nZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIHRleHQucHVzaCh0aGlzLnNlc3Npb24uZ2V0VGV4dFJhbmdlKHJhbmdlc1tpXSkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRleHQgPSB0ZXh0LmpvaW4odGhpcy5zZXNzaW9uLmdldERvY3VtZW50KCkuZ2V0TmV3TGluZUNoYXJhY3RlcigpKTsKICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLnNlbGVjdGlvbi5pc0VtcHR5KCkpIHsKICAgICAgICAgICAgdGV4dCA9IHRoaXMuc2Vzc2lvbi5nZXRUZXh0UmFuZ2UodGhpcy5nZXRTZWxlY3Rpb25SYW5nZSgpKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0ZXh0OwogICAgfTsKICAgIHRoaXMub25QYXN0ZSA9IGZ1bmN0aW9uKHRleHQpIHsKICAgICAgICBpZiAodGhpcy4kcmVhZE9ubHkpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdGhpcy5fZW1pdCgicGFzdGUiLCB0ZXh0KTsKICAgICAgICBpZiAoIXRoaXMuaW5NdWx0aVNlbGVjdE1vZGUpCiAgICAgICAgICAgIHJldHVybiB0aGlzLmluc2VydCh0ZXh0KTsKCiAgICAgICAgdmFyIGxpbmVzID0gdGV4dC5zcGxpdCgvXHJcbnxccnxcbi8pOwogICAgICAgIHZhciByYW5nZXMgPSB0aGlzLnNlbGVjdGlvbi5yYW5nZUxpc3QucmFuZ2VzOwoKICAgICAgICBpZiAobGluZXMubGVuZ3RoID4gcmFuZ2VzLmxlbmd0aCB8fCAobGluZXMubGVuZ3RoIDw9IDIgfHwgIWxpbmVzWzFdKSkKICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29tbWFuZHMuZXhlYygiaW5zZXJ0c3RyaW5nIiwgdGhpcywgdGV4dCk7CgogICAgICAgIGZvciAodmFyIGkgPSByYW5nZXMubGVuZ3RoOyBpLS07ICkgewogICAgICAgICAgICB2YXIgcmFuZ2UgPSByYW5nZXNbaV07CiAgICAgICAgICAgIGlmICghcmFuZ2UuaXNFbXB0eSgpKQogICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZShyYW5nZSk7CgogICAgICAgICAgICB0aGlzLnNlc3Npb24uaW5zZXJ0KHJhbmdlLnN0YXJ0LCBsaW5lc1tpXSk7CiAgICAgICAgfQogICAgfTsKICAgIHRoaXMuZmluZEFsbCA9IGZ1bmN0aW9uKG5lZWRsZSwgb3B0aW9ucywgYWRkaXRpdmUpIHsKICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsKICAgICAgICBvcHRpb25zLm5lZWRsZSA9IG5lZWRsZSB8fCBvcHRpb25zLm5lZWRsZTsKICAgICAgICB0aGlzLiRzZWFyY2guc2V0KG9wdGlvbnMpOwoKICAgICAgICB2YXIgcmFuZ2VzID0gdGhpcy4kc2VhcmNoLmZpbmRBbGwodGhpcy5zZXNzaW9uKTsKICAgICAgICBpZiAoIXJhbmdlcy5sZW5ndGgpCiAgICAgICAgICAgIHJldHVybiAwOwoKICAgICAgICB0aGlzLiRibG9ja1Njcm9sbGluZyArPSAxOwogICAgICAgIHZhciBzZWxlY3Rpb24gPSB0aGlzLm11bHRpU2VsZWN0OwoKICAgICAgICBpZiAoIWFkZGl0aXZlKQogICAgICAgICAgICBzZWxlY3Rpb24udG9TaW5nbGVSYW5nZShyYW5nZXNbMF0pOwoKICAgICAgICBmb3IgKHZhciBpID0gcmFuZ2VzLmxlbmd0aDsgaS0tOyApCiAgICAgICAgICAgIHNlbGVjdGlvbi5hZGRSYW5nZShyYW5nZXNbaV0sIHRydWUpOwoKICAgICAgICB0aGlzLiRibG9ja1Njcm9sbGluZyAtPSAxOwoKICAgICAgICByZXR1cm4gcmFuZ2VzLmxlbmd0aDsKICAgIH07CiAgICB0aGlzLnNlbGVjdE1vcmVMaW5lcyA9IGZ1bmN0aW9uKGRpciwgc2tpcCkgewogICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLnRvT3JpZW50ZWRSYW5nZSgpOwogICAgICAgIHZhciBpc0JhY2t3YXJkcyA9IHJhbmdlLmN1cnNvciA9PSByYW5nZS5lbmQ7CgogICAgICAgIHZhciBzY3JlZW5MZWFkID0gdGhpcy5zZXNzaW9uLmRvY3VtZW50VG9TY3JlZW5Qb3NpdGlvbihyYW5nZS5jdXJzb3IpOwogICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbi4kZGVzaXJlZENvbHVtbikKICAgICAgICAgICAgc2NyZWVuTGVhZC5jb2x1bW4gPSB0aGlzLnNlbGVjdGlvbi4kZGVzaXJlZENvbHVtbjsKCiAgICAgICAgdmFyIGxlYWQgPSB0aGlzLnNlc3Npb24uc2NyZWVuVG9Eb2N1bWVudFBvc2l0aW9uKHNjcmVlbkxlYWQucm93ICsgZGlyLCBzY3JlZW5MZWFkLmNvbHVtbik7CgogICAgICAgIGlmICghcmFuZ2UuaXNFbXB0eSgpKSB7CiAgICAgICAgICAgIHZhciBzY3JlZW5BbmNob3IgPSB0aGlzLnNlc3Npb24uZG9jdW1lbnRUb1NjcmVlblBvc2l0aW9uKGlzQmFja3dhcmRzID8gcmFuZ2UuZW5kIDogcmFuZ2Uuc3RhcnQpOwogICAgICAgICAgICB2YXIgYW5jaG9yID0gdGhpcy5zZXNzaW9uLnNjcmVlblRvRG9jdW1lbnRQb3NpdGlvbihzY3JlZW5BbmNob3Iucm93ICsgZGlyLCBzY3JlZW5BbmNob3IuY29sdW1uKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgYW5jaG9yID0gbGVhZDsKICAgICAgICB9CgogICAgICAgIGlmIChpc0JhY2t3YXJkcykgewogICAgICAgICAgICB2YXIgbmV3UmFuZ2UgPSBSYW5nZS5mcm9tUG9pbnRzKGxlYWQsIGFuY2hvcik7CiAgICAgICAgICAgIG5ld1JhbmdlLmN1cnNvciA9IG5ld1JhbmdlLnN0YXJ0OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBuZXdSYW5nZSA9IFJhbmdlLmZyb21Qb2ludHMoYW5jaG9yLCBsZWFkKTsKICAgICAgICAgICAgbmV3UmFuZ2UuY3Vyc29yID0gbmV3UmFuZ2UuZW5kOwogICAgICAgIH0KCiAgICAgICAgbmV3UmFuZ2UuZGVzaXJlZENvbHVtbiA9IHNjcmVlbkxlYWQuY29sdW1uOwogICAgICAgIGlmICghdGhpcy5zZWxlY3Rpb24uaW5NdWx0aVNlbGVjdE1vZGUpIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uYWRkUmFuZ2UocmFuZ2UpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIChza2lwKQogICAgICAgICAgICAgICAgdmFyIHRvUmVtb3ZlID0gcmFuZ2UuY3Vyc29yOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5zZWxlY3Rpb24uYWRkUmFuZ2UobmV3UmFuZ2UpOwogICAgICAgIGlmICh0b1JlbW92ZSkKICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uc3Vic3RyYWN0UG9pbnQodG9SZW1vdmUpOwogICAgfTsKICAgIHRoaXMudHJhbnNwb3NlU2VsZWN0aW9ucyA9IGZ1bmN0aW9uKGRpcikgewogICAgICAgIHZhciBzZXNzaW9uID0gdGhpcy5zZXNzaW9uOwogICAgICAgIHZhciBzZWwgPSBzZXNzaW9uLm11bHRpU2VsZWN0OwogICAgICAgIHZhciBhbGwgPSBzZWwucmFuZ2VzOwoKICAgICAgICBmb3IgKHZhciBpID0gYWxsLmxlbmd0aDsgaS0tOyApIHsKICAgICAgICAgICAgdmFyIHJhbmdlID0gYWxsW2ldOwogICAgICAgICAgICBpZiAocmFuZ2UuaXNFbXB0eSgpKSB7CiAgICAgICAgICAgICAgICB2YXIgdG1wID0gc2Vzc2lvbi5nZXRXb3JkUmFuZ2UocmFuZ2Uuc3RhcnQucm93LCByYW5nZS5zdGFydC5jb2x1bW4pOwogICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnQucm93ID0gdG1wLnN0YXJ0LnJvdzsKICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0LmNvbHVtbiA9IHRtcC5zdGFydC5jb2x1bW47CiAgICAgICAgICAgICAgICByYW5nZS5lbmQucm93ID0gdG1wLmVuZC5yb3c7CiAgICAgICAgICAgICAgICByYW5nZS5lbmQuY29sdW1uID0gdG1wLmVuZC5jb2x1bW47CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgc2VsLm1lcmdlT3ZlcmxhcHBpbmdSYW5nZXMoKTsKCiAgICAgICAgdmFyIHdvcmRzID0gW107CiAgICAgICAgZm9yICh2YXIgaSA9IGFsbC5sZW5ndGg7IGktLTsgKSB7CiAgICAgICAgICAgIHZhciByYW5nZSA9IGFsbFtpXTsKICAgICAgICAgICAgd29yZHMudW5zaGlmdChzZXNzaW9uLmdldFRleHRSYW5nZShyYW5nZSkpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGRpciA8IDApCiAgICAgICAgICAgIHdvcmRzLnVuc2hpZnQod29yZHMucG9wKCkpOwogICAgICAgIGVsc2UKICAgICAgICAgICAgd29yZHMucHVzaCh3b3Jkcy5zaGlmdCgpKTsKCiAgICAgICAgZm9yICh2YXIgaSA9IGFsbC5sZW5ndGg7IGktLTsgKSB7CiAgICAgICAgICAgIHZhciByYW5nZSA9IGFsbFtpXTsKICAgICAgICAgICAgdmFyIHRtcCA9IHJhbmdlLmNsb25lKCk7CiAgICAgICAgICAgIHNlc3Npb24ucmVwbGFjZShyYW5nZSwgd29yZHNbaV0pOwogICAgICAgICAgICByYW5nZS5zdGFydC5yb3cgPSB0bXAuc3RhcnQucm93OwogICAgICAgICAgICByYW5nZS5zdGFydC5jb2x1bW4gPSB0bXAuc3RhcnQuY29sdW1uOwogICAgICAgIH0KICAgIH07CiAgICB0aGlzLnNlbGVjdE1vcmUgPSBmdW5jdGlvbihkaXIsIHNraXApIHsKICAgICAgICB2YXIgc2Vzc2lvbiA9IHRoaXMuc2Vzc2lvbjsKICAgICAgICB2YXIgc2VsID0gc2Vzc2lvbi5tdWx0aVNlbGVjdDsKCiAgICAgICAgdmFyIHJhbmdlID0gc2VsLnRvT3JpZW50ZWRSYW5nZSgpOwogICAgICAgIGlmIChyYW5nZS5pc0VtcHR5KCkpIHsKICAgICAgICAgICAgdmFyIHJhbmdlID0gc2Vzc2lvbi5nZXRXb3JkUmFuZ2UocmFuZ2Uuc3RhcnQucm93LCByYW5nZS5zdGFydC5jb2x1bW4pOwogICAgICAgICAgICByYW5nZS5jdXJzb3IgPSByYW5nZS5lbmQ7CiAgICAgICAgICAgIHRoaXMubXVsdGlTZWxlY3QuYWRkUmFuZ2UocmFuZ2UpOwogICAgICAgIH0KICAgICAgICB2YXIgbmVlZGxlID0gc2Vzc2lvbi5nZXRUZXh0UmFuZ2UocmFuZ2UpOwoKICAgICAgICB2YXIgbmV3UmFuZ2UgPSBmaW5kKHNlc3Npb24sIG5lZWRsZSwgZGlyKTsKICAgICAgICBpZiAobmV3UmFuZ2UpIHsKICAgICAgICAgICAgbmV3UmFuZ2UuY3Vyc29yID0gZGlyID09IC0xID8gbmV3UmFuZ2Uuc3RhcnQgOiBuZXdSYW5nZS5lbmQ7CiAgICAgICAgICAgIHRoaXMubXVsdGlTZWxlY3QuYWRkUmFuZ2UobmV3UmFuZ2UpOwogICAgICAgIH0KICAgICAgICBpZiAoc2tpcCkKICAgICAgICAgICAgdGhpcy5tdWx0aVNlbGVjdC5zdWJzdHJhY3RQb2ludChyYW5nZS5jdXJzb3IpOwogICAgfTsKICAgIHRoaXMuYWxpZ25DdXJzb3JzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIHNlc3Npb24gPSB0aGlzLnNlc3Npb247CiAgICAgICAgdmFyIHNlbCA9IHNlc3Npb24ubXVsdGlTZWxlY3Q7CiAgICAgICAgdmFyIHJhbmdlcyA9IHNlbC5yYW5nZXM7CgogICAgICAgIGlmICghcmFuZ2VzLmxlbmd0aCkgewogICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpOwogICAgICAgICAgICB2YXIgZnIgPSByYW5nZS5zdGFydC5yb3csIGxyID0gcmFuZ2UuZW5kLnJvdzsKICAgICAgICAgICAgdmFyIGxpbmVzID0gdGhpcy5zZXNzaW9uLmRvYy5yZW1vdmVMaW5lcyhmciwgbHIpOwogICAgICAgICAgICBsaW5lcyA9IHRoaXMuJHJlQWxpZ25UZXh0KGxpbmVzKTsKICAgICAgICAgICAgdGhpcy5zZXNzaW9uLmRvYy5pbnNlcnRMaW5lcyhmciwgbGluZXMpOwogICAgICAgICAgICByYW5nZS5zdGFydC5jb2x1bW4gPSAwOwogICAgICAgICAgICByYW5nZS5lbmQuY29sdW1uID0gbGluZXNbbGluZXMubGVuZ3RoIC0gMV0ubGVuZ3RoOwogICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5zZXRSYW5nZShyYW5nZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIHJvdyA9IC0xOwogICAgICAgICAgICB2YXIgc2FtZVJvd1JhbmdlcyA9IHJhbmdlcy5maWx0ZXIoZnVuY3Rpb24ocikgewogICAgICAgICAgICAgICAgaWYgKHIuY3Vyc29yLnJvdyA9PSByb3cpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgICAgICByb3cgPSByLmN1cnNvci5yb3c7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBzZWwuJG9uUmVtb3ZlUmFuZ2Uoc2FtZVJvd1Jhbmdlcyk7CgogICAgICAgICAgICB2YXIgbWF4Q29sID0gMDsKICAgICAgICAgICAgdmFyIG1pblNwYWNlID0gSW5maW5pdHk7CiAgICAgICAgICAgIHZhciBzcGFjZU9mZnNldHMgPSByYW5nZXMubWFwKGZ1bmN0aW9uKHIpIHsKICAgICAgICAgICAgICAgIHZhciBwID0gci5jdXJzb3I7CiAgICAgICAgICAgICAgICB2YXIgbGluZSA9IHNlc3Npb24uZ2V0TGluZShwLnJvdyk7CiAgICAgICAgICAgICAgICB2YXIgc3BhY2VPZmZzZXQgPSBsaW5lLnN1YnN0cihwLmNvbHVtbikuc2VhcmNoKC9cUy9nKTsKICAgICAgICAgICAgICAgIGlmIChzcGFjZU9mZnNldCA9PSAtMSkKICAgICAgICAgICAgICAgICAgICBzcGFjZU9mZnNldCA9IDA7CgogICAgICAgICAgICAgICAgaWYgKHAuY29sdW1uID4gbWF4Q29sKQogICAgICAgICAgICAgICAgICAgIG1heENvbCA9IHAuY29sdW1uOwogICAgICAgICAgICAgICAgaWYgKHNwYWNlT2Zmc2V0IDwgbWluU3BhY2UpCiAgICAgICAgICAgICAgICAgICAgbWluU3BhY2UgPSBzcGFjZU9mZnNldDsKICAgICAgICAgICAgICAgIHJldHVybiBzcGFjZU9mZnNldDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJhbmdlcy5mb3JFYWNoKGZ1bmN0aW9uKHIsIGkpIHsKICAgICAgICAgICAgICAgIHZhciBwID0gci5jdXJzb3I7CiAgICAgICAgICAgICAgICB2YXIgbCA9IG1heENvbCAtIHAuY29sdW1uOwogICAgICAgICAgICAgICAgdmFyIGQgPSBzcGFjZU9mZnNldHNbaV0gLSBtaW5TcGFjZTsKICAgICAgICAgICAgICAgIGlmIChsID4gZCkKICAgICAgICAgICAgICAgICAgICBzZXNzaW9uLmluc2VydChwLCBsYW5nLnN0cmluZ1JlcGVhdCgiICIsIGwgLSBkKSk7CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbi5yZW1vdmUobmV3IFJhbmdlKHAucm93LCBwLmNvbHVtbiwgcC5yb3csIHAuY29sdW1uIC0gbCArIGQpKTsKCiAgICAgICAgICAgICAgICByLnN0YXJ0LmNvbHVtbiA9IHIuZW5kLmNvbHVtbiA9IG1heENvbDsKICAgICAgICAgICAgICAgIHIuc3RhcnQucm93ID0gci5lbmQucm93ID0gcC5yb3c7CiAgICAgICAgICAgICAgICByLmN1cnNvciA9IHIuZW5kOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgc2VsLmZyb21PcmllbnRlZFJhbmdlKHJhbmdlc1swXSk7CiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlQ3Vyc29yKCk7CiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIudXBkYXRlQmFja01hcmtlcnMoKTsKICAgICAgICB9CiAgICB9OwoKICAgIHRoaXMuJHJlQWxpZ25UZXh0ID0gZnVuY3Rpb24obGluZXMpIHsKICAgICAgICB2YXIgaXNMZWZ0QWxpZ25lZCA9IHRydWUsIGlzUmlnaHRBbGlnbmVkID0gdHJ1ZTsKICAgICAgICB2YXIgc3RhcnRXLCB0ZXh0VywgZW5kVzsKCiAgICAgICAgcmV0dXJuIGxpbmVzLm1hcChmdW5jdGlvbihsaW5lKSB7CiAgICAgICAgICAgIHZhciBtID0gbGluZS5tYXRjaCgvKFxzKikoLio/KShccyopKFs9Ol0uKikvKTsKICAgICAgICAgICAgaWYgKCFtKQogICAgICAgICAgICAgICAgcmV0dXJuIFtsaW5lXTsKCiAgICAgICAgICAgIGlmIChzdGFydFcgPT0gbnVsbCkgewogICAgICAgICAgICAgICAgc3RhcnRXID0gbVsxXS5sZW5ndGg7CiAgICAgICAgICAgICAgICB0ZXh0VyA9IG1bMl0ubGVuZ3RoOwogICAgICAgICAgICAgICAgZW5kVyA9IG1bM10ubGVuZ3RoOwogICAgICAgICAgICAgICAgcmV0dXJuIG07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzdGFydFcgKyB0ZXh0VyArIGVuZFcgIT0gbVsxXS5sZW5ndGggKyBtWzJdLmxlbmd0aCArIG1bM10ubGVuZ3RoKQogICAgICAgICAgICAgICAgaXNSaWdodEFsaWduZWQgPSBmYWxzZTsKICAgICAgICAgICAgaWYgKHN0YXJ0VyAhPSBtWzFdLmxlbmd0aCkKICAgICAgICAgICAgICAgIGlzTGVmdEFsaWduZWQgPSBmYWxzZTsKCiAgICAgICAgICAgIGlmIChzdGFydFcgPiBtWzFdLmxlbmd0aCkKICAgICAgICAgICAgICAgIHN0YXJ0VyA9IG1bMV0ubGVuZ3RoOwogICAgICAgICAgICBpZiAodGV4dFcgPCBtWzJdLmxlbmd0aCkKICAgICAgICAgICAgICAgIHRleHRXID0gbVsyXS5sZW5ndGg7CiAgICAgICAgICAgIGlmIChlbmRXID4gbVszXS5sZW5ndGgpCiAgICAgICAgICAgICAgICBlbmRXID0gbVszXS5sZW5ndGg7CgogICAgICAgICAgICByZXR1cm4gbTsKICAgICAgICB9KS5tYXAoaXNMZWZ0QWxpZ25lZCA/IGlzUmlnaHRBbGlnbmVkID8gYWxpZ25SaWdodCA6IGFsaWduTGVmdCA6IHVuQWxpZ24pOwoKICAgICAgICBmdW5jdGlvbiBzcGFjZXMobikgewogICAgICAgICAgICByZXR1cm4gbGFuZy5zdHJpbmdSZXBlYXQoIiAiLCBuKTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIGFsaWduTGVmdChtKSB7CiAgICAgICAgICAgIHJldHVybiAhbVsyXSA/IG1bMF0gOiBzcGFjZXMoc3RhcnRXKSArIG1bMl0KICAgICAgICAgICAgICAgICsgc3BhY2VzKHRleHRXIC0gbVsyXS5sZW5ndGggKyBlbmRXKQogICAgICAgICAgICAgICAgKyBtWzRdLnJlcGxhY2UoL14oWz06XSlccysvLCAiJDEgIikKICAgICAgICB9CiAgICAgICAgZnVuY3Rpb24gYWxpZ25SaWdodChtKSB7CiAgICAgICAgICAgIHJldHVybiAhbVsyXSA/IG1bMF0gOiBzcGFjZXMoc3RhcnRXICsgdGV4dFcgLSBtWzJdLmxlbmd0aCkgKyBtWzJdCiAgICAgICAgICAgICAgICArIHNwYWNlcyhlbmRXLCAiICIpCiAgICAgICAgICAgICAgICArIG1bNF0ucmVwbGFjZSgvXihbPTpdKVxzKy8sICIkMSAiKQogICAgICAgIH0KICAgICAgICBmdW5jdGlvbiB1bkFsaWduKG0pIHsKICAgICAgICAgICAgcmV0dXJuICFtWzJdID8gbVswXSA6IHNwYWNlcyhzdGFydFcpICsgbVsyXQogICAgICAgICAgICAgICAgKyBzcGFjZXMoZW5kVykKICAgICAgICAgICAgICAgICsgbVs0XS5yZXBsYWNlKC9eKFs9Ol0pXHMrLywgIiQxICIpCiAgICAgICAgfQogICAgfQp9KS5jYWxsKEVkaXRvci5wcm90b3R5cGUpOwoKCmZ1bmN0aW9uIGlzU2FtZVBvaW50KHAxLCBwMikgewogICAgcmV0dXJuIHAxLnJvdyA9PSBwMi5yb3cgJiYgcDEuY29sdW1uID09IHAyLmNvbHVtbjsKfQpleHBvcnRzLm9uU2Vzc2lvbkNoYW5nZSA9IGZ1bmN0aW9uKGUpIHsKICAgIHZhciBzZXNzaW9uID0gZS5zZXNzaW9uOwogICAgaWYgKCFzZXNzaW9uLm11bHRpU2VsZWN0KSB7CiAgICAgICAgc2Vzc2lvbi4kc2VsZWN0aW9uTWFya2VycyA9IFtdOwogICAgICAgIHNlc3Npb24uc2VsZWN0aW9uLiRpbml0UmFuZ2VMaXN0KCk7CiAgICAgICAgc2Vzc2lvbi5tdWx0aVNlbGVjdCA9IHNlc3Npb24uc2VsZWN0aW9uOwogICAgfQogICAgdGhpcy5tdWx0aVNlbGVjdCA9IHNlc3Npb24ubXVsdGlTZWxlY3Q7CgogICAgdmFyIG9sZFNlc3Npb24gPSBlLm9sZFNlc3Npb247CiAgICBpZiAob2xkU2Vzc2lvbikgewogICAgICAgIGlmIChvbGRTZXNzaW9uLm11bHRpU2VsZWN0ICYmIG9sZFNlc3Npb24ubXVsdGlTZWxlY3QuZWRpdG9yID09IHRoaXMpCiAgICAgICAgICAgIG9sZFNlc3Npb24ubXVsdGlTZWxlY3QuZWRpdG9yID0gbnVsbDsKCiAgICAgICAgc2Vzc2lvbi5tdWx0aVNlbGVjdC5yZW1vdmVFdmVudExpc3RlbmVyKCJhZGRSYW5nZSIsIHRoaXMuJG9uQWRkUmFuZ2UpOwogICAgICAgIHNlc3Npb24ubXVsdGlTZWxlY3QucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVtb3ZlUmFuZ2UiLCB0aGlzLiRvblJlbW92ZVJhbmdlKTsKICAgICAgICBzZXNzaW9uLm11bHRpU2VsZWN0LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm11bHRpU2VsZWN0IiwgdGhpcy4kb25NdWx0aVNlbGVjdCk7CiAgICAgICAgc2Vzc2lvbi5tdWx0aVNlbGVjdC5yZW1vdmVFdmVudExpc3RlbmVyKCJzaW5nbGVTZWxlY3QiLCB0aGlzLiRvblNpbmdsZVNlbGVjdCk7CiAgICB9CgogICAgc2Vzc2lvbi5tdWx0aVNlbGVjdC5vbigiYWRkUmFuZ2UiLCB0aGlzLiRvbkFkZFJhbmdlKTsKICAgIHNlc3Npb24ubXVsdGlTZWxlY3Qub24oInJlbW92ZVJhbmdlIiwgdGhpcy4kb25SZW1vdmVSYW5nZSk7CiAgICBzZXNzaW9uLm11bHRpU2VsZWN0Lm9uKCJtdWx0aVNlbGVjdCIsIHRoaXMuJG9uTXVsdGlTZWxlY3QpOwogICAgc2Vzc2lvbi5tdWx0aVNlbGVjdC5vbigic2luZ2xlU2VsZWN0IiwgdGhpcy4kb25TaW5nbGVTZWxlY3QpOwoKICAgIGlmICh0aGlzLmluTXVsdGlTZWxlY3RNb2RlICE9IHNlc3Npb24uc2VsZWN0aW9uLmluTXVsdGlTZWxlY3RNb2RlKSB7CiAgICAgICAgaWYgKHNlc3Npb24uc2VsZWN0aW9uLmluTXVsdGlTZWxlY3RNb2RlKQogICAgICAgICAgICB0aGlzLiRvbk11bHRpU2VsZWN0KCk7CiAgICAgICAgZWxzZQogICAgICAgICAgICB0aGlzLiRvblNpbmdsZVNlbGVjdCgpOwogICAgfQp9OwpmdW5jdGlvbiBNdWx0aVNlbGVjdChlZGl0b3IpIHsKICAgIGVkaXRvci4kb25BZGRSYW5nZSA9IGVkaXRvci4kb25BZGRSYW5nZS5iaW5kKGVkaXRvcik7CiAgICBlZGl0b3IuJG9uUmVtb3ZlUmFuZ2UgPSBlZGl0b3IuJG9uUmVtb3ZlUmFuZ2UuYmluZChlZGl0b3IpOwogICAgZWRpdG9yLiRvbk11bHRpU2VsZWN0ID0gZWRpdG9yLiRvbk11bHRpU2VsZWN0LmJpbmQoZWRpdG9yKTsKICAgIGVkaXRvci4kb25TaW5nbGVTZWxlY3QgPSBlZGl0b3IuJG9uU2luZ2xlU2VsZWN0LmJpbmQoZWRpdG9yKTsKCiAgICBleHBvcnRzLm9uU2Vzc2lvbkNoYW5nZS5jYWxsKGVkaXRvciwgZWRpdG9yKTsKICAgIGVkaXRvci5vbigiY2hhbmdlU2Vzc2lvbiIsIGV4cG9ydHMub25TZXNzaW9uQ2hhbmdlLmJpbmQoZWRpdG9yKSk7CgogICAgZWRpdG9yLm9uKCJtb3VzZWRvd24iLCBvbk1vdXNlRG93bik7CiAgICBlZGl0b3IuY29tbWFuZHMuYWRkQ29tbWFuZHMoY29tbWFuZHMuZGVmYXVsdENvbW1hbmRzKTsKCiAgICBhZGRBbHRDdXJzb3JMaXN0ZW5lcnMoZWRpdG9yKTsKfQoKZnVuY3Rpb24gYWRkQWx0Q3Vyc29yTGlzdGVuZXJzKGVkaXRvcil7CiAgICB2YXIgZWwgPSBlZGl0b3IudGV4dElucHV0LmdldEVsZW1lbnQoKTsKICAgIHZhciBhbHRDdXJzb3IgPSBmYWxzZTsKICAgIHZhciBjb250ZW50RWwgPSBlZGl0b3IucmVuZGVyZXIuY29udGVudDsKICAgIGV2ZW50LmFkZExpc3RlbmVyKGVsLCAia2V5ZG93biIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICBpZiAoZS5rZXlDb2RlID09IDE4ICYmICEoZS5jdHJsS2V5IHx8IGUuc2hpZnRLZXkgfHwgZS5tZXRhS2V5KSkgewogICAgICAgICAgICBpZiAoIWFsdEN1cnNvcikgewogICAgICAgICAgICAgICAgY29udGVudEVsLnN0eWxlLmN1cnNvciA9ICJjcm9zc2hhaXIiOwogICAgICAgICAgICAgICAgYWx0Q3Vyc29yID0gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoYWx0Q3Vyc29yKSB7CiAgICAgICAgICAgIGNvbnRlbnRFbC5zdHlsZS5jdXJzb3IgPSAiIjsKICAgICAgICB9CiAgICB9KTsKCiAgICBldmVudC5hZGRMaXN0ZW5lcihlbCwgImtleXVwIiwgcmVzZXQpOwogICAgZXZlbnQuYWRkTGlzdGVuZXIoZWwsICJibHVyIiwgcmVzZXQpOwogICAgZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgICAgaWYgKGFsdEN1cnNvcikgewogICAgICAgICAgICBjb250ZW50RWwuc3R5bGUuY3Vyc29yID0gIiI7CiAgICAgICAgICAgIGFsdEN1cnNvciA9IGZhbHNlOwogICAgICAgIH0KICAgIH0KfQoKZXhwb3J0cy5NdWx0aVNlbGVjdCA9IE11bHRpU2VsZWN0OwoKfSk7CgphY2UuZGVmaW5lKCdhY2UvcmFuZ2VfbGlzdCcsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKCnZhciBSYW5nZUxpc3QgPSBmdW5jdGlvbigpIHsKICAgIHRoaXMucmFuZ2VzID0gW107Cn07CgooZnVuY3Rpb24oKSB7CiAgICB0aGlzLmNvbXBhcmVQb2ludHMgPSBmdW5jdGlvbihwMSwgcDIpIHsKICAgICAgICByZXR1cm4gcDEucm93IC0gcDIucm93IHx8IHAxLmNvbHVtbiAtIHAyLmNvbHVtbjsKICAgIH07CgogICAgdGhpcy5wb2ludEluZGV4ID0gZnVuY3Rpb24ocG9zLCBzdGFydEluZGV4KSB7CiAgICAgICAgdmFyIGxpc3QgPSB0aGlzLnJhbmdlczsKCiAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0SW5kZXggfHwgMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIHJhbmdlID0gbGlzdFtpXTsKICAgICAgICAgICAgdmFyIGNtcCA9IHRoaXMuY29tcGFyZVBvaW50cyhwb3MsIHJhbmdlLmVuZCk7CgogICAgICAgICAgICBpZiAoY21wID4gMCkKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICBpZiAoY21wID09IDApCiAgICAgICAgICAgICAgICByZXR1cm4gaTsKICAgICAgICAgICAgY21wID0gdGhpcy5jb21wYXJlUG9pbnRzKHBvcywgcmFuZ2Uuc3RhcnQpOwogICAgICAgICAgICBpZiAoY21wID49IDApCiAgICAgICAgICAgICAgICByZXR1cm4gaTsKCiAgICAgICAgICAgIHJldHVybiAtaS0xOwogICAgICAgIH0KICAgICAgICByZXR1cm4gLWkgLSAxOwogICAgfTsKCiAgICB0aGlzLmFkZCA9IGZ1bmN0aW9uKHJhbmdlKSB7CiAgICAgICAgdmFyIHN0YXJ0SW5kZXggPSB0aGlzLnBvaW50SW5kZXgocmFuZ2Uuc3RhcnQpOwogICAgICAgIGlmIChzdGFydEluZGV4IDwgMCkKICAgICAgICAgICAgc3RhcnRJbmRleCA9IC1zdGFydEluZGV4IC0gMTsKCiAgICAgICAgdmFyIGVuZEluZGV4ID0gdGhpcy5wb2ludEluZGV4KHJhbmdlLmVuZCwgc3RhcnRJbmRleCk7CgogICAgICAgIGlmIChlbmRJbmRleCA8IDApCiAgICAgICAgICAgIGVuZEluZGV4ID0gLWVuZEluZGV4IC0gMTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIGVuZEluZGV4Kys7CgogICAgICAgIHJldHVybiB0aGlzLnJhbmdlcy5zcGxpY2Uoc3RhcnRJbmRleCwgZW5kSW5kZXggLSBzdGFydEluZGV4LCByYW5nZSk7CiAgICB9OwoKICAgIHRoaXMuYWRkTGlzdCA9IGZ1bmN0aW9uKGxpc3QpIHsKICAgICAgICB2YXIgcmVtb3ZlZCA9IFtdOwogICAgICAgIGZvciAodmFyIGkgPSBsaXN0Lmxlbmd0aDsgaS0tOyApIHsKICAgICAgICAgICAgcmVtb3ZlZC5wdXNoLmNhbGwocmVtb3ZlZCwgdGhpcy5hZGQobGlzdFtpXSkpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmVtb3ZlZDsKICAgIH07CgogICAgdGhpcy5zdWJzdHJhY3RQb2ludCA9IGZ1bmN0aW9uKHBvcykgewogICAgICAgIHZhciBpID0gdGhpcy5wb2ludEluZGV4KHBvcyk7CgogICAgICAgIGlmIChpID49IDApCiAgICAgICAgICAgIHJldHVybiB0aGlzLnJhbmdlcy5zcGxpY2UoaSwgMSk7CiAgICB9OwogICAgdGhpcy5tZXJnZSA9IGZ1bmN0aW9uKCkgewogICAgICAgIHZhciByZW1vdmVkID0gW107CiAgICAgICAgdmFyIGxpc3QgPSB0aGlzLnJhbmdlczsKICAgICAgICB2YXIgbmV4dCA9IGxpc3RbMF0sIHJhbmdlOwogICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICByYW5nZSA9IG5leHQ7CiAgICAgICAgICAgIG5leHQgPSBsaXN0W2ldOwogICAgICAgICAgICB2YXIgY21wID0gdGhpcy5jb21wYXJlUG9pbnRzKHJhbmdlLmVuZCwgbmV4dC5zdGFydCk7CiAgICAgICAgICAgIGlmIChjbXAgPCAwKQogICAgICAgICAgICAgICAgY29udGludWU7CgogICAgICAgICAgICBpZiAoY21wID09IDAgJiYgIShyYW5nZS5pc0VtcHR5KCkgfHwgbmV4dC5pc0VtcHR5KCkpKQogICAgICAgICAgICAgICAgY29udGludWU7CgogICAgICAgICAgICBpZiAodGhpcy5jb21wYXJlUG9pbnRzKHJhbmdlLmVuZCwgbmV4dC5lbmQpIDwgMCkgewogICAgICAgICAgICAgICAgcmFuZ2UuZW5kLnJvdyA9IG5leHQuZW5kLnJvdzsKICAgICAgICAgICAgICAgIHJhbmdlLmVuZC5jb2x1bW4gPSBuZXh0LmVuZC5jb2x1bW47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGxpc3Quc3BsaWNlKGksIDEpOwogICAgICAgICAgICByZW1vdmVkLnB1c2gobmV4dCk7CiAgICAgICAgICAgIG5leHQgPSByYW5nZTsKICAgICAgICAgICAgaS0tOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlbW92ZWQ7CiAgICB9OwoKICAgIHRoaXMuY29udGFpbnMgPSBmdW5jdGlvbihyb3csIGNvbHVtbikgewogICAgICAgIHJldHVybiB0aGlzLnBvaW50SW5kZXgoe3Jvdzogcm93LCBjb2x1bW46IGNvbHVtbn0pID49IDA7CiAgICB9OwoKICAgIHRoaXMuY29udGFpbnNQb2ludCA9IGZ1bmN0aW9uKHBvcykgewogICAgICAgIHJldHVybiB0aGlzLnBvaW50SW5kZXgocG9zKSA+PSAwOwogICAgfTsKCiAgICB0aGlzLnJhbmdlQXRQb2ludCA9IGZ1bmN0aW9uKHBvcykgewogICAgICAgIHZhciBpID0gdGhpcy5wb2ludEluZGV4KHBvcyk7CiAgICAgICAgaWYgKGkgPj0gMCkKICAgICAgICAgICAgcmV0dXJuIHRoaXMucmFuZ2VzW2ldOwogICAgfTsKCgogICAgdGhpcy5jbGlwUm93cyA9IGZ1bmN0aW9uKHN0YXJ0Um93LCBlbmRSb3cpIHsKICAgICAgICB2YXIgbGlzdCA9IHRoaXMucmFuZ2VzOwogICAgICAgIGlmIChsaXN0WzBdLnN0YXJ0LnJvdyA+IGVuZFJvdyB8fCBsaXN0W2xpc3QubGVuZ3RoIC0gMV0uc3RhcnQucm93IDwgc3RhcnRSb3cpCiAgICAgICAgICAgIHJldHVybiBbXTsKCiAgICAgICAgdmFyIHN0YXJ0SW5kZXggPSB0aGlzLnBvaW50SW5kZXgoe3Jvdzogc3RhcnRSb3csIGNvbHVtbjogMH0pOwogICAgICAgIGlmIChzdGFydEluZGV4IDwgMCkKICAgICAgICAgICAgc3RhcnRJbmRleCA9IC1zdGFydEluZGV4IC0gMTsKICAgICAgICB2YXIgZW5kSW5kZXggPSB0aGlzLnBvaW50SW5kZXgoe3JvdzogZW5kUm93LCBjb2x1bW46IDB9LCBzdGFydEluZGV4KTsKICAgICAgICBpZiAoZW5kSW5kZXggPCAwKQogICAgICAgICAgICBlbmRJbmRleCA9IC1lbmRJbmRleCAtIDE7CgogICAgICAgIHZhciBjbGlwcGVkID0gW107CiAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0SW5kZXg7IGkgPCBlbmRJbmRleDsgaSsrKSB7CiAgICAgICAgICAgIGNsaXBwZWQucHVzaChsaXN0W2ldKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGNsaXBwZWQ7CiAgICB9OwoKICAgIHRoaXMucmVtb3ZlQWxsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmFuZ2VzLnNwbGljZSgwLCB0aGlzLnJhbmdlcy5sZW5ndGgpOwogICAgfTsKCiAgICB0aGlzLmF0dGFjaCA9IGZ1bmN0aW9uKHNlc3Npb24pIHsKICAgICAgICBpZiAodGhpcy5zZXNzaW9uKQogICAgICAgICAgICB0aGlzLmRldGFjaCgpOwoKICAgICAgICB0aGlzLnNlc3Npb24gPSBzZXNzaW9uOwogICAgICAgIHRoaXMub25DaGFuZ2UgPSB0aGlzLiRvbkNoYW5nZS5iaW5kKHRoaXMpOwoKICAgICAgICB0aGlzLnNlc3Npb24ub24oJ2NoYW5nZScsIHRoaXMub25DaGFuZ2UpOwogICAgfTsKCiAgICB0aGlzLmRldGFjaCA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmICghdGhpcy5zZXNzaW9uKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgdGhpcy5zZXNzaW9uLnJlbW92ZUxpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLm9uQ2hhbmdlKTsKICAgICAgICB0aGlzLnNlc3Npb24gPSBudWxsOwogICAgfTsKCiAgICB0aGlzLiRvbkNoYW5nZSA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICB2YXIgY2hhbmdlUmFuZ2UgPSBlLmRhdGEucmFuZ2U7CiAgICAgICAgaWYgKGUuZGF0YS5hY3Rpb25bMF0gPT0gImkiKXsKICAgICAgICAgICAgdmFyIHN0YXJ0ID0gY2hhbmdlUmFuZ2Uuc3RhcnQ7CiAgICAgICAgICAgIHZhciBlbmQgPSBjaGFuZ2VSYW5nZS5lbmQ7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIGVuZCA9IGNoYW5nZVJhbmdlLnN0YXJ0OwogICAgICAgICAgICB2YXIgc3RhcnQgPSBjaGFuZ2VSYW5nZS5lbmQ7CiAgICAgICAgfQogICAgICAgIHZhciBzdGFydFJvdyA9IHN0YXJ0LnJvdzsKICAgICAgICB2YXIgZW5kUm93ID0gZW5kLnJvdzsKICAgICAgICB2YXIgbGluZURpZiA9IGVuZFJvdyAtIHN0YXJ0Um93OwoKICAgICAgICB2YXIgY29sRGlmZiA9IC1zdGFydC5jb2x1bW4gKyBlbmQuY29sdW1uOwogICAgICAgIHZhciByYW5nZXMgPSB0aGlzLnJhbmdlczsKCiAgICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSByYW5nZXMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7CiAgICAgICAgICAgIHZhciByID0gcmFuZ2VzW2ldOwogICAgICAgICAgICBpZiAoci5lbmQucm93IDwgc3RhcnRSb3cpCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgaWYgKHIuc3RhcnQucm93ID4gc3RhcnRSb3cpCiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGlmIChyLnN0YXJ0LnJvdyA9PSBzdGFydFJvdyAmJiByLnN0YXJ0LmNvbHVtbiA+PSBzdGFydC5jb2x1bW4gKSB7CiAgICAgICAgICAgICAgICByLnN0YXJ0LmNvbHVtbiArPSBjb2xEaWZmOwogICAgICAgICAgICAgICAgci5zdGFydC5yb3cgKz0gbGluZURpZjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoci5lbmQucm93ID09IHN0YXJ0Um93ICYmIHIuZW5kLmNvbHVtbiA+PSAgc3RhcnQuY29sdW1uKSB7CiAgICAgICAgICAgICAgICByLmVuZC5jb2x1bW4gKz0gY29sRGlmZjsKICAgICAgICAgICAgICAgIHIuZW5kLnJvdyArPSBsaW5lRGlmOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAobGluZURpZiAhPSAwICYmIGkgPCBuKSB7CiAgICAgICAgICAgIGZvciAoOyBpIDwgbjsgaSsrKSB7CiAgICAgICAgICAgICAgICB2YXIgciA9IHJhbmdlc1tpXTsKICAgICAgICAgICAgICAgIHIuc3RhcnQucm93ICs9IGxpbmVEaWY7CiAgICAgICAgICAgICAgICByLmVuZC5yb3cgKz0gbGluZURpZjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH07Cgp9KS5jYWxsKFJhbmdlTGlzdC5wcm90b3R5cGUpOwoKZXhwb3J0cy5SYW5nZUxpc3QgPSBSYW5nZUxpc3Q7Cn0pOwoKYWNlLmRlZmluZSgnYWNlL21vdXNlL211bHRpX3NlbGVjdF9oYW5kbGVyJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL2V2ZW50J10sIGZ1bmN0aW9uKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkgewoKdmFyIGV2ZW50ID0gcmVxdWlyZSgiLi4vbGliL2V2ZW50Iik7CmZ1bmN0aW9uIGlzU2FtZVBvaW50KHAxLCBwMikgewogICAgcmV0dXJuIHAxLnJvdyA9PSBwMi5yb3cgJiYgcDEuY29sdW1uID09IHAyLmNvbHVtbjsKfQoKZnVuY3Rpb24gb25Nb3VzZURvd24oZSkgewogICAgdmFyIGV2ID0gZS5kb21FdmVudDsKICAgIHZhciBhbHQgPSBldi5hbHRLZXk7CiAgICB2YXIgc2hpZnQgPSBldi5zaGlmdEtleTsKICAgIHZhciBjdHJsID0gZS5nZXRBY2NlbEtleSgpOwogICAgdmFyIGJ1dHRvbiA9IGUuZ2V0QnV0dG9uKCk7CgogICAgaWYgKGUuZWRpdG9yLmluTXVsdGlTZWxlY3RNb2RlICYmIGJ1dHRvbiA9PSAyKSB7CiAgICAgICAgZS5lZGl0b3IudGV4dElucHV0Lm9uQ29udGV4dE1lbnUoZS5kb21FdmVudCk7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgCiAgICBpZiAoIWN0cmwgJiYgIWFsdCkgewogICAgICAgIGlmIChidXR0b24gPT0gMCAmJiBlLmVkaXRvci5pbk11bHRpU2VsZWN0TW9kZSkKICAgICAgICAgICAgZS5lZGl0b3IuZXhpdE11bHRpU2VsZWN0TW9kZSgpOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgZWRpdG9yID0gZS5lZGl0b3I7CiAgICB2YXIgc2VsZWN0aW9uID0gZWRpdG9yLnNlbGVjdGlvbjsKICAgIHZhciBpc011bHRpU2VsZWN0ID0gZWRpdG9yLmluTXVsdGlTZWxlY3RNb2RlOwogICAgdmFyIHBvcyA9IGUuZ2V0RG9jdW1lbnRQb3NpdGlvbigpOwogICAgdmFyIGN1cnNvciA9IHNlbGVjdGlvbi5nZXRDdXJzb3IoKTsKICAgIHZhciBpblNlbGVjdGlvbiA9IGUuaW5TZWxlY3Rpb24oKSB8fCAoc2VsZWN0aW9uLmlzRW1wdHkoKSAmJiBpc1NhbWVQb2ludChwb3MsIGN1cnNvcikpOwoKCiAgICB2YXIgbW91c2VYID0gZS54LCBtb3VzZVkgPSBlLnk7CiAgICB2YXIgb25Nb3VzZVNlbGVjdGlvbiA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICBtb3VzZVggPSBlLmNsaWVudFg7CiAgICAgICAgbW91c2VZID0gZS5jbGllbnRZOwogICAgfTsKCiAgICB2YXIgYmxvY2tTZWxlY3QgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgbmV3Q3Vyc29yID0gZWRpdG9yLnJlbmRlcmVyLnBpeGVsVG9TY3JlZW5Db29yZGluYXRlcyhtb3VzZVgsIG1vdXNlWSk7CiAgICAgICAgdmFyIGN1cnNvciA9IHNlc3Npb24uc2NyZWVuVG9Eb2N1bWVudFBvc2l0aW9uKG5ld0N1cnNvci5yb3csIG5ld0N1cnNvci5jb2x1bW4pOwoKICAgICAgICBpZiAoaXNTYW1lUG9pbnQoc2NyZWVuQ3Vyc29yLCBuZXdDdXJzb3IpCiAgICAgICAgICAgICYmIGlzU2FtZVBvaW50KGN1cnNvciwgc2VsZWN0aW9uLnNlbGVjdGlvbkxlYWQpKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgc2NyZWVuQ3Vyc29yID0gbmV3Q3Vyc29yOwoKICAgICAgICBlZGl0b3Iuc2VsZWN0aW9uLm1vdmVDdXJzb3JUb1Bvc2l0aW9uKGN1cnNvcik7CiAgICAgICAgZWRpdG9yLnNlbGVjdGlvbi5jbGVhclNlbGVjdGlvbigpOwogICAgICAgIGVkaXRvci5yZW5kZXJlci5zY3JvbGxDdXJzb3JJbnRvVmlldygpOwoKICAgICAgICBlZGl0b3IucmVtb3ZlU2VsZWN0aW9uTWFya2VycyhyZWN0U2VsKTsKICAgICAgICByZWN0U2VsID0gc2VsZWN0aW9uLnJlY3Rhbmd1bGFyUmFuZ2VCbG9jayhzY3JlZW5DdXJzb3IsIHNjcmVlbkFuY2hvcik7CiAgICAgICAgcmVjdFNlbC5mb3JFYWNoKGVkaXRvci5hZGRTZWxlY3Rpb25NYXJrZXIsIGVkaXRvcik7CiAgICAgICAgZWRpdG9yLnVwZGF0ZVNlbGVjdGlvbk1hcmtlcnMoKTsKICAgIH07CiAgICAKICAgIHZhciBzZXNzaW9uID0gZWRpdG9yLnNlc3Npb247CiAgICB2YXIgc2NyZWVuQW5jaG9yID0gZWRpdG9yLnJlbmRlcmVyLnBpeGVsVG9TY3JlZW5Db29yZGluYXRlcyhtb3VzZVgsIG1vdXNlWSk7CiAgICB2YXIgc2NyZWVuQ3Vyc29yID0gc2NyZWVuQW5jaG9yOwoKICAgIAoKICAgIGlmIChjdHJsICYmICFzaGlmdCAmJiAhYWx0ICYmIGJ1dHRvbiA9PSAwKSB7CiAgICAgICAgaWYgKCFpc011bHRpU2VsZWN0ICYmIGluU2VsZWN0aW9uKQogICAgICAgICAgICByZXR1cm47IC8vIGRyYWdnaW5nCgogICAgICAgIGlmICghaXNNdWx0aVNlbGVjdCkgewogICAgICAgICAgICB2YXIgcmFuZ2UgPSBzZWxlY3Rpb24udG9PcmllbnRlZFJhbmdlKCk7CiAgICAgICAgICAgIGVkaXRvci5hZGRTZWxlY3Rpb25NYXJrZXIocmFuZ2UpOwogICAgICAgIH0KCiAgICAgICAgdmFyIG9sZFJhbmdlID0gc2VsZWN0aW9uLnJhbmdlTGlzdC5yYW5nZUF0UG9pbnQocG9zKTsKCiAgICAgICAgZXZlbnQuY2FwdHVyZShlZGl0b3IuY29udGFpbmVyLCBmdW5jdGlvbigpe30sIGZ1bmN0aW9uKCkgewogICAgICAgICAgICB2YXIgdG1wU2VsID0gc2VsZWN0aW9uLnRvT3JpZW50ZWRSYW5nZSgpOwoKICAgICAgICAgICAgaWYgKG9sZFJhbmdlICYmIHRtcFNlbC5pc0VtcHR5KCkgJiYgaXNTYW1lUG9pbnQob2xkUmFuZ2UuY3Vyc29yLCB0bXBTZWwuY3Vyc29yKSkKICAgICAgICAgICAgICAgIHNlbGVjdGlvbi5zdWJzdHJhY3RQb2ludCh0bXBTZWwuY3Vyc29yKTsKICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBpZiAocmFuZ2UpIHsKICAgICAgICAgICAgICAgICAgICBlZGl0b3IucmVtb3ZlU2VsZWN0aW9uTWFya2VyKHJhbmdlKTsKICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb24uYWRkUmFuZ2UocmFuZ2UpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgc2VsZWN0aW9uLmFkZFJhbmdlKHRtcFNlbCk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICB9IGVsc2UgaWYgKCFzaGlmdCAmJiBhbHQgJiYgYnV0dG9uID09IDApIHsKICAgICAgICBlLnN0b3AoKTsKCiAgICAgICAgaWYgKGlzTXVsdGlTZWxlY3QgJiYgIWN0cmwpCiAgICAgICAgICAgIHNlbGVjdGlvbi50b1NpbmdsZVJhbmdlKCk7CiAgICAgICAgZWxzZSBpZiAoIWlzTXVsdGlTZWxlY3QgJiYgY3RybCkKICAgICAgICAgICAgc2VsZWN0aW9uLmFkZFJhbmdlKCk7CgogICAgICAgIHNlbGVjdGlvbi5tb3ZlQ3Vyc29yVG9Qb3NpdGlvbihwb3MpOwogICAgICAgIHNlbGVjdGlvbi5jbGVhclNlbGVjdGlvbigpOwoKICAgICAgICB2YXIgcmVjdFNlbCA9IFtdOwoKICAgICAgICB2YXIgb25Nb3VzZVNlbGVjdGlvbkVuZCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcklkKTsKICAgICAgICAgICAgZWRpdG9yLnJlbW92ZVNlbGVjdGlvbk1hcmtlcnMocmVjdFNlbCk7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVjdFNlbC5sZW5ndGg7IGkrKykKICAgICAgICAgICAgICAgIHNlbGVjdGlvbi5hZGRSYW5nZShyZWN0U2VsW2ldKTsKICAgICAgICB9OwoKICAgICAgICB2YXIgb25TZWxlY3Rpb25JbnRlcnZhbCA9IGJsb2NrU2VsZWN0OwoKICAgICAgICBldmVudC5jYXB0dXJlKGVkaXRvci5jb250YWluZXIsIG9uTW91c2VTZWxlY3Rpb24sIG9uTW91c2VTZWxlY3Rpb25FbmQpOwogICAgICAgIHZhciB0aW1lcklkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7b25TZWxlY3Rpb25JbnRlcnZhbCgpO30sIDIwKTsKCiAgICAgICAgcmV0dXJuIGUucHJldmVudERlZmF1bHQoKTsKICAgIH0KfQoKCmV4cG9ydHMub25Nb3VzZURvd24gPSBvbk1vdXNlRG93bjsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL2NvbW1hbmRzL211bHRpX3NlbGVjdF9jb21tYW5kcycsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL2tleWJvYXJkL2hhc2hfaGFuZGxlciddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKZXhwb3J0cy5kZWZhdWx0Q29tbWFuZHMgPSBbewogICAgbmFtZTogImFkZEN1cnNvckFib3ZlIiwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3Iuc2VsZWN0TW9yZUxpbmVzKC0xKTsgfSwKICAgIGJpbmRLZXk6IHt3aW46ICJDdHJsLUFsdC1VcCIsIG1hYzogIkN0cmwtQWx0LVVwIn0sCiAgICByZWFkb25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiYWRkQ3Vyc29yQmVsb3ciLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5zZWxlY3RNb3JlTGluZXMoMSk7IH0sCiAgICBiaW5kS2V5OiB7d2luOiAiQ3RybC1BbHQtRG93biIsIG1hYzogIkN0cmwtQWx0LURvd24ifSwKICAgIHJlYWRvbmx5OiB0cnVlCn0sIHsKICAgIG5hbWU6ICJhZGRDdXJzb3JBYm92ZVNraXBDdXJyZW50IiwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3Iuc2VsZWN0TW9yZUxpbmVzKC0xLCB0cnVlKTsgfSwKICAgIGJpbmRLZXk6IHt3aW46ICJDdHJsLUFsdC1TaGlmdC1VcCIsIG1hYzogIkN0cmwtQWx0LVNoaWZ0LVVwIn0sCiAgICByZWFkb25seTogdHJ1ZQp9LCB7CiAgICBuYW1lOiAiYWRkQ3Vyc29yQmVsb3dTa2lwQ3VycmVudCIsCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnNlbGVjdE1vcmVMaW5lcygxLCB0cnVlKTsgfSwKICAgIGJpbmRLZXk6IHt3aW46ICJDdHJsLUFsdC1TaGlmdC1Eb3duIiwgbWFjOiAiQ3RybC1BbHQtU2hpZnQtRG93biJ9LAogICAgcmVhZG9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNlbGVjdE1vcmVCZWZvcmUiLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5zZWxlY3RNb3JlKC0xKTsgfSwKICAgIGJpbmRLZXk6IHt3aW46ICJDdHJsLUFsdC1MZWZ0IiwgbWFjOiAiQ3RybC1BbHQtTGVmdCJ9LAogICAgcmVhZG9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNlbGVjdE1vcmVBZnRlciIsCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnNlbGVjdE1vcmUoMSk7IH0sCiAgICBiaW5kS2V5OiB7d2luOiAiQ3RybC1BbHQtUmlnaHQiLCBtYWM6ICJDdHJsLUFsdC1SaWdodCJ9LAogICAgcmVhZG9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNlbGVjdE5leHRCZWZvcmUiLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5zZWxlY3RNb3JlKC0xLCB0cnVlKTsgfSwKICAgIGJpbmRLZXk6IHt3aW46ICJDdHJsLUFsdC1TaGlmdC1MZWZ0IiwgbWFjOiAiQ3RybC1BbHQtU2hpZnQtTGVmdCJ9LAogICAgcmVhZG9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNlbGVjdE5leHRBZnRlciIsCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLnNlbGVjdE1vcmUoMSwgdHJ1ZSk7IH0sCiAgICBiaW5kS2V5OiB7d2luOiAiQ3RybC1BbHQtU2hpZnQtUmlnaHQiLCBtYWM6ICJDdHJsLUFsdC1TaGlmdC1SaWdodCJ9LAogICAgcmVhZG9ubHk6IHRydWUKfSwgewogICAgbmFtZTogInNwbGl0SW50b0xpbmVzIiwKICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0b3IubXVsdGlTZWxlY3Quc3BsaXRJbnRvTGluZXMoKTsgfSwKICAgIGJpbmRLZXk6IHt3aW46ICJDdHJsLUFsdC1MIiwgbWFjOiAiQ3RybC1BbHQtTCJ9LAogICAgcmVhZG9ubHk6IHRydWUKfSwgewogICAgbmFtZTogImFsaWduQ3Vyc29ycyIsCiAgICBleGVjOiBmdW5jdGlvbihlZGl0b3IpIHsgZWRpdG9yLmFsaWduQ3Vyc29ycygpOyB9LAogICAgYmluZEtleToge3dpbjogIkN0cmwtQWx0LUEiLCBtYWM6ICJDdHJsLUFsdC1BIn0KfV07CmV4cG9ydHMubXVsdGlTZWxlY3RDb21tYW5kcyA9IFt7CiAgICBuYW1lOiAic2luZ2xlU2VsZWN0aW9uIiwKICAgIGJpbmRLZXk6ICJlc2MiLAogICAgZXhlYzogZnVuY3Rpb24oZWRpdG9yKSB7IGVkaXRvci5leGl0TXVsdGlTZWxlY3RNb2RlKCk7IH0sCiAgICByZWFkb25seTogdHJ1ZSwKICAgIGlzQXZhaWxhYmxlOiBmdW5jdGlvbihlZGl0b3IpIHtyZXR1cm4gZWRpdG9yICYmIGVkaXRvci5pbk11bHRpU2VsZWN0TW9kZX0KfV07Cgp2YXIgSGFzaEhhbmRsZXIgPSByZXF1aXJlKCIuLi9rZXlib2FyZC9oYXNoX2hhbmRsZXIiKS5IYXNoSGFuZGxlcjsKZXhwb3J0cy5rZXlib2FyZEhhbmRsZXIgPSBuZXcgSGFzaEhhbmRsZXIoZXhwb3J0cy5tdWx0aVNlbGVjdENvbW1hbmRzKTsKCn0pOwoKYWNlLmRlZmluZSgnYWNlL3dvcmtlci93b3JrZXJfY2xpZW50JywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvbGliL29vcCcsICdhY2UvbGliL2V2ZW50X2VtaXR0ZXInLCAnYWNlL2NvbmZpZyddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgb29wID0gcmVxdWlyZSgiLi4vbGliL29vcCIpOwp2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgiLi4vbGliL2V2ZW50X2VtaXR0ZXIiKS5FdmVudEVtaXR0ZXI7CnZhciBjb25maWcgPSByZXF1aXJlKCIuLi9jb25maWciKTsKCnZhciBXb3JrZXJDbGllbnQgPSBmdW5jdGlvbih0b3BMZXZlbE5hbWVzcGFjZXMsIG1vZCwgY2xhc3NuYW1lKSB7CiAgICB0aGlzLmNoYW5nZUxpc3RlbmVyID0gdGhpcy5jaGFuZ2VMaXN0ZW5lci5iaW5kKHRoaXMpOwogICAgdGhpcy5vbk1lc3NhZ2UgPSB0aGlzLm9uTWVzc2FnZS5iaW5kKHRoaXMpOwogICAgdGhpcy5vbkVycm9yID0gdGhpcy5vbkVycm9yLmJpbmQodGhpcyk7CgogICAgdmFyIHdvcmtlclVybDsKICAgIGlmIChjb25maWcuZ2V0KCJwYWNrYWdlZCIpKSB7CiAgICAgICAgd29ya2VyVXJsID0gY29uZmlnLm1vZHVsZVVybChtb2QsICJ3b3JrZXIiKTsKICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIG5vcm1hbGl6ZVBhdGggPSB0aGlzLiRub3JtYWxpemVQYXRoOwogICAgICAgIGlmICh0eXBlb2YgcmVxdWlyZS5zdXBwb3J0cyAhPT0gInVuZGVmaW5lZCIgJiYgcmVxdWlyZS5zdXBwb3J0cy5pbmRleE9mKCJ1Y2pzMi1waW5mLTAiKSA+PSAwKSB7CiAgICAgICAgICAgIHdvcmtlclVybCA9IHJlcXVpcmUubmFtZVRvVXJsKCJhY2Uvd29ya2VyL3dvcmtlcl9zb3VyY2VtaW50Iik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgKHJlcXVpcmUubmFtZVRvVXJsICYmICFyZXF1aXJlLnRvVXJsKQogICAgICAgICAgICAgICAgcmVxdWlyZS50b1VybCA9IHJlcXVpcmUubmFtZVRvVXJsOwogICAgICAgICAgICB3b3JrZXJVcmwgPSBub3JtYWxpemVQYXRoKHJlcXVpcmUudG9VcmwoImFjZS93b3JrZXIvd29ya2VyIiwgbnVsbCwgIl8iKSk7CiAgICAgICAgfQoKICAgICAgICB2YXIgdGxucyA9IHt9OwogICAgICAgIHRvcExldmVsTmFtZXNwYWNlcy5mb3JFYWNoKGZ1bmN0aW9uKG5zKSB7CiAgICAgICAgICAgIHRsbnNbbnNdID0gbm9ybWFsaXplUGF0aChyZXF1aXJlLnRvVXJsKG5zLCBudWxsLCAiXyIpLnJlcGxhY2UoLy5qcyhcPy4qKT8kLywgIiIpKTsKICAgICAgICB9KTsKICAgIH0KCiAgICB0aGlzLiR3b3JrZXIgPSBuZXcgV29ya2VyKHdvcmtlclVybCk7CiAgICB0aGlzLiR3b3JrZXIucG9zdE1lc3NhZ2UoewogICAgICAgIGluaXQgOiB0cnVlLAogICAgICAgIHRsbnM6IHRsbnMsCiAgICAgICAgbW9kdWxlOiBtb2QsCiAgICAgICAgY2xhc3NuYW1lOiBjbGFzc25hbWUKICAgIH0pOwoKICAgIHRoaXMuY2FsbGJhY2tJZCA9IDE7CiAgICB0aGlzLmNhbGxiYWNrcyA9IHt9OwoKICAgIHRoaXMuJHdvcmtlci5vbmVycm9yID0gdGhpcy5vbkVycm9yOwogICAgdGhpcy4kd29ya2VyLm9ubWVzc2FnZSA9IHRoaXMub25NZXNzYWdlOwp9OwoKKGZ1bmN0aW9uKCl7CgogICAgb29wLmltcGxlbWVudCh0aGlzLCBFdmVudEVtaXR0ZXIpOwoKICAgIHRoaXMub25FcnJvciA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICB3aW5kb3cuY29uc29sZSAmJiBjb25zb2xlLmxvZyAmJiBjb25zb2xlLmxvZyhlKTsKICAgICAgICB0aHJvdyBlOwogICAgfTsKCiAgICB0aGlzLm9uTWVzc2FnZSA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICB2YXIgbXNnID0gZS5kYXRhOwogICAgICAgIHN3aXRjaChtc2cudHlwZSkgewogICAgICAgICAgICBjYXNlICJsb2ciOgogICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUgJiYgY29uc29sZS5sb2cgJiYgY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSwgbXNnLmRhdGEpOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlICJldmVudCI6CiAgICAgICAgICAgICAgICB0aGlzLl9lbWl0KG1zZy5uYW1lLCB7ZGF0YTogbXNnLmRhdGF9KTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAiY2FsbCI6CiAgICAgICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSB0aGlzLmNhbGxiYWNrc1ttc2cuaWRdOwogICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7CiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobXNnLmRhdGEpOwogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmNhbGxiYWNrc1ttc2cuaWRdOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgfTsKCiAgICB0aGlzLiRub3JtYWxpemVQYXRoID0gZnVuY3Rpb24ocGF0aCkgewogICAgICAgIGlmICghbG9jYXRpb24uaG9zdCkgLy8gbmVlZGVkIGZvciBmaWxlOi8vIHByb3RvY29sCiAgICAgICAgICAgIHJldHVybiBwYXRoOwogICAgICAgIHBhdGggPSBwYXRoLnJlcGxhY2UoL15bYS16XSs6XC9cL1teXC9dKy8sICIiKTsgLy8gUmVtb3ZlIGRvbWFpbiBuYW1lIGFuZCByZWJ1aWxkIGl0CiAgICAgICAgcGF0aCA9IGxvY2F0aW9uLnByb3RvY29sICsgIi8vIiArIGxvY2F0aW9uLmhvc3QKICAgICAgICAgICAgKyAocGF0aC5jaGFyQXQoMCkgPT0gIi8iID8gIiIgOiBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cL1teXC9dKiQvLCAiIikpCiAgICAgICAgICAgICsgIi8iICsgcGF0aC5yZXBsYWNlKC9eW1wvXSsvLCAiIik7CiAgICAgICAgcmV0dXJuIHBhdGg7CiAgICB9OwoKICAgIHRoaXMudGVybWluYXRlID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5fZW1pdCgidGVybWluYXRlIiwge30pOwogICAgICAgIHRoaXMuJHdvcmtlci50ZXJtaW5hdGUoKTsKICAgICAgICB0aGlzLiR3b3JrZXIgPSBudWxsOwogICAgICAgIHRoaXMuJGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCB0aGlzLmNoYW5nZUxpc3RlbmVyKTsKICAgICAgICB0aGlzLiRkb2MgPSBudWxsOwogICAgfTsKCiAgICB0aGlzLnNlbmQgPSBmdW5jdGlvbihjbWQsIGFyZ3MpIHsKICAgICAgICB0aGlzLiR3b3JrZXIucG9zdE1lc3NhZ2Uoe2NvbW1hbmQ6IGNtZCwgYXJnczogYXJnc30pOwogICAgfTsKCiAgICB0aGlzLmNhbGwgPSBmdW5jdGlvbihjbWQsIGFyZ3MsIGNhbGxiYWNrKSB7CiAgICAgICAgaWYgKGNhbGxiYWNrKSB7CiAgICAgICAgICAgIHZhciBpZCA9IHRoaXMuY2FsbGJhY2tJZCsrOwogICAgICAgICAgICB0aGlzLmNhbGxiYWNrc1tpZF0gPSBjYWxsYmFjazsKICAgICAgICAgICAgYXJncy5wdXNoKGlkKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5zZW5kKGNtZCwgYXJncyk7CiAgICB9OwoKICAgIHRoaXMuZW1pdCA9IGZ1bmN0aW9uKGV2ZW50LCBkYXRhKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgdGhpcy4kd29ya2VyLnBvc3RNZXNzYWdlKHtldmVudDogZXZlbnQsIGRhdGE6IHtkYXRhOiBkYXRhLmRhdGF9fSk7CiAgICAgICAgfQogICAgICAgIGNhdGNoKGV4KSB7fQogICAgfTsKCiAgICB0aGlzLmF0dGFjaFRvRG9jdW1lbnQgPSBmdW5jdGlvbihkb2MpIHsKICAgICAgICBpZih0aGlzLiRkb2MpCiAgICAgICAgICAgIHRoaXMudGVybWluYXRlKCk7CgogICAgICAgIHRoaXMuJGRvYyA9IGRvYzsKICAgICAgICB0aGlzLmNhbGwoInNldFZhbHVlIiwgW2RvYy5nZXRWYWx1ZSgpXSk7CiAgICAgICAgZG9jLm9uKCJjaGFuZ2UiLCB0aGlzLmNoYW5nZUxpc3RlbmVyKTsKICAgIH07CgogICAgdGhpcy5jaGFuZ2VMaXN0ZW5lciA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICBlLnJhbmdlID0gewogICAgICAgICAgICBzdGFydDogZS5kYXRhLnJhbmdlLnN0YXJ0LAogICAgICAgICAgICBlbmQ6IGUuZGF0YS5yYW5nZS5lbmQKICAgICAgICB9OwogICAgICAgIHRoaXMuZW1pdCgiY2hhbmdlIiwgZSk7CiAgICB9OwoKfSkuY2FsbChXb3JrZXJDbGllbnQucHJvdG90eXBlKTsKCgp2YXIgVUlXb3JrZXJDbGllbnQgPSBmdW5jdGlvbih0b3BMZXZlbE5hbWVzcGFjZXMsIG1vZCwgY2xhc3NuYW1lKSB7CiAgICB0aGlzLmNoYW5nZUxpc3RlbmVyID0gdGhpcy5jaGFuZ2VMaXN0ZW5lci5iaW5kKHRoaXMpOwogICAgdGhpcy5jYWxsYmFja0lkID0gMTsKICAgIHRoaXMuY2FsbGJhY2tzID0ge307CiAgICB0aGlzLm1lc3NhZ2VCdWZmZXIgPSBbXTsKCiAgICB2YXIgbWFpbiA9IG51bGw7CiAgICB2YXIgc2VuZGVyID0gT2JqZWN0LmNyZWF0ZShFdmVudEVtaXR0ZXIpOwogICAgdmFyIF9zZWxmID0gdGhpczsKCiAgICB0aGlzLiR3b3JrZXIgPSB7fQogICAgdGhpcy4kd29ya2VyLnBvc3RNZXNzYWdlID0gZnVuY3Rpb24oZSkgewogICAgICAgIF9zZWxmLm1lc3NhZ2VCdWZmZXIucHVzaChlKTsKICAgICAgICBtYWluICYmIHNldFRpbWVvdXQocHJvY2Vzc05leHQpOwogICAgfTsKCiAgICB2YXIgcHJvY2Vzc05leHQgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgbXNnID0gX3NlbGYubWVzc2FnZUJ1ZmZlci5zaGlmdCgpOwogICAgICAgIGlmIChtc2cuY29tbWFuZCkKICAgICAgICAgICAgbWFpblttc2cuY29tbWFuZF0uYXBwbHkobWFpbiwgbXNnLmFyZ3MpOwogICAgICAgIGVsc2UgaWYgKG1zZy5ldmVudCkKICAgICAgICAgICAgc2VuZGVyLl9lbWl0KG1zZy5ldmVudCwgbXNnLmRhdGEpOwogICAgfTsKCiAgICBzZW5kZXIucG9zdE1lc3NhZ2UgPSBmdW5jdGlvbihtc2cpIHsKICAgICAgICBfc2VsZi5vbk1lc3NhZ2Uoe2RhdGE6IG1zZ30pOwogICAgfTsKICAgIHNlbmRlci5jYWxsYmFjayA9IGZ1bmN0aW9uKGRhdGEsIGNhbGxiYWNrSWQpIHsKICAgICAgICB0aGlzLnBvc3RNZXNzYWdlKHt0eXBlOiAiY2FsbCIsIGlkOiBjYWxsYmFja0lkLCBkYXRhOiBkYXRhfSk7CiAgICB9OwogICAgc2VuZGVyLmVtaXQgPSBmdW5jdGlvbihuYW1lLCBkYXRhKSB7CiAgICAgICAgdGhpcy5wb3N0TWVzc2FnZSh7dHlwZTogImV2ZW50IiwgbmFtZTogbmFtZSwgZGF0YTogZGF0YX0pOwogICAgfTsKCiAgICByZXF1aXJlKFttb2RdLCBmdW5jdGlvbihNYWluKSB7CiAgICAgICAgbWFpbiA9IG5ldyBNYWluW2NsYXNzbmFtZV0oc2VuZGVyKTsKICAgICAgICB3aGlsZSAoX3NlbGYubWVzc2FnZUJ1ZmZlci5sZW5ndGgpCiAgICAgICAgICAgIHByb2Nlc3NOZXh0KCk7CiAgICB9KTsKfTsKClVJV29ya2VyQ2xpZW50LnByb3RvdHlwZSA9IFdvcmtlckNsaWVudC5wcm90b3R5cGU7CgpleHBvcnRzLlVJV29ya2VyQ2xpZW50ID0gVUlXb3JrZXJDbGllbnQ7CmV4cG9ydHMuV29ya2VyQ2xpZW50ID0gV29ya2VyQ2xpZW50OwoKfSk7CmFjZS5kZWZpbmUoJ2FjZS9wbGFjZWhvbGRlcicsIFsncmVxdWlyZScsICdleHBvcnRzJywgJ21vZHVsZScgLCAnYWNlL3JhbmdlJywgJ2FjZS9saWIvZXZlbnRfZW1pdHRlcicsICdhY2UvbGliL29vcCddLCBmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHsKCgp2YXIgUmFuZ2UgPSByZXF1aXJlKCIuL3JhbmdlIikuUmFuZ2U7CnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCIuL2xpYi9ldmVudF9lbWl0dGVyIikuRXZlbnRFbWl0dGVyOwp2YXIgb29wID0gcmVxdWlyZSgiLi9saWIvb29wIik7Cgp2YXIgUGxhY2VIb2xkZXIgPSBmdW5jdGlvbihzZXNzaW9uLCBsZW5ndGgsIHBvcywgb3RoZXJzLCBtYWluQ2xhc3MsIG90aGVyc0NsYXNzKSB7CiAgICB2YXIgX3NlbGYgPSB0aGlzOwogICAgdGhpcy5sZW5ndGggPSBsZW5ndGg7CiAgICB0aGlzLnNlc3Npb24gPSBzZXNzaW9uOwogICAgdGhpcy5kb2MgPSBzZXNzaW9uLmdldERvY3VtZW50KCk7CiAgICB0aGlzLm1haW5DbGFzcyA9IG1haW5DbGFzczsKICAgIHRoaXMub3RoZXJzQ2xhc3MgPSBvdGhlcnNDbGFzczsKICAgIHRoaXMuJG9uVXBkYXRlID0gdGhpcy5vblVwZGF0ZS5iaW5kKHRoaXMpOwogICAgdGhpcy5kb2Mub24oImNoYW5nZSIsIHRoaXMuJG9uVXBkYXRlKTsKICAgIHRoaXMuJG90aGVycyA9IG90aGVyczsKICAgIAogICAgdGhpcy4kb25DdXJzb3JDaGFuZ2UgPSBmdW5jdGlvbigpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICBfc2VsZi5vbkN1cnNvckNoYW5nZSgpOwogICAgICAgIH0pOwogICAgfTsKICAgIAogICAgdGhpcy4kcG9zID0gcG9zOwogICAgdmFyIHVuZG9TdGFjayA9IHNlc3Npb24uZ2V0VW5kb01hbmFnZXIoKS4kdW5kb1N0YWNrIHx8IHNlc3Npb24uZ2V0VW5kb01hbmFnZXIoKS4kdW5kb3N0YWNrIHx8IHtsZW5ndGg6IC0xfTsKICAgIHRoaXMuJHVuZG9TdGFja0RlcHRoID0gIHVuZG9TdGFjay5sZW5ndGg7CiAgICB0aGlzLnNldHVwKCk7CgogICAgc2Vzc2lvbi5zZWxlY3Rpb24ub24oImNoYW5nZUN1cnNvciIsIHRoaXMuJG9uQ3Vyc29yQ2hhbmdlKTsKfTsKCihmdW5jdGlvbigpIHsKCiAgICBvb3AuaW1wbGVtZW50KHRoaXMsIEV2ZW50RW1pdHRlcik7CiAgICB0aGlzLnNldHVwID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIF9zZWxmID0gdGhpczsKICAgICAgICB2YXIgZG9jID0gdGhpcy5kb2M7CiAgICAgICAgdmFyIHNlc3Npb24gPSB0aGlzLnNlc3Npb247CiAgICAgICAgdmFyIHBvcyA9IHRoaXMuJHBvczsKCiAgICAgICAgdGhpcy5wb3MgPSBkb2MuY3JlYXRlQW5jaG9yKHBvcy5yb3csIHBvcy5jb2x1bW4pOwogICAgICAgIHRoaXMubWFya2VySWQgPSBzZXNzaW9uLmFkZE1hcmtlcihuZXcgUmFuZ2UocG9zLnJvdywgcG9zLmNvbHVtbiwgcG9zLnJvdywgcG9zLmNvbHVtbiArIHRoaXMubGVuZ3RoKSwgdGhpcy5tYWluQ2xhc3MsIG51bGwsIGZhbHNlKTsKICAgICAgICB0aGlzLnBvcy5vbigiY2hhbmdlIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICAgICAgc2Vzc2lvbi5yZW1vdmVNYXJrZXIoX3NlbGYubWFya2VySWQpOwogICAgICAgICAgICBfc2VsZi5tYXJrZXJJZCA9IHNlc3Npb24uYWRkTWFya2VyKG5ldyBSYW5nZShldmVudC52YWx1ZS5yb3csIGV2ZW50LnZhbHVlLmNvbHVtbiwgZXZlbnQudmFsdWUucm93LCBldmVudC52YWx1ZS5jb2x1bW4rX3NlbGYubGVuZ3RoKSwgX3NlbGYubWFpbkNsYXNzLCBudWxsLCBmYWxzZSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5vdGhlcnMgPSBbXTsKICAgICAgICB0aGlzLiRvdGhlcnMuZm9yRWFjaChmdW5jdGlvbihvdGhlcikgewogICAgICAgICAgICB2YXIgYW5jaG9yID0gZG9jLmNyZWF0ZUFuY2hvcihvdGhlci5yb3csIG90aGVyLmNvbHVtbik7CiAgICAgICAgICAgIF9zZWxmLm90aGVycy5wdXNoKGFuY2hvcik7CiAgICAgICAgfSk7CiAgICAgICAgc2Vzc2lvbi5zZXRVbmRvU2VsZWN0KGZhbHNlKTsKICAgIH07CiAgICB0aGlzLnNob3dPdGhlck1hcmtlcnMgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZih0aGlzLm90aGVyc0FjdGl2ZSkgcmV0dXJuOwogICAgICAgIHZhciBzZXNzaW9uID0gdGhpcy5zZXNzaW9uOwogICAgICAgIHZhciBfc2VsZiA9IHRoaXM7CiAgICAgICAgdGhpcy5vdGhlcnNBY3RpdmUgPSB0cnVlOwogICAgICAgIHRoaXMub3RoZXJzLmZvckVhY2goZnVuY3Rpb24oYW5jaG9yKSB7CiAgICAgICAgICAgIGFuY2hvci5tYXJrZXJJZCA9IHNlc3Npb24uYWRkTWFya2VyKG5ldyBSYW5nZShhbmNob3Iucm93LCBhbmNob3IuY29sdW1uLCBhbmNob3Iucm93LCBhbmNob3IuY29sdW1uK19zZWxmLmxlbmd0aCksIF9zZWxmLm90aGVyc0NsYXNzLCBudWxsLCBmYWxzZSk7CiAgICAgICAgICAgIGFuY2hvci5vbigiY2hhbmdlIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICAgICAgICAgIHNlc3Npb24ucmVtb3ZlTWFya2VyKGFuY2hvci5tYXJrZXJJZCk7CiAgICAgICAgICAgICAgICBhbmNob3IubWFya2VySWQgPSBzZXNzaW9uLmFkZE1hcmtlcihuZXcgUmFuZ2UoZXZlbnQudmFsdWUucm93LCBldmVudC52YWx1ZS5jb2x1bW4sIGV2ZW50LnZhbHVlLnJvdywgZXZlbnQudmFsdWUuY29sdW1uK19zZWxmLmxlbmd0aCksIF9zZWxmLm90aGVyc0NsYXNzLCBudWxsLCBmYWxzZSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgfTsKICAgIHRoaXMuaGlkZU90aGVyTWFya2VycyA9IGZ1bmN0aW9uKCkgewogICAgICAgIGlmKCF0aGlzLm90aGVyc0FjdGl2ZSkgcmV0dXJuOwogICAgICAgIHRoaXMub3RoZXJzQWN0aXZlID0gZmFsc2U7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm90aGVycy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB0aGlzLnNlc3Npb24ucmVtb3ZlTWFya2VyKHRoaXMub3RoZXJzW2ldLm1hcmtlcklkKTsKICAgICAgICB9CiAgICB9OwogICAgdGhpcy5vblVwZGF0ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgICAgdmFyIGRlbHRhID0gZXZlbnQuZGF0YTsKICAgICAgICB2YXIgcmFuZ2UgPSBkZWx0YS5yYW5nZTsKICAgICAgICBpZihyYW5nZS5zdGFydC5yb3cgIT09IHJhbmdlLmVuZC5yb3cpIHJldHVybjsKICAgICAgICBpZihyYW5nZS5zdGFydC5yb3cgIT09IHRoaXMucG9zLnJvdykgcmV0dXJuOwogICAgICAgIGlmICh0aGlzLiR1cGRhdGluZykgcmV0dXJuOwogICAgICAgIHRoaXMuJHVwZGF0aW5nID0gdHJ1ZTsKICAgICAgICB2YXIgbGVuZ3RoRGlmZiA9IGRlbHRhLmFjdGlvbiA9PT0gImluc2VydFRleHQiID8gcmFuZ2UuZW5kLmNvbHVtbiAtIHJhbmdlLnN0YXJ0LmNvbHVtbiA6IHJhbmdlLnN0YXJ0LmNvbHVtbiAtIHJhbmdlLmVuZC5jb2x1bW47CiAgICAgICAgCiAgICAgICAgaWYocmFuZ2Uuc3RhcnQuY29sdW1uID49IHRoaXMucG9zLmNvbHVtbiAmJiByYW5nZS5zdGFydC5jb2x1bW4gPD0gdGhpcy5wb3MuY29sdW1uICsgdGhpcy5sZW5ndGggKyAxKSB7CiAgICAgICAgICAgIHZhciBkaXN0YW5jZUZyb21TdGFydCA9IHJhbmdlLnN0YXJ0LmNvbHVtbiAtIHRoaXMucG9zLmNvbHVtbjsKICAgICAgICAgICAgdGhpcy5sZW5ndGggKz0gbGVuZ3RoRGlmZjsKICAgICAgICAgICAgaWYoIXRoaXMuc2Vzc2lvbi4kZnJvbVVuZG8pIHsKICAgICAgICAgICAgICAgIGlmKGRlbHRhLmFjdGlvbiA9PT0gImluc2VydFRleHQiKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IHRoaXMub3RoZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvdGhlclBvcyA9IHRoaXMub3RoZXJzW2ldOwogICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3UG9zID0ge3Jvdzogb3RoZXJQb3Mucm93LCBjb2x1bW46IG90aGVyUG9zLmNvbHVtbiArIGRpc3RhbmNlRnJvbVN0YXJ0fTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYob3RoZXJQb3Mucm93ID09PSByYW5nZS5zdGFydC5yb3cgJiYgcmFuZ2Uuc3RhcnQuY29sdW1uIDwgb3RoZXJQb3MuY29sdW1uKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UG9zLmNvbHVtbiArPSBsZW5ndGhEaWZmOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRvYy5pbnNlcnQobmV3UG9zLCBkZWx0YS50ZXh0KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoZGVsdGEuYWN0aW9uID09PSAicmVtb3ZlVGV4dCIpIHsKICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gdGhpcy5vdGhlcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG90aGVyUG9zID0gdGhpcy5vdGhlcnNbaV07CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdQb3MgPSB7cm93OiBvdGhlclBvcy5yb3csIGNvbHVtbjogb3RoZXJQb3MuY29sdW1uICsgZGlzdGFuY2VGcm9tU3RhcnR9OwogICAgICAgICAgICAgICAgICAgICAgICBpZihvdGhlclBvcy5yb3cgPT09IHJhbmdlLnN0YXJ0LnJvdyAmJiByYW5nZS5zdGFydC5jb2x1bW4gPCBvdGhlclBvcy5jb2x1bW4pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdQb3MuY29sdW1uICs9IGxlbmd0aERpZmY7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZG9jLnJlbW92ZShuZXcgUmFuZ2UobmV3UG9zLnJvdywgbmV3UG9zLmNvbHVtbiwgbmV3UG9zLnJvdywgbmV3UG9zLmNvbHVtbiAtIGxlbmd0aERpZmYpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZihyYW5nZS5zdGFydC5jb2x1bW4gPT09IHRoaXMucG9zLmNvbHVtbiAmJiBkZWx0YS5hY3Rpb24gPT09ICJpbnNlcnRUZXh0IikgewogICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9zLnNldFBvc2l0aW9uKHRoaXMucG9zLnJvdywgdGhpcy5wb3MuY29sdW1uIC0gbGVuZ3RoRGlmZik7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5vdGhlcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvdGhlciA9IHRoaXMub3RoZXJzW2ldOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5ld1BvcyA9IHtyb3c6IG90aGVyLnJvdywgY29sdW1uOiBvdGhlci5jb2x1bW4gLSBsZW5ndGhEaWZmfTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKG90aGVyLnJvdyA9PT0gcmFuZ2Uuc3RhcnQucm93ICYmIHJhbmdlLnN0YXJ0LmNvbHVtbiA8IG90aGVyLmNvbHVtbikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdQb3MuY29sdW1uICs9IGxlbmd0aERpZmY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdGhlci5zZXRQb3NpdGlvbihuZXdQb3Mucm93LCBuZXdQb3MuY29sdW1uKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0uYmluZCh0aGlzKSwgMCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIGlmKHJhbmdlLnN0YXJ0LmNvbHVtbiA9PT0gdGhpcy5wb3MuY29sdW1uICYmIGRlbHRhLmFjdGlvbiA9PT0gInJlbW92ZVRleHQiKSB7CiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm90aGVycy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG90aGVyID0gdGhpcy5vdGhlcnNbaV07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihvdGhlci5yb3cgPT09IHJhbmdlLnN0YXJ0LnJvdyAmJiByYW5nZS5zdGFydC5jb2x1bW4gPCBvdGhlci5jb2x1bW4pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdGhlci5zZXRQb3NpdGlvbihvdGhlci5yb3csIG90aGVyLmNvbHVtbiAtIGxlbmd0aERpZmYpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfS5iaW5kKHRoaXMpLCAwKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLnBvcy5fZW1pdCgiY2hhbmdlIiwge3ZhbHVlOiB0aGlzLnBvc30pOwogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMub3RoZXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICB0aGlzLm90aGVyc1tpXS5fZW1pdCgiY2hhbmdlIiwge3ZhbHVlOiB0aGlzLm90aGVyc1tpXX0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuJHVwZGF0aW5nID0gZmFsc2U7CiAgICB9OwoKICAgIHRoaXMub25DdXJzb3JDaGFuZ2UgPSBmdW5jdGlvbihldmVudCkgewogICAgICAgIGlmICh0aGlzLiR1cGRhdGluZykgcmV0dXJuOwogICAgICAgIHZhciBwb3MgPSB0aGlzLnNlc3Npb24uc2VsZWN0aW9uLmdldEN1cnNvcigpOwogICAgICAgIGlmKHBvcy5yb3cgPT09IHRoaXMucG9zLnJvdyAmJiBwb3MuY29sdW1uID49IHRoaXMucG9zLmNvbHVtbiAmJiBwb3MuY29sdW1uIDw9IHRoaXMucG9zLmNvbHVtbiArIHRoaXMubGVuZ3RoKSB7CiAgICAgICAgICAgIHRoaXMuc2hvd090aGVyTWFya2VycygpOwogICAgICAgICAgICB0aGlzLl9lbWl0KCJjdXJzb3JFbnRlciIsIGV2ZW50KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLmhpZGVPdGhlck1hcmtlcnMoKTsKICAgICAgICAgICAgdGhpcy5fZW1pdCgiY3Vyc29yTGVhdmUiLCBldmVudCk7CiAgICAgICAgfQogICAgfTsgICAgCiAgICB0aGlzLmRldGFjaCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHRoaXMuc2Vzc2lvbi5yZW1vdmVNYXJrZXIodGhpcy5tYXJrZXJJZCk7CiAgICAgICAgdGhpcy5oaWRlT3RoZXJNYXJrZXJzKCk7CiAgICAgICAgdGhpcy5kb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgdGhpcy4kb25VcGRhdGUpOwogICAgICAgIHRoaXMuc2Vzc2lvbi5zZWxlY3Rpb24ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2hhbmdlQ3Vyc29yIiwgdGhpcy4kb25DdXJzb3JDaGFuZ2UpOwogICAgICAgIHRoaXMucG9zLmRldGFjaCgpOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5vdGhlcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdGhpcy5vdGhlcnNbaV0uZGV0YWNoKCk7CiAgICAgICAgfQogICAgICAgIHRoaXMuc2Vzc2lvbi5zZXRVbmRvU2VsZWN0KHRydWUpOwogICAgfTsKICAgIHRoaXMuY2FuY2VsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYodGhpcy4kdW5kb1N0YWNrRGVwdGggPT09IC0xKQogICAgICAgICAgICB0aHJvdyBFcnJvcigiQ2FuY2VsaW5nIHBsYWNlaG9sZGVycyBvbmx5IHN1cHBvcnRlZCB3aXRoIHVuZG8gbWFuYWdlciBhdHRhY2hlZCB0byBzZXNzaW9uLiIpOwogICAgICAgIHZhciB1bmRvTWFuYWdlciA9IHRoaXMuc2Vzc2lvbi5nZXRVbmRvTWFuYWdlcigpOwogICAgICAgIHZhciB1bmRvc1JlcXVpcmVkID0gKHVuZG9NYW5hZ2VyLiR1bmRvU3RhY2sgfHwgdW5kb01hbmFnZXIuJHVuZG9zdGFjaykubGVuZ3RoIC0gdGhpcy4kdW5kb1N0YWNrRGVwdGg7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB1bmRvc1JlcXVpcmVkOyBpKyspIHsKICAgICAgICAgICAgdW5kb01hbmFnZXIudW5kbyh0cnVlKTsKICAgICAgICB9CiAgICB9Owp9KS5jYWxsKFBsYWNlSG9sZGVyLnByb3RvdHlwZSk7CgoKZXhwb3J0cy5QbGFjZUhvbGRlciA9IFBsYWNlSG9sZGVyOwp9KTsKCmFjZS5kZWZpbmUoJ2FjZS9tb2RlL2ZvbGRpbmcvZm9sZF9tb2RlJywgWydyZXF1aXJlJywgJ2V4cG9ydHMnLCAnbW9kdWxlJyAsICdhY2UvcmFuZ2UnXSwgZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CgoKdmFyIFJhbmdlID0gcmVxdWlyZSgiLi4vLi4vcmFuZ2UiKS5SYW5nZTsKCnZhciBGb2xkTW9kZSA9IGV4cG9ydHMuRm9sZE1vZGUgPSBmdW5jdGlvbigpIHt9OwoKKGZ1bmN0aW9uKCkgewoKICAgIHRoaXMuZm9sZGluZ1N0YXJ0TWFya2VyID0gbnVsbDsKICAgIHRoaXMuZm9sZGluZ1N0b3BNYXJrZXIgPSBudWxsOwogICAgdGhpcy5nZXRGb2xkV2lkZ2V0ID0gZnVuY3Rpb24oc2Vzc2lvbiwgZm9sZFN0eWxlLCByb3cpIHsKICAgICAgICB2YXIgbGluZSA9IHNlc3Npb24uZ2V0TGluZShyb3cpOwogICAgICAgIGlmICh0aGlzLmZvbGRpbmdTdGFydE1hcmtlci50ZXN0KGxpbmUpKQogICAgICAgICAgICByZXR1cm4gInN0YXJ0IjsKICAgICAgICBpZiAoZm9sZFN0eWxlID09ICJtYXJrYmVnaW5lbmQiCiAgICAgICAgICAgICAgICAmJiB0aGlzLmZvbGRpbmdTdG9wTWFya2VyCiAgICAgICAgICAgICAgICAmJiB0aGlzLmZvbGRpbmdTdG9wTWFya2VyLnRlc3QobGluZSkpCiAgICAgICAgICAgIHJldHVybiAiZW5kIjsKICAgICAgICByZXR1cm4gIiI7CiAgICB9OwoKICAgIHRoaXMuZ2V0Rm9sZFdpZGdldFJhbmdlID0gZnVuY3Rpb24oc2Vzc2lvbiwgZm9sZFN0eWxlLCByb3cpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgIH07CgogICAgdGhpcy5pbmRlbnRhdGlvbkJsb2NrID0gZnVuY3Rpb24oc2Vzc2lvbiwgcm93LCBjb2x1bW4pIHsKICAgICAgICB2YXIgcmUgPSAvXFMvOwogICAgICAgIHZhciBsaW5lID0gc2Vzc2lvbi5nZXRMaW5lKHJvdyk7CiAgICAgICAgdmFyIHN0YXJ0TGV2ZWwgPSBsaW5lLnNlYXJjaChyZSk7CiAgICAgICAgaWYgKHN0YXJ0TGV2ZWwgPT0gLTEpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgdmFyIHN0YXJ0Q29sdW1uID0gY29sdW1uIHx8IGxpbmUubGVuZ3RoOwogICAgICAgIHZhciBtYXhSb3cgPSBzZXNzaW9uLmdldExlbmd0aCgpOwogICAgICAgIHZhciBzdGFydFJvdyA9IHJvdzsKICAgICAgICB2YXIgZW5kUm93ID0gcm93OwoKICAgICAgICB3aGlsZSAoKytyb3cgPCBtYXhSb3cpIHsKICAgICAgICAgICAgdmFyIGxldmVsID0gc2Vzc2lvbi5nZXRMaW5lKHJvdykuc2VhcmNoKHJlKTsKCiAgICAgICAgICAgIGlmIChsZXZlbCA9PSAtMSkKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwoKICAgICAgICAgICAgaWYgKGxldmVsIDw9IHN0YXJ0TGV2ZWwpCiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGVuZFJvdyA9IHJvdzsKICAgICAgICB9CgogICAgICAgIGlmIChlbmRSb3cgPiBzdGFydFJvdykgewogICAgICAgICAgICB2YXIgZW5kQ29sdW1uID0gc2Vzc2lvbi5nZXRMaW5lKGVuZFJvdykubGVuZ3RoOwogICAgICAgICAgICByZXR1cm4gbmV3IFJhbmdlKHN0YXJ0Um93LCBzdGFydENvbHVtbiwgZW5kUm93LCBlbmRDb2x1bW4pOwogICAgICAgIH0KICAgIH07CgogICAgdGhpcy5vcGVuaW5nQnJhY2tldEJsb2NrID0gZnVuY3Rpb24oc2Vzc2lvbiwgYnJhY2tldCwgcm93LCBjb2x1bW4sIHR5cGVSZSkgewogICAgICAgIHZhciBzdGFydCA9IHtyb3c6IHJvdywgY29sdW1uOiBjb2x1bW4gKyAxfTsKICAgICAgICB2YXIgZW5kID0gc2Vzc2lvbi4kZmluZENsb3NpbmdCcmFja2V0KGJyYWNrZXQsIHN0YXJ0LCB0eXBlUmUpOwogICAgICAgIGlmICghZW5kKQogICAgICAgICAgICByZXR1cm47CgogICAgICAgIHZhciBmdyA9IHNlc3Npb24uZm9sZFdpZGdldHNbZW5kLnJvd107CiAgICAgICAgaWYgKGZ3ID09IG51bGwpCiAgICAgICAgICAgIGZ3ID0gdGhpcy5nZXRGb2xkV2lkZ2V0KHNlc3Npb24sIGVuZC5yb3cpOwoKICAgICAgICBpZiAoZncgPT0gInN0YXJ0IiAmJiBlbmQucm93ID4gc3RhcnQucm93KSB7CiAgICAgICAgICAgIGVuZC5yb3cgLS07CiAgICAgICAgICAgIGVuZC5jb2x1bW4gPSBzZXNzaW9uLmdldExpbmUoZW5kLnJvdykubGVuZ3RoOwogICAgICAgIH0KICAgICAgICByZXR1cm4gUmFuZ2UuZnJvbVBvaW50cyhzdGFydCwgZW5kKTsKICAgIH07CgogICAgdGhpcy5jbG9zaW5nQnJhY2tldEJsb2NrID0gZnVuY3Rpb24oc2Vzc2lvbiwgYnJhY2tldCwgcm93LCBjb2x1bW4sIHR5cGVSZSkgewogICAgICAgIHZhciBlbmQgPSB7cm93OiByb3csIGNvbHVtbjogY29sdW1ufTsKICAgICAgICB2YXIgc3RhcnQgPSBzZXNzaW9uLiRmaW5kT3BlbmluZ0JyYWNrZXQoYnJhY2tldCwgZW5kKTsKCiAgICAgICAgaWYgKCFzdGFydCkKICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICBzdGFydC5jb2x1bW4rKzsKICAgICAgICBlbmQuY29sdW1uLS07CgogICAgICAgIHJldHVybiAgUmFuZ2UuZnJvbVBvaW50cyhzdGFydCwgZW5kKTsKICAgIH07Cn0pLmNhbGwoRm9sZE1vZGUucHJvdG90eXBlKTsKCn0pOwo7CiAgICAgICAgICAgIChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGFjZS5yZXF1aXJlKFsiYWNlL2FjZSJdLCBmdW5jdGlvbihhKSB7CiAgICAgICAgICAgICAgICAgICAgYSAmJiBhLmNvbmZpZy5pbml0KCk7CiAgICAgICAgICAgICAgICAgICAgaWYgKCF3aW5kb3cuYWNlKQogICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYWNlID0ge307CiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGEpIGlmIChhLmhhc093blByb3BlcnR5KGtleSkpCiAgICAgICAgICAgICAgICAgICAgICAgIGFjZVtrZXldID0gYVtrZXldOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pKCk7CiAgICAgICAg</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21536796" offset="0" length="1387" />
          <PacketInfo time="21536796" offset="1387" length="1387" />
          <PacketInfo time="21536842" offset="2774" length="2774" />
          <PacketInfo time="21536842" offset="5548" length="2774" />
          <PacketInfo time="21536874" offset="8322" length="1387" />
          <PacketInfo time="21536874" offset="9709" length="1387" />
          <PacketInfo time="21536967" offset="11096" length="1387" />
          <PacketInfo time="21536967" offset="12483" length="1387" />
          <PacketInfo time="21537201" offset="13870" length="16384" />
          <PacketInfo time="21537513" offset="30254" length="16384" />
          <PacketInfo time="21538028" offset="46638" length="16384" />
          <PacketInfo time="21538044" offset="63022" length="16384" />
          <PacketInfo time="21538059" offset="79406" length="6588" />
          <PacketInfo time="21538106" offset="85994" length="4161" />
          <PacketInfo time="21538106" offset="90155" length="1387" />
          <PacketInfo time="21538153" offset="91542" length="2774" />
          <PacketInfo time="21538153" offset="94316" length="2774" />
          <PacketInfo time="21538200" offset="97090" length="2774" />
          <PacketInfo time="21538262" offset="99864" length="2774" />
          <PacketInfo time="21538465" offset="102638" length="8322" />
          <PacketInfo time="21539229" offset="110960" length="16384" />
          <PacketInfo time="21539245" offset="127344" length="16384" />
          <PacketInfo time="21539260" offset="143728" length="16384" />
          <PacketInfo time="21539260" offset="160112" length="6328" />
          <PacketInfo time="21539260" offset="166440" length="1387" />
          <PacketInfo time="21539260" offset="167827" length="4161" />
          <PacketInfo time="21539307" offset="171988" length="1387" />
          <PacketInfo time="21539323" offset="173375" length="1387" />
          <PacketInfo time="21539401" offset="174762" length="1387" />
          <PacketInfo time="21539401" offset="176149" length="1387" />
          <PacketInfo time="21539432" offset="177536" length="1387" />
          <PacketInfo time="21539432" offset="178923" length="2774" />
          <PacketInfo time="21539432" offset="181697" length="1387" />
          <PacketInfo time="21539479" offset="183084" length="1387" />
          <PacketInfo time="21539479" offset="184471" length="1387" />
          <PacketInfo time="21539557" offset="185858" length="1387" />
          <PacketInfo time="21539557" offset="187245" length="1387" />
          <PacketInfo time="21539604" offset="188632" length="1387" />
          <PacketInfo time="21539604" offset="190019" length="1387" />
          <PacketInfo time="21539604" offset="191406" length="2774" />
          <PacketInfo time="21539650" offset="194180" length="1387" />
          <PacketInfo time="21539650" offset="195567" length="1387" />
          <PacketInfo time="21539728" offset="196954" length="1387" />
          <PacketInfo time="21539728" offset="198341" length="1387" />
          <PacketInfo time="21539775" offset="199728" length="2774" />
          <PacketInfo time="21539775" offset="202502" length="2774" />
          <PacketInfo time="21539838" offset="205276" length="2774" />
          <PacketInfo time="21539900" offset="208050" length="1387" />
          <PacketInfo time="21539900" offset="209437" length="1387" />
          <PacketInfo time="21539947" offset="210824" length="1387" />
          <PacketInfo time="21539962" offset="212211" length="4161" />
          <PacketInfo time="21539994" offset="216372" length="2774" />
          <PacketInfo time="21540072" offset="219146" length="2774" />
          <PacketInfo time="21540118" offset="221920" length="1387" />
          <PacketInfo time="21540118" offset="223307" length="1387" />
          <PacketInfo time="21540118" offset="224694" length="2774" />
          <PacketInfo time="21540165" offset="227468" length="1387" />
          <PacketInfo time="21540165" offset="228855" length="1387" />
          <PacketInfo time="21540243" offset="230242" length="1387" />
          <PacketInfo time="21540243" offset="231629" length="1387" />
          <PacketInfo time="21540290" offset="233016" length="1387" />
          <PacketInfo time="21540290" offset="234403" length="1387" />
          <PacketInfo time="21540306" offset="235790" length="2774" />
          <PacketInfo time="21540337" offset="238564" length="1387" />
          <PacketInfo time="21540352" offset="239951" length="1387" />
          <PacketInfo time="21540446" offset="241338" length="2774" />
          <PacketInfo time="21540462" offset="244112" length="1387" />
          <PacketInfo time="21540462" offset="245499" length="1387" />
          <PacketInfo time="21540462" offset="246886" length="2774" />
          <PacketInfo time="21540508" offset="249660" length="1387" />
          <PacketInfo time="21540508" offset="251047" length="1387" />
          <PacketInfo time="21540586" offset="252434" length="1387" />
          <PacketInfo time="21540586" offset="253821" length="1387" />
          <PacketInfo time="21540633" offset="255208" length="1387" />
          <PacketInfo time="21540633" offset="256595" length="4161" />
          <PacketInfo time="21540680" offset="260756" length="1387" />
          <PacketInfo time="21540680" offset="262143" length="1387" />
          <PacketInfo time="21540758" offset="263530" length="1387" />
          <PacketInfo time="21540758" offset="264917" length="1387" />
          <PacketInfo time="21540805" offset="266304" length="1387" />
          <PacketInfo time="21540805" offset="267691" length="2774" />
          <PacketInfo time="21540805" offset="270465" length="1387" />
          <PacketInfo time="21540852" offset="271852" length="1387" />
          <PacketInfo time="21540852" offset="273239" length="1387" />
          <PacketInfo time="21540930" offset="274626" length="1387" />
          <PacketInfo time="21540945" offset="276013" length="1387" />
          <PacketInfo time="21540992" offset="277400" length="5548" />
          <PacketInfo time="21541023" offset="282948" length="1387" />
          <PacketInfo time="21541039" offset="284335" length="1387" />
          <PacketInfo time="21541117" offset="285722" length="2774" />
          <PacketInfo time="21541148" offset="288496" length="5548" />
          <PacketInfo time="21541195" offset="294044" length="1387" />
          <PacketInfo time="21541195" offset="295431" length="1387" />
          <PacketInfo time="21541273" offset="296818" length="1387" />
          <PacketInfo time="21541273" offset="298205" length="1387" />
          <PacketInfo time="21541320" offset="299592" length="2774" />
          <PacketInfo time="21541320" offset="302366" length="2774" />
          <PacketInfo time="21541366" offset="305140" length="1387" />
          <PacketInfo time="21541366" offset="306527" length="1387" />
          <PacketInfo time="21541444" offset="307914" length="1387" />
          <PacketInfo time="21541460" offset="309301" length="1387" />
          <PacketInfo time="21541491" offset="310688" length="1387" />
          <PacketInfo time="21541491" offset="312075" length="2774" />
          <PacketInfo time="21541491" offset="314849" length="1387" />
          <PacketInfo time="21541538" offset="316236" length="1387" />
          <PacketInfo time="21541538" offset="317623" length="1387" />
          <PacketInfo time="21541632" offset="319010" length="2774" />
          <PacketInfo time="21541694" offset="321784" length="5548" />
          <PacketInfo time="21541710" offset="327332" length="1387" />
          <PacketInfo time="21541710" offset="328719" length="1387" />
          <PacketInfo time="21541803" offset="330106" length="1387" />
          <PacketInfo time="21541803" offset="331493" length="1387" />
          <PacketInfo time="21541850" offset="332880" length="5548" />
          <PacketInfo time="21541881" offset="338428" length="2774" />
          <PacketInfo time="21541975" offset="341202" length="1387" />
          <PacketInfo time="21541975" offset="342589" length="1387" />
          <PacketInfo time="21542006" offset="343976" length="1387" />
          <PacketInfo time="21542022" offset="345363" length="4161" />
          <PacketInfo time="21542053" offset="349524" length="1387" />
          <PacketInfo time="21542053" offset="350911" length="1387" />
          <PacketInfo time="21542146" offset="352298" length="2774" />
          <PacketInfo time="21542178" offset="355072" length="1387" />
          <PacketInfo time="21542178" offset="356459" length="2774" />
          <PacketInfo time="21542178" offset="359233" length="1387" />
          <PacketInfo time="21542224" offset="360620" length="1387" />
          <PacketInfo time="21542224" offset="362007" length="1387" />
          <PacketInfo time="21542302" offset="363394" length="1387" />
          <PacketInfo time="21542318" offset="364781" length="1387" />
          <PacketInfo time="21542349" offset="366168" length="1387" />
          <PacketInfo time="21542365" offset="367555" length="4161" />
          <PacketInfo time="21542396" offset="371716" length="1387" />
          <PacketInfo time="21542412" offset="373103" length="1387" />
          <PacketInfo time="21542490" offset="374490" length="1387" />
          <PacketInfo time="21542490" offset="375877" length="1387" />
          <PacketInfo time="21542521" offset="377264" length="1387" />
          <PacketInfo time="21542521" offset="378651" length="1387" />
          <PacketInfo time="21542536" offset="380038" length="2774" />
          <PacketInfo time="21542568" offset="382812" length="1387" />
          <PacketInfo time="21542568" offset="384199" length="1387" />
          <PacketInfo time="21542661" offset="385586" length="1387" />
          <PacketInfo time="21542661" offset="386973" length="1387" />
          <PacketInfo time="21542708" offset="388360" length="4161" />
          <PacketInfo time="21542708" offset="392521" length="1387" />
          <PacketInfo time="21542739" offset="393908" length="1387" />
          <PacketInfo time="21542755" offset="395295" length="1387" />
          <PacketInfo time="21542833" offset="396682" length="1387" />
          <PacketInfo time="21542833" offset="398069" length="1387" />
          <PacketInfo time="21542864" offset="399456" length="1387" />
          <PacketInfo time="21542880" offset="400843" length="4161" />
          <PacketInfo time="21542911" offset="405004" length="2774" />
          <PacketInfo time="21543004" offset="407778" length="1387" />
          <PacketInfo time="21543020" offset="409165" length="1387" />
          <PacketInfo time="21543036" offset="410552" length="2774" />
          <PacketInfo time="21543051" offset="413326" length="1387" />
          <PacketInfo time="21543051" offset="414713" length="1387" />
          <PacketInfo time="21543082" offset="416100" length="2774" />
          <PacketInfo time="21543176" offset="418874" length="1387" />
          <PacketInfo time="21543176" offset="420261" length="1387" />
          <PacketInfo time="21543223" offset="421648" length="5548" />
          <PacketInfo time="21543254" offset="427196" length="2774" />
          <PacketInfo time="21543348" offset="429970" length="1387" />
          <PacketInfo time="21543363" offset="431357" length="1387" />
          <PacketInfo time="21543410" offset="432744" length="5548" />
          <PacketInfo time="21543441" offset="438292" length="2774" />
          <PacketInfo time="21543519" offset="441066" length="1387" />
          <PacketInfo time="21543519" offset="442453" length="1387" />
          <PacketInfo time="21543550" offset="443840" length="1387" />
          <PacketInfo time="21543566" offset="445227" length="4161" />
          <PacketInfo time="21543597" offset="449388" length="1387" />
          <PacketInfo time="21543597" offset="450775" length="1387" />
          <PacketInfo time="21543691" offset="452162" length="1387" />
          <PacketInfo time="21543691" offset="453549" length="1387" />
          <PacketInfo time="21543722" offset="454936" length="1387" />
          <PacketInfo time="21543738" offset="456323" length="4161" />
          <PacketInfo time="21543769" offset="460484" length="1387" />
          <PacketInfo time="21543769" offset="461871" length="1387" />
          <PacketInfo time="21543862" offset="463258" length="1387" />
          <PacketInfo time="21543862" offset="464645" length="1387" />
          <PacketInfo time="21543894" offset="466032" length="1387" />
          <PacketInfo time="21543909" offset="467419" length="4161" />
          <PacketInfo time="21543940" offset="471580" length="1387" />
          <PacketInfo time="21543940" offset="472967" length="1387" />
          <PacketInfo time="21544034" offset="474354" length="1387" />
          <PacketInfo time="21544034" offset="475741" length="1387" />
          <PacketInfo time="21544081" offset="477128" length="1387" />
          <PacketInfo time="21544081" offset="478515" length="4161" />
          <PacketInfo time="21544112" offset="482676" length="1387" />
          <PacketInfo time="21544128" offset="484063" length="1387" />
          <PacketInfo time="21544206" offset="485450" length="1387" />
          <PacketInfo time="21544206" offset="486837" length="1387" />
          <PacketInfo time="21544252" offset="488224" length="1387" />
          <PacketInfo time="21544252" offset="489611" length="1387" />
          <PacketInfo time="21544252" offset="490998" length="2774" />
          <PacketInfo time="21544284" offset="493772" length="1387" />
          <PacketInfo time="21544299" offset="495159" length="1387" />
          <PacketInfo time="21544377" offset="496546" length="1387" />
          <PacketInfo time="21544377" offset="497933" length="1387" />
          <PacketInfo time="21544424" offset="499320" length="1387" />
          <PacketInfo time="21544424" offset="500707" length="4161" />
          <PacketInfo time="21544455" offset="504868" length="964" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="434" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/jquery-1.11.1.min.js" url="http://ueatworkuat.maxprocessing.com/script/jquery-1.11.1.min.js" ip="192.168.250.11" port="8080" connectionId="10" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.037+05:30" startTime="21536655" endTime="21536827">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvanF1ZXJ5LTEuMTEuMS5taW4uanMgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6ICovKg0KUmVmZXJlcjogaHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgc2RjaA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>OTU3ODY=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjQgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogOTU3ODYNCkFnZTogMzU2NDQNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21536827" offset="0" length="2774" />
          <PacketInfo time="21536842" offset="2774" length="1387" />
          <PacketInfo time="21536874" offset="4161" length="1387" />
          <PacketInfo time="21536874" offset="5548" length="1387" />
          <PacketInfo time="21536874" offset="6935" length="1387" />
          <PacketInfo time="21536920" offset="8322" length="1387" />
          <PacketInfo time="21536920" offset="9709" length="1387" />
          <PacketInfo time="21537232" offset="11096" length="16384" />
          <PacketInfo time="21537529" offset="27480" length="16384" />
          <PacketInfo time="21538044" offset="43864" length="16384" />
          <PacketInfo time="21538059" offset="60248" length="16384" />
          <PacketInfo time="21538059" offset="76632" length="10749" />
          <PacketInfo time="21538090" offset="87381" length="1387" />
          <PacketInfo time="21538106" offset="88768" length="1387" />
          <PacketInfo time="21538137" offset="90155" length="1387" />
          <PacketInfo time="21538153" offset="91542" length="4161" />
          <PacketInfo time="21538184" offset="95703" length="432" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="457" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxbuttons.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxbuttons.js" ip="192.168.250.11" port="8080" connectionId="5" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.045+05:30" startTime="21536827" endTime="21536905">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4YnV0dG9ucy5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTI2NTc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNg0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjYgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMTI2NTcNCkFnZTogMzU2NDMNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21536905" offset="0" length="1387" />
          <PacketInfo time="21536905" offset="1387" length="1387" />
          <PacketInfo time="21536952" offset="2774" length="2774" />
          <PacketInfo time="21536952" offset="5548" length="2774" />
          <PacketInfo time="21537201" offset="8322" length="4684" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="521" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxscrollbar.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxscrollbar.js" ip="192.168.250.11" port="8080" connectionId="5" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.075+05:30" startTime="21538044" endTime="21538200">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4c2Nyb2xsYmFyLmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Mjk0OTM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNw0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjcgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMjk0OTMNCkFnZTogMzU2NDINClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21538184" offset="0" length="2774" />
          <PacketInfo time="21538200" offset="2774" length="2774" />
          <PacketInfo time="21538231" offset="5548" length="1387" />
          <PacketInfo time="21538231" offset="6935" length="1387" />
          <PacketInfo time="21538465" offset="8322" length="8322" />
          <PacketInfo time="21539198" offset="16644" length="13198" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="527" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxcheckbox.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxcheckbox.js" ip="192.168.250.11" port="8080" connectionId="7" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.080+05:30" startTime="21538075" endTime="21538215">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4Y2hlY2tib3guanMgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6ICovKg0KUmVmZXJlcjogaHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgc2RjaA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTIyMTM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNg0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjYgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMTIyMTMNCkFnZTogMzU2NDQNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21538215" offset="0" length="2774" />
          <PacketInfo time="21538231" offset="2774" length="4161" />
          <PacketInfo time="21538262" offset="6935" length="2774" />
          <PacketInfo time="21538465" offset="9709" length="2853" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="533" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxmenu.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxmenu.js" ip="192.168.250.11" port="8080" connectionId="8" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.086+05:30" startTime="21538059" endTime="21538246">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4bWVudS5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NTAzMjY=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNg0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjYgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogNTAzMjYNCkFnZTogMzU2NDUNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21538246" offset="0" length="1387" />
          <PacketInfo time="21538246" offset="1387" length="4161" />
          <PacketInfo time="21538465" offset="5548" length="13870" />
          <PacketInfo time="21539229" offset="19418" length="16384" />
          <PacketInfo time="21539245" offset="35802" length="14873" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="541" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxlistbox.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxlistbox.js" ip="192.168.250.11" port="8080" connectionId="10" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.115+05:30" startTime="21538184" endTime="21538278">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4bGlzdGJveC5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzUyMjc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNg0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjYgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogNzUyMjcNCkFnZTogMzU2NDUNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21538278" offset="0" length="5548" />
          <PacketInfo time="21538480" offset="5548" length="15257" />
          <PacketInfo time="21539229" offset="20805" length="16384" />
          <PacketInfo time="21539245" offset="37189" length="16384" />
          <PacketInfo time="21539260" offset="53573" length="16384" />
          <PacketInfo time="21539276" offset="69957" length="5619" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="572" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxdropdownlist.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxdropdownlist.js" ip="192.168.250.11" port="8080" connectionId="7" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.122+05:30" startTime="21539260" endTime="21539338">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4ZHJvcGRvd25saXN0LmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Mzc2MDU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjggR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMzc2MDUNCkFnZTogMzU2NDMNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21539338" offset="0" length="349" />
          <PacketInfo time="21539338" offset="349" length="1387" />
          <PacketInfo time="21539338" offset="1736" length="2774" />
          <PacketInfo time="21539338" offset="4510" length="1387" />
          <PacketInfo time="21539354" offset="5897" length="1387" />
          <PacketInfo time="21539370" offset="7284" length="1387" />
          <PacketInfo time="21539432" offset="8671" length="1387" />
          <PacketInfo time="21539448" offset="10058" length="1387" />
          <PacketInfo time="21539479" offset="11445" length="2774" />
          <PacketInfo time="21539479" offset="14219" length="2774" />
          <PacketInfo time="21539510" offset="16993" length="1387" />
          <PacketInfo time="21539510" offset="18380" length="1387" />
          <PacketInfo time="21539588" offset="19767" length="2774" />
          <PacketInfo time="21539635" offset="22541" length="1387" />
          <PacketInfo time="21539635" offset="23928" length="1387" />
          <PacketInfo time="21539635" offset="25315" length="2774" />
          <PacketInfo time="21539666" offset="28089" length="1387" />
          <PacketInfo time="21539666" offset="29476" length="1387" />
          <PacketInfo time="21539728" offset="30863" length="1387" />
          <PacketInfo time="21539728" offset="32250" length="1387" />
          <PacketInfo time="21539775" offset="33637" length="1387" />
          <PacketInfo time="21539775" offset="35024" length="1387" />
          <PacketInfo time="21539775" offset="36411" length="1543" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="577" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.sort.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.sort.js" ip="192.168.250.11" port="8080" connectionId="9" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.128+05:30" startTime="21539276" endTime="21539354">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4Z3JpZC5zb3J0LmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NTM3Ng==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjkgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogNTM3Ng0KQWdlOiAzNTY0Mg0KVmlhOiAxLjEgaW5kLW1ocDJsZnAwMDENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>LyoNCmpRV2lkZ2V0cyB2My43LjAgKDIwMTUtRmViKQ0KQ29weXJpZ2h0IChjKSAyMDExLTIwMTUgalFXaWRnZXRzLg0KTGljZW5zZTogaHR0cDovL2pxd2lkZ2V0cy5jb20vbGljZW5zZS8NCiovDQoNCihmdW5jdGlvbihhKXthLmpxeC5kYXRhdmlldy5zb3J0PWZ1bmN0aW9uKCl7dGhpcy5zb3J0Ynk9ZnVuY3Rpb24oZCxmLHApe3ZhciBtPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7aWYoZj09bnVsbCl7dGhpcy5zb3J0ZGF0YT1udWxsO3RoaXMucmVmcmVzaCgpO3JldHVybn1pZihmPT11bmRlZmluZWQpe2Y9dHJ1ZX1pZihmPT0iYSJ8fGY9PSJhc2MifHxmPT0iYXNjZW5kaW5nInx8Zj09dHJ1ZSl7Zj10cnVlfWVsc2V7Zj1mYWxzZX12YXIgZz1kO3RoaXMuc29ydGZpZWxkPWQ7dGhpcy5zb3J0ZmllbGRkaXJlY3Rpb249Zj8iYXNjIjoiZGVzYyI7aWYodGhpcy5zb3J0Y2FjaGU9PXVuZGVmaW5lZCl7dGhpcy5zb3J0Y2FjaGU9e319dGhpcy5zb3J0ZGF0YT1bXTt2YXIgYj1bXTt2YXIgYz1mYWxzZTtpZihnPT0iY29uc3RydWN0b3IiKXtnPSIifWlmKCF0aGlzLnZpcnR1YWxtb2RlJiZ0aGlzLnNvcnRjYWNoZVtnXSE9bnVsbCl7dmFyIG89dGhpcy5zb3J0Y2FjaGVbZ107Yj1vLl9zb3J0ZGF0YTtpZihvLmRpcmVjdGlvbj09Zil7Yi5yZXZlcnNlKCl9ZWxzZXtpZighby5kaXJlY3Rpb24mJmYpe2IucmV2ZXJzZSgpfWM9dHJ1ZX1pZihiLmxlbmd0aDx0aGlzLnRvdGFscmVjb3Jkcyl7dGhpcy5zb3J0Y2FjaGU9e307Yz1mYWxzZTtiPVtdfX1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nPSh0eXBlb2YgZD09ImZ1bmN0aW9uIik/ZDpmdW5jdGlvbigpe3JldHVybiB0aGlzW2RdfTt2YXIgcj10aGlzLnJlY29yZHM7dmFyIHQ9dGhpcy50aGF0O3ZhciBuPSIiO2lmKHRoaXMuc291cmNlLmRhdGFmaWVsZHMpe2EuZWFjaCh0aGlzLnNvdXJjZS5kYXRhZmllbGRzLGZ1bmN0aW9uKCl7aWYodGhpcy5uYW1lPT1kKXtpZih0aGlzLnR5cGUpe249dGhpcy50eXBlfXJldHVybiBmYWxzZX19KX1pZihiLmxlbmd0aD09MCl7aWYoci5sZW5ndGgpe3ZhciBoPXIubGVuZ3RoO2Zvcih2YXIgcT0wO3E8aDtxKyspe3ZhciBlPXJbcV07aWYoZSE9bnVsbCl7dmFyIGo9ZTt2YXIgcz1qLnRvU3RyaW5nKCk7Yi5wdXNoKHtzb3J0a2V5OnMsdmFsdWU6aixpbmRleDpxfSl9fX1lbHNle3ZhciBsPWZhbHNlO2ZvcihvYmogaW4gcil7dmFyIGU9cltvYmpdO2lmKGU9PXVuZGVmaW5lZCl7bD10cnVlO2JyZWFrfXZhciBqPWU7Yi5wdXNoKHtzb3J0a2V5OmoudG9TdHJpbmcoKSx2YWx1ZTpqLGluZGV4Om9ian0pfWlmKGwpe2EuZWFjaChyLGZ1bmN0aW9uKHUsdil7Yi5wdXNoKHtzb3J0a2V5OnYudG9TdHJpbmcoKSx2YWx1ZTp2LGluZGV4OnV9KX0pfX19aWYoIWMpe2lmKHA9PW51bGwpe3RoaXMuX3NvcnRjb2x1bW50eXBlPW47dmFyIGs9dGhpcztiLnNvcnQoZnVuY3Rpb24odSxpKXtyZXR1cm4gay5fY29tcGFyZSh1LGksbil9KX1lbHNle2Iuc29ydChwKX19aWYoIWYpe2IucmV2ZXJzZSgpfU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc9bTt0aGlzLnNvcnRkYXRhPWI7dGhpcy5zb3J0Y2FjaGVbZ109e19zb3J0ZGF0YTpiLGRpcmVjdGlvbjpmfTt0aGlzLnJlbG9hZCh0aGlzLnJlY29yZHMsdGhpcy5yb3dzLHRoaXMuZmlsdGVycyx0aGlzLnVwZGF0ZWQsdHJ1ZSl9LHRoaXMuY2xlYXJzb3J0ZGF0YT1mdW5jdGlvbigpe3RoaXMuc29ydGNhY2hlPXt9O3RoaXMuc29ydGRhdGE9bnVsbH07dGhpcy5fY29tcGFyZT1mdW5jdGlvbihjLGIsZSl7dmFyIGM9Yy5zb3J0a2V5O3ZhciBiPWIuc29ydGtleTtpZihjPT09dW5kZWZpbmVkKXtjPW51bGx9aWYoYj09PXVuZGVmaW5lZCl7Yj1udWxsfWlmKGM9PT1udWxsJiZiPT09bnVsbCl7cmV0dXJuIDB9aWYoYz09PW51bGwmJmIhPT1udWxsKXtyZXR1cm4gLTF9aWYoYyE9PW51bGwmJmI9PT1udWxsKXtyZXR1cm4gMX1pZihhLmpxeC5kYXRhRm9ybWF0KXtpZihlJiZlIT0iIil7c3dpdGNoKGUpe2Nhc2UibnVtYmVyIjpjYXNlImludCI6Y2FzZSJmbG9hdCI6aWYoYzxiKXtyZXR1cm4gLTF9aWYoYz5iKXtyZXR1cm4gMX1yZXR1cm4gMDtjYXNlImRhdGUiOmNhc2UidGltZSI6aWYoYzxiKXtyZXR1cm4gLTF9aWYoYz5iKXtyZXR1cm4gMX1yZXR1cm4gMDtjYXNlInN0cmluZyI6Y2FzZSJ0ZXh0IjpjPVN0cmluZyhjKS50b0xvd2VyQ2FzZSgpO2I9U3RyaW5nKGIpLnRvTG93ZXJDYXNlKCk7YnJlYWt9fWVsc2V7aWYoYS5qcXguZGF0YUZvcm1hdC5pc051bWJlcihjKSYmYS5qcXguZGF0YUZvcm1hdC5pc051bWJlcihiKSl7aWYoYzxiKXtyZXR1cm4gLTF9aWYoYz5iKXtyZXR1cm4gMX1yZXR1cm4gMH1lbHNle2lmKGEuanF4LmRhdGFGb3JtYXQuaXNEYXRlKGMpJiZhLmpxeC5kYXRhRm9ybWF0LmlzRGF0ZShiKSl7aWYoYzxiKXtyZXR1cm4gLTF9aWYoYz5iKXtyZXR1cm4gMX1yZXR1cm4gMH1lbHNle2lmKCFhLmpxeC5kYXRhRm9ybWF0LmlzTnVtYmVyKGMpJiYhYS5qcXguZGF0YUZvcm1hdC5pc051bWJlcihiKSl7Yz1TdHJpbmcoYykudG9Mb3dlckNhc2UoKTtiPVN0cmluZyhiKS50b0xvd2VyQ2FzZSgpfX19fX10cnl7aWYoYzxiKXtyZXR1cm4gLTF9aWYoYz5iKXtyZXR1cm4gMX19Y2F0Y2goZCl7dmFyIGY9ZH1yZXR1cm4gMH07dGhpcy5fZXF1YWxzPWZ1bmN0aW9uKGMsYil7cmV0dXJuKHRoaXMuX2NvbXBhcmUoYyxiKT09PTApfX07YS5leHRlbmQoYS5qcXguX2pxeEdyaWQucHJvdG90eXBlLHtfcmVuZGVyc29ydGNvbHVtbjpmdW5jdGlvbigpe3ZhciBiPXRoaXMudGhhdDt2YXIgZD10aGlzLmdldHNvcnRjb2x1bW4oKTtpZih0aGlzLnNvcnRkaXJlY3Rpb24pe3ZhciBjPWZ1bmN0aW9uKGYsZyl7dmFyIGU9Yi5nZXRjb2x1bW4oZik7aWYoZSl7aWYoZy5hc2NlbmRpbmcpe2EuanF4LmFyaWEoZS5lbGVtZW50LCJhcmlhLXNvcnQiLCJhc2NlbmRpbmciKX1lbHNle2lmKGcuZGVzY2VuZGluZyl7YS5qcXguYXJpYShlLmVsZW1lbnQsImFyaWEtc29ydCIsImRlc2NlbmRpbmciKX1lbHNle2EuanF4LmFyaWEoZS5lbGVtZW50LCJhcmlhLXNvcnQiLCJub25lIil9fX19O2lmKHRoaXMuX29sZHNvcnRpbmZvKXtpZih0aGlzLl9vbGRzb3J0aW5mby5jb2x1bW4pe2ModGhpcy5fb2xkc29ydGluZm8uY29sdW1uLHthc2NlbmRpbmc6ZmFsc2UsZGVzY2VuZGluZzpmYWxzZX0pfX1jKGQsdGhpcy5zb3J0ZGlyZWN0aW9uKX10aGlzLl9vbGRzb3J0aW5mbz17Y29sdW1uOmQsZGlyZWN0aW9uOnRoaXMuc29ydGRpcmVjdGlvbn07aWYodGhpcy5zb3J0ZGlyZWN0aW9uKXthLmVhY2godGhpcy5jb2x1bW5zLnJlY29yZHMsZnVuY3Rpb24oZixnKXt2YXIgZT1hLmRhdGEoZG9jdW1lbnQuYm9keSwiZ3JvdXBzb3J0ZWxlbWVudHMiK3RoaXMuZGlzcGxheWZpZWxkKTtpZihkPT1udWxsfHx0aGlzLmRpc3BsYXlmaWVsZCE9ZCl7YSh0aGlzLnNvcnRhc2MpLmhpZGUoKTthKHRoaXMuc29ydGRlc2MpLmhpZGUoKTtpZihlIT1udWxsKXtlLnNvcnRhc2MuaGlkZSgpO2Uuc29ydGRlc2MuaGlkZSgpfX1lbHNle2lmKGIuc29ydGRpcmVjdGlvbi5hc2NlbmRpbmcpe2EodGhpcy5zb3J0YXNjKS5zaG93KCk7YSh0aGlzLnNvcnRkZXNjKS5oaWRlKCk7aWYoZSE9bnVsbCl7ZS5zb3J0YXNjLnNob3coKTtlLnNvcnRkZXNjLmhpZGUoKX19ZWxzZXthKHRoaXMuc29ydGFzYykuaGlkZSgpO2EodGhpcy5zb3J0ZGVzYykuc2hvdygpO2lmKGUhPW51bGwpe2Uuc29ydGFzYy5oaWRlKCk7ZS5zb3J0ZGVzYy5zaG93KCl9fX19KX19LGdldHNvcnRjb2x1bW46ZnVuY3Rpb24oKXtpZih0aGlzLnNvcnRjb2x1bW4hPXVuZGVmaW5lZCl7cmV0dXJuIHRoaXMuc29ydGNvbHVtbn1yZXR1cm4gbnVsbH0scmVtb3Zlc29ydDpmdW5jdGlvbigpe3RoaXMuc29ydGJ5KG51bGwpfSxzb3J0Ynk6ZnVuY3Rpb24oZCxnLGYsZSxiKXtpZih0aGlzLl9sb2FkaW5nJiZiIT09ZmFsc2Upe3Rocm93IG5ldyBFcnJvcigianF4R3JpZDogIit0aGlzLmxvYWRpbmdlcnJvcm1lc3NhZ2UpO3JldHVybiBmYWxzZX1pZihkPT1udWxsKXtnPW51bGw7ZD10aGlzLnNvcnRjb2x1bW59aWYoZCE9dW5kZWZpbmVkKXt2YXIgYz10aGlzLnRoYXQ7aWYoZj09dW5kZWZpbmVkJiZjLnNvdXJjZS5zb3J0Y29tcGFyZXIhPW51bGwpe2Y9Yy5zb3VyY2Uuc29ydGNvbXBhcmVyfWlmKGc9PSJhInx8Zz09ImFzYyJ8fGc9PSJhc2NlbmRpbmcifHxnPT10cnVlKXthc2NlbmRpbmc9dHJ1ZX1lbHNle2FzY2VuZGluZz1mYWxzZX1pZihnIT1udWxsKXtjLnNvcnRkaXJlY3Rpb249e2FzY2VuZGluZzphc2NlbmRpbmcsZGVzY2VuZGluZzohYXNjZW5kaW5nfX1lbHNle2Muc29ydGRpcmVjdGlvbj17YXNjZW5kaW5nOmZhbHNlLGRlc2NlbmRpbmc6ZmFsc2V9fWlmKGchPW51bGwpe2Muc29ydGNvbHVtbj1kfWVsc2V7Yy5zb3J0Y29sdW1uPW51bGx9aWYoYy5zb3VyY2Uuc29ydHx8Yy52aXJ0dWFsbW9kZSl7Yy5kYXRhdmlldy5zb3J0ZmllbGQ9ZDtpZihnPT1udWxsKXtjLmRhdGF2aWV3LnNvcnRmaWVsZGRpcmVjdGlvbj0iIn1lbHNle2MuZGF0YXZpZXcuc29ydGZpZWxkZGlyZWN0aW9uPWFzY2VuZGluZz8iYXNjIjoiZGVzYyJ9aWYoYy5zb3VyY2Uuc29ydCYmIXRoaXMuX2xvYWRpbmcpe2Muc291cmNlLnNvcnQoZCxnKTtjLl9yYWlzZUV2ZW50KDYse3NvcnRpbmZvcm1hdGlvbjpjLmdldHNvcnRpbmZvcm1hdGlvbigpfSk7cmV0dXJufX1lbHNle2MuZGF0YXZpZXcuc29ydGJ5KGQsZyxmKX1pZihlPT09ZmFsc2Upe3JldHVybn1pZihjLmdyb3VwYWJsZSYmYy5ncm91cHMubGVuZ3RoPjApe2MuX3JlbmRlcih0cnVlLGZhbHNlLGZhbHNlKTtpZihjLl91cGRhdGVncm91cGhlYWRlcnNib3VuZHMmJmMuc2hvd2dyb3Vwc2hlYWRlcil7Yy5fdXBkYXRlZ3JvdXBoZWFkZXJzYm91bmRzKCl9fWVsc2V7aWYoYy5wYWdlYWJsZSl7Yy5kYXRhdmlldy51cGRhdGV2aWV3KCl9Yy5fdXBkYXRlcm93c3Byb3BlcnRpZXMoKTtjLnJlbmRlcmdyaWRjb250ZW50KHRydWUpfWMuX3JhaXNlRXZlbnQoNix7c29ydGluZm9ybWF0aW9uOmMuZ2V0c29ydGluZm9ybWF0aW9uKCl9KX19LF90b2dnbGVzb3J0OmZ1bmN0aW9uKGQpe3ZhciBiPXRoaXMudGhhdDtpZih0aGlzLmRpc2FibGVkKXtyZXR1cm59aWYoZC5zb3J0YWJsZSYmYi5zb3J0YWJsZSl7dmFyIGM9Yi5nZXRzb3J0aW5mb3JtYXRpb24oKTt2YXIgZT1udWxsO2lmKGMuc29ydGNvbHVtbiE9bnVsbCYmYy5zb3J0Y29sdW1uPT1kLmRpc3BsYXlmaWVsZCl7ZT1jLnNvcnRkaXJlY3Rpb24uYXNjZW5kaW5nO2lmKGIuc29ydHRvZ2dsZXN0YXRlcz4xKXtpZihlPT10cnVlKXtlPWZhbHNlfWVsc2V7ZT1udWxsfX1lbHNle2U9IWV9fWVsc2V7ZT10cnVlfWIuc29ydGJ5KGQuZGlzcGxheWZpZWxkLGUsbnVsbCl9fX0pfSkoanF4QmFzZUZyYW1ld29yayk7</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21539354" offset="0" length="1387" />
          <PacketInfo time="21539370" offset="1387" length="2774" />
          <PacketInfo time="21539401" offset="4161" length="1387" />
          <PacketInfo time="21539401" offset="5548" length="176" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="582" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.pager.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.pager.js" ip="192.168.250.11" port="8080" connectionId="8" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.133+05:30" startTime="21539276" endTime="21539385">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4Z3JpZC5wYWdlci5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjE2MDU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjggR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMjE2MDUNCkFnZTogMzU2NDMNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21539385" offset="0" length="1387" />
          <PacketInfo time="21539385" offset="1387" length="4161" />
          <PacketInfo time="21539432" offset="5548" length="1387" />
          <PacketInfo time="21539432" offset="6935" length="1387" />
          <PacketInfo time="21539510" offset="8322" length="1387" />
          <PacketInfo time="21539510" offset="9709" length="1387" />
          <PacketInfo time="21539541" offset="11096" length="1387" />
          <PacketInfo time="21539541" offset="12483" length="1387" />
          <PacketInfo time="21539541" offset="13870" length="2774" />
          <PacketInfo time="21539588" offset="16644" length="1387" />
          <PacketInfo time="21539588" offset="18031" length="1387" />
          <PacketInfo time="21539666" offset="19418" length="2536" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="595" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.js" ip="192.168.250.11" port="8080" connectionId="5" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.138+05:30" startTime="21539260" endTime="21539448">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4Z3JpZC5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyNyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjM1OTM1</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyNw0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjcgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMjM1OTM1DQpBZ2U6IDM1NjQ1DQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21539448" offset="0" length="350" />
          <PacketInfo time="21539448" offset="350" length="4161" />
          <PacketInfo time="21539479" offset="4511" length="1387" />
          <PacketInfo time="21539479" offset="5898" length="1387" />
          <PacketInfo time="21539557" offset="7285" length="2774" />
          <PacketInfo time="21539604" offset="10059" length="2774" />
          <PacketInfo time="21539604" offset="12833" length="2774" />
          <PacketInfo time="21539635" offset="15607" length="2774" />
          <PacketInfo time="21539713" offset="18381" length="1387" />
          <PacketInfo time="21539713" offset="19768" length="1387" />
          <PacketInfo time="21539760" offset="21155" length="4161" />
          <PacketInfo time="21539760" offset="25316" length="1387" />
          <PacketInfo time="21539791" offset="26703" length="1387" />
          <PacketInfo time="21539791" offset="28090" length="1387" />
          <PacketInfo time="21539869" offset="29477" length="1387" />
          <PacketInfo time="21539869" offset="30864" length="1387" />
          <PacketInfo time="21539916" offset="32251" length="1387" />
          <PacketInfo time="21539916" offset="33638" length="2774" />
          <PacketInfo time="21539916" offset="36412" length="1387" />
          <PacketInfo time="21539962" offset="37799" length="1387" />
          <PacketInfo time="21539962" offset="39186" length="1387" />
          <PacketInfo time="21540025" offset="40573" length="2774" />
          <PacketInfo time="21540072" offset="43347" length="5548" />
          <PacketInfo time="21540103" offset="48895" length="1387" />
          <PacketInfo time="21540118" offset="50282" length="1387" />
          <PacketInfo time="21540181" offset="51669" length="1387" />
          <PacketInfo time="21540181" offset="53056" length="1387" />
          <PacketInfo time="21540228" offset="54443" length="1387" />
          <PacketInfo time="21540228" offset="55830" length="4161" />
          <PacketInfo time="21540259" offset="59991" length="1387" />
          <PacketInfo time="21540259" offset="61378" length="1387" />
          <PacketInfo time="21540337" offset="62765" length="2774" />
          <PacketInfo time="21540368" offset="65539" length="1387" />
          <PacketInfo time="21540384" offset="66926" length="4161" />
          <PacketInfo time="21540415" offset="71087" length="1387" />
          <PacketInfo time="21540446" offset="72474" length="1387" />
          <PacketInfo time="21540493" offset="73861" length="1387" />
          <PacketInfo time="21540493" offset="75248" length="1387" />
          <PacketInfo time="21540540" offset="76635" length="1387" />
          <PacketInfo time="21540540" offset="78022" length="4161" />
          <PacketInfo time="21540571" offset="82183" length="1387" />
          <PacketInfo time="21540571" offset="83570" length="1387" />
          <PacketInfo time="21540649" offset="84957" length="2774" />
          <PacketInfo time="21540696" offset="87731" length="5548" />
          <PacketInfo time="21540727" offset="93279" length="1387" />
          <PacketInfo time="21540727" offset="94666" length="1387" />
          <PacketInfo time="21540805" offset="96053" length="1387" />
          <PacketInfo time="21540805" offset="97440" length="1387" />
          <PacketInfo time="21540836" offset="98827" length="1387" />
          <PacketInfo time="21540836" offset="100214" length="4161" />
          <PacketInfo time="21540867" offset="104375" length="1387" />
          <PacketInfo time="21540867" offset="105762" length="1387" />
          <PacketInfo time="21540945" offset="107149" length="1387" />
          <PacketInfo time="21540961" offset="108536" length="1387" />
          <PacketInfo time="21540992" offset="109923" length="2774" />
          <PacketInfo time="21540992" offset="112697" length="2774" />
          <PacketInfo time="21541023" offset="115471" length="2774" />
          <PacketInfo time="21541117" offset="118245" length="1387" />
          <PacketInfo time="21541117" offset="119632" length="1387" />
          <PacketInfo time="21541148" offset="121019" length="1387" />
          <PacketInfo time="21541148" offset="122406" length="4161" />
          <PacketInfo time="21541179" offset="126567" length="1387" />
          <PacketInfo time="21541179" offset="127954" length="1387" />
          <PacketInfo time="21541273" offset="129341" length="1387" />
          <PacketInfo time="21541273" offset="130728" length="1387" />
          <PacketInfo time="21541304" offset="132115" length="1387" />
          <PacketInfo time="21541304" offset="133502" length="1387" />
          <PacketInfo time="21541304" offset="134889" length="2774" />
          <PacketInfo time="21541335" offset="137663" length="1387" />
          <PacketInfo time="21541335" offset="139050" length="1387" />
          <PacketInfo time="21541413" offset="140437" length="1387" />
          <PacketInfo time="21541429" offset="141824" length="1387" />
          <PacketInfo time="21541460" offset="143211" length="1387" />
          <PacketInfo time="21541460" offset="144598" length="2774" />
          <PacketInfo time="21541460" offset="147372" length="1387" />
          <PacketInfo time="21541507" offset="148759" length="1387" />
          <PacketInfo time="21541507" offset="150146" length="1387" />
          <PacketInfo time="21541585" offset="151533" length="1387" />
          <PacketInfo time="21541585" offset="152920" length="1387" />
          <PacketInfo time="21541616" offset="154307" length="1387" />
          <PacketInfo time="21541616" offset="155694" length="2774" />
          <PacketInfo time="21541632" offset="158468" length="1387" />
          <PacketInfo time="21541663" offset="159855" length="1387" />
          <PacketInfo time="21541678" offset="161242" length="1387" />
          <PacketInfo time="21541741" offset="162629" length="1387" />
          <PacketInfo time="21541741" offset="164016" length="1387" />
          <PacketInfo time="21541788" offset="165403" length="1387" />
          <PacketInfo time="21541788" offset="166790" length="1387" />
          <PacketInfo time="21541788" offset="168177" length="2774" />
          <PacketInfo time="21541819" offset="170951" length="1387" />
          <PacketInfo time="21541850" offset="172338" length="1387" />
          <PacketInfo time="21541897" offset="173725" length="1387" />
          <PacketInfo time="21541912" offset="175112" length="1387" />
          <PacketInfo time="21541944" offset="176499" length="1387" />
          <PacketInfo time="21541944" offset="177886" length="1387" />
          <PacketInfo time="21541959" offset="179273" length="2774" />
          <PacketInfo time="21541990" offset="182047" length="1387" />
          <PacketInfo time="21541990" offset="183434" length="1387" />
          <PacketInfo time="21542068" offset="184821" length="1387" />
          <PacketInfo time="21542068" offset="186208" length="1387" />
          <PacketInfo time="21542131" offset="187595" length="5548" />
          <PacketInfo time="21542146" offset="193143" length="1387" />
          <PacketInfo time="21542146" offset="194530" length="1387" />
          <PacketInfo time="21542240" offset="195917" length="1387" />
          <PacketInfo time="21542240" offset="197304" length="1387" />
          <PacketInfo time="21542287" offset="198691" length="1387" />
          <PacketInfo time="21542287" offset="200078" length="4161" />
          <PacketInfo time="21542318" offset="204239" length="1387" />
          <PacketInfo time="21542334" offset="205626" length="1387" />
          <PacketInfo time="21542412" offset="207013" length="1387" />
          <PacketInfo time="21542412" offset="208400" length="1387" />
          <PacketInfo time="21542443" offset="209787" length="1387" />
          <PacketInfo time="21542458" offset="211174" length="4161" />
          <PacketInfo time="21542505" offset="215335" length="1387" />
          <PacketInfo time="21542505" offset="216722" length="1387" />
          <PacketInfo time="21542583" offset="218109" length="1387" />
          <PacketInfo time="21542583" offset="219496" length="1387" />
          <PacketInfo time="21542614" offset="220883" length="1387" />
          <PacketInfo time="21542614" offset="222270" length="1387" />
          <PacketInfo time="21542614" offset="223657" length="2774" />
          <PacketInfo time="21542661" offset="226431" length="1387" />
          <PacketInfo time="21542661" offset="227818" length="1387" />
          <PacketInfo time="21542755" offset="229205" length="2774" />
          <PacketInfo time="21542786" offset="231979" length="1387" />
          <PacketInfo time="21542802" offset="233366" length="2919" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="599" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.selection.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.selection.js" ip="192.168.250.11" port="8080" connectionId="10" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.149+05:30" startTime="21539276" endTime="21539448">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4Z3JpZC5zZWxlY3Rpb24uanMgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6ICovKg0KUmVmZXJlcjogaHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgc2RjaA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzA2NTE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjggR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMzA2NTENCkFnZTogMzU2NDMNClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21539448" offset="0" length="1387" />
          <PacketInfo time="21539463" offset="1387" length="1387" />
          <PacketInfo time="21539463" offset="2774" length="1387" />
          <PacketInfo time="21539463" offset="4161" length="1387" />
          <PacketInfo time="21539463" offset="5548" length="2774" />
          <PacketInfo time="21539510" offset="8322" length="1387" />
          <PacketInfo time="21539510" offset="9709" length="1387" />
          <PacketInfo time="21539588" offset="11096" length="1387" />
          <PacketInfo time="21539588" offset="12483" length="1387" />
          <PacketInfo time="21539635" offset="13870" length="1387" />
          <PacketInfo time="21539635" offset="15257" length="1387" />
          <PacketInfo time="21539635" offset="16644" length="2774" />
          <PacketInfo time="21539666" offset="19418" length="1387" />
          <PacketInfo time="21539682" offset="20805" length="1387" />
          <PacketInfo time="21539744" offset="22192" length="1387" />
          <PacketInfo time="21539744" offset="23579" length="1387" />
          <PacketInfo time="21539791" offset="24966" length="2774" />
          <PacketInfo time="21539791" offset="27740" length="1387" />
          <PacketInfo time="21539806" offset="29127" length="1387" />
          <PacketInfo time="21539838" offset="30514" length="486" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="611" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.edit.js" url="http://ueatworkuat.maxprocessing.com/jqwidgets/jqxgrid.edit.js" ip="192.168.250.11" port="8080" connectionId="9" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.155+05:30" startTime="21539401" endTime="21539494">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9qcXdpZGdldHMvanF4Z3JpZC5lZGl0LmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjozMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjozMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDQ3Mjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjozMA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MzAgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogNDQ3MjgNCkFnZTogMzU2NDINClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21539479" offset="0" length="349" />
          <PacketInfo time="21539494" offset="349" length="1387" />
          <PacketInfo time="21539494" offset="1736" length="1387" />
          <PacketInfo time="21539494" offset="3123" length="1387" />
          <PacketInfo time="21539494" offset="4510" length="2774" />
          <PacketInfo time="21539541" offset="7284" length="1387" />
          <PacketInfo time="21539541" offset="8671" length="1387" />
          <PacketInfo time="21539619" offset="10058" length="1387" />
          <PacketInfo time="21539619" offset="11445" length="1387" />
          <PacketInfo time="21539650" offset="12832" length="1387" />
          <PacketInfo time="21539666" offset="14219" length="1387" />
          <PacketInfo time="21539666" offset="15606" length="2774" />
          <PacketInfo time="21539697" offset="18380" length="1387" />
          <PacketInfo time="21539697" offset="19767" length="1387" />
          <PacketInfo time="21539775" offset="21154" length="2774" />
          <PacketInfo time="21539806" offset="23928" length="1387" />
          <PacketInfo time="21539838" offset="25315" length="4161" />
          <PacketInfo time="21539853" offset="29476" length="1387" />
          <PacketInfo time="21539853" offset="30863" length="1387" />
          <PacketInfo time="21539931" offset="32250" length="1387" />
          <PacketInfo time="21539931" offset="33637" length="1387" />
          <PacketInfo time="21539962" offset="35024" length="1387" />
          <PacketInfo time="21539962" offset="36411" length="1387" />
          <PacketInfo time="21539978" offset="37798" length="2774" />
          <PacketInfo time="21540009" offset="40572" length="1387" />
          <PacketInfo time="21540009" offset="41959" length="1387" />
          <PacketInfo time="21540087" offset="43346" length="1731" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="678" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/DataTable/jquery.dataTables.js" url="http://ueatworkuat.maxprocessing.com/script/DataTable/jquery.dataTables.js" ip="192.168.250.11" port="8080" connectionId="8" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.161+05:30" startTime="21539666" endTime="21539791">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvRGF0YVRhYmxlL2pxdWVyeS5kYXRhVGFibGVzLmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjozMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjozMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Mzc3Njc2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjozMA0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MzAgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMzc3Njc2DQpBZ2U6IDM1NjQxDQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21539791" offset="0" length="1387" />
          <PacketInfo time="21539791" offset="1387" length="1387" />
          <PacketInfo time="21539806" offset="2774" length="1387" />
          <PacketInfo time="21539806" offset="4161" length="4161" />
          <PacketInfo time="21539838" offset="8322" length="2774" />
          <PacketInfo time="21539916" offset="11096" length="1387" />
          <PacketInfo time="21539916" offset="12483" length="1387" />
          <PacketInfo time="21539947" offset="13870" length="4161" />
          <PacketInfo time="21539947" offset="18031" length="1387" />
          <PacketInfo time="21539978" offset="19418" length="1387" />
          <PacketInfo time="21539978" offset="20805" length="1387" />
          <PacketInfo time="21540056" offset="22192" length="1387" />
          <PacketInfo time="21540072" offset="23579" length="1387" />
          <PacketInfo time="21540087" offset="24966" length="1387" />
          <PacketInfo time="21540087" offset="26353" length="2774" />
          <PacketInfo time="21540103" offset="29127" length="1387" />
          <PacketInfo time="21540134" offset="30514" length="2774" />
          <PacketInfo time="21540212" offset="33288" length="1387" />
          <PacketInfo time="21540212" offset="34675" length="1387" />
          <PacketInfo time="21540243" offset="36062" length="1387" />
          <PacketInfo time="21540243" offset="37449" length="2774" />
          <PacketInfo time="21540243" offset="40223" length="1387" />
          <PacketInfo time="21540274" offset="41610" length="1387" />
          <PacketInfo time="21540274" offset="42997" length="1387" />
          <PacketInfo time="21540352" offset="44384" length="2774" />
          <PacketInfo time="21540384" offset="47158" length="1387" />
          <PacketInfo time="21540384" offset="48545" length="1387" />
          <PacketInfo time="21540384" offset="49932" length="2774" />
          <PacketInfo time="21540446" offset="52706" length="2774" />
          <PacketInfo time="21540493" offset="55480" length="1387" />
          <PacketInfo time="21540493" offset="56867" length="1387" />
          <PacketInfo time="21540540" offset="58254" length="5548" />
          <PacketInfo time="21540571" offset="63802" length="2774" />
          <PacketInfo time="21540649" offset="66576" length="2774" />
          <PacketInfo time="21540680" offset="69350" length="5548" />
          <PacketInfo time="21540711" offset="74898" length="1387" />
          <PacketInfo time="21540711" offset="76285" length="1387" />
          <PacketInfo time="21540789" offset="77672" length="1387" />
          <PacketInfo time="21540789" offset="79059" length="1387" />
          <PacketInfo time="21540820" offset="80446" length="1387" />
          <PacketInfo time="21540836" offset="81833" length="2774" />
          <PacketInfo time="21540836" offset="84607" length="1387" />
          <PacketInfo time="21540867" offset="85994" length="1387" />
          <PacketInfo time="21540867" offset="87381" length="1387" />
          <PacketInfo time="21540945" offset="88768" length="2774" />
          <PacketInfo time="21540976" offset="91542" length="1387" />
          <PacketInfo time="21540976" offset="92929" length="4161" />
          <PacketInfo time="21541008" offset="97090" length="1387" />
          <PacketInfo time="21541023" offset="98477" length="1387" />
          <PacketInfo time="21541101" offset="99864" length="1387" />
          <PacketInfo time="21541101" offset="101251" length="1387" />
          <PacketInfo time="21541132" offset="102638" length="1387" />
          <PacketInfo time="21541132" offset="104025" length="4161" />
          <PacketInfo time="21541164" offset="108186" length="1387" />
          <PacketInfo time="21541164" offset="109573" length="1387" />
          <PacketInfo time="21541242" offset="110960" length="1387" />
          <PacketInfo time="21541242" offset="112347" length="1387" />
          <PacketInfo time="21541288" offset="113734" length="1387" />
          <PacketInfo time="21541288" offset="115121" length="2774" />
          <PacketInfo time="21541288" offset="117895" length="1387" />
          <PacketInfo time="21541320" offset="119282" length="1387" />
          <PacketInfo time="21541320" offset="120669" length="1387" />
          <PacketInfo time="21541398" offset="122056" length="1387" />
          <PacketInfo time="21541398" offset="123443" length="1387" />
          <PacketInfo time="21541444" offset="124830" length="1387" />
          <PacketInfo time="21541444" offset="126217" length="4161" />
          <PacketInfo time="21541476" offset="130378" length="1387" />
          <PacketInfo time="21541476" offset="131765" length="1387" />
          <PacketInfo time="21541554" offset="133152" length="1387" />
          <PacketInfo time="21541569" offset="134539" length="1387" />
          <PacketInfo time="21541600" offset="135926" length="1387" />
          <PacketInfo time="21541600" offset="137313" length="4161" />
          <PacketInfo time="21541632" offset="141474" length="1387" />
          <PacketInfo time="21541632" offset="142861" length="1387" />
          <PacketInfo time="21541710" offset="144248" length="1387" />
          <PacketInfo time="21541710" offset="145635" length="1387" />
          <PacketInfo time="21541756" offset="147022" length="5548" />
          <PacketInfo time="21541788" offset="152570" length="1387" />
          <PacketInfo time="21541803" offset="153957" length="1387" />
          <PacketInfo time="21541881" offset="155344" length="1387" />
          <PacketInfo time="21541881" offset="156731" length="1387" />
          <PacketInfo time="21541912" offset="158118" length="1387" />
          <PacketInfo time="21541912" offset="159505" length="1387" />
          <PacketInfo time="21541928" offset="160892" length="2774" />
          <PacketInfo time="21541959" offset="163666" length="2774" />
          <PacketInfo time="21542037" offset="166440" length="1387" />
          <PacketInfo time="21542037" offset="167827" length="1387" />
          <PacketInfo time="21542068" offset="169214" length="2774" />
          <PacketInfo time="21542084" offset="171988" length="1387" />
          <PacketInfo time="21542084" offset="173375" length="1387" />
          <PacketInfo time="21542146" offset="174762" length="2774" />
          <PacketInfo time="21542193" offset="177536" length="1387" />
          <PacketInfo time="21542193" offset="178923" length="1387" />
          <PacketInfo time="21542240" offset="180310" length="1387" />
          <PacketInfo time="21542240" offset="181697" length="1387" />
          <PacketInfo time="21542240" offset="183084" length="2774" />
          <PacketInfo time="21542287" offset="185858" length="2774" />
          <PacketInfo time="21542365" offset="188632" length="1387" />
          <PacketInfo time="21542365" offset="190019" length="1387" />
          <PacketInfo time="21542412" offset="191406" length="2774" />
          <PacketInfo time="21542412" offset="194180" length="2774" />
          <PacketInfo time="21542443" offset="196954" length="1387" />
          <PacketInfo time="21542458" offset="198341" length="1387" />
          <PacketInfo time="21542536" offset="199728" length="2774" />
          <PacketInfo time="21542568" offset="202502" length="2774" />
          <PacketInfo time="21542568" offset="205276" length="2774" />
          <PacketInfo time="21542614" offset="208050" length="1387" />
          <PacketInfo time="21542614" offset="209437" length="1387" />
          <PacketInfo time="21542692" offset="210824" length="1387" />
          <PacketInfo time="21542708" offset="212211" length="1387" />
          <PacketInfo time="21542739" offset="213598" length="1387" />
          <PacketInfo time="21542739" offset="214985" length="2774" />
          <PacketInfo time="21542739" offset="217759" length="1387" />
          <PacketInfo time="21542786" offset="219146" length="1387" />
          <PacketInfo time="21542786" offset="220533" length="1387" />
          <PacketInfo time="21542864" offset="221920" length="1387" />
          <PacketInfo time="21542880" offset="223307" length="1387" />
          <PacketInfo time="21542911" offset="224694" length="1387" />
          <PacketInfo time="21542911" offset="226081" length="4161" />
          <PacketInfo time="21542958" offset="230242" length="1387" />
          <PacketInfo time="21542958" offset="231629" length="1387" />
          <PacketInfo time="21543036" offset="233016" length="1387" />
          <PacketInfo time="21543036" offset="234403" length="1387" />
          <PacketInfo time="21543082" offset="235790" length="1387" />
          <PacketInfo time="21543082" offset="237177" length="2774" />
          <PacketInfo time="21543098" offset="239951" length="1387" />
          <PacketInfo time="21543129" offset="241338" length="1387" />
          <PacketInfo time="21543129" offset="242725" length="1387" />
          <PacketInfo time="21543207" offset="244112" length="1387" />
          <PacketInfo time="21543207" offset="245499" length="1387" />
          <PacketInfo time="21543254" offset="246886" length="1387" />
          <PacketInfo time="21543254" offset="248273" length="4161" />
          <PacketInfo time="21543301" offset="252434" length="1387" />
          <PacketInfo time="21543301" offset="253821" length="1387" />
          <PacketInfo time="21543379" offset="255208" length="1387" />
          <PacketInfo time="21543426" offset="256595" length="1387" />
          <PacketInfo time="21543426" offset="257982" length="1387" />
          <PacketInfo time="21543441" offset="259369" length="4161" />
          <PacketInfo time="21543472" offset="263530" length="1387" />
          <PacketInfo time="21543472" offset="264917" length="1387" />
          <PacketInfo time="21543566" offset="266304" length="2774" />
          <PacketInfo time="21543613" offset="269078" length="4161" />
          <PacketInfo time="21543613" offset="273239" length="1387" />
          <PacketInfo time="21543644" offset="274626" length="1387" />
          <PacketInfo time="21543675" offset="276013" length="1387" />
          <PacketInfo time="21543738" offset="277400" length="2774" />
          <PacketInfo time="21543784" offset="280174" length="5548" />
          <PacketInfo time="21543831" offset="285722" length="1387" />
          <PacketInfo time="21543831" offset="287109" length="1387" />
          <PacketInfo time="21543909" offset="288496" length="2774" />
          <PacketInfo time="21543956" offset="291270" length="1387" />
          <PacketInfo time="21543956" offset="292657" length="4161" />
          <PacketInfo time="21544003" offset="296818" length="1387" />
          <PacketInfo time="21544003" offset="298205" length="1387" />
          <PacketInfo time="21544081" offset="299592" length="2774" />
          <PacketInfo time="21544128" offset="302366" length="1387" />
          <PacketInfo time="21544128" offset="303753" length="4161" />
          <PacketInfo time="21544174" offset="307914" length="1387" />
          <PacketInfo time="21544174" offset="309301" length="1387" />
          <PacketInfo time="21544252" offset="310688" length="1387" />
          <PacketInfo time="21544252" offset="312075" length="1387" />
          <PacketInfo time="21544299" offset="313462" length="1387" />
          <PacketInfo time="21544299" offset="314849" length="1387" />
          <PacketInfo time="21544299" offset="316236" length="2774" />
          <PacketInfo time="21544346" offset="319010" length="1387" />
          <PacketInfo time="21544346" offset="320397" length="1387" />
          <PacketInfo time="21544440" offset="321784" length="1387" />
          <PacketInfo time="21544440" offset="323171" length="1387" />
          <PacketInfo time="21544471" offset="324558" length="1387" />
          <PacketInfo time="21544486" offset="325945" length="2774" />
          <PacketInfo time="21544486" offset="328719" length="1387" />
          <PacketInfo time="21544518" offset="330106" length="1387" />
          <PacketInfo time="21544518" offset="331493" length="1387" />
          <PacketInfo time="21544611" offset="332880" length="1387" />
          <PacketInfo time="21544611" offset="334267" length="1387" />
          <PacketInfo time="21544658" offset="335654" length="1387" />
          <PacketInfo time="21544658" offset="337041" length="2774" />
          <PacketInfo time="21544658" offset="339815" length="1387" />
          <PacketInfo time="21544689" offset="341202" length="1387" />
          <PacketInfo time="21544705" offset="342589" length="1387" />
          <PacketInfo time="21544814" offset="343976" length="1387" />
          <PacketInfo time="21544830" offset="345363" length="1387" />
          <PacketInfo time="21544845" offset="346750" length="1387" />
          <PacketInfo time="21544861" offset="348137" length="4161" />
          <PacketInfo time="21544876" offset="352298" length="1387" />
          <PacketInfo time="21544876" offset="353685" length="1387" />
          <PacketInfo time="21544954" offset="355072" length="1387" />
          <PacketInfo time="21544954" offset="356459" length="1387" />
          <PacketInfo time="21545017" offset="357846" length="1387" />
          <PacketInfo time="21545017" offset="359233" length="2774" />
          <PacketInfo time="21545064" offset="362007" length="1387" />
          <PacketInfo time="21545064" offset="363394" length="1387" />
          <PacketInfo time="21545110" offset="364781" length="1387" />
          <PacketInfo time="21545126" offset="366168" length="1387" />
          <PacketInfo time="21545188" offset="367555" length="1387" />
          <PacketInfo time="21545188" offset="368942" length="1387" />
          <PacketInfo time="21545251" offset="370329" length="1387" />
          <PacketInfo time="21545251" offset="371716" length="1387" />
          <PacketInfo time="21545313" offset="373103" length="1387" />
          <PacketInfo time="21545313" offset="374490" length="1387" />
          <PacketInfo time="21545376" offset="375877" length="1387" />
          <PacketInfo time="21545391" offset="377264" length="762" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="706" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/DataTable/TableTools.min.js" url="http://ueatworkuat.maxprocessing.com/script/DataTable/TableTools.min.js" ip="192.168.250.11" port="8080" connectionId="7" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.177+05:30" startTime="21539775" endTime="21539947">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvRGF0YVRhYmxlL1RhYmxlVG9vbHMubWluLmpzIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjoyOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjkyMjY=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzU2NDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjoyOQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MjkgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMjkyMjYNCkFnZTogMzU2NDINClZpYTogMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ly8gU2ltcGxlIFNldCBDbGlwYm9hcmQgU3lzdGVtCi8vIEF1dGhvcjogSm9zZXBoIEh1Y2thYnkKdmFyIFplcm9DbGlwYm9hcmRfVGFibGVUb29scz17dmVyc2lvbjoiMS4wLjQtVGFibGVUb29sczIiLGNsaWVudHM6e30sbW92aWVQYXRoOiIiLG5leHRJZDoxLCQ6ZnVuY3Rpb24oYSl7InN0cmluZyI9PXR5cGVvZiBhJiYoYT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChhKSk7YS5hZGRDbGFzc3x8KGEuaGlkZT1mdW5jdGlvbigpe3RoaXMuc3R5bGUuZGlzcGxheT0ibm9uZSJ9LGEuc2hvdz1mdW5jdGlvbigpe3RoaXMuc3R5bGUuZGlzcGxheT0iIn0sYS5hZGRDbGFzcz1mdW5jdGlvbihhKXt0aGlzLnJlbW92ZUNsYXNzKGEpO3RoaXMuY2xhc3NOYW1lKz0iICIrYX0sYS5yZW1vdmVDbGFzcz1mdW5jdGlvbihhKXt0aGlzLmNsYXNzTmFtZT10aGlzLmNsYXNzTmFtZS5yZXBsYWNlKFJlZ0V4cCgiXFxzKiIrYSsiXFxzKiIpLCIgIikucmVwbGFjZSgvXlxzKy8sIiIpLnJlcGxhY2UoL1xzKyQvLCIiKX0sYS5oYXNDbGFzcz1mdW5jdGlvbihhKXtyZXR1cm4hIXRoaXMuY2xhc3NOYW1lLm1hdGNoKFJlZ0V4cCgiXFxzKiIrCmErIlxccyoiKSl9KTtyZXR1cm4gYX0sc2V0TW92aWVQYXRoOmZ1bmN0aW9uKGEpe3RoaXMubW92aWVQYXRoPWF9LGRpc3BhdGNoOmZ1bmN0aW9uKGEsYixjKXsoYT10aGlzLmNsaWVudHNbYV0pJiZhLnJlY2VpdmVFdmVudChiLGMpfSxyZWdpc3RlcjpmdW5jdGlvbihhLGIpe3RoaXMuY2xpZW50c1thXT1ifSxnZXRET01PYmplY3RQb3NpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj17bGVmdDowLHRvcDowLHdpZHRoOmEud2lkdGg/YS53aWR0aDphLm9mZnNldFdpZHRoLGhlaWdodDphLmhlaWdodD9hLmhlaWdodDphLm9mZnNldEhlaWdodH07IiIhPWEuc3R5bGUud2lkdGgmJihiLndpZHRoPWEuc3R5bGUud2lkdGgucmVwbGFjZSgicHgiLCIiKSk7IiIhPWEuc3R5bGUuaGVpZ2h0JiYoYi5oZWlnaHQ9YS5zdHlsZS5oZWlnaHQucmVwbGFjZSgicHgiLCIiKSk7Zm9yKDthOyliLmxlZnQrPWEub2Zmc2V0TGVmdCxiLnRvcCs9YS5vZmZzZXRUb3AsYT1hLm9mZnNldFBhcmVudDtyZXR1cm4gYn0sCkNsaWVudDpmdW5jdGlvbihhKXt0aGlzLmhhbmRsZXJzPXt9O3RoaXMuaWQ9WmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLm5leHRJZCsrO3RoaXMubW92aWVJZD0iWmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzTW92aWVfIit0aGlzLmlkO1plcm9DbGlwYm9hcmRfVGFibGVUb29scy5yZWdpc3Rlcih0aGlzLmlkLHRoaXMpO2EmJnRoaXMuZ2x1ZShhKX19OwpaZXJvQ2xpcGJvYXJkX1RhYmxlVG9vbHMuQ2xpZW50LnByb3RvdHlwZT17aWQ6MCxyZWFkeTohMSxtb3ZpZTpudWxsLGNsaXBUZXh0OiIiLGZpbGVOYW1lOiIiLGFjdGlvbjoiY29weSIsaGFuZEN1cnNvckVuYWJsZWQ6ITAsY3NzRWZmZWN0czohMCxoYW5kbGVyczpudWxsLHNpemVkOiExLGdsdWU6ZnVuY3Rpb24oYSxiKXt0aGlzLmRvbUVsZW1lbnQ9WmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLiQoYSk7dmFyIGM9OTk7dGhpcy5kb21FbGVtZW50LnN0eWxlLnpJbmRleCYmKGM9cGFyc2VJbnQodGhpcy5kb21FbGVtZW50LnN0eWxlLnpJbmRleCkrMSk7dmFyIGQ9WmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLmdldERPTU9iamVjdFBvc2l0aW9uKHRoaXMuZG9tRWxlbWVudCk7dGhpcy5kaXY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7dmFyIGU9dGhpcy5kaXYuc3R5bGU7ZS5wb3NpdGlvbj0iYWJzb2x1dGUiO2UubGVmdD0iMHB4IjtlLnRvcD0iMHB4IjtlLndpZHRoPWQud2lkdGgrCiJweCI7ZS5oZWlnaHQ9ZC5oZWlnaHQrInB4IjtlLnpJbmRleD1jOyJ1bmRlZmluZWQiIT10eXBlb2YgYiYmIiIhPWImJih0aGlzLmRpdi50aXRsZT1iKTswIT1kLndpZHRoJiYwIT1kLmhlaWdodCYmKHRoaXMuc2l6ZWQ9ITApO3RoaXMuZG9tRWxlbWVudCYmKHRoaXMuZG9tRWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmRpdiksdGhpcy5kaXYuaW5uZXJIVE1MPXRoaXMuZ2V0SFRNTChkLndpZHRoLGQuaGVpZ2h0KSl9LHBvc2l0aW9uRWxlbWVudDpmdW5jdGlvbigpe3ZhciBhPVplcm9DbGlwYm9hcmRfVGFibGVUb29scy5nZXRET01PYmplY3RQb3NpdGlvbih0aGlzLmRvbUVsZW1lbnQpLGI9dGhpcy5kaXYuc3R5bGU7Yi5wb3NpdGlvbj0iYWJzb2x1dGUiO2Iud2lkdGg9YS53aWR0aCsicHgiO2IuaGVpZ2h0PWEuaGVpZ2h0KyJweCI7MCE9YS53aWR0aCYmMCE9YS5oZWlnaHQmJih0aGlzLnNpemVkPSEwLGI9dGhpcy5kaXYuY2hpbGROb2Rlc1swXSxiLndpZHRoPWEud2lkdGgsYi5oZWlnaHQ9CmEuaGVpZ2h0KX0sZ2V0SFRNTDpmdW5jdGlvbihhLGIpe3ZhciBjPSIiLGQ9ImlkPSIrdGhpcy5pZCsiJndpZHRoPSIrYSsiJmhlaWdodD0iK2I7aWYobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvTVNJRS8pKXZhciBlPWxvY2F0aW9uLmhyZWYubWF0Y2goL15odHRwcy9pKT8iaHR0cHM6Ly8iOiJodHRwOi8vIixjPWMrKCc8b2JqZWN0IGNsYXNzaWQ9ImNsc2lkOkQyN0NEQjZFLUFFNkQtMTFjZi05NkI4LTQ0NDU1MzU0MDAwMCIgY29kZWJhc2U9IicrZSsnZG93bmxvYWQubWFjcm9tZWRpYS5jb20vcHViL3Nob2Nrd2F2ZS9jYWJzL2ZsYXNoL3N3Zmxhc2guY2FiI3ZlcnNpb249MTAsMCwwLDAiIHdpZHRoPSInK2ErJyIgaGVpZ2h0PSInK2IrJyIgaWQ9IicrdGhpcy5tb3ZpZUlkKyciIGFsaWduPSJtaWRkbGUiPjxwYXJhbSBuYW1lPSJhbGxvd1NjcmlwdEFjY2VzcyIgdmFsdWU9ImFsd2F5cyIgLz48cGFyYW0gbmFtZT0iYWxsb3dGdWxsU2NyZWVuIiB2YWx1ZT0iZmFsc2UiIC8+PHBhcmFtIG5hbWU9Im1vdmllIiB2YWx1ZT0iJysKWmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLm1vdmllUGF0aCsnIiAvPjxwYXJhbSBuYW1lPSJsb29wIiB2YWx1ZT0iZmFsc2UiIC8+PHBhcmFtIG5hbWU9Im1lbnUiIHZhbHVlPSJmYWxzZSIgLz48cGFyYW0gbmFtZT0icXVhbGl0eSIgdmFsdWU9ImJlc3QiIC8+PHBhcmFtIG5hbWU9ImJnY29sb3IiIHZhbHVlPSIjZmZmZmZmIiAvPjxwYXJhbSBuYW1lPSJmbGFzaHZhcnMiIHZhbHVlPSInK2QrJyIvPjxwYXJhbSBuYW1lPSJ3bW9kZSIgdmFsdWU9InRyYW5zcGFyZW50Ii8+PC9vYmplY3Q+Jyk7ZWxzZSBjKz0nPGVtYmVkIGlkPSInK3RoaXMubW92aWVJZCsnIiBzcmM9IicrWmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLm1vdmllUGF0aCsnIiBsb29wPSJmYWxzZSIgbWVudT0iZmFsc2UiIHF1YWxpdHk9ImJlc3QiIGJnY29sb3I9IiNmZmZmZmYiIHdpZHRoPSInK2ErJyIgaGVpZ2h0PSInK2IrJyIgbmFtZT0iJyt0aGlzLm1vdmllSWQrJyIgYWxpZ249Im1pZGRsZSIgYWxsb3dTY3JpcHRBY2Nlc3M9ImFsd2F5cyIgYWxsb3dGdWxsU2NyZWVuPSJmYWxzZSIgdHlwZT0iYXBwbGljYXRpb24veC1zaG9ja3dhdmUtZmxhc2giIHBsdWdpbnNwYWdlPSJodHRwOi8vd3d3Lm1hY3JvbWVkaWEuY29tL2dvL2dldGZsYXNocGxheWVyIiBmbGFzaHZhcnM9IicrCmQrJyIgd21vZGU9InRyYW5zcGFyZW50IiAvPic7cmV0dXJuIGN9LGhpZGU6ZnVuY3Rpb24oKXt0aGlzLmRpdiYmKHRoaXMuZGl2LnN0eWxlLmxlZnQ9Ii0yMDAwcHgiKX0sc2hvdzpmdW5jdGlvbigpe3RoaXMucmVwb3NpdGlvbigpfSxkZXN0cm95OmZ1bmN0aW9uKCl7aWYodGhpcy5kb21FbGVtZW50JiZ0aGlzLmRpdil7dGhpcy5oaWRlKCk7dGhpcy5kaXYuaW5uZXJIVE1MPSIiO3ZhciBhPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF07dHJ5e2EucmVtb3ZlQ2hpbGQodGhpcy5kaXYpfWNhdGNoKGIpe310aGlzLmRpdj10aGlzLmRvbUVsZW1lbnQ9bnVsbH19LHJlcG9zaXRpb246ZnVuY3Rpb24oYSl7YSYmKCh0aGlzLmRvbUVsZW1lbnQ9WmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLiQoYSkpfHx0aGlzLmhpZGUoKSk7aWYodGhpcy5kb21FbGVtZW50JiZ0aGlzLmRpdil7dmFyIGE9WmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLmdldERPTU9iamVjdFBvc2l0aW9uKHRoaXMuZG9tRWxlbWVudCksCmI9dGhpcy5kaXYuc3R5bGU7Yi5sZWZ0PSIiK2EubGVmdCsicHgiO2IudG9wPSIiK2EudG9wKyJweCJ9fSxjbGVhclRleHQ6ZnVuY3Rpb24oKXt0aGlzLmNsaXBUZXh0PSIiO3RoaXMucmVhZHkmJnRoaXMubW92aWUuY2xlYXJUZXh0KCl9LGFwcGVuZFRleHQ6ZnVuY3Rpb24oYSl7dGhpcy5jbGlwVGV4dCs9YTt0aGlzLnJlYWR5JiZ0aGlzLm1vdmllLmFwcGVuZFRleHQoYSl9LHNldFRleHQ6ZnVuY3Rpb24oYSl7dGhpcy5jbGlwVGV4dD1hO3RoaXMucmVhZHkmJnRoaXMubW92aWUuc2V0VGV4dChhKX0sc2V0Q2hhclNldDpmdW5jdGlvbihhKXt0aGlzLmNoYXJTZXQ9YTt0aGlzLnJlYWR5JiZ0aGlzLm1vdmllLnNldENoYXJTZXQoYSl9LHNldEJvbUluYzpmdW5jdGlvbihhKXt0aGlzLmluY0JvbT1hO3RoaXMucmVhZHkmJnRoaXMubW92aWUuc2V0Qm9tSW5jKGEpfSxzZXRGaWxlTmFtZTpmdW5jdGlvbihhKXt0aGlzLmZpbGVOYW1lPWE7dGhpcy5yZWFkeSYmdGhpcy5tb3ZpZS5zZXRGaWxlTmFtZShhKX0sCnNldEFjdGlvbjpmdW5jdGlvbihhKXt0aGlzLmFjdGlvbj1hO3RoaXMucmVhZHkmJnRoaXMubW92aWUuc2V0QWN0aW9uKGEpfSxhZGRFdmVudExpc3RlbmVyOmZ1bmN0aW9uKGEsYil7YT1hLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9eb24vLCIiKTt0aGlzLmhhbmRsZXJzW2FdfHwodGhpcy5oYW5kbGVyc1thXT1bXSk7dGhpcy5oYW5kbGVyc1thXS5wdXNoKGIpfSxzZXRIYW5kQ3Vyc29yOmZ1bmN0aW9uKGEpe3RoaXMuaGFuZEN1cnNvckVuYWJsZWQ9YTt0aGlzLnJlYWR5JiZ0aGlzLm1vdmllLnNldEhhbmRDdXJzb3IoYSl9LHNldENTU0VmZmVjdHM6ZnVuY3Rpb24oYSl7dGhpcy5jc3NFZmZlY3RzPSEhYX0scmVjZWl2ZUV2ZW50OmZ1bmN0aW9uKGEsYil7YT1hLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9eb24vLCIiKTtzd2l0Y2goYSl7Y2FzZSAibG9hZCI6dGhpcy5tb3ZpZT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLm1vdmllSWQpOwppZighdGhpcy5tb3ZpZSl7dmFyIGM9dGhpcztzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5yZWNlaXZlRXZlbnQoImxvYWQiLG51bGwpfSwxKTtyZXR1cm59aWYoIXRoaXMucmVhZHkmJm5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0ZpcmVmb3gvKSYmbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvV2luZG93cy8pKXtjPXRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpe2MucmVjZWl2ZUV2ZW50KCJsb2FkIixudWxsKX0sMTAwKTt0aGlzLnJlYWR5PSEwO3JldHVybn10aGlzLnJlYWR5PSEwO3RoaXMubW92aWUuY2xlYXJUZXh0KCk7dGhpcy5tb3ZpZS5hcHBlbmRUZXh0KHRoaXMuY2xpcFRleHQpO3RoaXMubW92aWUuc2V0RmlsZU5hbWUodGhpcy5maWxlTmFtZSk7dGhpcy5tb3ZpZS5zZXRBY3Rpb24odGhpcy5hY3Rpb24pO3RoaXMubW92aWUuc2V0Q2hhclNldCh0aGlzLmNoYXJTZXQpO3RoaXMubW92aWUuc2V0Qm9tSW5jKHRoaXMuaW5jQm9tKTt0aGlzLm1vdmllLnNldEhhbmRDdXJzb3IodGhpcy5oYW5kQ3Vyc29yRW5hYmxlZCk7CmJyZWFrO2Nhc2UgIm1vdXNlb3ZlciI6dGhpcy5kb21FbGVtZW50JiZ0aGlzLmNzc0VmZmVjdHMmJnRoaXMucmVjb3ZlckFjdGl2ZSYmdGhpcy5kb21FbGVtZW50LmFkZENsYXNzKCJhY3RpdmUiKTticmVhaztjYXNlICJtb3VzZW91dCI6dGhpcy5kb21FbGVtZW50JiZ0aGlzLmNzc0VmZmVjdHMmJih0aGlzLnJlY292ZXJBY3RpdmU9ITEsdGhpcy5kb21FbGVtZW50Lmhhc0NsYXNzKCJhY3RpdmUiKSYmKHRoaXMuZG9tRWxlbWVudC5yZW1vdmVDbGFzcygiYWN0aXZlIiksdGhpcy5yZWNvdmVyQWN0aXZlPSEwKSk7YnJlYWs7Y2FzZSAibW91c2Vkb3duIjp0aGlzLmRvbUVsZW1lbnQmJnRoaXMuY3NzRWZmZWN0cyYmdGhpcy5kb21FbGVtZW50LmFkZENsYXNzKCJhY3RpdmUiKTticmVhaztjYXNlICJtb3VzZXVwIjp0aGlzLmRvbUVsZW1lbnQmJnRoaXMuY3NzRWZmZWN0cyYmKHRoaXMuZG9tRWxlbWVudC5yZW1vdmVDbGFzcygiYWN0aXZlIiksdGhpcy5yZWNvdmVyQWN0aXZlPSExKX1pZih0aGlzLmhhbmRsZXJzW2FdKWZvcih2YXIgZD0KMCxlPXRoaXMuaGFuZGxlcnNbYV0ubGVuZ3RoO2Q8ZTtkKyspe3ZhciBmPXRoaXMuaGFuZGxlcnNbYV1bZF07aWYoImZ1bmN0aW9uIj09dHlwZW9mIGYpZih0aGlzLGIpO2Vsc2UgaWYoIm9iamVjdCI9PXR5cGVvZiBmJiYyPT1mLmxlbmd0aClmWzBdW2ZbMV1dKHRoaXMsYik7ZWxzZSBpZigic3RyaW5nIj09dHlwZW9mIGYpd2luZG93W2ZdKHRoaXMsYil9fX07CgoKLyoKICogRmlsZTogICAgICAgIFRhYmxlVG9vbHMubWluLmpzCiAqIFZlcnNpb246ICAgICAyLjEuMwogKiBBdXRob3I6ICAgICAgQWxsYW4gSmFyZGluZSAod3d3LnNwcnltZWRpYS5jby51aykKICogCiAqIENvcHlyaWdodCAyMDA5LTIwMTIgQWxsYW4gSmFyZGluZSwgYWxsIHJpZ2h0cyByZXNlcnZlZC4KICoKICogVGhpcyBzb3VyY2UgZmlsZSBpcyBmcmVlIHNvZnR3YXJlLCB1bmRlciBlaXRoZXIgdGhlIEdQTCB2MiBsaWNlbnNlIG9yIGEKICogQlNEICgzIHBvaW50KSBzdHlsZSBsaWNlbnNlLCBhcyBzdXBwbGllZCB3aXRoIHRoaXMgc29mdHdhcmUuCiAqIAogKiBUaGlzIHNvdXJjZSBmaWxlIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsIGJ1dCAKICogV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZiBNRVJDSEFOVEFCSUxJVFkgCiAqIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIGxpY2Vuc2UgZmlsZXMgZm9yIGRldGFpbHMuCiAqLwp2YXIgVGFibGVUb29sczsKKGZ1bmN0aW9uKGUsbSxmKXtUYWJsZVRvb2xzPWZ1bmN0aW9uKGEsYil7IXRoaXMgaW5zdGFuY2VvZiBUYWJsZVRvb2xzJiZhbGVydCgiV2FybmluZzogVGFibGVUb29scyBtdXN0IGJlIGluaXRpYWxpc2VkIHdpdGggdGhlIGtleXdvcmQgJ25ldyciKTt0aGlzLnM9e3RoYXQ6dGhpcyxkdDphLmZuU2V0dGluZ3MoKSxwcmludDp7c2F2ZVN0YXJ0Oi0xLHNhdmVMZW5ndGg6LTEsc2F2ZVNjcm9sbDotMSxmdW5jRW5kOmZ1bmN0aW9uKCl7fX0sYnV0dG9uQ291bnRlcjowLHNlbGVjdDp7dHlwZToiIixzZWxlY3RlZDpbXSxwcmVSb3dTZWxlY3Q6bnVsbCxwb3N0U2VsZWN0ZWQ6bnVsbCxwb3N0RGVzZWxlY3RlZDpudWxsLGFsbDohMSxzZWxlY3RlZENsYXNzOiIifSxjdXN0b206e30sc3dmUGF0aDoiIixidXR0b25TZXQ6W10sbWFzdGVyOiExLHRhZ3M6e319O3RoaXMuZG9tPXtjb250YWluZXI6bnVsbCx0YWJsZTpudWxsLHByaW50OntoaWRkZW46W10sbWVzc2FnZTpudWxsfSxjb2xsZWN0aW9uOntjb2xsZWN0aW9uOm51bGwsCmJhY2tncm91bmQ6bnVsbH19O3RoaXMuY2xhc3Nlcz1lLmV4dGVuZCghMCx7fSxUYWJsZVRvb2xzLmNsYXNzZXMpO3RoaXMucy5kdC5iSlVJJiZlLmV4dGVuZCghMCx0aGlzLmNsYXNzZXMsVGFibGVUb29scy5jbGFzc2VzX3RoZW1lcm9sbGVyKTt0aGlzLmZuU2V0dGluZ3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zfTsidW5kZWZpbmVkIj09dHlwZW9mIGImJihiPXt9KTt0aGlzLl9mbkNvbnN0cnVjdChiKTtyZXR1cm4gdGhpc307VGFibGVUb29scy5wcm90b3R5cGU9e2ZuR2V0U2VsZWN0ZWQ6ZnVuY3Rpb24oKXt2YXIgYT1bXSxiPXRoaXMucy5kdC5hb0RhdGEsYyxkO2M9MDtmb3IoZD1iLmxlbmd0aDtjPGQ7YysrKWJbY10uX0RUVFRfc2VsZWN0ZWQmJmEucHVzaChiW2NdLm5Ucik7cmV0dXJuIGF9LGZuR2V0U2VsZWN0ZWREYXRhOmZ1bmN0aW9uKCl7dmFyIGE9W10sYj10aGlzLnMuZHQuYW9EYXRhLGMsZDtjPTA7Zm9yKGQ9Yi5sZW5ndGg7YzxkO2MrKyliW2NdLl9EVFRUX3NlbGVjdGVkJiYKYS5wdXNoKHRoaXMucy5kdC5vSW5zdGFuY2UuZm5HZXREYXRhKGMpKTtyZXR1cm4gYX0sZm5Jc1NlbGVjdGVkOmZ1bmN0aW9uKGEpe2E9dGhpcy5zLmR0Lm9JbnN0YW5jZS5mbkdldFBvc2l0aW9uKGEpO3JldHVybiEwPT09dGhpcy5zLmR0LmFvRGF0YVthXS5fRFRUVF9zZWxlY3RlZD8hMDohMX0sZm5TZWxlY3RBbGw6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5fZm5HZXRNYXN0ZXJTZXR0aW5ncygpO3RoaXMuX2ZuUm93U2VsZWN0KCEwPT09YT9iLmR0LmFpRGlzcGxheTpiLmR0LmFvRGF0YSl9LGZuU2VsZWN0Tm9uZTpmdW5jdGlvbihhKXt2YXIgYj10aGlzLl9mbkdldE1hc3RlclNldHRpbmdzKCk7dGhpcy5fZm5Sb3dEZXNlbGVjdCghMD09PWE/Yi5kdC5haURpc3BsYXk6Yi5kdC5hb0RhdGEpfSxmblNlbGVjdDpmdW5jdGlvbihhKXsic2luZ2xlIj09dGhpcy5zLnNlbGVjdC50eXBlPyh0aGlzLmZuU2VsZWN0Tm9uZSgpLHRoaXMuX2ZuUm93U2VsZWN0KGEpKToibXVsdGkiPT10aGlzLnMuc2VsZWN0LnR5cGUmJgp0aGlzLl9mblJvd1NlbGVjdChhKX0sZm5EZXNlbGVjdDpmdW5jdGlvbihhKXt0aGlzLl9mblJvd0Rlc2VsZWN0KGEpfSxmbkdldFRpdGxlOmZ1bmN0aW9uKGEpe3ZhciBiPSIiOyJ1bmRlZmluZWQiIT10eXBlb2YgYS5zVGl0bGUmJiIiIT09YS5zVGl0bGU/Yj1hLnNUaXRsZTooYT1mLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0aXRsZSIpLDA8YS5sZW5ndGgmJihiPWFbMF0uaW5uZXJIVE1MKSk7cmV0dXJuIDQ+Ilx1MDBhMSIudG9TdHJpbmcoKS5sZW5ndGg/Yi5yZXBsYWNlKC9bXmEtekEtWjAtOV9cdTAwQTEtXHVGRkZGXC4sXC1fICFcKFwpXS9nLCIiKTpiLnJlcGxhY2UoL1teYS16QS1aMC05X1wuLFwtXyAhXChcKV0vZywiIil9LGZuQ2FsY0NvbFJhdGlvczpmdW5jdGlvbihhKXt2YXIgYj10aGlzLnMuZHQuYW9Db2x1bW5zLGE9dGhpcy5fZm5Db2x1bW5UYXJnZXRzKGEubUNvbHVtbnMpLGM9W10sZD0wLGU9MCxoLGY7aD0wO2ZvcihmPWEubGVuZ3RoO2g8ZjtoKyspYVtoXSYmKGQ9CmJbaF0ublRoLm9mZnNldFdpZHRoLGUrPWQsYy5wdXNoKGQpKTtoPTA7Zm9yKGY9Yy5sZW5ndGg7aDxmO2grKyljW2hdLz1lO3JldHVybiBjLmpvaW4oIlx0Iil9LGZuR2V0VGFibGVEYXRhOmZ1bmN0aW9uKGEpe2lmKHRoaXMucy5kdClyZXR1cm4gdGhpcy5fZm5HZXREYXRhVGFibGVzRGF0YShhKX0sZm5TZXRUZXh0OmZ1bmN0aW9uKGEsYil7dGhpcy5fZm5GbGFzaFNldFRleHQoYSxiKX0sZm5SZXNpemVCdXR0b25zOmZ1bmN0aW9uKCl7Zm9yKHZhciBhIGluIFplcm9DbGlwYm9hcmRfVGFibGVUb29scy5jbGllbnRzKWlmKGEpe3ZhciBiPVplcm9DbGlwYm9hcmRfVGFibGVUb29scy5jbGllbnRzW2FdOyJ1bmRlZmluZWQiIT10eXBlb2YgYi5kb21FbGVtZW50JiZiLmRvbUVsZW1lbnQucGFyZW50Tm9kZSYmYi5wb3NpdGlvbkVsZW1lbnQoKX19LGZuUmVzaXplUmVxdWlyZWQ6ZnVuY3Rpb24oKXtmb3IodmFyIGEgaW4gWmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLmNsaWVudHMpaWYoYSl7dmFyIGI9Clplcm9DbGlwYm9hcmRfVGFibGVUb29scy5jbGllbnRzW2FdO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgYi5kb21FbGVtZW50JiZiLmRvbUVsZW1lbnQucGFyZW50Tm9kZT09dGhpcy5kb20uY29udGFpbmVyJiYhMT09PWIuc2l6ZWQpcmV0dXJuITB9cmV0dXJuITF9LGZuUHJpbnQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj17fSk7dm9pZCAwPT09YXx8YT90aGlzLl9mblByaW50U3RhcnQoYik6dGhpcy5fZm5QcmludEVuZCgpfSxmbkluZm86ZnVuY3Rpb24oYSxiKXt2YXIgYz1mLmNyZWF0ZUVsZW1lbnQoImRpdiIpO2MuY2xhc3NOYW1lPXRoaXMuY2xhc3Nlcy5wcmludC5pbmZvO2MuaW5uZXJIVE1MPWE7Zi5ib2R5LmFwcGVuZENoaWxkKGMpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtlKGMpLmZhZGVPdXQoIm5vcm1hbCIsZnVuY3Rpb24oKXtmLmJvZHkucmVtb3ZlQ2hpbGQoYyl9KX0sYil9LF9mbkNvbnN0cnVjdDpmdW5jdGlvbihhKXt2YXIgYj10aGlzO3RoaXMuX2ZuQ3VzdG9taXNlU2V0dGluZ3MoYSk7CnRoaXMuZG9tLmNvbnRhaW5lcj1mLmNyZWF0ZUVsZW1lbnQodGhpcy5zLnRhZ3MuY29udGFpbmVyKTt0aGlzLmRvbS5jb250YWluZXIuY2xhc3NOYW1lPXRoaXMuY2xhc3Nlcy5jb250YWluZXI7Im5vbmUiIT10aGlzLnMuc2VsZWN0LnR5cGUmJnRoaXMuX2ZuUm93U2VsZWN0Q29uZmlnKCk7dGhpcy5fZm5CdXR0b25EZWZpbmF0aW9ucyh0aGlzLnMuYnV0dG9uU2V0LHRoaXMuZG9tLmNvbnRhaW5lcik7dGhpcy5zLmR0LmFvRGVzdHJveUNhbGxiYWNrLnB1c2goe3NOYW1lOiJUYWJsZVRvb2xzIixmbjpmdW5jdGlvbigpe2IuZG9tLmNvbnRhaW5lci5pbm5lckhUTUw9IiJ9fSl9LF9mbkN1c3RvbWlzZVNldHRpbmdzOmZ1bmN0aW9uKGEpeyJ1bmRlZmluZWQiPT10eXBlb2YgdGhpcy5zLmR0Ll9UYWJsZVRvb2xzSW5pdCYmKHRoaXMucy5tYXN0ZXI9ITAsdGhpcy5zLmR0Ll9UYWJsZVRvb2xzSW5pdD0hMCk7dGhpcy5kb20udGFibGU9dGhpcy5zLmR0Lm5UYWJsZTt0aGlzLnMuY3VzdG9tPQplLmV4dGVuZCh7fSxUYWJsZVRvb2xzLkRFRkFVTFRTLGEpO3RoaXMucy5zd2ZQYXRoPXRoaXMucy5jdXN0b20uc1N3ZlBhdGg7InVuZGVmaW5lZCIhPXR5cGVvZiBaZXJvQ2xpcGJvYXJkX1RhYmxlVG9vbHMmJihaZXJvQ2xpcGJvYXJkX1RhYmxlVG9vbHMubW92aWVQYXRoPXRoaXMucy5zd2ZQYXRoKTt0aGlzLnMuc2VsZWN0LnR5cGU9dGhpcy5zLmN1c3RvbS5zUm93U2VsZWN0O3RoaXMucy5zZWxlY3QucHJlUm93U2VsZWN0PXRoaXMucy5jdXN0b20uZm5QcmVSb3dTZWxlY3Q7dGhpcy5zLnNlbGVjdC5wb3N0U2VsZWN0ZWQ9dGhpcy5zLmN1c3RvbS5mblJvd1NlbGVjdGVkO3RoaXMucy5zZWxlY3QucG9zdERlc2VsZWN0ZWQ9dGhpcy5zLmN1c3RvbS5mblJvd0Rlc2VsZWN0ZWQ7dGhpcy5zLmN1c3RvbS5zU2VsZWN0ZWRDbGFzcyYmKHRoaXMuY2xhc3Nlcy5zZWxlY3Qucm93PXRoaXMucy5jdXN0b20uc1NlbGVjdGVkQ2xhc3MpO3RoaXMucy50YWdzPXRoaXMucy5jdXN0b20ub1RhZ3M7CnRoaXMucy5idXR0b25TZXQ9dGhpcy5zLmN1c3RvbS5hQnV0dG9uc30sX2ZuQnV0dG9uRGVmaW5hdGlvbnM6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGMsZD0wLGc9YS5sZW5ndGg7ZDxnO2QrKyl7aWYoInN0cmluZyI9PXR5cGVvZiBhW2RdKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIFRhYmxlVG9vbHMuQlVUVE9OU1thW2RdXSl7YWxlcnQoIlRhYmxlVG9vbHM6IFdhcm5pbmcgLSB1bmtub3duIGJ1dHRvbiB0eXBlOiAiK2FbZF0pO2NvbnRpbnVlfWM9ZS5leHRlbmQoe30sVGFibGVUb29scy5CVVRUT05TW2FbZF1dLCEwKX1lbHNle2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgVGFibGVUb29scy5CVVRUT05TW2FbZF0uc0V4dGVuZHNdKXthbGVydCgiVGFibGVUb29sczogV2FybmluZyAtIHVua25vd24gYnV0dG9uIHR5cGU6ICIrYVtkXS5zRXh0ZW5kcyk7Y29udGludWV9Yz1lLmV4dGVuZCh7fSxUYWJsZVRvb2xzLkJVVFRPTlNbYVtkXS5zRXh0ZW5kc10sITApO2M9ZS5leHRlbmQoYyxhW2RdLAohMCl9Yi5hcHBlbmRDaGlsZCh0aGlzLl9mbkNyZWF0ZUJ1dHRvbihjLGUoYikuaGFzQ2xhc3ModGhpcy5jbGFzc2VzLmNvbGxlY3Rpb24uY29udGFpbmVyKSkpfX0sX2ZuQ3JlYXRlQnV0dG9uOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5fZm5CdXR0b25CYXNlKGEsYik7YS5zQWN0aW9uLm1hdGNoKC9mbGFzaC8pP3RoaXMuX2ZuRmxhc2hDb25maWcoYyxhKToidGV4dCI9PWEuc0FjdGlvbj90aGlzLl9mblRleHRDb25maWcoYyxhKToiZGl2Ij09YS5zQWN0aW9uP3RoaXMuX2ZuVGV4dENvbmZpZyhjLGEpOiJjb2xsZWN0aW9uIj09YS5zQWN0aW9uJiYodGhpcy5fZm5UZXh0Q29uZmlnKGMsYSksdGhpcy5fZm5Db2xsZWN0aW9uQ29uZmlnKGMsYSkpO3JldHVybiBjfSxfZm5CdXR0b25CYXNlOmZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlO2I/KGM9ImRlZmF1bHQiIT09YS5zVGFnP2Euc1RhZzp0aGlzLnMudGFncy5jb2xsZWN0aW9uLmJ1dHRvbixkPSJkZWZhdWx0IiE9PWEuc0xpbmVyVGFnPwphLnNMaW5lcjp0aGlzLnMudGFncy5jb2xsZWN0aW9uLmxpbmVyLGU9dGhpcy5jbGFzc2VzLmNvbGxlY3Rpb24uYnV0dG9ucy5ub3JtYWwpOihjPSJkZWZhdWx0IiE9PWEuc1RhZz9hLnNUYWc6dGhpcy5zLnRhZ3MuYnV0dG9uLGQ9ImRlZmF1bHQiIT09YS5zTGluZXJUYWc/YS5zTGluZXI6dGhpcy5zLnRhZ3MubGluZXIsZT10aGlzLmNsYXNzZXMuYnV0dG9ucy5ub3JtYWwpO2M9Zi5jcmVhdGVFbGVtZW50KGMpO2Q9Zi5jcmVhdGVFbGVtZW50KGQpO3ZhciBoPXRoaXMuX2ZuR2V0TWFzdGVyU2V0dGluZ3MoKTtjLmNsYXNzTmFtZT1lKyIgIithLnNCdXR0b25DbGFzcztjLnNldEF0dHJpYnV0ZSgiaWQiLCJUb29sVGFibGVzXyIrdGhpcy5zLmR0LnNJbnN0YW5jZSsiXyIraC5idXR0b25Db3VudGVyKTtjLmFwcGVuZENoaWxkKGQpO2QuaW5uZXJIVE1MPWEuc0J1dHRvblRleHQ7aC5idXR0b25Db3VudGVyKys7cmV0dXJuIGN9LF9mbkdldE1hc3RlclNldHRpbmdzOmZ1bmN0aW9uKCl7aWYodGhpcy5zLm1hc3RlcilyZXR1cm4gdGhpcy5zOwpmb3IodmFyIGE9VGFibGVUb29scy5fYUluc3RhbmNlcyxiPTAsYz1hLmxlbmd0aDtiPGM7YisrKWlmKHRoaXMuZG9tLnRhYmxlPT1hW2JdLnMuZHQublRhYmxlKXJldHVybiBhW2JdLnN9LF9mbkNvbGxlY3Rpb25Db25maWc6ZnVuY3Rpb24oYSxiKXt2YXIgYz1mLmNyZWF0ZUVsZW1lbnQodGhpcy5zLnRhZ3MuY29sbGVjdGlvbi5jb250YWluZXIpO2Muc3R5bGUuZGlzcGxheT0ibm9uZSI7Yy5jbGFzc05hbWU9dGhpcy5jbGFzc2VzLmNvbGxlY3Rpb24uY29udGFpbmVyO2IuX2NvbGxlY3Rpb249YztmLmJvZHkuYXBwZW5kQ2hpbGQoYyk7dGhpcy5fZm5CdXR0b25EZWZpbmF0aW9ucyhiLmFCdXR0b25zLGMpfSxfZm5Db2xsZWN0aW9uU2hvdzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD1lKGEpLm9mZnNldCgpLGc9Yi5fY29sbGVjdGlvbixoPWQubGVmdCxkPWQudG9wK2UoYSkub3V0ZXJIZWlnaHQoKSxwPWUobSkuaGVpZ2h0KCksaj1lKGYpLmhlaWdodCgpLGs9ZShtKS53aWR0aCgpLApuPWUoZikud2lkdGgoKTtnLnN0eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSI7Zy5zdHlsZS5sZWZ0PWgrInB4IjtnLnN0eWxlLnRvcD1kKyJweCI7Zy5zdHlsZS5kaXNwbGF5PSJibG9jayI7ZShnKS5jc3MoIm9wYWNpdHkiLDApO3ZhciBsPWYuY3JlYXRlRWxlbWVudCgiZGl2Iik7bC5zdHlsZS5wb3NpdGlvbj0iYWJzb2x1dGUiO2wuc3R5bGUubGVmdD0iMHB4IjtsLnN0eWxlLnRvcD0iMHB4IjtsLnN0eWxlLmhlaWdodD0ocD5qP3A6aikrInB4IjtsLnN0eWxlLndpZHRoPShrPm4/azpuKSsicHgiO2wuY2xhc3NOYW1lPXRoaXMuY2xhc3Nlcy5jb2xsZWN0aW9uLmJhY2tncm91bmQ7ZShsKS5jc3MoIm9wYWNpdHkiLDApO2YuYm9keS5hcHBlbmRDaGlsZChsKTtmLmJvZHkuYXBwZW5kQ2hpbGQoZyk7cD1lKGcpLm91dGVyV2lkdGgoKTtrPWUoZykub3V0ZXJIZWlnaHQoKTtoK3A+biYmKGcuc3R5bGUubGVmdD1uLXArInB4Iik7ZCtrPmomJihnLnN0eWxlLnRvcD1kLWstZShhKS5vdXRlckhlaWdodCgpKwoicHgiKTt0aGlzLmRvbS5jb2xsZWN0aW9uLmNvbGxlY3Rpb249Zzt0aGlzLmRvbS5jb2xsZWN0aW9uLmJhY2tncm91bmQ9bDtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZShnKS5hbmltYXRlKHtvcGFjaXR5OjF9LDUwMCk7ZShsKS5hbmltYXRlKHtvcGFjaXR5OjAuMjV9LDUwMCl9LDEwKTt0aGlzLmZuUmVzaXplQnV0dG9ucygpO2UobCkuY2xpY2soZnVuY3Rpb24oKXtjLl9mbkNvbGxlY3Rpb25IaWRlLmNhbGwoYyxudWxsLG51bGwpfSl9LF9mbkNvbGxlY3Rpb25IaWRlOmZ1bmN0aW9uKGEsYil7IShudWxsIT09YiYmImNvbGxlY3Rpb24iPT1iLnNFeHRlbmRzKSYmbnVsbCE9PXRoaXMuZG9tLmNvbGxlY3Rpb24uY29sbGVjdGlvbiYmKGUodGhpcy5kb20uY29sbGVjdGlvbi5jb2xsZWN0aW9uKS5hbmltYXRlKHtvcGFjaXR5OjB9LDUwMCxmdW5jdGlvbigpe3RoaXMuc3R5bGUuZGlzcGxheT0ibm9uZSJ9KSxlKHRoaXMuZG9tLmNvbGxlY3Rpb24uYmFja2dyb3VuZCkuYW5pbWF0ZSh7b3BhY2l0eTowfSwKNTAwLGZ1bmN0aW9uKCl7dGhpcy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMpfSksdGhpcy5kb20uY29sbGVjdGlvbi5jb2xsZWN0aW9uPW51bGwsdGhpcy5kb20uY29sbGVjdGlvbi5iYWNrZ3JvdW5kPW51bGwpfSxfZm5Sb3dTZWxlY3RDb25maWc6ZnVuY3Rpb24oKXtpZih0aGlzLnMubWFzdGVyKXt2YXIgYT10aGlzLGI9dGhpcy5zLmR0O2UoYi5uVGFibGUpLmFkZENsYXNzKHRoaXMuY2xhc3Nlcy5zZWxlY3QudGFibGUpO2UoInRyIixiLm5UQm9keSkubGl2ZSgiY2xpY2siLGZ1bmN0aW9uKGMpe2lmKHRoaXMucGFyZW50Tm9kZT09Yi5uVEJvZHkmJm51bGwhPT1iLm9JbnN0YW5jZS5mbkdldERhdGEodGhpcykmJihudWxsPT09YS5zLnNlbGVjdC5wcmVSb3dTZWxlY3R8fGEucy5zZWxlY3QucHJlUm93U2VsZWN0LmNhbGwoYSxjKSkpYS5mbklzU2VsZWN0ZWQodGhpcyk/YS5fZm5Sb3dEZXNlbGVjdCh0aGlzKToic2luZ2xlIj09YS5zLnNlbGVjdC50eXBlPyhhLmZuU2VsZWN0Tm9uZSgpLAphLl9mblJvd1NlbGVjdCh0aGlzKSk6Im11bHRpIj09YS5zLnNlbGVjdC50eXBlJiZhLl9mblJvd1NlbGVjdCh0aGlzKX0pO2Iub0FwaS5fZm5DYWxsYmFja1JlZyhiLCJhb1Jvd0NyZWF0ZWRDYWxsYmFjayIsZnVuY3Rpb24oYyxkLGcpe2IuYW9EYXRhW2ddLl9EVFRUX3NlbGVjdGVkJiZlKGMpLmFkZENsYXNzKGEuY2xhc3Nlcy5zZWxlY3Qucm93KX0sIlRhYmxlVG9vbHMtU2VsZWN0QWxsIil9fSxfZm5Sb3dTZWxlY3Q6ZnVuY3Rpb24oYSl7Zm9yKHZhciBhPXRoaXMuX2ZuU2VsZWN0RGF0YShhKSxiPTA9PT1hLmxlbmd0aD9udWxsOmFbMF0ublRyLGM9MCxkPWEubGVuZ3RoO2M8ZDtjKyspYVtjXS5fRFRUVF9zZWxlY3RlZD0hMCxhW2NdLm5UciYmZShhW2NdLm5UcikuYWRkQ2xhc3ModGhpcy5jbGFzc2VzLnNlbGVjdC5yb3cpO251bGwhPT10aGlzLnMuc2VsZWN0LnBvc3RTZWxlY3RlZCYmdGhpcy5zLnNlbGVjdC5wb3N0U2VsZWN0ZWQuY2FsbCh0aGlzLGIpO1RhYmxlVG9vbHMuX2ZuRXZlbnREaXNwYXRjaCh0aGlzLAoic2VsZWN0IixiKX0sX2ZuUm93RGVzZWxlY3Q6ZnVuY3Rpb24oYSl7Zm9yKHZhciBhPXRoaXMuX2ZuU2VsZWN0RGF0YShhKSxiPTA9PT1hLmxlbmd0aD9udWxsOmFbMF0ublRyLGM9MCxkPWEubGVuZ3RoO2M8ZDtjKyspYVtjXS5uVHImJmFbY10uX0RUVFRfc2VsZWN0ZWQmJmUoYVtjXS5uVHIpLnJlbW92ZUNsYXNzKHRoaXMuY2xhc3Nlcy5zZWxlY3Qucm93KSxhW2NdLl9EVFRUX3NlbGVjdGVkPSExO251bGwhPT10aGlzLnMuc2VsZWN0LnBvc3REZXNlbGVjdGVkJiZ0aGlzLnMuc2VsZWN0LnBvc3REZXNlbGVjdGVkLmNhbGwodGhpcyxiKTtUYWJsZVRvb2xzLl9mbkV2ZW50RGlzcGF0Y2godGhpcywic2VsZWN0IixiKX0sX2ZuU2VsZWN0RGF0YTpmdW5jdGlvbihhKXt2YXIgYj1bXSxjLGQsZTtpZihhLm5vZGVOYW1lKWM9dGhpcy5zLmR0Lm9JbnN0YW5jZS5mbkdldFBvc2l0aW9uKGEpLGIucHVzaCh0aGlzLnMuZHQuYW9EYXRhW2NdKTtlbHNlIGlmKCJ1bmRlZmluZWQiIT09dHlwZW9mIGEubGVuZ3RoKXtkPQowO2ZvcihlPWEubGVuZ3RoO2Q8ZTtkKyspYVtkXS5ub2RlTmFtZT8oYz10aGlzLnMuZHQub0luc3RhbmNlLmZuR2V0UG9zaXRpb24oYVtkXSksYi5wdXNoKHRoaXMucy5kdC5hb0RhdGFbY10pKToibnVtYmVyIj09PXR5cGVvZiBhW2RdP2IucHVzaCh0aGlzLnMuZHQuYW9EYXRhW2FbZF1dKTpiLnB1c2goYVtkXSl9ZWxzZSBiLnB1c2goYSk7cmV0dXJuIGJ9LF9mblRleHRDb25maWc6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO251bGwhPT1iLmZuSW5pdCYmYi5mbkluaXQuY2FsbCh0aGlzLGEsYik7IiIhPT1iLnNUb29sVGlwJiYoYS50aXRsZT1iLnNUb29sVGlwKTtlKGEpLmhvdmVyKGZ1bmN0aW9uKCl7Yi5mbk1vdXNlb3ZlciE9PW51bGwmJmIuZm5Nb3VzZW92ZXIuY2FsbCh0aGlzLGEsYixudWxsKX0sZnVuY3Rpb24oKXtiLmZuTW91c2VvdXQhPT1udWxsJiZiLmZuTW91c2VvdXQuY2FsbCh0aGlzLGEsYixudWxsKX0pO251bGwhPT1iLmZuU2VsZWN0JiZUYWJsZVRvb2xzLl9mbkV2ZW50TGlzdGVuKHRoaXMsCiJzZWxlY3QiLGZ1bmN0aW9uKGQpe2IuZm5TZWxlY3QuY2FsbChjLGEsYixkKX0pO2UoYSkuY2xpY2soZnVuY3Rpb24oKXtiLmZuQ2xpY2shPT1udWxsJiZiLmZuQ2xpY2suY2FsbChjLGEsYixudWxsKTtiLmZuQ29tcGxldGUhPT1udWxsJiZiLmZuQ29tcGxldGUuY2FsbChjLGEsYixudWxsLG51bGwpO2MuX2ZuQ29sbGVjdGlvbkhpZGUoYSxiKX0pfSxfZm5GbGFzaENvbmZpZzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD1uZXcgWmVyb0NsaXBib2FyZF9UYWJsZVRvb2xzLkNsaWVudDtudWxsIT09Yi5mbkluaXQmJmIuZm5Jbml0LmNhbGwodGhpcyxhLGIpO2Quc2V0SGFuZEN1cnNvcighMCk7ImZsYXNoX3NhdmUiPT1iLnNBY3Rpb24/KGQuc2V0QWN0aW9uKCJzYXZlIiksZC5zZXRDaGFyU2V0KCJ1dGYxNmxlIj09Yi5zQ2hhclNldD8iVVRGMTZMRSI6IlVURjgiKSxkLnNldEJvbUluYyhiLmJCb21JbmMpLGQuc2V0RmlsZU5hbWUoYi5zRmlsZU5hbWUucmVwbGFjZSgiKiIsdGhpcy5mbkdldFRpdGxlKGIpKSkpOgoiZmxhc2hfcGRmIj09Yi5zQWN0aW9uPyhkLnNldEFjdGlvbigicGRmIiksZC5zZXRGaWxlTmFtZShiLnNGaWxlTmFtZS5yZXBsYWNlKCIqIix0aGlzLmZuR2V0VGl0bGUoYikpKSk6ZC5zZXRBY3Rpb24oImNvcHkiKTtkLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlT3ZlciIsZnVuY3Rpb24oKXtiLmZuTW91c2VvdmVyIT09bnVsbCYmYi5mbk1vdXNlb3Zlci5jYWxsKGMsYSxiLGQpfSk7ZC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZU91dCIsZnVuY3Rpb24oKXtiLmZuTW91c2VvdXQhPT1udWxsJiZiLmZuTW91c2VvdXQuY2FsbChjLGEsYixkKX0pO2QuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VEb3duIixmdW5jdGlvbigpe2IuZm5DbGljayE9PW51bGwmJmIuZm5DbGljay5jYWxsKGMsYSxiLGQpfSk7ZC5hZGRFdmVudExpc3RlbmVyKCJjb21wbGV0ZSIsZnVuY3Rpb24oZSxoKXtiLmZuQ29tcGxldGUhPT1udWxsJiZiLmZuQ29tcGxldGUuY2FsbChjLGEsYixkLGgpO2MuX2ZuQ29sbGVjdGlvbkhpZGUoYSwKYil9KTt0aGlzLl9mbkZsYXNoR2x1ZShkLGEsYi5zVG9vbFRpcCl9LF9mbkZsYXNoR2x1ZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcyxlPWIuZ2V0QXR0cmlidXRlKCJpZCIpO2YuZ2V0RWxlbWVudEJ5SWQoZSk/YS5nbHVlKGIsYyk6c2V0VGltZW91dChmdW5jdGlvbigpe2QuX2ZuRmxhc2hHbHVlKGEsYixjKX0sMTAwKX0sX2ZuRmxhc2hTZXRUZXh0OmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5fZm5DaHVua0RhdGEoYiw4MTkyKTthLmNsZWFyVGV4dCgpO2Zvcih2YXIgZD0wLGU9Yy5sZW5ndGg7ZDxlO2QrKylhLmFwcGVuZFRleHQoY1tkXSl9LF9mbkNvbHVtblRhcmdldHM6ZnVuY3Rpb24oYSl7dmFyIGI9W10sYz10aGlzLnMuZHQ7aWYoIm9iamVjdCI9PXR5cGVvZiBhKXtpPTA7Zm9yKGlMZW49Yy5hb0NvbHVtbnMubGVuZ3RoO2k8aUxlbjtpKyspYi5wdXNoKCExKTtpPTA7Zm9yKGlMZW49YS5sZW5ndGg7aTxpTGVuO2krKyliW2FbaV1dPSEwfWVsc2UgaWYoInZpc2libGUiPT0KYSl7aT0wO2ZvcihpTGVuPWMuYW9Db2x1bW5zLmxlbmd0aDtpPGlMZW47aSsrKWIucHVzaChjLmFvQ29sdW1uc1tpXS5iVmlzaWJsZT8hMDohMSl9ZWxzZSBpZigiaGlkZGVuIj09YSl7aT0wO2ZvcihpTGVuPWMuYW9Db2x1bW5zLmxlbmd0aDtpPGlMZW47aSsrKWIucHVzaChjLmFvQ29sdW1uc1tpXS5iVmlzaWJsZT8hMTohMCl9ZWxzZSBpZigic29ydGFibGUiPT1hKXtpPTA7Zm9yKGlMZW49Yy5hb0NvbHVtbnMubGVuZ3RoO2k8aUxlbjtpKyspYi5wdXNoKGMuYW9Db2x1bW5zW2ldLmJTb3J0YWJsZT8hMDohMSl9ZWxzZXtpPTA7Zm9yKGlMZW49Yy5hb0NvbHVtbnMubGVuZ3RoO2k8aUxlbjtpKyspYi5wdXNoKCEwKX1yZXR1cm4gYn0sX2ZuTmV3bGluZTpmdW5jdGlvbihhKXtyZXR1cm4iYXV0byI9PWEuc05ld0xpbmU/bmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvV2luZG93cy8pPyJcclxuIjoiXG4iOmEuc05ld0xpbmV9LF9mbkdldERhdGFUYWJsZXNEYXRhOmZ1bmN0aW9uKGEpe3ZhciBiLApjLGQsZyxoLGY9W10saj0iIixrPXRoaXMucy5kdCxuLGw9UmVnRXhwKGEuc0ZpZWxkQm91bmRhcnksImciKSxtPXRoaXMuX2ZuQ29sdW1uVGFyZ2V0cyhhLm1Db2x1bW5zKTtkPSJ1bmRlZmluZWQiIT10eXBlb2YgYS5iU2VsZWN0ZWRPbmx5P2EuYlNlbGVjdGVkT25seTohMTtpZihhLmJIZWFkZXIpe2g9W107Yj0wO2ZvcihjPWsuYW9Db2x1bW5zLmxlbmd0aDtiPGM7YisrKW1bYl0mJihqPWsuYW9Db2x1bW5zW2JdLnNUaXRsZS5yZXBsYWNlKC9cbi9nLCIgIikucmVwbGFjZSgvPC4qPz4vZywiIikucmVwbGFjZSgvXlxzK3xccyskL2csIiIpLGo9dGhpcy5fZm5IdG1sRGVjb2RlKGopLGgucHVzaCh0aGlzLl9mbkJvdW5kRGF0YShqLGEuc0ZpZWxkQm91bmRhcnksbCkpKTtmLnB1c2goaC5qb2luKGEuc0ZpZWxkU2VwZXJhdG9yKSl9dmFyIG89ay5haURpc3BsYXk7Zz10aGlzLmZuR2V0U2VsZWN0ZWQoKTtpZigibm9uZSIhPT10aGlzLnMuc2VsZWN0LnR5cGUmJmQmJjAhPT1nLmxlbmd0aCl7bz0KW107Yj0wO2ZvcihjPWcubGVuZ3RoO2I8YztiKyspby5wdXNoKGsub0luc3RhbmNlLmZuR2V0UG9zaXRpb24oZ1tiXSkpfWQ9MDtmb3IoZz1vLmxlbmd0aDtkPGc7ZCsrKXtuPWsuYW9EYXRhW29bZF1dLm5UcjtoPVtdO2I9MDtmb3IoYz1rLmFvQ29sdW1ucy5sZW5ndGg7YjxjO2IrKyltW2JdJiYoaj1rLm9BcGkuX2ZuR2V0Q2VsbERhdGEoayxvW2RdLGIsImRpc3BsYXkiKSxhLmZuQ2VsbFJlbmRlcj9qPWEuZm5DZWxsUmVuZGVyKGosYixuLG9bZF0pKyIiOiJzdHJpbmciPT10eXBlb2Ygaj8oaj1qLnJlcGxhY2UoL1xuL2csIiAiKSxqPWoucmVwbGFjZSgvPGltZy4qP1xzK2FsdFxzKj1ccyooPzoiKFteIl0rKSJ8JyhbXiddKyknfChbXlxzPl0rKSkuKj8+L2dpLCIkMSQyJDMiKSxqPWoucmVwbGFjZSgvPC4qPz4vZywiIikpOmorPSIiLGo9ai5yZXBsYWNlKC9eXHMrLywiIikucmVwbGFjZSgvXHMrJC8sIiIpLGo9dGhpcy5fZm5IdG1sRGVjb2RlKGopLGgucHVzaCh0aGlzLl9mbkJvdW5kRGF0YShqLAphLnNGaWVsZEJvdW5kYXJ5LGwpKSk7Zi5wdXNoKGguam9pbihhLnNGaWVsZFNlcGVyYXRvcikpO2EuYk9wZW5Sb3dzJiYoYj1lLmdyZXAoay5hb09wZW5Sb3dzLGZ1bmN0aW9uKGEpe3JldHVybiBhLm5QYXJlbnQ9PT1ufSksMT09PWIubGVuZ3RoJiYoaj10aGlzLl9mbkJvdW5kRGF0YShlKCJ0ZCIsYlswXS5uVHIpLmh0bWwoKSxhLnNGaWVsZEJvdW5kYXJ5LGwpLGYucHVzaChqKSkpfWlmKGEuYkZvb3RlciYmbnVsbCE9PWsublRGb290KXtoPVtdO2I9MDtmb3IoYz1rLmFvQ29sdW1ucy5sZW5ndGg7YjxjO2IrKyltW2JdJiZudWxsIT09ay5hb0NvbHVtbnNbYl0ublRmJiYoaj1rLmFvQ29sdW1uc1tiXS5uVGYuaW5uZXJIVE1MLnJlcGxhY2UoL1xuL2csIiAiKS5yZXBsYWNlKC88Lio/Pi9nLCIiKSxqPXRoaXMuX2ZuSHRtbERlY29kZShqKSxoLnB1c2godGhpcy5fZm5Cb3VuZERhdGEoaixhLnNGaWVsZEJvdW5kYXJ5LGwpKSk7Zi5wdXNoKGguam9pbihhLnNGaWVsZFNlcGVyYXRvcikpfXJldHVybiBfc0xhc3REYXRhPQpmLmpvaW4odGhpcy5fZm5OZXdsaW5lKGEpKX0sX2ZuQm91bmREYXRhOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4iIj09PWI/YTpiK2EucmVwbGFjZShjLGIrYikrYn0sX2ZuQ2h1bmtEYXRhOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPVtdLGQ9YS5sZW5ndGgsZT0wO2U8ZDtlKz1iKWUrYjxkP2MucHVzaChhLnN1YnN0cmluZyhlLGUrYikpOmMucHVzaChhLnN1YnN0cmluZyhlLGQpKTtyZXR1cm4gY30sX2ZuSHRtbERlY29kZTpmdW5jdGlvbihhKXtpZigtMT09YS5pbmRleE9mKCImIikpcmV0dXJuIGE7dmFyIGE9dGhpcy5fZm5DaHVua0RhdGEoYSwyMDQ4KSxiPWYuY3JlYXRlRWxlbWVudCgiZGl2IiksYyxkLGUsaD0iIjtjPTA7Zm9yKGQ9YS5sZW5ndGg7YzxkO2MrKyllPWFbY10ubGFzdEluZGV4T2YoIiYiKSwtMSE9ZSYmKDg8PWFbY10ubGVuZ3RoJiZlPmFbY10ubGVuZ3RoLTgpJiYoYVtjXS5zdWJzdHIoZSksYVtjXT1hW2NdLnN1YnN0cigwLGUpKSxiLmlubmVySFRNTD1hW2NdLGgrPQpiLmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlO3JldHVybiBofSxfZm5QcmludFN0YXJ0OmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz10aGlzLnMuZHQ7dGhpcy5fZm5QcmludEhpZGVOb2RlcyhjLm5UYWJsZSk7dGhpcy5zLnByaW50LnNhdmVTdGFydD1jLl9pRGlzcGxheVN0YXJ0O3RoaXMucy5wcmludC5zYXZlTGVuZ3RoPWMuX2lEaXNwbGF5TGVuZ3RoO2EuYlNob3dBbGwmJihjLl9pRGlzcGxheVN0YXJ0PTAsYy5faURpc3BsYXlMZW5ndGg9LTEsYy5vQXBpLl9mbkNhbGN1bGF0ZUVuZChjKSxjLm9BcGkuX2ZuRHJhdyhjKSk7KCIiIT09Yy5vU2Nyb2xsLnNYfHwiIiE9PWMub1Njcm9sbC5zWSkmJnRoaXMuX2ZuUHJpbnRTY3JvbGxTdGFydChjKTt2YXIgYz1jLmFhbkZlYXR1cmVzLGQ7Zm9yKGQgaW4gYylpZigiaSIhPWQmJiJ0IiE9ZCYmMT09ZC5sZW5ndGgpZm9yKHZhciBnPTAsaD1jW2RdLmxlbmd0aDtnPGg7ZysrKXRoaXMuZG9tLnByaW50LmhpZGRlbi5wdXNoKHtub2RlOmNbZF1bZ10sCmRpc3BsYXk6ImJsb2NrIn0pLGNbZF1bZ10uc3R5bGUuZGlzcGxheT0ibm9uZSI7ZShmLmJvZHkpLmFkZENsYXNzKHRoaXMuY2xhc3Nlcy5wcmludC5ib2R5KTsiIiE9PWEuc0luZm8mJnRoaXMuZm5JbmZvKGEuc0luZm8sM0UzKTthLnNNZXNzYWdlJiYodGhpcy5kb20ucHJpbnQubWVzc2FnZT1mLmNyZWF0ZUVsZW1lbnQoImRpdiIpLHRoaXMuZG9tLnByaW50Lm1lc3NhZ2UuY2xhc3NOYW1lPXRoaXMuY2xhc3Nlcy5wcmludC5tZXNzYWdlLHRoaXMuZG9tLnByaW50Lm1lc3NhZ2UuaW5uZXJIVE1MPWEuc01lc3NhZ2UsZi5ib2R5Lmluc2VydEJlZm9yZSh0aGlzLmRvbS5wcmludC5tZXNzYWdlLGYuYm9keS5jaGlsZE5vZGVzWzBdKSk7dGhpcy5zLnByaW50LnNhdmVTY3JvbGw9ZShtKS5zY3JvbGxUb3AoKTttLnNjcm9sbFRvKDAsMCk7ZShmKS5iaW5kKCJrZXlkb3duLkRUVFQiLGZ1bmN0aW9uKGEpe2lmKGEua2V5Q29kZT09Mjcpe2EucHJldmVudERlZmF1bHQoKTtiLl9mblByaW50RW5kLmNhbGwoYiwKYSl9fSl9LF9mblByaW50RW5kOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5zLmR0LGI9dGhpcy5zLnByaW50LGM9dGhpcy5kb20ucHJpbnQ7dGhpcy5fZm5QcmludFNob3dOb2RlcygpOygiIiE9PWEub1Njcm9sbC5zWHx8IiIhPT1hLm9TY3JvbGwuc1kpJiZ0aGlzLl9mblByaW50U2Nyb2xsRW5kKCk7bS5zY3JvbGxUbygwLGIuc2F2ZVNjcm9sbCk7bnVsbCE9PWMubWVzc2FnZSYmKGYuYm9keS5yZW1vdmVDaGlsZChjLm1lc3NhZ2UpLGMubWVzc2FnZT1udWxsKTtlKGYuYm9keSkucmVtb3ZlQ2xhc3MoIkRUVFRfUHJpbnQiKTthLl9pRGlzcGxheVN0YXJ0PWIuc2F2ZVN0YXJ0O2EuX2lEaXNwbGF5TGVuZ3RoPWIuc2F2ZUxlbmd0aDthLm9BcGkuX2ZuQ2FsY3VsYXRlRW5kKGEpO2Eub0FwaS5fZm5EcmF3KGEpO2UoZikudW5iaW5kKCJrZXlkb3duLkRUVFQiKX0sX2ZuUHJpbnRTY3JvbGxTdGFydDpmdW5jdGlvbigpe3ZhciBhPXRoaXMucy5kdDthLm5TY3JvbGxIZWFkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJkaXYiKVswXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGFibGUiKTsKdmFyIGI9YS5uVGFibGUucGFyZW50Tm9kZSxjPWEublRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0aGVhZCIpOzA8Yy5sZW5ndGgmJmEublRhYmxlLnJlbW92ZUNoaWxkKGNbMF0pO251bGwhPT1hLm5URm9vdCYmKGM9YS5uVGFibGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRmb290IiksMDxjLmxlbmd0aCYmYS5uVGFibGUucmVtb3ZlQ2hpbGQoY1swXSkpO2M9YS5uVEhlYWQuY2xvbmVOb2RlKCEwKTthLm5UYWJsZS5pbnNlcnRCZWZvcmUoYyxhLm5UYWJsZS5jaGlsZE5vZGVzWzBdKTtudWxsIT09YS5uVEZvb3QmJihjPWEublRGb290LmNsb25lTm9kZSghMCksYS5uVGFibGUuaW5zZXJ0QmVmb3JlKGMsYS5uVGFibGUuY2hpbGROb2Rlc1sxXSkpOyIiIT09YS5vU2Nyb2xsLnNYJiYoYS5uVGFibGUuc3R5bGUud2lkdGg9ZShhLm5UYWJsZSkub3V0ZXJXaWR0aCgpKyJweCIsYi5zdHlsZS53aWR0aD1lKGEublRhYmxlKS5vdXRlcldpZHRoKCkrInB4IixiLnN0eWxlLm92ZXJmbG93PQoidmlzaWJsZSIpOyIiIT09YS5vU2Nyb2xsLnNZJiYoYi5zdHlsZS5oZWlnaHQ9ZShhLm5UYWJsZSkub3V0ZXJIZWlnaHQoKSsicHgiLGIuc3R5bGUub3ZlcmZsb3c9InZpc2libGUiKX0sX2ZuUHJpbnRTY3JvbGxFbmQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnMuZHQsYj1hLm5UYWJsZS5wYXJlbnROb2RlOyIiIT09YS5vU2Nyb2xsLnNYJiYoYi5zdHlsZS53aWR0aD1hLm9BcGkuX2ZuU3RyaW5nVG9Dc3MoYS5vU2Nyb2xsLnNYKSxiLnN0eWxlLm92ZXJmbG93PSJhdXRvIik7IiIhPT1hLm9TY3JvbGwuc1kmJihiLnN0eWxlLmhlaWdodD1hLm9BcGkuX2ZuU3RyaW5nVG9Dc3MoYS5vU2Nyb2xsLnNZKSxiLnN0eWxlLm92ZXJmbG93PSJhdXRvIil9LF9mblByaW50U2hvd05vZGVzOmZ1bmN0aW9uKCl7Zm9yKHZhciBhPXRoaXMuZG9tLnByaW50LmhpZGRlbixiPTAsYz1hLmxlbmd0aDtiPGM7YisrKWFbYl0ubm9kZS5zdHlsZS5kaXNwbGF5PWFbYl0uZGlzcGxheTthLnNwbGljZSgwLGEubGVuZ3RoKX0sCl9mblByaW50SGlkZU5vZGVzOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj10aGlzLmRvbS5wcmludC5oaWRkZW4sYz1hLnBhcmVudE5vZGUsZD1jLmNoaWxkTm9kZXMsZz0wLGg9ZC5sZW5ndGg7ZzxoO2crKylpZihkW2ddIT1hJiYxPT1kW2ddLm5vZGVUeXBlKXt2YXIgZj1lKGRbZ10pLmNzcygiZGlzcGxheSIpOyJub25lIiE9ZiYmKGIucHVzaCh7bm9kZTpkW2ddLGRpc3BsYXk6Zn0pLGRbZ10uc3R5bGUuZGlzcGxheT0ibm9uZSIpfSJCT0RZIiE9Yy5ub2RlTmFtZSYmdGhpcy5fZm5QcmludEhpZGVOb2RlcyhjKX19O1RhYmxlVG9vbHMuX2FJbnN0YW5jZXM9W107VGFibGVUb29scy5fYUxpc3RlbmVycz1bXTtUYWJsZVRvb2xzLmZuR2V0TWFzdGVycz1mdW5jdGlvbigpe2Zvcih2YXIgYT1bXSxiPTAsYz1UYWJsZVRvb2xzLl9hSW5zdGFuY2VzLmxlbmd0aDtiPGM7YisrKVRhYmxlVG9vbHMuX2FJbnN0YW5jZXNbYl0ucy5tYXN0ZXImJmEucHVzaChUYWJsZVRvb2xzLl9hSW5zdGFuY2VzW2JdKTsKcmV0dXJuIGF9O1RhYmxlVG9vbHMuZm5HZXRJbnN0YW5jZT1mdW5jdGlvbihhKXsib2JqZWN0IiE9dHlwZW9mIGEmJihhPWYuZ2V0RWxlbWVudEJ5SWQoYSkpO2Zvcih2YXIgYj0wLGM9VGFibGVUb29scy5fYUluc3RhbmNlcy5sZW5ndGg7YjxjO2IrKylpZihUYWJsZVRvb2xzLl9hSW5zdGFuY2VzW2JdLnMubWFzdGVyJiZUYWJsZVRvb2xzLl9hSW5zdGFuY2VzW2JdLmRvbS50YWJsZT09YSlyZXR1cm4gVGFibGVUb29scy5fYUluc3RhbmNlc1tiXTtyZXR1cm4gbnVsbH07VGFibGVUb29scy5fZm5FdmVudExpc3Rlbj1mdW5jdGlvbihhLGIsYyl7VGFibGVUb29scy5fYUxpc3RlbmVycy5wdXNoKHt0aGF0OmEsdHlwZTpiLGZuOmN9KX07VGFibGVUb29scy5fZm5FdmVudERpc3BhdGNoPWZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9VGFibGVUb29scy5fYUxpc3RlbmVycyxlPTAsZj1kLmxlbmd0aDtlPGY7ZSsrKWEuZG9tLnRhYmxlPT1kW2VdLnRoYXQuZG9tLnRhYmxlJiZkW2VdLnR5cGU9PQpiJiZkW2VdLmZuKGMpfTtUYWJsZVRvb2xzLmJ1dHRvbkJhc2U9e3NBY3Rpb246InRleHQiLHNUYWc6ImRlZmF1bHQiLHNMaW5lclRhZzoiZGVmYXVsdCIsc0J1dHRvbkNsYXNzOiJEVFRUX2J1dHRvbl90ZXh0IixzQnV0dG9uVGV4dDoiQnV0dG9uIHRleHQiLHNUaXRsZToiIixzVG9vbFRpcDoiIixzQ2hhclNldDoidXRmOCIsYkJvbUluYzohMSxzRmlsZU5hbWU6IiouY3N2IixzRmllbGRCb3VuZGFyeToiIixzRmllbGRTZXBlcmF0b3I6Ilx0IixzTmV3TGluZToiYXV0byIsbUNvbHVtbnM6ImFsbCIsYkhlYWRlcjohMCxiRm9vdGVyOiEwLGJPcGVuUm93czohMSxiU2VsZWN0ZWRPbmx5OiExLGZuTW91c2VvdmVyOm51bGwsZm5Nb3VzZW91dDpudWxsLGZuQ2xpY2s6bnVsbCxmblNlbGVjdDpudWxsLGZuQ29tcGxldGU6bnVsbCxmbkluaXQ6bnVsbCxmbkNlbGxSZW5kZXI6bnVsbH07VGFibGVUb29scy5CVVRUT05TPXtjc3Y6ZS5leHRlbmQoe30sVGFibGVUb29scy5idXR0b25CYXNlLHtzQWN0aW9uOiJmbGFzaF9zYXZlIiwKc0J1dHRvbkNsYXNzOiJEVFRUX2J1dHRvbl9jc3YiLHNCdXR0b25UZXh0OiJDU1YiLHNGaWVsZEJvdW5kYXJ5OiciJyxzRmllbGRTZXBlcmF0b3I6IiwiLGZuQ2xpY2s6ZnVuY3Rpb24oYSxiLGMpe3RoaXMuZm5TZXRUZXh0KGMsdGhpcy5mbkdldFRhYmxlRGF0YShiKSl9fSkseGxzOmUuZXh0ZW5kKHt9LFRhYmxlVG9vbHMuYnV0dG9uQmFzZSx7c0FjdGlvbjoiZmxhc2hfc2F2ZSIsc0NoYXJTZXQ6InV0ZjE2bGUiLGJCb21JbmM6ITAsc0J1dHRvbkNsYXNzOiJEVFRUX2J1dHRvbl94bHMiLHNCdXR0b25UZXh0OiJFeGNlbCIsZm5DbGljazpmdW5jdGlvbihhLGIsYyl7dGhpcy5mblNldFRleHQoYyx0aGlzLmZuR2V0VGFibGVEYXRhKGIpKX19KSxjb3B5OmUuZXh0ZW5kKHt9LFRhYmxlVG9vbHMuYnV0dG9uQmFzZSx7c0FjdGlvbjoiZmxhc2hfY29weSIsc0J1dHRvbkNsYXNzOiJEVFRUX2J1dHRvbl9jb3B5IixzQnV0dG9uVGV4dDoiQ29weSIsZm5DbGljazpmdW5jdGlvbihhLGIsYyl7dGhpcy5mblNldFRleHQoYywKdGhpcy5mbkdldFRhYmxlRGF0YShiKSl9LGZuQ29tcGxldGU6ZnVuY3Rpb24oYSxiLGMsZCl7YT1kLnNwbGl0KCJcbiIpLmxlbmd0aDthPW51bGw9PT10aGlzLnMuZHQublRGb290P2EtMTphLTI7dGhpcy5mbkluZm8oIjxoNj5UYWJsZSBjb3BpZWQ8L2g2PjxwPkNvcGllZCAiK2ErIiByb3ciKygxPT1hPyIiOiJzIikrIiB0byB0aGUgY2xpcGJvYXJkLjwvcD4iLDE1MDApfX0pLHBkZjplLmV4dGVuZCh7fSxUYWJsZVRvb2xzLmJ1dHRvbkJhc2Use3NBY3Rpb246ImZsYXNoX3BkZiIsc05ld0xpbmU6IlxuIixzRmlsZU5hbWU6IioucGRmIixzQnV0dG9uQ2xhc3M6IkRUVFRfYnV0dG9uX3BkZiIsc0J1dHRvblRleHQ6IlBERiIsc1BkZk9yaWVudGF0aW9uOiJwb3J0cmFpdCIsc1BkZlNpemU6IkE0IixzUGRmTWVzc2FnZToiIixmbkNsaWNrOmZ1bmN0aW9uKGEsYixjKXt0aGlzLmZuU2V0VGV4dChjLCJ0aXRsZToiK3RoaXMuZm5HZXRUaXRsZShiKSsiXG5tZXNzYWdlOiIrYi5zUGRmTWVzc2FnZSsKIlxuY29sV2lkdGg6Iit0aGlzLmZuQ2FsY0NvbFJhdGlvcyhiKSsiXG5vcmllbnRhdGlvbjoiK2Iuc1BkZk9yaWVudGF0aW9uKyJcbnNpemU6IitiLnNQZGZTaXplKyJcbi0tL1RhYmxlVG9vbHNPcHRzLS1cbiIrdGhpcy5mbkdldFRhYmxlRGF0YShiKSl9fSkscHJpbnQ6ZS5leHRlbmQoe30sVGFibGVUb29scy5idXR0b25CYXNlLHtzSW5mbzoiPGg2PlByaW50IHZpZXc8L2g2PjxwPlBsZWFzZSB1c2UgeW91ciBicm93c2VyJ3MgcHJpbnQgZnVuY3Rpb24gdG8gcHJpbnQgdGhpcyB0YWJsZS4gUHJlc3MgZXNjYXBlIHdoZW4gZmluaXNoZWQuIixzTWVzc2FnZTpudWxsLGJTaG93QWxsOiEwLHNUb29sVGlwOiJWaWV3IHByaW50IHZpZXciLHNCdXR0b25DbGFzczoiRFRUVF9idXR0b25fcHJpbnQiLHNCdXR0b25UZXh0OiJQcmludCIsZm5DbGljazpmdW5jdGlvbihhLGIpe3RoaXMuZm5QcmludCghMCxiKX19KSx0ZXh0OmUuZXh0ZW5kKHt9LFRhYmxlVG9vbHMuYnV0dG9uQmFzZSksc2VsZWN0OmUuZXh0ZW5kKHt9LApUYWJsZVRvb2xzLmJ1dHRvbkJhc2Use3NCdXR0b25UZXh0OiJTZWxlY3QgYnV0dG9uIixmblNlbGVjdDpmdW5jdGlvbihhKXswIT09dGhpcy5mbkdldFNlbGVjdGVkKCkubGVuZ3RoP2UoYSkucmVtb3ZlQ2xhc3ModGhpcy5jbGFzc2VzLmJ1dHRvbnMuZGlzYWJsZWQpOmUoYSkuYWRkQ2xhc3ModGhpcy5jbGFzc2VzLmJ1dHRvbnMuZGlzYWJsZWQpfSxmbkluaXQ6ZnVuY3Rpb24oYSl7ZShhKS5hZGRDbGFzcyh0aGlzLmNsYXNzZXMuYnV0dG9ucy5kaXNhYmxlZCl9fSksc2VsZWN0X3NpbmdsZTplLmV4dGVuZCh7fSxUYWJsZVRvb2xzLmJ1dHRvbkJhc2Use3NCdXR0b25UZXh0OiJTZWxlY3QgYnV0dG9uIixmblNlbGVjdDpmdW5jdGlvbihhKXsxPT10aGlzLmZuR2V0U2VsZWN0ZWQoKS5sZW5ndGg/ZShhKS5yZW1vdmVDbGFzcyh0aGlzLmNsYXNzZXMuYnV0dG9ucy5kaXNhYmxlZCk6ZShhKS5hZGRDbGFzcyh0aGlzLmNsYXNzZXMuYnV0dG9ucy5kaXNhYmxlZCl9LGZuSW5pdDpmdW5jdGlvbihhKXtlKGEpLmFkZENsYXNzKHRoaXMuY2xhc3Nlcy5idXR0b25zLmRpc2FibGVkKX19KSwKc2VsZWN0X2FsbDplLmV4dGVuZCh7fSxUYWJsZVRvb2xzLmJ1dHRvbkJhc2Use3NCdXR0b25UZXh0OiJTZWxlY3QgYWxsIixmbkNsaWNrOmZ1bmN0aW9uKCl7dGhpcy5mblNlbGVjdEFsbCgpfSxmblNlbGVjdDpmdW5jdGlvbihhKXt0aGlzLmZuR2V0U2VsZWN0ZWQoKS5sZW5ndGg9PXRoaXMucy5kdC5mblJlY29yZHNEaXNwbGF5KCk/ZShhKS5hZGRDbGFzcyh0aGlzLmNsYXNzZXMuYnV0dG9ucy5kaXNhYmxlZCk6ZShhKS5yZW1vdmVDbGFzcyh0aGlzLmNsYXNzZXMuYnV0dG9ucy5kaXNhYmxlZCl9fSksc2VsZWN0X25vbmU6ZS5leHRlbmQoe30sVGFibGVUb29scy5idXR0b25CYXNlLHtzQnV0dG9uVGV4dDoiRGVzZWxlY3QgYWxsIixmbkNsaWNrOmZ1bmN0aW9uKCl7dGhpcy5mblNlbGVjdE5vbmUoKX0sZm5TZWxlY3Q6ZnVuY3Rpb24oYSl7MCE9PXRoaXMuZm5HZXRTZWxlY3RlZCgpLmxlbmd0aD9lKGEpLnJlbW92ZUNsYXNzKHRoaXMuY2xhc3Nlcy5idXR0b25zLmRpc2FibGVkKTplKGEpLmFkZENsYXNzKHRoaXMuY2xhc3Nlcy5idXR0b25zLmRpc2FibGVkKX0sCmZuSW5pdDpmdW5jdGlvbihhKXtlKGEpLmFkZENsYXNzKHRoaXMuY2xhc3Nlcy5idXR0b25zLmRpc2FibGVkKX19KSxhamF4OmUuZXh0ZW5kKHt9LFRhYmxlVG9vbHMuYnV0dG9uQmFzZSx7c0FqYXhVcmw6Ii94aHIucGhwIixzQnV0dG9uVGV4dDoiQWpheCBidXR0b24iLGZuQ2xpY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmZuR2V0VGFibGVEYXRhKGIpO2UuYWpheCh7dXJsOmIuc0FqYXhVcmwsZGF0YTpbe25hbWU6InRhYmxlRGF0YSIsdmFsdWU6Y31dLHN1Y2Nlc3M6Yi5mbkFqYXhDb21wbGV0ZSxkYXRhVHlwZToianNvbiIsdHlwZToiUE9TVCIsY2FjaGU6ITEsZXJyb3I6ZnVuY3Rpb24oKXthbGVydCgiRXJyb3IgZGV0ZWN0ZWQgd2hlbiBzZW5kaW5nIHRhYmxlIGRhdGEgdG8gc2VydmVyIil9fSl9LGZuQWpheENvbXBsZXRlOmZ1bmN0aW9uKCl7YWxlcnQoIkFqYXggY29tcGxldGUiKX19KSxkaXY6ZS5leHRlbmQoe30sVGFibGVUb29scy5idXR0b25CYXNlLHtzQWN0aW9uOiJkaXYiLApzVGFnOiJkaXYiLHNCdXR0b25DbGFzczoiRFRUVF9ub25idXR0b24iLHNCdXR0b25UZXh0OiJUZXh0IGJ1dHRvbiJ9KSxjb2xsZWN0aW9uOmUuZXh0ZW5kKHt9LFRhYmxlVG9vbHMuYnV0dG9uQmFzZSx7c0FjdGlvbjoiY29sbGVjdGlvbiIsc0J1dHRvbkNsYXNzOiJEVFRUX2J1dHRvbl9jb2xsZWN0aW9uIixzQnV0dG9uVGV4dDoiQ29sbGVjdGlvbiIsZm5DbGljazpmdW5jdGlvbihhLGIpe3RoaXMuX2ZuQ29sbGVjdGlvblNob3coYSxiKX19KX07VGFibGVUb29scy5jbGFzc2VzPXtjb250YWluZXI6IkRUVFRfY29udGFpbmVyIixidXR0b25zOntub3JtYWw6IkRUVFRfYnV0dG9uIixkaXNhYmxlZDoiRFRUVF9kaXNhYmxlZCJ9LGNvbGxlY3Rpb246e2NvbnRhaW5lcjoiRFRUVF9jb2xsZWN0aW9uIixiYWNrZ3JvdW5kOiJEVFRUX2NvbGxlY3Rpb25fYmFja2dyb3VuZCIsYnV0dG9uczp7bm9ybWFsOiJEVFRUX2J1dHRvbiIsZGlzYWJsZWQ6IkRUVFRfZGlzYWJsZWQifX0sc2VsZWN0Ont0YWJsZToiRFRUVF9zZWxlY3RhYmxlIiwKcm93OiJEVFRUX3NlbGVjdGVkIn0scHJpbnQ6e2JvZHk6IkRUVFRfUHJpbnQiLGluZm86IkRUVFRfcHJpbnRfaW5mbyIsbWVzc2FnZToiRFRUVF9QcmludE1lc3NhZ2UifX07VGFibGVUb29scy5jbGFzc2VzX3RoZW1lcm9sbGVyPXtjb250YWluZXI6IkRUVFRfY29udGFpbmVyIHVpLWJ1dHRvbnNldCB1aS1idXR0b25zZXQtbXVsdGkiLGJ1dHRvbnM6e25vcm1hbDoiRFRUVF9idXR0b24gdWktYnV0dG9uIHVpLXN0YXRlLWRlZmF1bHQifSxjb2xsZWN0aW9uOntjb250YWluZXI6IkRUVFRfY29sbGVjdGlvbiB1aS1idXR0b25zZXQgdWktYnV0dG9uc2V0LW11bHRpIn19O1RhYmxlVG9vbHMuREVGQVVMVFM9e3NTd2ZQYXRoOiJtZWRpYS9zd2YvY29weV9jc3ZfeGxzX3BkZi5zd2YiLHNSb3dTZWxlY3Q6Im5vbmUiLHNTZWxlY3RlZENsYXNzOm51bGwsZm5QcmVSb3dTZWxlY3Q6bnVsbCxmblJvd1NlbGVjdGVkOm51bGwsZm5Sb3dEZXNlbGVjdGVkOm51bGwsYUJ1dHRvbnM6WyJjb3B5IiwiY3N2IiwKInhscyIsInBkZiIsInByaW50Il0sb1RhZ3M6e2NvbnRhaW5lcjoiZGl2IixidXR0b246ImEiLGxpbmVyOiJzcGFuIixjb2xsZWN0aW9uOntjb250YWluZXI6ImRpdiIsYnV0dG9uOiJhIixsaW5lcjoic3BhbiJ9fX07VGFibGVUb29scy5wcm90b3R5cGUuQ0xBU1M9IlRhYmxlVG9vbHMiO1RhYmxlVG9vbHMuVkVSU0lPTj0iMi4xLjMiO1RhYmxlVG9vbHMucHJvdG90eXBlLlZFUlNJT049VGFibGVUb29scy5WRVJTSU9OOyJmdW5jdGlvbiI9PXR5cGVvZiBlLmZuLmRhdGFUYWJsZSYmImZ1bmN0aW9uIj09dHlwZW9mIGUuZm4uZGF0YVRhYmxlRXh0LmZuVmVyc2lvbkNoZWNrJiZlLmZuLmRhdGFUYWJsZUV4dC5mblZlcnNpb25DaGVjaygiMS45LjAiKT9lLmZuLmRhdGFUYWJsZUV4dC5hb0ZlYXR1cmVzLnB1c2goe2ZuSW5pdDpmdW5jdGlvbihhKXthPW5ldyBUYWJsZVRvb2xzKGEub0luc3RhbmNlLCJ1bmRlZmluZWQiIT10eXBlb2YgYS5vSW5pdC5vVGFibGVUb29scz9hLm9Jbml0Lm9UYWJsZVRvb2xzOgp7fSk7VGFibGVUb29scy5fYUluc3RhbmNlcy5wdXNoKGEpO3JldHVybiBhLmRvbS5jb250YWluZXJ9LGNGZWF0dXJlOiJUIixzRmVhdHVyZToiVGFibGVUb29scyJ9KTphbGVydCgiV2FybmluZzogVGFibGVUb29scyAyIHJlcXVpcmVzIERhdGFUYWJsZXMgMS45LjAgb3IgbmV3ZXIgLSB3d3cuZGF0YXRhYmxlcy5uZXQvZG93bmxvYWQiKTtlLmZuLkRhdGFUYWJsZS5UYWJsZVRvb2xzPVRhYmxlVG9vbHN9KShqUXVlcnksd2luZG93LGRvY3VtZW50KTsK</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21539947" offset="0" length="1387" />
          <PacketInfo time="21539947" offset="1387" length="1387" />
          <PacketInfo time="21539962" offset="2774" length="5548" />
          <PacketInfo time="21539978" offset="8322" length="1387" />
          <PacketInfo time="21539994" offset="9709" length="1387" />
          <PacketInfo time="21540025" offset="11096" length="1387" />
          <PacketInfo time="21540056" offset="12483" length="2774" />
          <PacketInfo time="21540103" offset="15257" length="2774" />
          <PacketInfo time="21540103" offset="18031" length="1387" />
          <PacketInfo time="21540134" offset="19418" length="1387" />
          <PacketInfo time="21540134" offset="20805" length="1387" />
          <PacketInfo time="21540165" offset="22192" length="1387" />
          <PacketInfo time="21540212" offset="23579" length="2774" />
          <PacketInfo time="21540243" offset="26353" length="1387" />
          <PacketInfo time="21540243" offset="27740" length="1835" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="1158" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/images/title_img/logo.png" url="http://ueatworkuat.maxprocessing.com/images/title_img/logo.png" ip="192.168.250.11" port="8080" connectionId="6" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.183+05:30" startTime="21544471" endTime="21544798">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2Uvd2VicCxpbWFnZS8qLCovKjtxPTAuOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9pbWFnZXMvdGl0bGVfaW1nL2xvZ28ucG5nIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiBpbWFnZS93ZWJwLGltYWdlLyosKi8qO3E9MC44DQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvcG5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNyBKdW4gMjAxNiAxNjoxNDowNSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwNzowMjozOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDg3MA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjEyMzg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL3BuZw0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMDcgSnVuIDIwMTYgMTY6MTQ6MDUgR01UDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KU2VydmVyLVZlcnNpb246IDYuNy4xLjEwMw0KQ29weXJpZ2h0OiAmY29weTsgMjAxNiBNYXhpbXVtIFByb2Nlc3NpbmcgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLg0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwNzowMjozOCBHTVQNCkNvbnRlbnQtTGVuZ3RoOiA0ODcwDQpBZ2U6IDIxMjM4DQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>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</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21544798" offset="0" length="1387" />
          <PacketInfo time="21544814" offset="1387" length="2774" />
          <PacketInfo time="21544861" offset="4161" length="1074" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="1172" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/images/32x32_barcode.png" url="http://ueatworkuat.maxprocessing.com/images/32x32_barcode.png" ip="192.168.250.11" port="8080" connectionId="6" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.189+05:30" startTime="21544876" endTime="21545032">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2Uvd2VicCxpbWFnZS8qLCovKjtxPTAuOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9pbWFnZXMvMzJ4MzJfYmFyY29kZS5wbmcgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6IGltYWdlL3dlYnAsaW1hZ2UvKiwqLyo7cT0wLjgNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvcG5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNyBKdW4gMjAxNiAxNjoxNDoxMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwNzowMjozOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTg5MA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjEyMzg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL3BuZw0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMDcgSnVuIDIwMTYgMTY6MTQ6MTEgR01UDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KU2VydmVyLVZlcnNpb246IDYuNy4xLjEwMw0KQ29weXJpZ2h0OiAmY29weTsgMjAxNiBNYXhpbXVtIFByb2Nlc3NpbmcgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLg0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwNzowMjozOCBHTVQNCkNvbnRlbnQtTGVuZ3RoOiAxODkwDQpBZ2U6IDIxMjM4DQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>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</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21545017" offset="0" length="2255" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="1177" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/images/32px-Crystal_Clear_action_info_gray.png" url="http://ueatworkuat.maxprocessing.com/images/32px-Crystal_Clear_action_info_gray.png" ip="192.168.250.11" port="8080" connectionId="6" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.194+05:30" startTime="21545032" endTime="21545126">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2Uvd2VicCxpbWFnZS8qLCovKjtxPTAuOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9pbWFnZXMvMzJweC1DcnlzdGFsX0NsZWFyX2FjdGlvbl9pbmZvX2dyYXkucG5nIEhUVFAvMS4xDQpIb3N0OiB1ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbQ0KUHJveHktQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiBpbWFnZS93ZWJwLGltYWdlLyosKi8qO3E9MC44DQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvcG5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNyBKdW4gMjAxNiAxNjoxNDoxMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwNzowMjozOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjA5Mg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjEyMzc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL3BuZw0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMDcgSnVuIDIwMTYgMTY6MTQ6MTEgR01UDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KU2VydmVyLVZlcnNpb246IDYuNy4xLjEwMw0KQ29weXJpZ2h0OiAmY29weTsgMjAxNiBNYXhpbXVtIFByb2Nlc3NpbmcgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLg0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwNzowMjozOSBHTVQNCkNvbnRlbnQtTGVuZ3RoOiAyMDkyDQpBZ2U6IDIxMjM3DQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>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</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21545126" offset="0" length="365" />
          <PacketInfo time="21545142" offset="365" length="2092" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="1185" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/images/32px-Crystal_Clear_app_access_gray.png" url="http://ueatworkuat.maxprocessing.com/images/32px-Crystal_Clear_app_access_gray.png" ip="192.168.250.11" port="8080" connectionId="6" origin="HTML" frame="1" startDateTime="2016-06-23T18:33:48.200+05:30" startTime="21545142" endTime="21545298">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Proxy-Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2Uvd2VicCxpbWFnZS8qLCovKjtxPTAuOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9pbWFnZXMvMzJweC1DcnlzdGFsX0NsZWFyX2FwcF9hY2Nlc3NfZ3JheS5wbmcgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6IGltYWdlL3dlYnAsaW1hZ2UvKiwqLyo7cT0wLjgNClJlZmVyZXI6IGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9sb2dpbi5tYXg/cHJlcHJvY2Vzcz10cnVlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHNkY2gNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvcG5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNyBKdW4gMjAxNiAxNjoxOTowNyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3RpbmdyYXk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ni43LjEuMTAz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Copyright" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwNzowMjozOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjQxMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Age" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjEyMzg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL3BuZw0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMDcgSnVuIDIwMTYgMTY6MTk6MDcgR01UDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KU2VydmVyLVZlcnNpb246IDYuNy4xLjEwMw0KQ29weXJpZ2h0OiAmY29weTsgMjAxNiBNYXhpbXVtIFByb2Nlc3NpbmcgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLg0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwNzowMjozOSBHTVQNCkNvbnRlbnQtTGVuZ3RoOiAyNDEwDQpBZ2U6IDIxMjM4DQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>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</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="21545282" offset="0" length="1387" />
          <PacketInfo time="21545298" offset="1387" length="1388" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
  <HTTPTask id="274" hostname="translate.googleapis.com" path="/translate_a/l?client=chrome&amp;hl=en&amp;key=AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw&amp;alpha=1" url="https://translate.googleapis.com/translate_a/l?client=chrome&amp;hl=en&amp;key=AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw&amp;alpha=1" ip="192.168.250.11" port="443" connectionId="4" origin="ExtraRes" frame="1" startDateTime="2016-06-23T18:33:47.948+05:30" startTime="21531772" endTime="21531991">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>Y2xpZW50PWNocm9tZSZobD1lbiZrZXk9QUl6YVN5Qk90aTRtTS02eDlXRG5aSWpJZXlFVTIxT3BCWHFXQmd3JmFscGhhPTE=</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="client" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Y2hyb21l</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="hl" index="1">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZW4=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="key" index="2">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>QUl6YVN5Qk90aTRtTS02eDlXRG5aSWpJZXlFVTIxT3BCWHFXQmd3</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="alpha" index="3">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dHJhbnNsYXRlLmdvb2dsZWFwaXMuY29t</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC90cmFuc2xhdGVfYS9sP2NsaWVudD1jaHJvbWUmaGw9ZW4ma2V5PUFJemFTeUJPdGk0bU0tNng5V0RuWklqSWV5RVUyMU9wQlhxV0JndyZhbHBoYT0xIEhUVFAvMS4xDQpIb3N0OiB0cmFuc2xhdGUuZ29vZ2xlYXBpcy5jb20NCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Date" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMyBKdW4gMjAxNiAxMjo1NjoyNSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMyBKdW4gMjAxNiAxMjo1NjoyNSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHJpdmF0ZSwgbWF4LWFnZT04NjQwMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Language" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Disposition" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXR0YWNobWVudDsgZmlsZW5hbWU9ImYudHh0Ig==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUCBzZXJ2ZXIgKHVua25vd24p</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alternate-Protocol" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDQzOnF1aWM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alt-Svc" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cXVpYz0iOjQ0MyI7IG1hPTI1OTIwMDA7IHY9IjM0LDMzLDMyLDMxLDMwLDI5LDI4LDI3LDI2LDI1Ig==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ODgw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Age" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Via" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUFMvMS4xIGluZC1taHAybGZwMDAx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBUaHUsIDIzIEp1biAyMDE2IDEyOjU2OjI1IEdNVA0KRXhwaXJlczogVGh1LCAyMyBKdW4gMjAxNiAxMjo1NjoyNSBHTVQNCkNhY2hlLUNvbnRyb2w6IHByaXZhdGUsIG1heC1hZ2U9ODY0MDANCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOA0KQ29udGVudC1MYW5ndWFnZTogZW4NClgtQ29udGVudC1UeXBlLU9wdGlvbnM6IG5vc25pZmYNCkNvbnRlbnQtRGlzcG9zaXRpb246IGF0dGFjaG1lbnQ7IGZpbGVuYW1lPSJmLnR4dCINCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANClNlcnZlcjogSFRUUCBzZXJ2ZXIgKHVua25vd24pDQpYLVhTUy1Qcm90ZWN0aW9uOiAxOyBtb2RlPWJsb2NrDQpBbHRlcm5hdGUtUHJvdG9jb2w6IDQ0MzpxdWljDQpBbHQtU3ZjOiBxdWljPSI6NDQzIjsgbWE9MjU5MjAwMDsgdj0iMzQsMzMsMzIsMzEsMzAsMjksMjgsMjcsMjYsMjUiDQpDb250ZW50LUxlbmd0aDogODgwDQpBZ2U6IDANClZpYTogSFRUUFMvMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="4">
            <ActualData>eyJzbCI6eyJhdXRvIjoiRGV0ZWN0IGxhbmd1YWdlIiwiYWYiOiJBZnJpa2FhbnMiLCJzcSI6IkFsYmFuaWFuIiwiYW0iOiJBbWhhcmljIiwiYXIiOiJBcmFiaWMiLCJoeSI6IkFybWVuaWFuIiwiYXoiOiJBemVyYmFpamFuaSIsImV1IjoiQmFzcXVlIiwiYmUiOiJCZWxhcnVzaWFuIiwiYm4iOiJCZW5nYWxpIiwiYnMiOiJCb3NuaWFuIiwiYmciOiJCdWxnYXJpYW4iLCJjYSI6IkNhdGFsYW4iLCJjZWIiOiJDZWJ1YW5vIiwibnkiOiJDaGljaGV3YSIsInpoLUNOIjoiQ2hpbmVzZSIsImNvIjoiQ29yc2ljYW4iLCJociI6IkNyb2F0aWFuIiwiY3MiOiJDemVjaCIsImRhIjoiRGFuaXNoIiwibmwiOiJEdXRjaCIsImVuIjoiRW5nbGlzaCIsImVvIjoiRXNwZXJhbnRvIiwiZXQiOiJFc3RvbmlhbiIsInRsIjoiRmlsaXBpbm8iLCJmaSI6IkZpbm5pc2giLCJmciI6IkZyZW5jaCIsImZ5IjoiRnJpc2lhbiIsImdsIjoiR2FsaWNpYW4iLCJrYSI6Ikdlb3JnaWFuIiwiZGUiOiJHZXJtYW4iLCJlbCI6IkdyZWVrIiwiZ3UiOiJHdWphcmF0aSIsImh0IjoiSGFpdGlhbiBDcmVvbGUiLCJoYSI6IkhhdXNhIiwiaGF3IjoiSGF3YWlpYW4iLCJpdyI6IkhlYnJldyIsImhpIjoiSGluZGkiLCJobW4iOiJIbW9uZyIsImh1IjoiSHVuZ2FyaWFuIiwiaXMiOiJJY2VsYW5kaWMiLCJpZyI6IklnYm8iLCJpZCI6IkluZG9uZXNpYW4iLCJnYSI6IklyaXNoIiwiaXQiOiJJdGFsaWFuIiwiamEiOiJKYXBhbmVzZSIsImp3IjoiSmF2YW5lc2UiLCJrbiI6Ikthbm5hZGEiLCJrayI6IkthemFraCIsImttIjoiS2htZXIiLCJrbyI6IktvcmVhbiIsImt1IjoiS3VyZGlzaCAoS3VybWFuamkpIiwia3kiOiJLeXJneXoiLCJsbyI6IkxhbyIsImxhIjoiTGF0aW4iLCJsdiI6IkxhdHZpYW4iLCJsdCI6IkxpdGh1YW5pYW4iLCJsYiI6Ikx1eGVtYm91cmdpc2giLCJtayI6Ik1hY2Vkb25pYW4iLCJtZyI6Ik1hbGFnYXN5IiwibXMiOiJNYWxheSIsIm1sIjoiTWFsYXlhbGFtIiwibXQiOiJNYWx0ZXNlIiwibWkiOiJNYW9yaSIsIm1yIjoiTWFyYXRoaSIsIm1uIjoiTW9uZ29saWFuIiwibXkiOiJNeWFubWFyIChCdXJtZXNlKSIsIm5lIjoiTmVwYWxpIiwibm8iOiJOb3J3ZWdpYW4iLCJwcyI6IlBhc2h0byIsImZhIjoiUGVyc2lhbiIsInBsIjoiUG9saXNoIiwicHQiOiJQb3J0dWd1ZXNlIiwicGEiOiJQdW5qYWJpIiwicm8iOiJSb21hbmlhbiIsInJ1IjoiUnVzc2lhbiIsInNtIjoiU2Ftb2FuIiwiZ2QiOiJTY290cyBHYWVsaWMiLCJzciI6IlNlcmJpYW4iLCJzdCI6IlNlc290aG8iLCJzbiI6IlNob25hIiwic2QiOiJTaW5kaGkiLCJzaSI6IlNpbmhhbGEiLCJzayI6IlNsb3ZhayIsInNsIjoiU2xvdmVuaWFuIiwic28iOiJTb21hbGkiLCJlcyI6IlNwYW5pc2giLCJzdSI6IlN1bmRhbmVzZSIsInN3IjoiU3dhaGlsaSIsInN2IjoiU3dlZGlzaCIsInRnIjoiVGFqaWsiLCJ0YSI6IlRhbWlsIiwidGUiOiJUZWx1Z3UiLCJ0aCI6IlRoYWkiLCJ0ciI6IlR1cmtpc2giLCJ1ayI6IlVrcmFpbmlhbiIsInVyIjoiVXJkdSIsInV6IjoiVXpiZWsiLCJ2aSI6IlZpZXRuYW1lc2UiLCJjeSI6IldlbHNoIiwieGgiOiJYaG9zYSIsInlpIjoiWWlkZGlzaCIsInlvIjoiWW9ydWJhIiwienUiOiJadWx1In0sInRsIjp7ImFmIjoiQWZyaWthYW5zIiwic3EiOiJBbGJhbmlhbiIsImFtIjoiQW1oYXJpYyIsImFyIjoiQXJhYmljIiwiaHkiOiJBcm1lbmlhbiIsImF6IjoiQXplcmJhaWphbmkiLCJldSI6IkJhc3F1ZSIsImJlIjoiQmVsYXJ1c2lhbiIsImJuIjoiQmVuZ2FsaSIsImJzIjoiQm9zbmlhbiIsImJnIjoiQnVsZ2FyaWFuIiwiY2EiOiJDYXRhbGFuIiwiY2ViIjoiQ2VidWFubyIsIm55IjoiQ2hpY2hld2EiLCJ6aC1DTiI6IkNoaW5lc2UgKFNpbXBsaWZpZWQpIiwiemgtVFciOiJDaGluZXNlIChUcmFkaXRpb25hbCkiLCJjbyI6IkNvcnNpY2FuIiwiaHIiOiJDcm9hdGlhbiIsImNzIjoiQ3plY2giLCJkYSI6IkRhbmlzaCIsIm5sIjoiRHV0Y2giLCJlbiI6IkVuZ2xpc2giLCJlbyI6IkVzcGVyYW50byIsImV0IjoiRXN0b25pYW4iLCJ0bCI6IkZpbGlwaW5vIiwiZmkiOiJGaW5uaXNoIiwiZnIiOiJGcmVuY2giLCJmeSI6IkZyaXNpYW4iLCJnbCI6IkdhbGljaWFuIiwia2EiOiJHZW9yZ2lhbiIsImRlIjoiR2VybWFuIiwiZWwiOiJHcmVlayIsImd1IjoiR3VqYXJhdGkiLCJodCI6IkhhaXRpYW4gQ3Jlb2xlIiwiaGEiOiJIYXVzYSIsImhhdyI6Ikhhd2FpaWFuIiwiaXciOiJIZWJyZXciLCJoaSI6IkhpbmRpIiwiaG1uIjoiSG1vbmciLCJodSI6Ikh1bmdhcmlhbiIsImlzIjoiSWNlbGFuZGljIiwiaWciOiJJZ2JvIiwiaWQiOiJJbmRvbmVzaWFuIiwiZ2EiOiJJcmlzaCIsIml0IjoiSXRhbGlhbiIsImphIjoiSmFwYW5lc2UiLCJqdyI6IkphdmFuZXNlIiwia24iOiJLYW5uYWRhIiwia2siOiJLYXpha2giLCJrbSI6IktobWVyIiwia28iOiJLb3JlYW4iLCJrdSI6Ikt1cmRpc2ggKEt1cm1hbmppKSIsImt5IjoiS3lyZ3l6IiwibG8iOiJMYW8iLCJsYSI6IkxhdGluIiwibHYiOiJMYXR2aWFuIiwibHQiOiJMaXRodWFuaWFuIiwibGIiOiJMdXhlbWJvdXJnaXNoIiwibWsiOiJNYWNlZG9uaWFuIiwibWciOiJNYWxhZ2FzeSIsIm1zIjoiTWFsYXkiLCJtbCI6Ik1hbGF5YWxhbSIsIm10IjoiTWFsdGVzZSIsIm1pIjoiTWFvcmkiLCJtciI6Ik1hcmF0aGkiLCJtbiI6Ik1vbmdvbGlhbiIsIm15IjoiTXlhbm1hciAoQnVybWVzZSkiLCJuZSI6Ik5lcGFsaSIsIm5vIjoiTm9yd2VnaWFuIiwicHMiOiJQYXNodG8iLCJmYSI6IlBlcnNpYW4iLCJwbCI6IlBvbGlzaCIsInB0IjoiUG9ydHVndWVzZSIsInBhIjoiUHVuamFiaSIsInJvIjoiUm9tYW5pYW4iLCJydSI6IlJ1c3NpYW4iLCJzbSI6IlNhbW9hbiIsImdkIjoiU2NvdHMgR2FlbGljIiwic3IiOiJTZXJiaWFuIiwic3QiOiJTZXNvdGhvIiwic24iOiJTaG9uYSIsInNkIjoiU2luZGhpIiwic2kiOiJTaW5oYWxhIiwic2siOiJTbG92YWsiLCJzbCI6IlNsb3ZlbmlhbiIsInNvIjoiU29tYWxpIiwiZXMiOiJTcGFuaXNoIiwic3UiOiJTdW5kYW5lc2UiLCJzdyI6IlN3YWhpbGkiLCJzdiI6IlN3ZWRpc2giLCJ0ZyI6IlRhamlrIiwidGEiOiJUYW1pbCIsInRlIjoiVGVsdWd1IiwidGgiOiJUaGFpIiwidHIiOiJUdXJraXNoIiwidWsiOiJVa3JhaW5pYW4iLCJ1ciI6IlVyZHUiLCJ1eiI6IlV6YmVrIiwidmkiOiJWaWV0bmFtZXNlIiwiY3kiOiJXZWxzaCIsInhoIjoiWGhvc2EiLCJ5aSI6IllpZGRpc2giLCJ5byI6IllvcnViYSIsInp1IjoiWnVsdSJ9LCJhbCI6e319</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="21527779" offset="0" length="131" />
        <PacketInfo time="21531991" offset="131" length="535" />
        <PacketInfo time="21532006" offset="666" length="10" />
        <PacketInfo time="21532006" offset="676" length="870" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="473" hostname="ssl.gstatic.com" path="/safebrowsing/csd/client_model_v5_variation_0.pb" url="https://ssl.gstatic.com/safebrowsing/csd/client_model_v5_variation_0.pb" ip="192.168.250.11" port="443" connectionId="12" origin="ExtraRes" frame="1" startDateTime="2016-06-23T18:33:48.051+05:30" startTime="21536889" endTime="21536983">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c3NsLmdzdGF0aWMuY29t</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9zYWZlYnJvd3NpbmcvY3NkL2NsaWVudF9tb2RlbF92NV92YXJpYXRpb25fMC5wYiBIVFRQLzEuMQ0KSG9zdDogc3NsLmdzdGF0aWMuY29tDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Vary" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFt</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAxNyBKdW4gMjAxNiAwNjowMTo1MSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2F0LCAyNSBKdW4gMjAxNiAwNjowMTo1MSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMSBBcHIgMjAxNiAwMzoxNzoyMiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2ZmZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHVibGljLCBtYXgtYWdlPTY5MTIwMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Age" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NTQzMjc5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alternate-Protocol" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDQzOnF1aWM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alt-Svc" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cXVpYz0iOjQ0MyI7IG1hPTI1OTIwMDA7IHY9IjM0LDMzLDMyLDMxLDMwLDI5LDI4LDI3LDI2LDI1Ig==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Via" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUFMvMS4xIGluZC1taHAybGZwMDAx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="15">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Njk1NDc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtDQpEYXRlOiBGcmksIDE3IEp1biAyMDE2IDA2OjAxOjUxIEdNVA0KRXhwaXJlczogU2F0LCAyNSBKdW4gMjAxNiAwNjowMTo1MSBHTVQNCkxhc3QtTW9kaWZpZWQ6IFRodSwgMjEgQXByIDIwMTYgMDM6MTc6MjIgR01UDQpYLUNvbnRlbnQtVHlwZS1PcHRpb25zOiBub3NuaWZmDQpTZXJ2ZXI6IHNmZmUNClgtWFNTLVByb3RlY3Rpb246IDE7IG1vZGU9YmxvY2sNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT02OTEyMDANCkFnZTogNTQzMjc5DQpBbHRlcm5hdGUtUHJvdG9jb2w6IDQ0MzpxdWljDQpBbHQtU3ZjOiBxdWljPSI6NDQzIjsgbWE9MjU5MjAwMDsgdj0iMzQsMzMsMzIsMzEsMzAsMjksMjgsMjcsMjYsMjUiDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpWaWE6IEhUVFBTLzEuMSBpbmQtbWhwMmxmcDAwMQ0KQ29udGVudC1MZW5ndGg6IDY5NTQ3DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>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</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="21532506" offset="0" length="131" />
        <PacketInfo time="21536983" offset="131" length="538" />
        <PacketInfo time="21537201" offset="669" length="15901" />
        <PacketInfo time="21537232" offset="16570" length="1023" />
        <PacketInfo time="21537498" offset="17593" length="16384" />
        <PacketInfo time="21537716" offset="33977" length="16384" />
        <PacketInfo time="21537888" offset="50361" length="11195" />
        <PacketInfo time="21538012" offset="61556" length="8660" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="538" hostname="ssl.gstatic.com" path="/safebrowsing/csd/client_model_v5_ext_variation_0.pb" url="https://ssl.gstatic.com/safebrowsing/csd/client_model_v5_ext_variation_0.pb" ip="192.168.250.11" port="443" connectionId="12" origin="ExtraRes" frame="1" startDateTime="2016-06-23T18:33:48.093+05:30" startTime="21538044" endTime="21538262">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c3NsLmdzdGF0aWMuY29t</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9zYWZlYnJvd3NpbmcvY3NkL2NsaWVudF9tb2RlbF92NV9leHRfdmFyaWF0aW9uXzAucGIgSFRUUC8xLjENCkhvc3Q6IHNzbC5nc3RhdGljLmNvbQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Vary" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFt</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAxNSBKdW4gMjAxNiAxNDo1MTowMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMyBKdW4gMjAxNiAxNDo1MTowMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMSBBcHIgMjAxNiAwMzoxNzoyMiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2ZmZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHVibGljLCBtYXgtYWdlPTY5MTIwMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Age" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Njg0MzMx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alternate-Protocol" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDQzOnF1aWM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alt-Svc" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cXVpYz0iOjQ0MyI7IG1hPTI1OTIwMDA7IHY9IjM0LDMzLDMyLDMxLDMwLDI5LDI4LDI3LDI2LDI1Ig==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Njk1NDc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Via" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUFMvMS4xIGluZC1taHAybGZwMDAx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtDQpEYXRlOiBXZWQsIDE1IEp1biAyMDE2IDE0OjUxOjAwIEdNVA0KRXhwaXJlczogVGh1LCAyMyBKdW4gMjAxNiAxNDo1MTowMCBHTVQNCkxhc3QtTW9kaWZpZWQ6IFRodSwgMjEgQXByIDIwMTYgMDM6MTc6MjIgR01UDQpYLUNvbnRlbnQtVHlwZS1PcHRpb25zOiBub3NuaWZmDQpTZXJ2ZXI6IHNmZmUNClgtWFNTLVByb3RlY3Rpb246IDE7IG1vZGU9YmxvY2sNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT02OTEyMDANCkFnZTogNjg0MzMxDQpBbHRlcm5hdGUtUHJvdG9jb2w6IDQ0MzpxdWljDQpBbHQtU3ZjOiBxdWljPSI6NDQzIjsgbWE9MjU5MjAwMDsgdj0iMzQsMzMsMzIsMzEsMzAsMjksMjgsMjcsMjYsMjUiDQpDb250ZW50LUxlbmd0aDogNjk1NDcNClZpYTogSFRUUFMvMS4xIGluZC1taHAybGZwMDAxDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="21538262" offset="0" length="514" />
        <PacketInfo time="21538449" offset="514" length="15901" />
        <PacketInfo time="21538496" offset="16415" length="1023" />
        <PacketInfo time="21538699" offset="17438" length="16384" />
        <PacketInfo time="21538948" offset="33822" length="16384" />
        <PacketInfo time="21539182" offset="50206" length="16384" />
        <PacketInfo time="21539229" offset="66590" length="3471" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="1192" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/script/main.js" url="http://ueatworkuat.maxprocessing.com/script/main.js" ip="192.168.250.11" port="8080" connectionId="6" origin="ExtraRes" frame="1" startDateTime="2016-06-23T18:33:48.205+05:30" startTime="21545298" endTime="21545469">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Proxy-Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9zY3JpcHQvbWFpbi5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjozNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U3RpbmdyYXk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjozNiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server-Version" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ni43LjEuMTAz</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Copyright" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Mjk0Njgw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Age" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MzU2NDE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Via" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjozNg0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MzYgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogMjk0NjgwDQpBZ2U6IDM1NjQxDQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="21545469" offset="0" length="350" />
        <PacketInfo time="21545469" offset="350" length="1387" />
        <PacketInfo time="21545469" offset="1737" length="1387" />
        <PacketInfo time="21545469" offset="3124" length="1387" />
        <PacketInfo time="21545469" offset="4511" length="2774" />
        <PacketInfo time="21545532" offset="7285" length="1387" />
        <PacketInfo time="21545532" offset="8672" length="1387" />
        <PacketInfo time="21545578" offset="10059" length="1387" />
        <PacketInfo time="21545625" offset="11446" length="1387" />
        <PacketInfo time="21545641" offset="12833" length="1387" />
        <PacketInfo time="21545672" offset="14220" length="1387" />
        <PacketInfo time="21545688" offset="15607" length="2774" />
        <PacketInfo time="21545719" offset="18381" length="1387" />
        <PacketInfo time="21545734" offset="19768" length="1387" />
        <PacketInfo time="21545750" offset="21155" length="1387" />
        <PacketInfo time="21545812" offset="22542" length="1387" />
        <PacketInfo time="21545828" offset="23929" length="1387" />
        <PacketInfo time="21545859" offset="25316" length="1387" />
        <PacketInfo time="21545859" offset="26703" length="2774" />
        <PacketInfo time="21545906" offset="29477" length="1387" />
        <PacketInfo time="21545906" offset="30864" length="1387" />
        <PacketInfo time="21545953" offset="32251" length="1387" />
        <PacketInfo time="21545984" offset="33638" length="1387" />
        <PacketInfo time="21546000" offset="35025" length="1387" />
        <PacketInfo time="21546031" offset="36412" length="1387" />
        <PacketInfo time="21546046" offset="37799" length="2774" />
        <PacketInfo time="21546078" offset="40573" length="1387" />
        <PacketInfo time="21546093" offset="41960" length="1387" />
        <PacketInfo time="21546124" offset="43347" length="1387" />
        <PacketInfo time="21546171" offset="44734" length="1387" />
        <PacketInfo time="21546171" offset="46121" length="1387" />
        <PacketInfo time="21546218" offset="47508" length="1387" />
        <PacketInfo time="21546218" offset="48895" length="2774" />
        <PacketInfo time="21546249" offset="51669" length="1387" />
        <PacketInfo time="21546280" offset="53056" length="1387" />
        <PacketInfo time="21546296" offset="54443" length="1387" />
        <PacketInfo time="21546343" offset="55830" length="1387" />
        <PacketInfo time="21546343" offset="57217" length="1387" />
        <PacketInfo time="21546390" offset="58604" length="1387" />
        <PacketInfo time="21546390" offset="59991" length="2774" />
        <PacketInfo time="21546436" offset="62765" length="1387" />
        <PacketInfo time="21546436" offset="64152" length="1387" />
        <PacketInfo time="21546483" offset="65539" length="1387" />
        <PacketInfo time="21546514" offset="66926" length="1387" />
        <PacketInfo time="21546530" offset="68313" length="1387" />
        <PacketInfo time="21546561" offset="69700" length="1387" />
        <PacketInfo time="21546561" offset="71087" length="2774" />
        <PacketInfo time="21546592" offset="73861" length="1387" />
        <PacketInfo time="21546608" offset="75248" length="1387" />
        <PacketInfo time="21546639" offset="76635" length="1387" />
        <PacketInfo time="21546686" offset="78022" length="1387" />
        <PacketInfo time="21546686" offset="79409" length="1387" />
        <PacketInfo time="21546733" offset="80796" length="1387" />
        <PacketInfo time="21546733" offset="82183" length="2774" />
        <PacketInfo time="21546764" offset="84957" length="1387" />
        <PacketInfo time="21546764" offset="86344" length="1387" />
        <PacketInfo time="21546780" offset="87731" length="1387" />
        <PacketInfo time="21546842" offset="89118" length="1387" />
        <PacketInfo time="21546858" offset="90505" length="1387" />
        <PacketInfo time="21546889" offset="91892" length="1387" />
        <PacketInfo time="21546951" offset="93279" length="5548" />
        <PacketInfo time="21546967" offset="98827" length="1387" />
        <PacketInfo time="21547014" offset="100214" length="1387" />
        <PacketInfo time="21547029" offset="101601" length="1387" />
        <PacketInfo time="21547060" offset="102988" length="1387" />
        <PacketInfo time="21547060" offset="104375" length="2774" />
        <PacketInfo time="21547092" offset="107149" length="1387" />
        <PacketInfo time="21547123" offset="108536" length="1387" />
        <PacketInfo time="21547138" offset="109923" length="1387" />
        <PacketInfo time="21547170" offset="111310" length="1387" />
        <PacketInfo time="21547185" offset="112697" length="1387" />
        <PacketInfo time="21547216" offset="114084" length="1387" />
        <PacketInfo time="21547216" offset="115471" length="1387" />
        <PacketInfo time="21547216" offset="116858" length="1387" />
        <PacketInfo time="21547248" offset="118245" length="1387" />
        <PacketInfo time="21547263" offset="119632" length="1387" />
        <PacketInfo time="21547310" offset="121019" length="1387" />
        <PacketInfo time="21547341" offset="122406" length="1387" />
        <PacketInfo time="21547341" offset="123793" length="1387" />
        <PacketInfo time="21547388" offset="125180" length="1387" />
        <PacketInfo time="21547388" offset="126567" length="2774" />
        <PacketInfo time="21547419" offset="129341" length="1387" />
        <PacketInfo time="21547435" offset="130728" length="1387" />
        <PacketInfo time="21547466" offset="132115" length="1387" />
        <PacketInfo time="21547513" offset="133502" length="1387" />
        <PacketInfo time="21547513" offset="134889" length="1387" />
        <PacketInfo time="21547544" offset="136276" length="1387" />
        <PacketInfo time="21547560" offset="137663" length="2774" />
        <PacketInfo time="21547591" offset="140437" length="1387" />
        <PacketInfo time="21547591" offset="141824" length="1387" />
        <PacketInfo time="21547638" offset="143211" length="1387" />
        <PacketInfo time="21547684" offset="144598" length="1387" />
        <PacketInfo time="21547716" offset="145985" length="1387" />
        <PacketInfo time="21547716" offset="147372" length="1387" />
        <PacketInfo time="21547731" offset="148759" length="4161" />
        <PacketInfo time="21547762" offset="152920" length="1387" />
        <PacketInfo time="21547809" offset="154307" length="1387" />
        <PacketInfo time="21547840" offset="155694" length="1387" />
        <PacketInfo time="21547856" offset="157081" length="1387" />
        <PacketInfo time="21547887" offset="158468" length="1387" />
        <PacketInfo time="21547887" offset="159855" length="1387" />
        <PacketInfo time="21547887" offset="161242" length="1387" />
        <PacketInfo time="21547934" offset="162629" length="1387" />
        <PacketInfo time="21547934" offset="164016" length="1387" />
        <PacketInfo time="21547965" offset="165403" length="1387" />
        <PacketInfo time="21548012" offset="166790" length="1387" />
        <PacketInfo time="21548012" offset="168177" length="1387" />
        <PacketInfo time="21548059" offset="169564" length="1387" />
        <PacketInfo time="21548059" offset="170951" length="2774" />
        <PacketInfo time="21548090" offset="173725" length="1387" />
        <PacketInfo time="21548090" offset="175112" length="1387" />
        <PacketInfo time="21548137" offset="176499" length="1387" />
        <PacketInfo time="21548184" offset="177886" length="1387" />
        <PacketInfo time="21548184" offset="179273" length="1387" />
        <PacketInfo time="21548215" offset="180660" length="1387" />
        <PacketInfo time="21548215" offset="182047" length="2774" />
        <PacketInfo time="21548262" offset="184821" length="1387" />
        <PacketInfo time="21548262" offset="186208" length="1387" />
        <PacketInfo time="21548308" offset="187595" length="1387" />
        <PacketInfo time="21548340" offset="188982" length="1387" />
        <PacketInfo time="21548340" offset="190369" length="1387" />
        <PacketInfo time="21548386" offset="191756" length="1387" />
        <PacketInfo time="21548386" offset="193143" length="2774" />
        <PacketInfo time="21548418" offset="195917" length="1387" />
        <PacketInfo time="21548433" offset="197304" length="1387" />
        <PacketInfo time="21548464" offset="198691" length="1387" />
        <PacketInfo time="21548511" offset="200078" length="1387" />
        <PacketInfo time="21548511" offset="201465" length="1387" />
        <PacketInfo time="21548558" offset="202852" length="1387" />
        <PacketInfo time="21548574" offset="204239" length="4161" />
        <PacketInfo time="21548589" offset="208400" length="1387" />
        <PacketInfo time="21548636" offset="209787" length="1387" />
        <PacketInfo time="21548683" offset="211174" length="1387" />
        <PacketInfo time="21548683" offset="212561" length="1387" />
        <PacketInfo time="21548714" offset="213948" length="1387" />
        <PacketInfo time="21548730" offset="215335" length="2774" />
        <PacketInfo time="21548761" offset="218109" length="1387" />
        <PacketInfo time="21548761" offset="219496" length="1387" />
        <PacketInfo time="21548792" offset="220883" length="1387" />
        <PacketInfo time="21548839" offset="222270" length="1387" />
        <PacketInfo time="21548854" offset="223657" length="1387" />
        <PacketInfo time="21548886" offset="225044" length="1387" />
        <PacketInfo time="21548901" offset="226431" length="2774" />
        <PacketInfo time="21548932" offset="229205" length="1387" />
        <PacketInfo time="21548964" offset="230592" length="1387" />
        <PacketInfo time="21548964" offset="231979" length="1387" />
        <PacketInfo time="21549010" offset="233366" length="1387" />
        <PacketInfo time="21549010" offset="234753" length="1387" />
        <PacketInfo time="21549057" offset="236140" length="1387" />
        <PacketInfo time="21549057" offset="237527" length="2774" />
        <PacketInfo time="21549104" offset="240301" length="1387" />
        <PacketInfo time="21549104" offset="241688" length="1387" />
        <PacketInfo time="21549151" offset="243075" length="1387" />
        <PacketInfo time="21549182" offset="244462" length="1387" />
        <PacketInfo time="21549182" offset="245849" length="1387" />
        <PacketInfo time="21549229" offset="247236" length="1387" />
        <PacketInfo time="21549260" offset="248623" length="2774" />
        <PacketInfo time="21549276" offset="251397" length="1387" />
        <PacketInfo time="21549276" offset="252784" length="1387" />
        <PacketInfo time="21549276" offset="254171" length="1387" />
        <PacketInfo time="21549354" offset="255558" length="1387" />
        <PacketInfo time="21549354" offset="256945" length="1387" />
        <PacketInfo time="21549400" offset="258332" length="1387" />
        <PacketInfo time="21549400" offset="259719" length="2774" />
        <PacketInfo time="21549432" offset="262493" length="1387" />
        <PacketInfo time="21549447" offset="263880" length="1387" />
        <PacketInfo time="21549478" offset="265267" length="1387" />
        <PacketInfo time="21549525" offset="266654" length="1387" />
        <PacketInfo time="21549525" offset="268041" length="1387" />
        <PacketInfo time="21549572" offset="269428" length="1387" />
        <PacketInfo time="21549572" offset="270815" length="2774" />
        <PacketInfo time="21549603" offset="273589" length="1387" />
        <PacketInfo time="21549619" offset="274976" length="1387" />
        <PacketInfo time="21549650" offset="276363" length="1387" />
        <PacketInfo time="21549697" offset="277750" length="1387" />
        <PacketInfo time="21549697" offset="279137" length="1387" />
        <PacketInfo time="21549728" offset="280524" length="1387" />
        <PacketInfo time="21549744" offset="281911" length="2774" />
        <PacketInfo time="21549775" offset="284685" length="1387" />
        <PacketInfo time="21549822" offset="286072" length="1387" />
        <PacketInfo time="21549822" offset="287459" length="1387" />
        <PacketInfo time="21549868" offset="288846" length="1387" />
        <PacketInfo time="21549868" offset="290233" length="1387" />
        <PacketInfo time="21549900" offset="291620" length="1387" />
        <PacketInfo time="21549915" offset="293007" length="2023" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="1201" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/JavaScriptSpellCheck/translations/en.js" url="http://ueatworkuat.maxprocessing.com/JavaScriptSpellCheck/translations/en.js" ip="192.168.250.11" port="8080" connectionId="8" origin="ExtraRes" frame="1" startDateTime="2016-06-23T18:33:48.224+05:30" startTime="21545422" endTime="21545516">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Proxy-Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9KYXZhU2NyaXB0U3BlbGxDaGVjay90cmFuc2xhdGlvbnMvZW4uanMgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6ICovKg0KUmVmZXJlcjogaHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgc2RjaA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjozNw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U3RpbmdyYXk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjozNyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server-Version" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ni43LjEuMTAz</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Copyright" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Nzkw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Age" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MzU2NDA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Via" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjozNw0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6MzcgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogNzkwDQpBZ2U6IDM1NjQwDQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bGl2ZXNwZWxsLmxhbmcuZW4gPSBbJ0xlYXJuJywnQXV0by1Db3JyZWN0JywnQ2FuY2VsJywnQ2hhbmdlJywnQ2hhbmdlIEFsbCcsJ1VuZG8gRWRpdCcsJ0Nsb3NlJywnSWdub3JlJywnRmluZCBOZXh0JywnT0snLCdTZXR1cCcsJ1Jlc2V0JywnVW5kbycsJ0VkaXRzJywnRmllbGRzJywnVGhlIHNwZWxsaW5nIGNoZWNrIGlzIGNvbXBsZXRlLicsJ1dvcmRzJywnRGljdGlvbmFyeSBsYW5ndWFnZScsJ1NwZWxsaW5nIFN1Z2dlc3Rpb25zJywnTXVsdGlwbGUuLi4nLCdQaWNrIExhbmd1YWdlcyAoaG9sZCBDVFJMIHRvIHNlbGVjdCBtdWx0aXBsZSk6JywnVGhlc2F1cnVzJywnQXBwbHknLCdDYW5jZWwnLCdEZWxldGUgQmFubmVkJywnRGVsZXRlIFJlcGVhdGVkJywnSWdub3JlJywnSWdub3JlIEFsbCcsJ0xhbmd1YWdlcy4uLicsJ0xlYXJuIFNwZWxsaW5nJywnTm8gU3VnZ2VzdGlvbnMuLi4nLCdDYXNlIFNlbnNpdGl2ZS4nLCdJdGVtcycsJ0lnbm9yZSBBTEwgQ0FQUy4nLCdJZ25vcmUgV29yZHMgQ29udGFpbmluZyBOdW1iZXJzLicsJ1BlcnNvbmFsIEF1dG9jb3JyZWN0OicsJ1BlcnNvbmFsIERpY3Rpb25hcnk6JywnQ2hlY2sgR3JhbW1hcicsJ1RoaXMgd29yZCBpcyBub3QgYWxsd2VkJywnQ2FzZSBNaXN0YWtlJywnRW5mb3JjZWQgc3BlbGxpbmcgc3VnZ2VzdGlvbicsJ0dyYW1tYXInLCdSZXBlYXRlZCB3b3JkJywnU3BlbGxpbmcgTWlzdGFrZScsJ0RlbGV0ZSBSZXBlYXRlZCBXb3JkLi4uJywnTm8gU3VnZ2VzdGlvbnMuLi4nLCdEZWxldGUgQmFubmVkIFdvcmQnLCdTcGVsbCBDaGVjayddOw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="21545516" offset="0" length="1137" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="1388" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/ckeditor/ckeditor.js" url="http://ueatworkuat.maxprocessing.com/ckeditor/ckeditor.js" ip="192.168.250.11" port="8080" connectionId="6" origin="ExtraRes" frame="1" startDateTime="2016-06-23T18:33:48.240+05:30" startTime="21549978" endTime="21550461">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Proxy-Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9ja2VkaXRvci9ja2VkaXRvci5qcyBIVFRQLzEuMQ0KSG9zdDogdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20NClByb3h5LUNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYNCkFjY2VwdDogKi8qDQpSZWZlcmVyOiBodHRwOi8vdWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20vbG9naW4ubWF4P3ByZXByb2Nlc3M9dHJ1ZQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBzZGNoDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC44DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjo0MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U3RpbmdyYXk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjo0MSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server-Version" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ni43LjEuMTAz</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Copyright" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDczNDI3</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Age" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MzU2NDE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Via" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjo0MQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQNCkV4cGlyZXM6IEZyaSwgMjQgSnVuIDIwMTYgMDM6MDI6NDEgR01UDQpTZXJ2ZXItVmVyc2lvbjogNi43LjEuMTAzDQpDb3B5cmlnaHQ6ICZjb3B5OyAyMDE2IE1heGltdW0gUHJvY2Vzc2luZyBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQpDb250ZW50LUxlbmd0aDogNDczNDI3DQpBZ2U6IDM1NjQxDQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="21550446" offset="0" length="350" />
        <PacketInfo time="21550461" offset="350" length="5548" />
        <PacketInfo time="21550477" offset="5898" length="1387" />
        <PacketInfo time="21550477" offset="7285" length="1387" />
        <PacketInfo time="21550555" offset="8672" length="1387" />
        <PacketInfo time="21550570" offset="10059" length="1387" />
        <PacketInfo time="21550602" offset="11446" length="1387" />
        <PacketInfo time="21550602" offset="12833" length="1387" />
        <PacketInfo time="21550617" offset="14220" length="2774" />
        <PacketInfo time="21550648" offset="16994" length="1387" />
        <PacketInfo time="21550648" offset="18381" length="1387" />
        <PacketInfo time="21550726" offset="19768" length="1387" />
        <PacketInfo time="21550742" offset="21155" length="1387" />
        <PacketInfo time="21550773" offset="22542" length="1387" />
        <PacketInfo time="21550773" offset="23929" length="4161" />
        <PacketInfo time="21550820" offset="28090" length="1387" />
        <PacketInfo time="21550820" offset="29477" length="1387" />
        <PacketInfo time="21550898" offset="30864" length="1387" />
        <PacketInfo time="21550898" offset="32251" length="1387" />
        <PacketInfo time="21550945" offset="33638" length="1387" />
        <PacketInfo time="21550945" offset="35025" length="4161" />
        <PacketInfo time="21550976" offset="39186" length="1387" />
        <PacketInfo time="21550992" offset="40573" length="1387" />
        <PacketInfo time="21551070" offset="41960" length="1387" />
        <PacketInfo time="21551070" offset="43347" length="1387" />
        <PacketInfo time="21551116" offset="44734" length="1387" />
        <PacketInfo time="21551116" offset="46121" length="4161" />
        <PacketInfo time="21551148" offset="50282" length="1387" />
        <PacketInfo time="21551148" offset="51669" length="1387" />
        <PacketInfo time="21551226" offset="53056" length="1387" />
        <PacketInfo time="21551241" offset="54443" length="1387" />
        <PacketInfo time="21551272" offset="55830" length="1387" />
        <PacketInfo time="21551272" offset="57217" length="4161" />
        <PacketInfo time="21551304" offset="61378" length="1387" />
        <PacketInfo time="21551319" offset="62765" length="1387" />
        <PacketInfo time="21551397" offset="64152" length="1387" />
        <PacketInfo time="21551397" offset="65539" length="1387" />
        <PacketInfo time="21551428" offset="66926" length="1387" />
        <PacketInfo time="21551444" offset="68313" length="4161" />
        <PacketInfo time="21551475" offset="72474" length="1387" />
        <PacketInfo time="21551475" offset="73861" length="1387" />
        <PacketInfo time="21551553" offset="75248" length="1387" />
        <PacketInfo time="21551553" offset="76635" length="1387" />
        <PacketInfo time="21551584" offset="78022" length="1387" />
        <PacketInfo time="21551600" offset="79409" length="4161" />
        <PacketInfo time="21551631" offset="83570" length="1387" />
        <PacketInfo time="21551631" offset="84957" length="1387" />
        <PacketInfo time="21551709" offset="86344" length="1387" />
        <PacketInfo time="21551725" offset="87731" length="1387" />
        <PacketInfo time="21551756" offset="89118" length="1387" />
        <PacketInfo time="21551756" offset="90505" length="4161" />
        <PacketInfo time="21551787" offset="94666" length="1387" />
        <PacketInfo time="21551803" offset="96053" length="1387" />
        <PacketInfo time="21551881" offset="97440" length="1387" />
        <PacketInfo time="21551881" offset="98827" length="1387" />
        <PacketInfo time="21551912" offset="100214" length="1387" />
        <PacketInfo time="21551912" offset="101601" length="4161" />
        <PacketInfo time="21551959" offset="105762" length="1387" />
        <PacketInfo time="21551959" offset="107149" length="1387" />
        <PacketInfo time="21552037" offset="108536" length="1387" />
        <PacketInfo time="21552037" offset="109923" length="1387" />
        <PacketInfo time="21552068" offset="111310" length="1387" />
        <PacketInfo time="21552084" offset="112697" length="2774" />
        <PacketInfo time="21552084" offset="115471" length="1387" />
        <PacketInfo time="21552115" offset="116858" length="1387" />
        <PacketInfo time="21552115" offset="118245" length="1387" />
        <PacketInfo time="21552193" offset="119632" length="1387" />
        <PacketInfo time="21552208" offset="121019" length="1387" />
        <PacketInfo time="21552240" offset="122406" length="1387" />
        <PacketInfo time="21552240" offset="123793" length="1387" />
        <PacketInfo time="21552240" offset="125180" length="2774" />
        <PacketInfo time="21552286" offset="127954" length="1387" />
        <PacketInfo time="21552286" offset="129341" length="1387" />
        <PacketInfo time="21552364" offset="130728" length="1387" />
        <PacketInfo time="21552364" offset="132115" length="1387" />
        <PacketInfo time="21552396" offset="133502" length="1387" />
        <PacketInfo time="21552396" offset="134889" length="1387" />
        <PacketInfo time="21552411" offset="136276" length="1387" />
        <PacketInfo time="21552411" offset="137663" length="1387" />
        <PacketInfo time="21552442" offset="139050" length="1387" />
        <PacketInfo time="21552442" offset="140437" length="1387" />
        <PacketInfo time="21552520" offset="141824" length="1387" />
        <PacketInfo time="21552536" offset="143211" length="1387" />
        <PacketInfo time="21552567" offset="144598" length="1387" />
        <PacketInfo time="21552567" offset="145985" length="4161" />
        <PacketInfo time="21552614" offset="150146" length="1387" />
        <PacketInfo time="21552614" offset="151533" length="1387" />
        <PacketInfo time="21552692" offset="152920" length="1387" />
        <PacketInfo time="21552692" offset="154307" length="1387" />
        <PacketInfo time="21552739" offset="155694" length="1387" />
        <PacketInfo time="21552739" offset="157081" length="4161" />
        <PacketInfo time="21552770" offset="161242" length="1387" />
        <PacketInfo time="21552770" offset="162629" length="1387" />
        <PacketInfo time="21552864" offset="164016" length="1387" />
        <PacketInfo time="21552864" offset="165403" length="1387" />
        <PacketInfo time="21552910" offset="166790" length="1387" />
        <PacketInfo time="21552910" offset="168177" length="4161" />
        <PacketInfo time="21552942" offset="172338" length="1387" />
        <PacketInfo time="21552942" offset="173725" length="1387" />
        <PacketInfo time="21553035" offset="175112" length="1387" />
        <PacketInfo time="21553035" offset="176499" length="1387" />
        <PacketInfo time="21553082" offset="177886" length="5548" />
        <PacketInfo time="21553113" offset="183434" length="1387" />
        <PacketInfo time="21553113" offset="184821" length="1387" />
        <PacketInfo time="21553207" offset="186208" length="1387" />
        <PacketInfo time="21553207" offset="187595" length="1387" />
        <PacketInfo time="21553254" offset="188982" length="1387" />
        <PacketInfo time="21553254" offset="190369" length="4161" />
        <PacketInfo time="21553285" offset="194530" length="1387" />
        <PacketInfo time="21553285" offset="195917" length="1387" />
        <PacketInfo time="21553378" offset="197304" length="1387" />
        <PacketInfo time="21553378" offset="198691" length="1387" />
        <PacketInfo time="21553410" offset="200078" length="1387" />
        <PacketInfo time="21553425" offset="201465" length="4161" />
        <PacketInfo time="21553456" offset="205626" length="1387" />
        <PacketInfo time="21553456" offset="207013" length="1387" />
        <PacketInfo time="21553550" offset="208400" length="1387" />
        <PacketInfo time="21553550" offset="209787" length="1387" />
        <PacketInfo time="21553581" offset="211174" length="1387" />
        <PacketInfo time="21553597" offset="212561" length="4161" />
        <PacketInfo time="21553644" offset="216722" length="1387" />
        <PacketInfo time="21553644" offset="218109" length="1387" />
        <PacketInfo time="21553722" offset="219496" length="1387" />
        <PacketInfo time="21553722" offset="220883" length="1387" />
        <PacketInfo time="21553768" offset="222270" length="1387" />
        <PacketInfo time="21553768" offset="223657" length="4161" />
        <PacketInfo time="21553800" offset="227818" length="1387" />
        <PacketInfo time="21553815" offset="229205" length="1387" />
        <PacketInfo time="21553893" offset="230592" length="1387" />
        <PacketInfo time="21553893" offset="231979" length="1387" />
        <PacketInfo time="21553940" offset="233366" length="1387" />
        <PacketInfo time="21553940" offset="234753" length="4161" />
        <PacketInfo time="21553987" offset="238914" length="1387" />
        <PacketInfo time="21553987" offset="240301" length="1387" />
        <PacketInfo time="21554065" offset="241688" length="1387" />
        <PacketInfo time="21554065" offset="243075" length="1387" />
        <PacketInfo time="21554112" offset="244462" length="1387" />
        <PacketInfo time="21554112" offset="245849" length="4161" />
        <PacketInfo time="21554143" offset="250010" length="1387" />
        <PacketInfo time="21554158" offset="251397" length="1387" />
        <PacketInfo time="21554236" offset="252784" length="1387" />
        <PacketInfo time="21554236" offset="254171" length="1387" />
        <PacketInfo time="21554283" offset="255558" length="1387" />
        <PacketInfo time="21554283" offset="256945" length="4161" />
        <PacketInfo time="21554314" offset="261106" length="1387" />
        <PacketInfo time="21554330" offset="262493" length="1387" />
        <PacketInfo time="21554408" offset="263880" length="1387" />
        <PacketInfo time="21554408" offset="265267" length="1387" />
        <PacketInfo time="21554455" offset="266654" length="1387" />
        <PacketInfo time="21554455" offset="268041" length="4161" />
        <PacketInfo time="21554486" offset="272202" length="1387" />
        <PacketInfo time="21554502" offset="273589" length="1387" />
        <PacketInfo time="21554580" offset="274976" length="1387" />
        <PacketInfo time="21554580" offset="276363" length="1387" />
        <PacketInfo time="21554626" offset="277750" length="1387" />
        <PacketInfo time="21554626" offset="279137" length="4161" />
        <PacketInfo time="21554673" offset="283298" length="1387" />
        <PacketInfo time="21554673" offset="284685" length="1387" />
        <PacketInfo time="21554751" offset="286072" length="1387" />
        <PacketInfo time="21554751" offset="287459" length="1387" />
        <PacketInfo time="21554798" offset="288846" length="1387" />
        <PacketInfo time="21554798" offset="290233" length="4161" />
        <PacketInfo time="21554845" offset="294394" length="1387" />
        <PacketInfo time="21554845" offset="295781" length="1387" />
        <PacketInfo time="21554923" offset="297168" length="1387" />
        <PacketInfo time="21554923" offset="298555" length="1387" />
        <PacketInfo time="21554970" offset="299942" length="1387" />
        <PacketInfo time="21554970" offset="301329" length="2774" />
        <PacketInfo time="21554970" offset="304103" length="1387" />
        <PacketInfo time="21555016" offset="305490" length="1387" />
        <PacketInfo time="21555016" offset="306877" length="1387" />
        <PacketInfo time="21555094" offset="308264" length="1387" />
        <PacketInfo time="21555110" offset="309651" length="1387" />
        <PacketInfo time="21555141" offset="311038" length="1387" />
        <PacketInfo time="21555141" offset="312425" length="4161" />
        <PacketInfo time="21555188" offset="316586" length="1387" />
        <PacketInfo time="21555188" offset="317973" length="1387" />
        <PacketInfo time="21555266" offset="319360" length="1387" />
        <PacketInfo time="21555266" offset="320747" length="1387" />
        <PacketInfo time="21555313" offset="322134" length="1387" />
        <PacketInfo time="21555313" offset="323521" length="4161" />
        <PacketInfo time="21555360" offset="327682" length="1387" />
        <PacketInfo time="21555360" offset="329069" length="1387" />
        <PacketInfo time="21555438" offset="330456" length="1387" />
        <PacketInfo time="21555438" offset="331843" length="1387" />
        <PacketInfo time="21555484" offset="333230" length="1387" />
        <PacketInfo time="21555484" offset="334617" length="2774" />
        <PacketInfo time="21555484" offset="337391" length="1387" />
        <PacketInfo time="21555531" offset="338778" length="1387" />
        <PacketInfo time="21555531" offset="340165" length="1387" />
        <PacketInfo time="21555609" offset="341552" length="1387" />
        <PacketInfo time="21555625" offset="342939" length="1387" />
        <PacketInfo time="21555656" offset="344326" length="1387" />
        <PacketInfo time="21555656" offset="345713" length="2774" />
        <PacketInfo time="21555656" offset="348487" length="1387" />
        <PacketInfo time="21555703" offset="349874" length="1387" />
        <PacketInfo time="21555703" offset="351261" length="1387" />
        <PacketInfo time="21555781" offset="352648" length="1387" />
        <PacketInfo time="21555796" offset="354035" length="1387" />
        <PacketInfo time="21555828" offset="355422" length="1387" />
        <PacketInfo time="21555828" offset="356809" length="4161" />
        <PacketInfo time="21555874" offset="360970" length="1387" />
        <PacketInfo time="21555874" offset="362357" length="1387" />
        <PacketInfo time="21555952" offset="363744" length="1387" />
        <PacketInfo time="21555984" offset="365131" length="1387" />
        <PacketInfo time="21555999" offset="366518" length="1387" />
        <PacketInfo time="21556015" offset="367905" length="4161" />
        <PacketInfo time="21556046" offset="372066" length="1387" />
        <PacketInfo time="21556046" offset="373453" length="1387" />
        <PacketInfo time="21556124" offset="374840" length="1387" />
        <PacketInfo time="21556140" offset="376227" length="1387" />
        <PacketInfo time="21556171" offset="377614" length="1387" />
        <PacketInfo time="21556171" offset="379001" length="4161" />
        <PacketInfo time="21556218" offset="383162" length="1387" />
        <PacketInfo time="21556218" offset="384549" length="1387" />
        <PacketInfo time="21556296" offset="385936" length="1387" />
        <PacketInfo time="21556311" offset="387323" length="1387" />
        <PacketInfo time="21556342" offset="388710" length="1387" />
        <PacketInfo time="21556342" offset="390097" length="4161" />
        <PacketInfo time="21556389" offset="394258" length="1387" />
        <PacketInfo time="21556389" offset="395645" length="1387" />
        <PacketInfo time="21556483" offset="397032" length="1387" />
        <PacketInfo time="21556483" offset="398419" length="1387" />
        <PacketInfo time="21556514" offset="399806" length="1387" />
        <PacketInfo time="21556514" offset="401193" length="4161" />
        <PacketInfo time="21556561" offset="405354" length="1387" />
        <PacketInfo time="21556561" offset="406741" length="1387" />
        <PacketInfo time="21556654" offset="408128" length="1387" />
        <PacketInfo time="21556670" offset="409515" length="1387" />
        <PacketInfo time="21556686" offset="410902" length="1387" />
        <PacketInfo time="21556686" offset="412289" length="1387" />
        <PacketInfo time="21556701" offset="413676" length="2774" />
        <PacketInfo time="21556732" offset="416450" length="1387" />
        <PacketInfo time="21556732" offset="417837" length="1387" />
        <PacketInfo time="21556826" offset="419224" length="1387" />
        <PacketInfo time="21556842" offset="420611" length="1387" />
        <PacketInfo time="21556873" offset="421998" length="1387" />
        <PacketInfo time="21556873" offset="423385" length="4161" />
        <PacketInfo time="21556904" offset="427546" length="1387" />
        <PacketInfo time="21556904" offset="428933" length="1387" />
        <PacketInfo time="21556998" offset="430320" length="1387" />
        <PacketInfo time="21556998" offset="431707" length="1387" />
        <PacketInfo time="21557029" offset="433094" length="1387" />
        <PacketInfo time="21557044" offset="434481" length="4161" />
        <PacketInfo time="21557076" offset="438642" length="1387" />
        <PacketInfo time="21557091" offset="440029" length="1387" />
        <PacketInfo time="21557169" offset="441416" length="1387" />
        <PacketInfo time="21557169" offset="442803" length="1387" />
        <PacketInfo time="21557200" offset="444190" length="1387" />
        <PacketInfo time="21557216" offset="445577" length="4161" />
        <PacketInfo time="21557247" offset="449738" length="1387" />
        <PacketInfo time="21557263" offset="451125" length="1387" />
        <PacketInfo time="21557341" offset="452512" length="1387" />
        <PacketInfo time="21557356" offset="453899" length="1387" />
        <PacketInfo time="21557388" offset="455286" length="1387" />
        <PacketInfo time="21557388" offset="456673" length="1387" />
        <PacketInfo time="21557388" offset="458060" length="2774" />
        <PacketInfo time="21557419" offset="460834" length="1387" />
        <PacketInfo time="21557419" offset="462221" length="1387" />
        <PacketInfo time="21557528" offset="463608" length="1387" />
        <PacketInfo time="21557544" offset="464995" length="1387" />
        <PacketInfo time="21557590" offset="466382" length="1387" />
        <PacketInfo time="21557590" offset="467769" length="1387" />
        <PacketInfo time="21557622" offset="469156" length="1387" />
        <PacketInfo time="21557637" offset="470543" length="1387" />
        <PacketInfo time="21557668" offset="471930" length="1387" />
        <PacketInfo time="21557684" offset="473317" length="460" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="1659" hostname="ueatworkuat.maxprocessing.com" path="http://ueatworkuat.maxprocessing.com/JavaScriptSpellCheck/themes/modern/context-menu.css" url="http://ueatworkuat.maxprocessing.com/JavaScriptSpellCheck/themes/modern/context-menu.css" ip="192.168.250.11" port="8080" connectionId="6" origin="ExtraRes" frame="1" startDateTime="2016-06-23T18:33:48.261+05:30" startTime="21557746" endTime="21557809">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dWVhdHdvcmt1YXQubWF4cHJvY2Vzc2luZy5jb20=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Proxy-Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC4xMDMgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9jc3MsKi8qO3E9MC4x</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgc2RjaA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHA6Ly91ZWF0d29ya3VhdC5tYXhwcm9jZXNzaW5nLmNvbS9KYXZhU2NyaXB0U3BlbGxDaGVjay90aGVtZXMvbW9kZXJuL2NvbnRleHQtbWVudS5jc3MgSFRUUC8xLjENCkhvc3Q6IHVlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tDQpQcm94eS1Db25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6IHRleHQvY3NzLCovKjtxPTAuMQ0KUmVmZXJlcjogaHR0cDovL3VlYXR3b3JrdWF0Lm1heHByb2Nlc3NpbmcuY29tL2xvZ2luLm1heD9wcmVwcm9jZXNzPXRydWUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgc2RjaA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TWF4aW11bSBQcm9jZXNzaW5nIFN0aW5ncmF5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMyBKdW4gMjAxNiAwMzowMjo1MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U3RpbmdyYXk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9jc3M=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAyNCBKdW4gMjAxNiAwMzowMjo1MSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server-Version" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ni43LjEuMTAz</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Copyright" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>JmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Mjk5NA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Age" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MzU2Mzk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Via" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MS4xIGluZC1taHAybGZwMDAx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IE1heGltdW0gUHJvY2Vzc2luZyBTdGluZ3JheQ0KRGF0ZTogVGh1LCAyMyBKdW4gMjAxNiAwMzowMjo1MQ0KWC1Qb3dlcmVkLUJ5OiBTdGluZ3JheQ0KQ29udGVudC1UeXBlOiB0ZXh0L2Nzcw0KRXhwaXJlczogRnJpLCAyNCBKdW4gMjAxNiAwMzowMjo1MSBHTVQNClNlcnZlci1WZXJzaW9uOiA2LjcuMS4xMDMNCkNvcHlyaWdodDogJmNvcHk7IDIwMTYgTWF4aW11bSBQcm9jZXNzaW5nIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4NCkNvbnRlbnQtTGVuZ3RoOiAyOTk0DQpBZ2U6IDM1NjM5DQpWaWE6IDEuMSBpbmQtbWhwMmxmcDAwMQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Ci5saXZlc3BlbGxfcmVkd2lnZ2xlIHsKCWJhY2tncm91bmQtaW1hZ2U6dXJsKHdpZ2dsZS5wbmcpOwoJYmFja2dyb3VuZC1yZXBlYXQ6cmVwZWF0LXg7CgliYWNrZ3JvdW5kLXBvc2l0aW9uOmJvdHRvbTsKCWN1cnNvcjogZGVmYXVsdDsKCn0KaDIuc3BlbGxub2ZpZnl7Cglmb250OiBib2xkIDEwMCUgIkx1Y2lkYSBHcmFuZGUiLEFyaWFsLHNhbnMtc2VyaWY7CiAgICBtYXJnaW46IDA7CiAgICBwYWRkaW5nOiAwLjVlbSAyZW0gMC41ZW0gMC43NWVtOwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIHRleHQtc2hhZG93OiAwIDFweCAwICNGRkZGRkY7Cn0KLmxpdmVzcGVsbF9ncmVlbndpZ2dsZSB7CgliYWNrZ3JvdW5kLWltYWdlOnVybChnd2lnZ2xlLnBuZyk7CgliYWNrZ3JvdW5kLXJlcGVhdDpyZXBlYXQteDsKCWJhY2tncm91bmQtcG9zaXRpb246Ym90dG9tOwoJY3Vyc29yOiBkZWZhdWx0OwoJCn0KLmxpdmVzcGVsbF90ZXh0YXJlYSB7Cglib3JkZXI6MXB4IHNvbGlkICM5OTk7CgliYWNrZ3JvdW5kLWNvbG9yOiNGRkY7Cgl3aWR0aDoxNzNweDsKCWhlaWdodDoxMDBweDsKCWZvbnQtc2l6ZToxM3B4OwoJcGFkZGluZzozcHg7CgltYXJnaW46MHB4OwoJb3ZlcmZsb3c6YXV0bzsKCWZvbnQtZmFtaWx5OiBtb25vc3BhY2U7CglsaW5lLWhlaWdodDoxMy41cHg7CglvdmVyZmxvdzphdXRvOwoJd2hpdGUtc3BhY2U6IHByZS13cmFwOwoJb3ZlcmZsb3cteTogYXV0bzsKCW92ZXJmbG93LXg6IGF1dG87Cgl3b3JkLXdyYXA6YnJlYWstd29yZDsKCWRpc3BsYXk6aW5saW5lLWJsb2NrOwoJem9vbToxOyAqZGlzcGxheTogaW5saW5lOyBfaGVpZ2h0OiAzMHB4OwoJY3Vyc29yOnRleHQ7CgljbGVhcjpib3RoOwp9CgoKLmxpdmVzcGVsbF90ZXh0YXJlYSBwIAp7CiAgIG1hcmdpbi10b3A6MDsKICAgbWFyZ2luLWJvdHRvbTowOwp9CgojbGl2ZXNwZWxsX19fY29udGV4dG1lbnUgewoJbWFyZ2luOiAwOwoJcGFkZGluZzogMDsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCXotaW5kZXg6MTExMTExOwoJb3ZlcmZsb3c6dmlzaWJsZTsKCQlvcGFjaXR5Oi45NTsKfQojbGl2ZXNwZWxsX19fY29udGV4dG1lbnUgbGkubHNfc3VnewoJCWZvbnQtc2l6ZToxMHB4Owpmb250LXdlaWdodDpib2xkOwp9CgojbGl2ZXNwZWxsX19fY29udGV4dG1lbnUgdWwgewoJCgl3aWR0aDoxNzBweDsKCS1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0OjRweDsKCS1tb3otYm9yZGVyLXJhZGl1cy10b3ByaWdodDo0cHg7CgktbW96LWJvcmRlci1yYWRpdXMtYm90dG9tbGVmdDo0cHg7CgktbW96LWJvcmRlci1yYWRpdXMtYm90dG9tcmlnaHQ6NHB4OwoJLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OwoJLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4OwkKCS13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4OwoJLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7CgkKCS1tb3otYm94LXNoYWRvdzowcHggM3B4IDVweCAjYmJiOwoJCgoJY3Vyc29yOmRlZmF1bHQ7Cglib3JkZXI6MXB4IHNvbGlkICMwMDA7CgltYXJnaW46IDA7CgoJcGFkZGluZzogNXB4ICFpbXBvcnRhbnQ7IC8qIE1ham9yIGJyb3dzZXJzIG90aGVyIHRoYW4gSUUgNiBhbmQgYmVsb3cgcmVzcGVjdCB0aGUgaW1wb3J0YW5jZSBpbW1lZGlhdGVseSAqLwoJcGFkZGluZzogMnB4OwoKCXBhZGRpbmctcmlnaHQ6IDEwcHg7CglwYWRkaW5nLWJvdHRvbTogN3B4OwoJbGlzdC1zdHlsZS10eXBlOiBub25lOwoJZm9udC1zaXplOjEwcHg7CgliYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Cgljb2xvcjojMTExOwoJZm9udC1mYW1pbHk6ICJUcmVidWNoZXQiLCBBcmlhbCwgc2Fucy1zZXJpZjsKfQoKI2xpdmVzcGVsbF9fX2NvbnRleHRtZW51IGhyIHsKCWJvcmRlcjogMDsKCW1hcmdpbjogMDsKCWJvcmRlcjogMDsKCWJvcmRlci1ib3R0b206CTFweCBkb3R0ZWQgIzY2NjsKCXBhZGRpbmc6MDsKfQojbGl2ZXNwZWxsX19fY29udGV4dG1lbnUgbGkubHNfaHJ7CnBhZGRpbmc6bm9uZTsKbWFyZ2luOm5vbmU7CmhlaWdodDo1cHg7Cn0KCiNsaXZlc3BlbGxfX19jb250ZXh0bWVudSBhIHsKCXBhZGRpbmc6IDJweDsKCWN1cnNvcjpkZWZhdWx0OwoJZGlzcGxheTpibG9jazsKCXdpZHRoOjEwMCU7Cgljb2xvcjojMDAwOwoJdGV4dC1kZWNvcmF0aW9uOm5vbmU7CglwYWRkaW5nLWxlZnQ6MXB4OwoJZm9udC1zaXplOjEzcHg7Cn0KI2xpdmVzcGVsbF9fX2NvbnRleHRtZW51IGE6aG92ZXIgewoJYmFja2dyb3VuZC1jb2xvcjojM2Q2MGY1OwoJY29sb3I6I0ZGRjsKfQojbGl2ZXNwZWxsX19fY29udGV4dG1lbnUgc2VsZWN0IHsKCWJvcmRlcjpub25lOwoJY29sb3I6IzMzMzsKCWZvbnQtc2l6ZToxMnB4OwoJd2lkdGg6OTglOwp9CiNsaXZlc3BlbGxfX19jb250ZXh0bWVudSBpbnB1dCB7Cglib3JkZXI6bm9uZTsKCWNvbG9yOiMzMzM7Cglmb250LXNpemU6c21hbGxlcjsKfQojbGl2ZXNwZWxsX19fY29udGV4dG1lbnUgbGFiZWwgewoJZm9udC1zaXplOnNtYWxsZXI7CgltYXJnaW46MDsKCXBhZGRpbmc6MDsKCWhlaWdodDoxNXB4OwoJYm9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlOwoJYm9yZGVyOm5vbmU7Cgljb2xvcjojMzMzOwoJYmFja2dyb3VuZC1jb2xvcjojZmZmOwp9CiNsaXZlc3BlbGxfY29udGV4dG1lbnVfbXVsdGlsYW5nX2NvbnRhaW5lcl9ub3Njcm9sbCB7Cgl3aWR0aDoxNDBweDsKCWJvcmRlcjogMXB4IGRvdHRlZCAjY2NjOwoJbWFyZ2luLXRvcDo1cHg7Cn0KLmxpdmVzcGVsbF9jb250ZXh0bWVudV9tdWx0aWxhbmdfY29udGFpbmVyX3Njcm9sbCB7Cgl3aWR0aDoxNDBweDsKCW92ZXJmbG93OmF1dG87CgloZWlnaHQ6MTE1cHg7Cglib3JkZXI6IDFweCBkb3R0ZWQgI2NjYzsKCW1hcmdpbi10b3A6NXB4Owp9Ci5saXZlc3BlbGxfaW52aXNpYmxlIHsKCQoJZmlsdGVyOmFscGhhKG9wYWNpdHk9MCk7CgktbW96LW9wYWNpdHk6MDsKCS1raHRtbC1vcGFjaXR5OiAwOwoJb3BhY2l0eTogMDsKCQp9</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="21557809" offset="0" length="1387" />
        <PacketInfo time="21557809" offset="1387" length="1939" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>